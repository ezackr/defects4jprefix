/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 14:48:28 GMT 2023
 */

package org.apache.commons.math.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.stat.descriptive.moment.SecondMoment;
import org.apache.commons.math.stat.descriptive.moment.Variance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variance_ESTest extends Variance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(true, secondMoment0);
      boolean boolean0 = variance0.isBiasCorrected();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1324.054;
      double[] doubleArray1 = new double[7];
      double double0 = variance0.evaluate(doubleArray1, doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 2103.4;
      variance0.incrementAll(doubleArray0);
      variance0.setBiasCorrected(false);
      Variance variance1 = variance0.copy();
      boolean boolean0 = variance1.equals(variance0);
      assertEquals(5L, variance0.getN());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      secondMoment0.n = (-44L);
      double double0 = variance0.getResult();
      assertTrue(variance0.isBiasCorrected());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      boolean boolean0 = variance0.isBiasCorrected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = 1613.543953;
      variance0.incrementAll(doubleArray0);
      double double0 = variance0.getResult();
      assertEquals(7L, variance0.getN());
      assertEquals(371932.01260898093, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      double[] doubleArray0 = new double[4];
      secondMoment0.setData(doubleArray0);
      secondMoment0.evaluate();
      Variance variance0 = new Variance(secondMoment0);
      variance0.getN();
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      SecondMoment secondMoment1 = new SecondMoment(secondMoment0);
      Variance variance0 = new Variance(false, secondMoment1);
      secondMoment1.n = (-1974L);
      variance0.getN();
      assertFalse(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = 2383.658299371;
      doubleArray0[3] = 1865.065158242;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 2, 2);
      assertEquals(66248.62144558044, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = 2383.658299371;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 0.0, 2, 2);
      assertEquals((-8.005128697287491E-10), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1.0;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 1.0);
      assertFalse(variance0.isBiasCorrected());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(true, secondMoment0);
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = 2394.040597304;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 1918.4329756877335);
      assertEquals(4.981498838134315E-11, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 2137.40131972;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 1507.0);
      assertEquals((-5.577300268832887E-11), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 3204.43740185;
      doubleArray0[2] = 102.46238;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0);
      assertEquals(288902.1390784272, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Variance variance0 = new Variance(false, (SecondMoment) null);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1.0);
      double double0 = variance0.evaluate(doubleArray0, 0, 2);
      assertEquals(0.25, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      double[] doubleArray0 = new double[6];
      double double0 = variance0.evaluate(doubleArray0, 102.46238);
      assertEquals(2.4253192047278085E-12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 1.184154459111628E-8;
      doubleArray0[4] = 1.184154459111628E-8;
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      double double0 = variance0.evaluate(doubleArray0, 2106.28253527);
      assertEquals((-7.450580596923829E-10), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 2895.986291783;
      double double0 = variance0.evaluate(doubleArray0);
      assertEquals(1677347.3204390104, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      secondMoment0.increment((-1129.4564596315));
      Variance variance1 = variance0.copy();
      assertTrue(variance1.isBiasCorrected());
      assertNotSame(variance1, variance0);
      assertEquals(0.0, variance1.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      secondMoment0.n = (-4267615245585081135L);
      Variance variance0 = new Variance(false, secondMoment0);
      Variance variance1 = variance0.copy();
      assertFalse(variance1.isBiasCorrected());
      assertEquals((-4267615245585081135L), variance1.getN());
      assertNotSame(variance1, variance0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      variance0.incMoment = true;
      // Undeclared exception!
      try { 
        variance0.increment(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      // Undeclared exception!
      try { 
        variance0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Variance variance0 = new Variance(true, (SecondMoment) null);
      // Undeclared exception!
      try { 
        variance0.getN();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, 2875, (-241));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[6];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, (-1555), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 9
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Variance variance0 = new Variance(true);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, 1460, 1460);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, doubleArray0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, 2064, 238);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2064
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, (-1666.062257387), (-1399), (-1399));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[1];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, 1083.925273, 79, 603);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 8
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(true, secondMoment0);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, (-1982.691404), 52, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, doubleArray0, 0.0, (-670), 4863);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(true, secondMoment0);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, (-3085.7), (-64), 1746);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -64
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[1];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, 608.578211);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 4
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, (double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Variance variance0 = new Variance();
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, (-618), 3136);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // start position (-618)
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[9];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, 0, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Variance variance0 = new Variance(true);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (-2075), (-805));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, 1.0, (-2036), (-2036));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // start position (-2,036)
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, 5440.4, 90, 1860);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(true, secondMoment0);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (-657.8895107140189), 3332, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Variance variance0 = new Variance();
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      Variance variance1 = variance0.copy();
      variance1.moment = null;
      // Undeclared exception!
      try { 
        variance1.evaluate(doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      try { 
        Variance.copy((Variance) null, (Variance) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Variance variance0 = new Variance(true);
      variance0.moment = null;
      // Undeclared exception!
      try { 
        Variance.copy(variance0, variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      // Undeclared exception!
      try { 
        variance0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Variance variance0 = new Variance(false);
      variance0.moment = null;
      // Undeclared exception!
      try { 
        variance0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Variance variance0 = null;
      try {
        variance0 = new Variance((Variance) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Variance variance0 = new Variance(true, (SecondMoment) null);
      Variance variance1 = null;
      try {
        variance1 = new Variance(variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = 2383.658299371;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, (-69.257727), 2, 2);
      assertEquals(8.005128697287491E-10, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[6];
      double double0 = variance0.evaluate(doubleArray0, 1564.0723334678, 0, 3);
      assertEquals(9.313225746154785E-10, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[6];
      double double0 = variance0.evaluate(doubleArray0, 0.0, 1, 1);
      assertEquals(0.0, double0, 0.01);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(false, secondMoment0);
      double[] doubleArray0 = new double[8];
      double double0 = variance0.evaluate(doubleArray0, 0.0, 2143800142, 2143800142);
      assertEquals(0.0, double0, 0.01);
      assertFalse(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      double double0 = variance0.evaluate(doubleArray0, 185.2, 0, 0);
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = 2383.658299371;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 2, 2);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 2383.658299371;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 1, 1);
      assertTrue(variance0.isBiasCorrected());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[5];
      double double0 = variance0.evaluate(doubleArray0, 1, 1);
      assertEquals(0.0, double0, 0.01);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.clear();
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SecondMoment secondMoment0 = new SecondMoment();
      Variance variance0 = new Variance(secondMoment0);
      variance0.clear();
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Variance variance0 = new Variance();
      Variance.copy(variance0, variance0);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 2383.658299371;
      double double0 = variance0.evaluate(doubleArray0, doubleArray0, 2383.658299371, 1, 1);
      assertEquals(0.0, double0, 0.01);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      variance0.setBiasCorrected(false);
      double double0 = variance0.evaluate(doubleArray0, (-593.756682));
      assertFalse(variance0.isBiasCorrected());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[1];
      double double0 = variance0.evaluate(doubleArray0);
      assertTrue(variance0.isBiasCorrected());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[9];
      double double0 = variance0.evaluate(doubleArray0, 0, 0);
      assertTrue(variance0.isBiasCorrected());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Variance variance0 = new Variance();
      // Undeclared exception!
      try { 
        variance0.evaluate();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      variance0.setBiasCorrected(false);
      variance0.incrementAll(doubleArray0);
      double double0 = variance0.getResult();
      assertEquals(2L, variance0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.increment(0L);
      double double0 = variance0.getResult();
      assertEquals(1L, variance0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Variance variance0 = new Variance();
      double double0 = variance0.getResult();
      assertEquals(Double.NaN, double0, 0.01);
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.getN();
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      variance0.increment((-1542.981158));
      assertTrue(variance0.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Variance variance0 = new Variance();
      Variance variance1 = new Variance(variance0);
      assertTrue(variance1.isBiasCorrected());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, (double[]) null, 0.25534194707870483);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Variance variance0 = new Variance(false);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math.stat.descriptive.moment.Variance", e);
      }
  }
}
