/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 02:18:45 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.MinimizeExitPoints;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.UnreachableCodeElimination;
import com.google.javascript.rhino.Node;
import java.util.Deque;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UnreachableCodeElimination_ESTest extends UnreachableCodeElimination_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      Node node0 = Node.newNumber(210.211562473577);
      Node.newNumber((-1.0), 120, 45);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      unreachableCodeElimination0.enterScope(nodeTraversal0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      unreachableCodeElimination0.visit(nodeTraversal0, (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      nodeTraversal0.getScope();
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      syntheticAst0.clearAst();
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      Node node1 = new Node(105, 35, 2);
      Node node2 = Node.newNumber((-1598.908), (-2261), 48);
      unreachableCodeElimination0.visit(nodeTraversal0, node1, node2);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      unreachableCodeElimination0.process(node0, node0);
      unreachableCodeElimination0.enterScope(nodeTraversal0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      MinimizeExitPoints minimizeExitPoints0 = new MinimizeExitPoints((AbstractCompiler) null);
      Node node0 = Node.newString("+&W/l~eTh", (-34), 39);
      unreachableCodeElimination0.process(node0, node0);
      ScopeCreator scopeCreator0 = null;
      NodeTraversal nodeTraversal0 = new NodeTraversal(abstractCompiler0, minimizeExitPoints0, scopeCreator0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      unreachableCodeElimination0.process((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0, (ScopeCreator) null);
      nodeTraversal0.getCurrentNode();
      unreachableCodeElimination0.visit(nodeTraversal0, (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      Node node0 = Node.newString("jTTy9(le[JyF'", (-739), 0);
      unreachableCodeElimination0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = true;
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      // Undeclared exception!
      try { 
        unreachableCodeElimination0.enterScope(nodeTraversal0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Multimap
         //
         verifyException("com.google.javascript.jscomp.UnreachableCodeElimination", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = null;
      unreachableCodeElimination0.enterScope((NodeTraversal) null);
      // Undeclared exception!
      try { 
        unreachableCodeElimination0.enterScope(nodeTraversal0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.UnreachableCodeElimination", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      Node node0 = Node.newNumber(210.211562473577);
      Node.newNumber((-1.0), 120, 6);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      NodeTraversal nodeTraversal1 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      nodeTraversal1.report(node0, nodeTraversal0.NODE_TRAVERSAL_ERROR, stringArray0);
      unreachableCodeElimination0.exitScope(nodeTraversal1);
      unreachableCodeElimination0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      int int0 = 2219;
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(1238, (-2417), 1238);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0, syntacticScopeCreator0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      nodeArray0[0] = node0;
      int int1 = 27591;
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      nodeTraversal0.getCurrentNode();
      Node node0 = Node.newNumber((double) 1, 1, 0);
      unreachableCodeElimination0.process((Node) null, node0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      nodeTraversal0.getCurrentNode();
      Node node0 = Node.newNumber((-1.0), 120, 37);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, (Node) null);
      unreachableCodeElimination0.visit(nodeTraversal0, (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.visit(nodeTraversal0, (Node) null, node0);
      unreachableCodeElimination0.process(node0, node0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      // Undeclared exception!
      try { 
        unreachableCodeElimination0.process(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.UnreachableCodeElimination", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      unreachableCodeElimination0.cfgStack = null;
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      NodeTraversal nodeTraversal1 = new NodeTraversal(abstractCompiler0, unreachableCodeElimination0);
      unreachableCodeElimination0.enterScope(nodeTraversal1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      nodeTraversal0.getScope();
      Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      syntheticAst0.clearAst();
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      Node node1 = new Node(105, 35, 980);
      Node node2 = Node.newNumber((-1598.908), (-2261), 48);
      unreachableCodeElimination0.visit(nodeTraversal0, node1, node2);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      unreachableCodeElimination0.exitScope(nodeTraversal0);
      unreachableCodeElimination0.process(node0, node0);
      unreachableCodeElimination0.enterScope(nodeTraversal0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unreachableCodeElimination0);
      Node node0 = Node.newNumber(210.211562473577);
      node0.setWasEmptyNode(true);
      Node node1 = Node.newNumber((-1.0), 120, 6);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node1);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
  }
}
