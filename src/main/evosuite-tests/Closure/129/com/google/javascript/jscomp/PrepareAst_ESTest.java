/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 03:49:36 GMT 2023
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.MemoizedScopeCreator;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PrepareAst;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.VarCheck;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrepareAst_ESTest extends PrepareAst_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, false);
      prepareAst0.process((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, true);
      Node node0 = new Node(13, 13, 13);
      prepareAst0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = new Node(818, 818, 818);
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null);
      prepareAst0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0, syntacticScopeCreator0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-15), nodeArray0, (-15), (-15));
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = new Node(105);
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      Node node0 = new Node(37);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Node node0 = new Node((-2179), (-2179), (-2179));
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null);
      prepareAst0.process((Node) null, node0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      Node node0 = new Node((byte)64);
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node0, node0);
      // Undeclared exception!
      try { 
        prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.PrepareAst$PrepareAnnotations", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null);
      prepareAst0.process((Node) null, (Node) null);
      prepareAst0.process((Node) null, (Node) null);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0, syntacticScopeCreator0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0);
      nodeTraversal0.getEnclosingFunction();
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      Node node0 = new Node((-435));
      prepareAst_PrepareAnnotations1.visit((NodeTraversal) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0, syntacticScopeCreator0);
      Node node0 = new Node(50);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(37, nodeArray0);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, node0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations3 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      Node node0 = new Node((-897));
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, node0);
      prepareAst_PrepareAnnotations3.visit((NodeTraversal) null, node0, node0);
      prepareAst_PrepareAnnotations3.visit((NodeTraversal) null, node0, node0);
      Node node1 = null;
      prepareAst_PrepareAnnotations3.shouldTraverse((NodeTraversal) null, node0, node0);
      prepareAst_PrepareAnnotations3.visit((NodeTraversal) null, node0, (Node) null);
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node0, (Node) null);
      prepareAst_PrepareAnnotations3.visit((NodeTraversal) null, (Node) null, node0);
      // Undeclared exception!
      try { 
        prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.PrepareAst$PrepareAnnotations", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null);
      Node node0 = new Node(105);
      prepareAst0.process(node0, node0);
      prepareAst0.process(node0, node0);
      // Undeclared exception!
      try { 
        prepareAst0.process(node0, node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, true);
      Node node0 = new Node(105, 105, 105);
      Node node1 = null;
      prepareAst0.process(node0, (Node) null);
      prepareAst0.process(node0, node0);
      Node node2 = null;
      // Undeclared exception!
      try { 
        prepareAst0.process(node2, node2);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.PrepareAst", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbstractCompiler abstractCompiler0 = null;
      boolean boolean0 = true;
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, true);
      Node node0 = new Node(890);
      prepareAst0.process(node0, node0);
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = null;
      try {
        prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.PrepareAst", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations3 = new PrepareAst.PrepareAnnotations();
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations0);
      Node node0 = nodeTraversal0.getCurrentNode();
      Node node1 = new Node(1701);
      prepareAst0.process((Node) null, node1);
      int int0 = 50;
      int int1 = 889;
      Node node2 = null;
      try {
        node2 = new Node(int0, node0, node0, node1, node0.IS_NAMESPACE, int1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      AbstractCompiler abstractCompiler0 = null;
      PrepareAst prepareAst0 = new PrepareAst((AbstractCompiler) null);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, prepareAst_PrepareAnnotations2);
      Node node0 = nodeTraversal0.getCurrentNode();
      prepareAst0.process((Node) null, (Node) null);
      SyntheticAst syntheticAst0 = new SyntheticAst("WU^Zd\"uRuBa");
      Node node1 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      prepareAst0.process(node1, (Node) null);
      // Undeclared exception!
      try { 
        prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Predicate
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations1 = new PrepareAst.PrepareAnnotations();
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations2 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      int int0 = 0;
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(105, 93, 0);
      prepareAst_PrepareAnnotations1.visit((NodeTraversal) null, node0, node0);
      int int1 = (-897);
      int int2 = 0;
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37);
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node0, node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node((-752), (-752), (-2428));
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node1, node1);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node1, node0);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node1, node1);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node1, node1);
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node1, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, node1);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node1, node1);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node1, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node1, node0);
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node1, node1);
      // Undeclared exception!
      try { 
        prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.google.javascript.jscomp.PrepareAst$PrepareAnnotations", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(105, 105, 160);
      prepareAst_PrepareAnnotations0.visit((NodeTraversal) null, node0, (Node) null);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)105;
      byteArray0[3] = (byte) (-29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      Node node0 = new Node((byte)64);
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      byteArray0[3] = (byte)105;
      byteArray0[3] = (byte) (-17);
      PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations();
      NodeTraversal nodeTraversal0 = null;
      Node node0 = new Node((byte)64);
      FileSystemHandling.shouldAllThrowIOExceptions();
      prepareAst_PrepareAnnotations0.shouldTraverse((NodeTraversal) null, node0, (Node) null);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.shouldTraverse(nodeTraversal0, node0, node0);
      prepareAst_PrepareAnnotations0.visit(nodeTraversal0, node0, node0);
  }
}
