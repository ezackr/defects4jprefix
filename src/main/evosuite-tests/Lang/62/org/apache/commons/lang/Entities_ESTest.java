/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 04:27:01 GMT 2023
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "&k a,52/`9");
      assertEquals("&k a,52/`9", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("0dp$bq$KX&#(&y,2\"Ze");
      assertEquals("0dp$bq$KX&#(&y,2\"Ze", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.HTML40.unescape("&ac/");
      assertEquals("&ac/", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter(0);
      entities0.escape((Writer) stringWriter0, "c:QQ{,9W5");
      assertEquals("c:QQ{,9W5", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.escape("@k)YGE2Pi&FtC~");
      assertEquals("@k)YGE2Pi&amp;FtC~", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(128);
      entities_BinaryEntityMap0.size = 52;
      String string0 = entities_BinaryEntityMap0.name(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("sigma", 144);
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.add("", 144);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("", 1437);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.size = (-1719);
      int int0 = entities_ArrayEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2765);
      intArray0[1] = (-2765);
      intArray0[2] = 1458;
      intArray0[3] = 2;
      intArray0[4] = (-851);
      entities_ArrayEntityMap0.values = intArray0;
      entities_ArrayEntityMap0.add("a_symp", 256);
      Entities entities0 = Entities.HTML40;
      entities0.XML.escape("");
      String string0 = entities0.entityName(4073);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.size = (-1719);
      String string0 = entities_ArrayEntityMap0.name((-2145));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      int int0 = entities_PrimitiveEntityMap0.value("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      entities_LookupEntityMap0.add((String) null, 4531);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.PrimitiveEntityMap entities_PrimitiveEntityMap0 = new Entities.PrimitiveEntityMap();
      String string0 = entities_PrimitiveEntityMap0.name((-3070));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(1959);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      int int0 = entities_BinaryEntityMap0.value("t4r_t`mT >=>HoNbh");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      String string0 = entities_ArrayEntityMap0.name(1421);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("ciX?-maH5XWZ(", 6);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(928);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML32.unescape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      Entities entities0 = new Entities();
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      entities_BinaryEntityMap0.add("", 4086);
      int int0 = entities0.entityValue("");
      assertEquals(4086, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = new Entities();
      Entities.fillWithHtml40Entities(entities0);
      String string0 = entities0.entityName(38);
      assertNotNull(string0);
      assertEquals("amp", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      Entities entities0 = Entities.HTML40;
      entities0.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      entities_ArrayEntityMap0.add("", 4073);
      String string0 = entities0.entityName(4073);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Entities entities0 = new Entities();
      // Undeclared exception!
      try { 
        entities0.unescape((Writer) null, "wo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Entities.fillWithHtml40Entities((Entities) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      int[] intArray0 = new int[5];
      entities_ArrayEntityMap0.values = intArray0;
      Entities entities0 = new Entities();
      entities0.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      // Undeclared exception!
      try { 
        Entities.fillWithHtml40Entities(entities0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.lang.Entities$ArrayEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Entities entities0 = new Entities();
      // Undeclared exception!
      try { 
        entities0.XML.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.HTML32.escape((Writer) null, "loz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("asymp", 256);
      Entities entities0 = new Entities();
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      entities_BinaryEntityMap0.names = null;
      // Undeclared exception!
      try { 
        entities0.entityValue("Illegal Capacity: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities$ArrayEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Entities entities0 = Entities.XML;
      // Undeclared exception!
      try { 
        entities0.XML.entityName((-1833));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1833
         //
         verifyException("org.apache.commons.lang.Entities$LookupEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      Entities entities0 = Entities.HTML32;
      entities0.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      entities_ArrayEntityMap0.names = null;
      // Undeclared exception!
      try { 
        entities0.addEntity("'~.E<@[d@=?ZqzS*AK", 4045);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities$ArrayEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Entities entities0 = Entities.XML;
      // Undeclared exception!
      try { 
        entities0.HTML40.addEntities((String[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String[][] stringArray0 = new String[2][0];
      // Undeclared exception!
      try { 
        entities0.addEntities(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Entities entities0 = new Entities();
      String[][] stringArray0 = new String[0][3];
      entities0.XML.addEntities(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String[][] stringArray0 = new String[9][7];
      // Undeclared exception!
      try { 
        entities0.addEntities(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      // Undeclared exception!
      try { 
        entities0.addEntity("'~.E<@[d@=?ZqzS*AK", 4045);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang.Entities$ArrayEntityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "^Uk2&=O*^X&5WpZ");
      assertEquals("^Uk2&=O*^X&5WpZ", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter(472);
      entities0.XML.unescape((Writer) stringWriter0, "asymp");
      assertEquals("asymp", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("@k)YGE2Pi&amp;FtC~");
      assertEquals("@k)YGE2Pi&FtC~", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.HTML32.escape((Writer) stringWriter0, "_&=X!Uw`QYh");
      assertEquals("_&amp;=X!Uw`QYh", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(1925);
      String[] stringArray0 = new String[3];
      entities_BinaryEntityMap0.add((String) null, 113);
      entities_BinaryEntityMap0.add((String) null, 63);
      entities_BinaryEntityMap0.add(stringArray0[0], 113);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("asymp", 256);
      Entities entities0 = new Entities();
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      String string0 = entities0.escape("cB");
      assertEquals("cB", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("asymp", 256);
      entities_BinaryEntityMap0.add("", 4086);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("asymp", 256);
      Entities entities0 = new Entities();
      entities0.map = (Entities.EntityMap) entities_BinaryEntityMap0;
      String string0 = entities0.map.name(256);
      assertEquals("asymp", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("yF-", (-1));
      int int0 = entities_ArrayEntityMap0.value("P[[");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      String[] stringArray0 = new String[15];
      stringArray0[2] = "EL49]oTg)Gj!L";
      entities_ArrayEntityMap0.names = stringArray0;
      int[] intArray0 = new int[0];
      entities_ArrayEntityMap0.values = intArray0;
      entities_ArrayEntityMap0.ensureCapacity(4075);
      Entities entities0 = Entities.HTML32;
      entities0.XML.map = (Entities.EntityMap) entities_ArrayEntityMap0;
      entities0.HTML40.escape("p<PkZFq$,4,=*Wi");
      entities0.XML.map.add("EL49]oTg)Gj!L", 27);
      String string0 = entities0.entityName(1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML40.entityName(256);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      int int0 = entities_TreeEntityMap0.value("M1uR QA'46X{]X`2*j");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add(stringArray0[2], 113);
      int int0 = entities_HashEntityMap0.value(stringArray0[2]);
      assertEquals(113, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter(2636);
      entities0.HTML32.unescape((Writer) stringWriter0, "@k)YGE2Pi&amp;FtC~");
      assertEquals("@k)YGE2Pi&FtC~", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(1925);
      String[] stringArray0 = new String[3];
      entities_BinaryEntityMap0.names = stringArray0;
      entities_BinaryEntityMap0.ensureCapacity(38);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Entities entities0 = new Entities();
      int int0 = entities0.entityValue("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(722);
      assertNull(string0);
  }
}
