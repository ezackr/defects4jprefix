/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 20:26:44 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragmentRelaxed("a&*Nq@+@<E{eZ\" ", "a.cgoz*=:06");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragmentRelaxed((String) null, "org.jsoup.parser.Parser");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment((String) null, "precsim");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse("ai<J[jdiypG[=`m", "html");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse("LzX{=OxBBFh", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Parser.parse("<Axl#QVR(.^.l", "<Axl#QVR(.^.l");
      assertEquals(0, (int)document0.siblingIndex());
      assertEquals("#document", document0.nodeName());
      assertEquals("<Axl#QVR(.^.l", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[T3M5<0/>_#tKuU", "[T3M5<0/>_#tKuU");
      assertEquals("#document", document0.nodeName());
      assertEquals("#root", document0.tagName());
      assertEquals(0, (int)document0.siblingIndex());
      assertEquals("[T3M5<0/>_#tKuU", document0.baseUri());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<rP.g", "<rP.g");
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertEquals(0, (int)document0.siblingIndex());
      assertEquals("<rP.g", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment("lDI:'Nq5Ymf<V=h)$g", "lDI:'Nq5Ymf<V=h)$g");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("lI:'Nq5Ymq<V=b)$V>g", " @<s");
      assertEquals("@<s", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertEquals("#root", document0.tagName());
      assertEquals(0, (int)document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = Parser.parse("W<T}NA=\"(K='lM.X ", "hxp i6q$BPF{jRZ|");
      assertEquals(0, (int)document0.siblingIndex());
      assertEquals("#document", document0.nodeName());
      assertEquals("hxp i6q$BPF{jRZ|", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertFalse(document0.isBlock());
      assertNotNull(document0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Parser.parse("W<T}N|r\"(K='lM.X ", "hxp i6q$BPF{jRZ|");
      assertEquals("hxp i6q$BPF{jRZ|", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = Parser.parse("[T3M5<0/>_#tKuU", ";O+Abl,j:[2P");
      assertEquals(";O+Abl,j:[2P", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("QN,%yK<jF<x,^$#Jl", "QN,%yK<jF<x,^$#Jl");
      assertEquals("QN,%yK<jF<x,^$#Jl", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("</", "</");
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = Parser.parse("59Q4Y6Kv<?Nlu", ">_");
      assertEquals(">_", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "<!--");
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(";-<lr\"v-CAw.=kv^ ]", "<![CDATA[");
      assertEquals("<![CDATA[", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Document document0 = Parser.parse("<![CDATA[", "<![CDATA[");
      assertEquals("<![CDATA[", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("G<*#~<!+2D", ">_");
      assertEquals(">_", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gDceGq</3^", "gDceGq</3^");
      assertEquals("#document", document0.nodeName());
  }
}
