/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:57:07 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Su|N*[:L0");
      boolean boolean0 = characterReader0.rangeEquals(1, 32, "org.jsoup.parser.CharacterReader");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3KhZ)1<|YM%,N|p");
      boolean boolean0 = characterReader0.rangeEquals((-1), 2335, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0M_E/RG9tfSu&DE.l9");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("0M_E/RG9tfSu&DE.l9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("aAsktoAmC</PH_NFr");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P3sx6L/a+t_MUY");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("P3", string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("sx", string1);
      
      String string2 = characterReader0.consumeAsString();
      assertEquals("6", string2);
      
      char[] charArray0 = new char[3];
      charArray0[1] = 'L';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      char[] charArray0 = new char[5];
      charArray0[0] = 'j';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("'1at{|}5q 5dP'%1");
      String string0 = characterReader0.consumeAsString();
      assertEquals("'", string0);
      
      boolean boolean0 = characterReader0.matchesIgnoreCase("'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" TfG7kymYe1^");
      String string0 = characterReader0.consumeToEnd();
      assertEquals(" TfG7kymYe1^", string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("4^xC6J(");
      boolean boolean0 = characterReader0.matchConsume("S&Te");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<iOZ :U6l^}(QHCFk ");
      boolean boolean0 = characterReader0.matches('M');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      characterReader0.unconsume();
      characterReader0.advance();
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7aD~vKiLY[2\"nIz~");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("7aD", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("06");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("06", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0,`&nI1`Xga");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zk");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("zk", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("Array", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mZNE@JyuX");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("mZNE", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("Array", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZP'MG){");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("ZP", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@<E");
      char[] charArray0 = new char[9];
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("@<E", string0);
      
      characterReader0.advance();
      String string1 = characterReader0.consumeTagName();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      String string0 = characterReader0.consumeData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3KhZ)1<|YM%,N|p");
      char[] charArray0 = new char[2];
      char char0 = characterReader0.consume();
      assertEquals('3', char0);
      
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("KhZ)1<|YM%,N|p", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      char[] charArray0 = new char[7];
      charArray0[3] = '[';
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("ASup|QN*", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-Fu-");
      String string0 = characterReader0.consumeData();
      assertEquals("-Fu-", string0);
      
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
      
      char[] charArray0 = new char[8];
      String string1 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2q8>#qbSvqFP");
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("2q8>#qbSvqFP", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      char[] charArray0 = new char[7];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeAsString();
      assertEquals("o", string0);
      
      String string1 = characterReader0.consumeTo("o");
      assertEquals("rg.js", string1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char char0 = characterReader0.consume();
      assertEquals('o', char0);
      
      String string0 = characterReader0.consumeTo('o');
      assertEquals("rg.js", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeAsString();
      assertEquals("o", string0);
      
      boolean boolean0 = characterReader0.containsIgnoreCase("o");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.containsIgnoreCase("Array");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3KhZ)1<|YM%,N|p");
      String string0 = characterReader0.consumeTagName();
      assertEquals("3KhZ)1<|YM%,N|p", string0);
      
      int int0 = characterReader0.nextIndexOf("wDqoY!w_T<yhYGe.:U");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EI.Twzz%y<+s,,Q");
      String string0 = characterReader0.consumeToEnd();
      assertEquals("EI.Twzz%y<+s,,Q", string0);
      
      characterReader0.advance();
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XZ#");
      String string0 = characterReader0.consumeTagName();
      assertEquals("XZ#", string0);
      
      String string1 = characterReader0.toString();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=Tc:$]:,s");
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" TfG7kymYe1^");
      characterReader0.consumeToEnd();
      int int0 = characterReader0.pos();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z$ :-h}{o");
      characterReader0.unconsume();
      int int0 = characterReader0.pos();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("En!nL^.");
      int int0 = characterReader0.nextIndexOf("En!nL^.");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("org", string0);
      
      int int0 = characterReader0.nextIndexOf('.');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      int int0 = characterReader0.nextIndexOf('.');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      int int0 = characterReader0.nextIndexOf('x');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XZ#");
      boolean boolean0 = characterReader0.matchesIgnoreCase("Z#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(",k$prN");
      char char0 = characterReader0.consume();
      assertEquals(',', char0);
      
      boolean boolean0 = characterReader0.matches(",k$prN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3KhZ)1<|YM%,N|p");
      String string0 = characterReader0.consumeTagName();
      assertEquals("3KhZ)1<|YM%,N|p", string0);
      
      boolean boolean0 = characterReader0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=Tc:$]:,s");
      boolean boolean0 = characterReader0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ws6`m8US 5xp");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("ws", string0);
      
      char char0 = characterReader0.current();
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      String string0 = characterReader0.consumeTagName();
      assertEquals("9k_mAEp]<", string0);
      
      String string1 = characterReader0.consumeToEnd();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CY]");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(5159, 0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("S$w&");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(12, 12, "oF2*q>XDAnEC");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("org.jsoup.parser.CharacterReader");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("joAaP?");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('1');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("--d,B;ARK.");
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=Tc:$]:,s");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("=Tc:$]:,s");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dx'e#lx?");
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[7];
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("B$AApvF hS+");
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("]kjmhB#.T3inG1 I$qx");
      characterReader0.unconsume();
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        characterReader0.matchesAny(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`AmxE");
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matches("Object must not be null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^-zSS]J}30h");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matches('b');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("c");
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(":Eyhv?(a6;Ii?2");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("a6;Ii?2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K .xCO$m");
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("9k_mAEp]<");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`AmxE");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("\"@F,");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.unconsume();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      char[] charArray0 = new char[7];
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("4%*Y'ZxA");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('-');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('5');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("uaB,]bj6vYFupWYk_K");
      characterReader0.consumeData();
      characterReader0.consume();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("_wZ");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@<E");
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("RLj<al");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8t9z*>z]*");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consumeData();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.consumeAsString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(")z$N^GizY");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTagName();
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      boolean boolean0 = characterReader0.rangeEquals(1, 32, "org.jsoup.parser.CharacterReader");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      String string0 = characterReader0.consumeTagName();
      assertEquals("Object", string0);
      
      characterReader0.rewindToMark();
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("Object", string1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.joup.parser.Charac5erReader");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
      
      String string1 = characterReader0.consumeDigitSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Y ,F|");
      boolean boolean0 = characterReader0.containsIgnoreCase("Y ,F|");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("06");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("org", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      String string0 = characterReader0.consumeTagName();
      assertEquals("9k_mAEp]<", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      String string0 = characterReader0.consumeTagName();
      assertEquals("Object", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P3sx6L/a+t_MUY");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("P3", string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("sx", string1);
      
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      characterReader0.consumeAsString();
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("P3sx6L/a+t_MUY");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.joup.parser.Charac5erReader");
      String string0 = characterReader0.consumeTagName();
      assertEquals("org.joup.parser.Charac5erReader", string0);
      
      char[] charArray0 = new char[4];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("|>*;&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.joup.parser.Charac5erReader");
      String string0 = characterReader0.consumeTagName();
      assertEquals("org.joup.parser.Charac5erReader", string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("5p9`_9]#5\"pv~MC}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("En!nL^.");
      boolean boolean0 = characterReader0.matchesIgnoreCase("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FbXJ`I2+'9,v");
      characterReader0.matchConsume("FbXJ`I2+'9,v");
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchConsume("Gy{7+~bW5x4v");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Nu/p^mIv");
      boolean boolean0 = characterReader0.matches("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d{1U:");
      boolean boolean0 = characterReader0.matches('1');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LwPTmB1-~!u<W&c.s");
      String string0 = characterReader0.consumeTo('h');
      assertEquals("LwPTmB1-~!u<W&c.s", string0);
      
      boolean boolean0 = characterReader0.matches('h');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("06");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("06", string0);
      
      char[] charArray0 = new char[0];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      String string0 = characterReader0.consumeTagName();
      assertEquals("Object", string0);
      
      String string1 = characterReader0.consumeDigitSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d{1U:");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("d", string0);
      
      characterReader0.advance();
      boolean boolean0 = characterReader0.matches('1');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3AEy");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("3AE", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.joup.parser.Charac5erReader");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("org", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Nu/p^mIv");
      characterReader0.consumeHexSequence();
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("Nu", string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("En!nL^.");
      String string0 = characterReader0.consumeData();
      assertEquals("En!nL^.", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("ASup", string0);
      
      boolean boolean0 = characterReader0.matchesIgnoreCase("|QN*");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ASup|QN*[:L0");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("ASup", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2q8>#qbSvqFP");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[8];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(">#qbSvqFP", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("lRrCW/tL=ri-8.Zq");
      String string0 = characterReader0.consumeTagName();
      assertEquals("lRrCW", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.joup.parser.Charac5erReader");
      String string0 = characterReader0.consumeTagName();
      assertEquals("org.joup.parser.Charac5erReader", string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "Q+3q\\u==+CQ{fn<2 k";
      CharacterReader characterReader0 = new CharacterReader(string0);
      String string1 = characterReader0.consumeData();
      assertEquals("Q+3q\\u==+CQ{fn", string1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(",~,\"rPd&B");
      characterReader0.consumeData();
      characterReader0.consumeAsString();
      characterReader0.consumeLetterSequence();
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("org", string0);
      
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("org", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mQ^zjzmK(Ki)");
      boolean boolean0 = characterReader0.containsIgnoreCase("mQ^zjzmK(Ki)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LwPTmB1-~!u<W&c.s");
      String string0 = characterReader0.consumeTo("LwPTmB1-~!u<W&c.s");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LwPTmB1-~!u<W&c.s");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("LwPTmB", string0);
      
      String string1 = characterReader0.consumeTo("LwPTmB1-~!u<W&c.s");
      assertEquals("1-~!u<W&c.s", string1);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      String string0 = characterReader0.consumeTo('o');
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=Tc:$]:,s");
      char char0 = characterReader0.consume();
      assertEquals('=', char0);
      
      String string0 = characterReader0.consumeData();
      assertEquals("Tc:$]:,s", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LwPTmB1-~!u<W&c.s");
      String string0 = characterReader0.consumeTo('h');
      assertEquals("LwPTmB1-~!u<W&c.s", string0);
      
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("K\"0|@e(WN#v=]LaK");
      char char0 = characterReader0.current();
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FwLvb.Fsa#w\"s1");
      String string0 = characterReader0.consumeToEnd();
      assertEquals("FwLvb.Fsa#w\"s1", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FwLvb.Fsa#w\"s1");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FwLvb.Fsa#w\"s1");
      String string0 = characterReader0.toString();
      assertEquals("FwLvb.Fsa#w\"s1", string0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      characterReader0.unconsume();
      characterReader0.advance();
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      characterReader0.advance();
      String string0 = characterReader0.consumeTagName();
      assertEquals("k_mAEp]<", string0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9k_mAEp]<");
      characterReader0.mark();
  }
}
