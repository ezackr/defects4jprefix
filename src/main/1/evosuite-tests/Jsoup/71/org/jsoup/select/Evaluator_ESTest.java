/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 23:02:52 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Pattern pattern0 = Pattern.compile("", 0);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      boolean boolean0 = evaluator_MatchesOwn0.matches(element0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("Ats\",>t");
      Document document0 = new Document("Ats\",>t");
      Element element0 = document0.createElement("org.jsoup.nodes.Entities$EscapeMode");
      boolean boolean0 = evaluator_ContainsData0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Document.createShell("rfo^0AJV+Bf0iZ5MVW");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":matchesOwn(rfo^0AJV+Bf0iZ5MVW)");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("4^(q#u", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "B", attributes0);
      boolean boolean0 = evaluator_ContainsText0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Tag tag0 = Tag.valueOf("even");
      FormElement formElement0 = new FormElement(tag0, "even", (Attributes) null);
      boolean boolean0 = evaluator_IsRoot0.matches(formElement0, (Element) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = new Document("");
      Document document1 = document0.clone();
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
      try { 
        evaluator_IsRoot0.matches(document0, document1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.CharacterReader");
      Element element0 = document0.body();
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(1, 0);
      int int0 = evaluator_IsNthLastChild0.calculatePosition(element0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(3995, 1485);
      Document document0 = Document.createShell("Pmf6/yGLlvXn=}5@");
      // Undeclared exception!
      try { 
        evaluator_IsNthLastChild0.calculatePosition((Element) null, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IsNthLastChild", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(61, 61);
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(61n+61)", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-368), 2830);
      Document document0 = Document.createShell("8");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-1982292595), 713);
      boolean boolean0 = evaluator_IsNthOfType0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Tag tag0 = Tag.valueOf("^|E");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals((-30561911));
      boolean boolean0 = evaluator_IndexEquals0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = new Document("");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(1);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Document.createShell("");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("{Qh", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, ".m7{au(E", attributes0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-2079));
      boolean boolean0 = evaluator_IndexLessThan0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("'/(T<7x%Re<'", "'/(T<7x%Re<'");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell("{y&N4#[?>F1M/!A");
      Pattern pattern0 = Pattern.compile("");
      Elements elements0 = document0.getElementsByAttributeValueMatching("", pattern0);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = new Document("");
      Document document1 = document0.clone();
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("[^%s]", ":first-child");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("&kZXiX4l{p", "&kZXiX4l{p");
      Document document0 = Document.createShell("&kZXiX4l{p");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(":prev%s", ":prev%s");
      element0.attr(":prev%s", "'/(T<7x%Re<");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(":prev%s", ":prev%s");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("8E`oRnnfQhP");
      Document document0 = Document.createShell("");
      Document document1 = document0.clone();
      boolean boolean0 = evaluator_AttributeStarting0.matches(document1, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("");
      Document document0 = Document.createShell("");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("{Qh", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, ".m7{au(E", attributes0);
      boolean boolean0 = evaluator_Attribute0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("Ul>Kh,s=rC($vg");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_Id0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document document1 = document0.clone();
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("");
      boolean boolean0 = evaluator_TagEndsWith0.matches(document1, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      int int0 = evaluator_IsLastOfType0.calculatePosition((Element) null, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(":gt(-1506)", 301);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(":gt(-1506)", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[:gt(-1506)~=:gt(-1506)]", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("Ul>Kh,s=rC($vg");
      Element element0 = new Element("Ul>Kh,s=rC($vg");
      boolean boolean0 = evaluator_Tag0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$IsNthLastOfType");
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("Fby#QZC/nFa", parseSettings0);
      Comment comment0 = new Comment("");
      Attributes attributes0 = comment0.attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      boolean boolean0 = evaluator_Matches0.matches(formElement0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = evaluator_IsRoot0.toString();
      assertEquals(":root", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      String string0 = evaluator_IsOnlyChild0.toString();
      assertEquals(":only-child", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.getPseudoClass();
      assertEquals("nth-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.getPseudoClass();
      assertEquals("nth-last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 11);
      String string0 = evaluator_IsNthChild0.getPseudoClass();
      assertEquals("nth-child", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(1569);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(1569)", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":matchesOwn()");
      String string0 = evaluator_ContainsText0.toString();
      assertEquals(":contains(:matchesown())", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      boolean boolean0 = evaluator_ContainsOwnText0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Document.createShell(":nth-of-type(-81n-81)");
      Evaluator.Class evaluator_Class0 = new Evaluator.Class(":nth-of-type(-81n-81)");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("/kou", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "/kou", attributes0);
      boolean boolean0 = evaluator_Class0.matches(formElement0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("SYSTEM", "SYSTEM");
      String string0 = evaluator_AttributeWithValueStarting0.toString();
      assertEquals("[system^=system]", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("\"hgroup", "jwc/l(}\"");
      String string0 = evaluator_AttributeWithValueNot0.toString();
      assertEquals("[\"hgroup!=jwc/l(}\"]", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = new Document("&,n(sDN_EUH");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("&,n(sDN_EUH", "&,n(sDN_EUH");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("nKyn", "nKyn");
      String string0 = evaluator_AttributeWithValueContaining0.toString();
      assertEquals("[nkyn*=nkyn]", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("*");
      String string0 = evaluator_AttributeStarting0.toString();
      assertEquals("[^*]", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      Document document0 = Document.createShell("1e1D,2$80wZmRb9");
      boolean boolean0 = evaluator_AllElements0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("76?Hq.et04||y>", "nth-child");
      Document document0 = new Document("nth-child");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      ArrayList<Evaluator> arrayList0 = combiningEvaluator_And0.evaluators;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(arrayList0);
      evaluatorArray0[2] = (Evaluator) combiningEvaluator_Or0;
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        evaluatorArray0[2].matches(document0, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.CombiningEvaluator$Or", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = new Document("Cf4Y{[G-<3_+gtH");
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluatorArray0[7] = (Evaluator) evaluator_IsRoot0;
      // Undeclared exception!
      try { 
        evaluatorArray0[7].matches(document0, document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IsLastOfType", parseSettings0);
      Comment comment0 = new Comment("[%s=%s]", "tZoM^uy~haJl2WFx");
      Attributes attributes0 = comment0.attributes();
      FormElement formElement0 = new FormElement(tag0, "H?+6<uEzN3b!AtIww", attributes0);
      boolean boolean0 = evaluator_IsEmpty0.matches((Element) null, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(3, 3);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthChild0);
      Document document0 = new Document("Cf4Y{[G-<3_+gtH");
      Document document1 = document0.normalise();
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) structuralEvaluator_Has0;
      evaluatorArray0[1] = (Evaluator) structuralEvaluator_Has0;
      evaluatorArray0[2] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[3] = (Evaluator) structuralEvaluator_Has0;
      evaluatorArray0[4] = (Evaluator) structuralEvaluator_Has0;
      evaluatorArray0[5] = (Evaluator) structuralEvaluator_Has0;
      evaluatorArray0[6] = (Evaluator) structuralEvaluator_Has0;
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluatorArray0[7] = (Evaluator) evaluator_IsRoot0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      ArrayList<Evaluator> arrayList0 = combiningEvaluator_And0.evaluators;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(arrayList0);
      boolean boolean0 = combiningEvaluator_Or0.matches(document1, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("u0SEW x@'eK&^kn");
      Element element0 = document0.body();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IndexGreaterThan");
      document0.appendChild(document0);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = new Document("");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = Document.createShell("org.jsoup.parser.CharacterReader");
      Element element0 = document0.body();
      int int0 = evaluator_IsFirstOfType0.calculatePosition(document0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, 3995);
      String string0 = evaluator_IsNthLastOfType0.toString();
      assertEquals(":nth-last-of-type(3995)", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, 3995);
      Document document0 = Document.createShell("Pmf6/yGLlvXn=}5@");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("ZNK<um?WiQ[", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "ZNK<um?WiQ[", attributes0);
      Document document0 = Document.createShell("u0SEW x@'eK&^kn");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsLastOfType0.matches(formElement0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(713, (-1982292595));
      boolean boolean0 = evaluator_IsNthOfType0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.CharacterReader");
      Element element0 = document0.body();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsOnlyChild");
      Element element0 = document0.prependChild(document0);
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell(":prev%s");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = new Document("");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(0);
      Document document0 = Document.createShell("");
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell(":prev*:eq(59)");
      Elements elements0 = document0.getElementsByIndexEquals(59);
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-4447));
      Document document0 = new Document("Ul>Kh,s=rC($vg");
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      Document document0 = Document.createShell(":only-child");
      boolean boolean0 = evaluator_IndexGreaterThan0.matches((Element) null, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(2477);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("hBd8zw;dC", parseSettings0);
      Element element0 = new Element(tag0, "hBd8zw;dC");
      boolean boolean0 = evaluator_IndexLessThan0.matches((Element) null, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document document1 = document0.clone();
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      boolean boolean0 = evaluator_IndexLessThan0.matches(document1, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(59);
      Document document0 = Document.createShell(":prev*:eq(59)");
      boolean boolean0 = evaluator_IndexLessThan0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Document.createShell(":p6ev%s");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("\"", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Document.createShell("KiHH:w %Y");
      Pattern pattern0 = Pattern.compile("head");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("org.jsoup.select.Evaluator$IsLastOfType", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("  /;rCz{{", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.select.Evaluator$IsRoot", "org.jsoup.select.Evaluator$IsRoot");
      Element element0 = new Element(tag0, "  /;rCz{{", attributes1);
      Elements elements0 = element0.getElementsByAttributeValueEnding("org.jsoup.select.Evaluator$IsRoot", "org.jsoup.select.Evaluator$IsRoot");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("ZNK<um?WiQ[", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("ZNK<um?WiQ[", true);
      FormElement formElement0 = new FormElement(tag0, "ZNK<um?WiQ[", attributes1);
      Elements elements0 = formElement0.getElementsByAttributeValueEnding("ZNK<um?WiQ[", "'8i#_Kps|0q}B");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Elements elements0 = document0.getElementsByAttributeValueEnding("'/(T<7x%Re<", "'/(T<7x%Re<");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = new Document("Cf4Y{[G-<3_+gtH");
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("YS4WVLTVHT.88D#S", "Cf4Y{[G-<3_+gtH");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot(":matchesown(null)", ":matchesown(null)");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueNot0);
      Document document0 = new Document(":matchesown(null)");
      Document document1 = document0.clone();
      document0.attr(":matchesown(null)", ":matchesown(null)");
      document1.appendChild(document0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document1, document1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Document.createShell(":prev%s");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(":prev%s", ":prev%s");
      evaluator_AttributeWithValue0.value = "'/(T<7x%Re<";
      document0.attr(":prev%s", "'/(T<7x%Re<");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("embed", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("'':nth-last-of-type(-4698n-4698)", ",apyKr.|u<$^");
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("<");
      Element element0 = new Element(tag0, "<", attributes0);
      boolean boolean0 = evaluator_AttributeStarting0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = new Document(":matchesown(null)");
      document0.attr(":matchesown(null)", ":matchesown(null)");
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting(":matchesown(null)");
      boolean boolean0 = evaluator_AttributeStarting0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      String string0 = evaluator_AllElements0.toString();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.toString();
      assertEquals(":first-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("H@ER");
      String string0 = evaluator_Tag0.toString();
      assertEquals("H@ER", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("|");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn(|)", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsContainingOwnText("Zcfe9.@b");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      String string0 = evaluator_IsFirstChild0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("");
      String string0 = evaluator_TagEndsWith0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.toString();
      assertEquals(":last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-34505881), (-34505881));
      String string0 = evaluator_IsNthLastOfType0.toString();
      assertEquals(":nth-last-of-type(-34505881n-34505881)", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn((Pattern) null);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn(null)", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(1, 0);
      String string0 = evaluator_IsNthLastChild0.getPseudoClass();
      assertEquals("nth-last-child", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class((String) null);
      String string0 = evaluator_Class0.toString();
      assertEquals(".null", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("e'9D:yQ.d;=o");
      String string0 = evaluator_Id0.toString();
      assertEquals("#e'9D:yQ.d;=o", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData(":prev[^8e`ornnfqhp]");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData(:prev[^8e`ornnfqhp])", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(713, (-1982292595));
      String string0 = evaluator_IsNthOfType0.toString();
      assertEquals(":nth-of-type(713n-1982292595)", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("`!R66H]E90u[CgnQa");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(37, 37);
      int int0 = evaluator_IsNthChild0.calculatePosition(document0, document0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1), 0);
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(-1n)", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("=U+7`]n@4){w]ru!", "\"\"*q>1%$%F");
      String string0 = evaluator_AttributeWithValueEnding0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      String string0 = evaluator_Matches0.toString();
      assertEquals(":matches()", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      String string0 = evaluator_IsEmpty0.toString();
      assertEquals(":empty", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-4447));
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(-4447)", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("h5", "8i#_Kps|0q}B");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[h5=8i#_kps|0q}b]", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(59);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(59)", string0);
  }
}
