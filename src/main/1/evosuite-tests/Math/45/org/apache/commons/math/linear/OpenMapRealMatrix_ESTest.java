/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 15:11:17 GMT 2023
 */

package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixPreservingVisitor;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OpenMapRealMatrix_ESTest extends OpenMapRealMatrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 80;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(80, 80);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.multiply((RealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 212;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(212, 212);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      // Undeclared exception!
      try { 
        openMapRealMatrix0.getEntry((-271), (-271));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (-271)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);
      DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
      openMapRealMatrix0.walkInColumnOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.multiply(openMapRealMatrix0);
      openMapRealMatrix2.multiply((RealMatrix) openMapRealMatrix0);
      openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix2);
      // Undeclared exception!
      try { 
        openMapRealMatrix2.multiplyEntry(1, 1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (1)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 4525;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4525, 4525);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        openMapRealMatrix1.multiplyEntry(4525, 0, 4525);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (4,525)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(76, 76);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      // Undeclared exception!
      try { 
        openMapRealMatrix1.addToEntry(206, 76, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (206)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1359, 5627);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix1.createMatrix(1359, 156);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 1479;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1479, 1479);
      openMapRealMatrix0.copy();
      // Undeclared exception!
      try { 
        openMapRealMatrix0.setEntry(1479, 0, 404.22937);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (1,479)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4112, 4112);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix1.subtract(openMapRealMatrix0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(51, 51);
      openMapRealMatrix0.addToEntry(0, 0, 3878.83901075);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);
      openMapRealMatrix0.multiplyEntry(0, 0, 0.0);
      OpenMapRealMatrix openMapRealMatrix1 = null;
      try {
        openMapRealMatrix1 = new OpenMapRealMatrix(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = null;
      OpenMapRealMatrix openMapRealMatrix1 = null;
      try {
        openMapRealMatrix1 = new OpenMapRealMatrix((OpenMapRealMatrix) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.OpenMapRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = (-744);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-744), (-744));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -744 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 218;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(218, 218);
      int int1 = 0;
      // Undeclared exception!
      openMapRealMatrix0.scalarAdd(218);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = (-385);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix(0, (-385));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1968;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1968, 1968);
      openMapRealMatrix0.getColumnDimension();
      OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(1968, 1968);
      openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix0);
      OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.add(openMapRealMatrix0);
      openMapRealMatrix0.getTrace();
      // Undeclared exception!
      try { 
        openMapRealMatrix2.addToEntry(1959, 1968, 1968);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // column index (1,968)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1037, 1037);
      openMapRealMatrix0.getTrace();
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      openMapRealMatrix1.getRowDimension();
      openMapRealMatrix0.subtract((RealMatrix) openMapRealMatrix1);
      openMapRealMatrix0.copy();
      // Undeclared exception!
      try { 
        openMapRealMatrix0.addToEntry(1037, 1, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // row index (1,037)
         //
         verifyException("org.apache.commons.math.linear.MatrixUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 665;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(665, 665);
      OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(665, 665);
      // Undeclared exception!
      try { 
        openMapRealMatrix1.operate((RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = (-3661);
      OpenMapRealMatrix openMapRealMatrix0 = null;
      try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-3661), (-3661));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3,661 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math.linear.AbstractRealMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1117, 1117);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
      // Undeclared exception!
      openMapRealMatrix1.transpose();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 1270;
      OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1270, 1270);
      OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(1270, 1270);
      // Undeclared exception!
      openMapRealMatrix0.add(openMapRealMatrix1);
  }
}
