/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 03:28:26 GMT 2023
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.binary.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Base64_ESTest extends Base64_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockRandom mockRandom0 = new MockRandom();
        BigInteger bigInteger0 = BigInteger.probablePrime(64, mockRandom0);
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Base64 base64_0 = new Base64(997);
        byte[] byteArray0 = base64_0.decode("j@xi_AAjO/6{DeM");
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        Base64 base64_0 = new Base64(1371);
        byte[] byteArray0 = new byte[0];
        base64_0.setInitialBuffer(byteArray0, (-6880), 26);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Base64 base64_0 = new Base64(true);
        byte[] byteArray0 = base64_0.decode("]");
        String string0 = base64_0.encodeToString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        String string0 = Base64.encodeBase64URLSafeString((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
        String string0 = Base64.encodeBase64URLSafeString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        Base64 base64_0 = new Base64(true);
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = base64_0.decode(byteArray0);
        byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        String string0 = Base64.encodeBase64String((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
        String string0 = Base64.encodeBase64String(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("");
        byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1518() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("");
        byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true, true);
    }

    @Test(timeout = 4000)
    public void test1720() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false);
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[3] = (byte) 43;
        byteArray0[5] = (byte) 65;
        byteArray0[7] = (byte) 106;
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 88;
        byteArray0[4] = (byte) 74;
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test2023() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[1] = (byte) 105;
        byteArray0[2] = (byte) 73;
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test2124() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
        byte[] byteArray1 = Base64.decodeBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2227() throws Throwable {
        byte[] byteArray0 = Base64.decodeBase64((String) null);
    }

    @Test(timeout = 4000)
    public void test2328() throws Throwable {
        byte[] byteArray0 = Base64.decodeBase64("");
        byte[] byteArray1 = Base64.encodeBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2429() throws Throwable {
        Base64 base64_0 = new Base64(121);
        base64_0.decode((String) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test2530() throws Throwable {
        Base64.toIntegerBytes((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test2631() throws Throwable {
        Base64 base64_0 = new Base64(40, (byte[]) null);
        byte[] byteArray0 = new byte[7];
        base64_0.encode(byteArray0);
        base64_0.readResults((byte[]) null, 98, 40);
    }

    @Test(timeout = 4000)
    public void test2732() throws Throwable {
        Base64 base64_0 = new Base64(false);
        byte[] byteArray0 = new byte[6];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
        base64_0.encodeToString(byteArray1);
        base64_0.readResults(byteArray0, (byte) 0, (byte) 77);
    }

    @Test(timeout = 4000)
    public void test2833() throws Throwable {
        Base64.isArrayByteBase64((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test2934() throws Throwable {
        Base64 base64_0 = new Base64(true);
        base64_0.encode((byte[]) null, 108, 108);
    }

    @Test(timeout = 4000)
    public void test3035() throws Throwable {
        Base64.discardWhitespace((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test3136() throws Throwable {
        Base64.decodeInteger((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test3237() throws Throwable {
        Base64 base64_0 = new Base64(395, (byte[]) null);
        base64_0.decode((byte[]) null, 395, 3364);
    }

    @Test(timeout = 4000)
    public void test3338() throws Throwable {
        Base64 base64_0 = new Base64(true);
        byte[] byteArray0 = new byte[7];
        byte[] byteArray1 = base64_0.encode(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3439() throws Throwable {
        Base64 base64_0 = new Base64(1023, (byte[]) null, true);
        byte[] byteArray0 = base64_0.encode((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test3440() throws Throwable {
        Base64 base64_0 = new Base64(1023, (byte[]) null, true);
        byte[] byteArray0 = base64_0.encode((byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test3541() throws Throwable {
        String string0 = "?\\u<`Dj5PR}SO`";
        byte[] byteArray0 = Base64.decodeBase64(string0);
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false, 10);
    }

    @Test(timeout = 4000)
    public void test3644() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, 1676);
        //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)0, (byte)0}, byteArray1);
    }

    @Test(timeout = 4000)
    public void test3745() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, 15);
    }

    @Test(timeout = 4000)
    public void test3846() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false, 5);
    }

    @Test(timeout = 4000)
    public void test3947() throws Throwable {
        Base64 base64_0 = new Base64(1023, (byte[]) null, true);
        byte[] byteArray0 = base64_0.decode((byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test3948() throws Throwable {
        Base64 base64_0 = new Base64(1023, (byte[]) null, true);
        byte[] byteArray0 = base64_0.decode((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        Base64 base64_0 = new Base64();
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
        byte[] byteArray1 = base64_0.decode(byteArray0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test4050() throws Throwable {
        Base64 base64_0 = new Base64();
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
        byte[] byteArray1 = base64_0.decode(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4151() throws Throwable {
        boolean boolean0 = Base64.isBase64((byte) 110);
    }

    @Test(timeout = 4000)
    public void test4252() throws Throwable {
        boolean boolean0 = Base64.isBase64((byte) 19);
    }

    @Test(timeout = 4000)
    public void test4353() throws Throwable {
        boolean boolean0 = Base64.isBase64((byte) (-100));
    }

    @Test(timeout = 4000)
    public void test4454() throws Throwable {
        boolean boolean0 = Base64.isBase64((byte) 126);
    }

    @Test(timeout = 4000)
    public void test4555() throws Throwable {
        boolean boolean0 = Base64.isBase64((byte) 61);
    }

    @Test(timeout = 4000)
    public void test4656() throws Throwable {
        Base64 base64_0 = new Base64(121);
        base64_0.decode((byte[]) null, 0, 0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test4757() throws Throwable {
        byte[] byteArray0 = new byte[9];
        Base64 base64_0 = new Base64();
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
        base64_0.decode(byteArray1, 6, 793);
    }

    @Test(timeout = 4000)
    public void test4858() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-1);
        Base64 base64_0 = new Base64(246, byteArray0);
        base64_0.decode(byteArray0, 0, 26);
    }

    @Test(timeout = 4000)
    public void test4959() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 61;
        Base64 base64_0 = new Base64(false);
        base64_0.decode(byteArray0, 0, 76);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5060() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false);
        base64_0.decode(byteArray1, 0, (-1));
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5061() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false);
        base64_0.decode(byteArray1, 0, (-1));
    }

    @Test(timeout = 4000)
    public void test5162() throws Throwable {
        Base64 base64_0 = new Base64(997);
        byte[] byteArray0 = base64_0.decode("q7)/6");
    }

    @Test(timeout = 4000)
    public void test5163() throws Throwable {
        Base64 base64_0 = new Base64(997);
        byte[] byteArray0 = base64_0.decode("q7)/6");
        base64_0.decode((byte[]) null, 943, 4191);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5264() throws Throwable {
        byte[] byteArray0 = new byte[6];
        Base64 base64_0 = new Base64((byte) 43, byteArray0, true);
        base64_0.encode(byteArray0, 1, (int) (byte) 126);
    }

    @Test(timeout = 4000)
    public void test5365() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[8];
        byteArray0[4] = (byte) (-90);
        base64_0.encode(byteArray0, 0, (int) (byte) 30);
    }

    @Test(timeout = 4000)
    public void test5466() throws Throwable {
        Base64 base64_0 = new Base64(1371);
        byte[] byteArray0 = new byte[0];
        base64_0.setInitialBuffer(byteArray0, (-1), 0);
        base64_0.encode(byteArray0, (-1414), 1371);
    }

    @Test(timeout = 4000)
    public void test5567() throws Throwable {
        Base64 base64_0 = new Base64(false);
        byte[] byteArray0 = new byte[9];
        base64_0.encode(byteArray0, 162, 0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5668() throws Throwable {
        Base64 base64_0 = new Base64(true);
        boolean boolean0 = base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5769() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
        Base64 base64_0 = new Base64(0, byteArray0, false);
        boolean boolean0 = base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test5871() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 55;
        Base64 base64_0 = null;
        base64_0 = new Base64(43, byteArray0, false);
    }

    @Test(timeout = 4000)
    public void test5972() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);
    }

    @Test(timeout = 4000)
    public void test6074() throws Throwable {
        byte[] byteArray0 = new byte[2];
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test6175() throws Throwable {
        Base64.encodeInteger((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test6276() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
        Base64 base64_0 = new Base64(0);
        byte[] byteArray1 = base64_0.encode(byteArray0);
    }

    @Test(timeout = 4000)
    public void test6277() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
        Base64 base64_0 = new Base64(0);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        int int0 = base64_0.avail();
    }

    @Test(timeout = 4000)
    public void test6378() throws Throwable {
        Base64 base64_0 = new Base64();
        String string0 = base64_0.encodeToString((byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test6379() throws Throwable {
        Base64 base64_0 = new Base64();
        String string0 = base64_0.encodeToString((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test6480() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(6, byteArray0, true);
        BigInteger bigInteger0 = BigInteger.ONE;
        base64_0.encode((Object) bigInteger0);
    }

    @Test(timeout = 4000)
    public void test6581() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[1] = (byte) 32;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test6684() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
        //  // Unstable assertion: assertEquals(2, byteArray1.length);
        //  // Unstable assertion: assertNotSame(byteArray1, byteArray0);
    }

    @Test(timeout = 4000)
    public void test6785() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[4] = (byte) 9;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test6888() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("\u0000Upq>l?a");
        Base64.encodeBase64(byteArray0, false, false, (-1334));
    }

    @Test(timeout = 4000)
    public void test6989() throws Throwable {
        Base64 base64_0 = new Base64(2);
        byte[] byteArray0 = base64_0.decode("");
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test6990() throws Throwable {
        Base64 base64_0 = new Base64(2);
        byte[] byteArray0 = base64_0.decode("");
        byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
    }

    @Test(timeout = 4000)
    public void test7091() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test7192() throws Throwable {
        byte[] byteArray0 = Base64.decodeBase64((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test7293() throws Throwable {
        byte[] byteArray0 = new byte[6];
        Base64 base64_0 = new Base64();
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        base64_0.decode((Object) bigInteger0);
    }

    @Test(timeout = 4000)
    public void test7394() throws Throwable {
        Base64 base64_0 = new Base64(false);
        Object object0 = base64_0.decode((Object) "");
        Object object1 = base64_0.decode(object0);
    }

    @Test(timeout = 4000)
    public void test7395() throws Throwable {
        Base64 base64_0 = new Base64(false);
        Object object0 = base64_0.decode((Object) "");
        Object object1 = base64_0.decode(object0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test7496() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 123;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test7597() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 57;
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test7698() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[5] = (byte) (-81);
        byte[] byteArray1 = Base64.decodeBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test7799() throws Throwable {
        Base64 base64_0 = new Base64(2);
        Object object0 = base64_0.decode((Object) "ALq6AAA=\r\n");
        Object object1 = base64_0.encode(object0);
    }

    @Test(timeout = 4000)
    public void test78100() throws Throwable {
        byte[] byteArray0 = new byte[1];
        Base64 base64_0 = new Base64(true);
        base64_0.encode(byteArray0, (-30), (-1972));
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test79101() throws Throwable {
        byte[] byteArray0 = new byte[7];
        String string0 = Base64.encodeBase64URLSafeString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test80102() throws Throwable {
        byte[] byteArray0 = new byte[2];
        Base64 base64_0 = new Base64(true);
        base64_0.decode((Object) "jPc~z!u*g%EWQWD");
        base64_0.encode(byteArray0, (int) (byte) 123, 844);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test81103() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("\u0000Upq>l?a");
        base64_0.setInitialBuffer(byteArray0, 1841, 0);
    }

    @Test(timeout = 4000)
    public void test82105() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("[}=rvj9:K$BRGS(u1");
    }

    @Test(timeout = 4000)
    public void test82106() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("[}=rvj9:K$BRGS(u1");
        int int0 = base64_0.readResults((byte[]) null, (byte) 52, 0);
    }

    @Test(timeout = 4000)
    public void test82107() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("[}=rvj9:K$BRGS(u1");
        int int0 = base64_0.readResults((byte[]) null, (byte) 52, 0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test83108() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(6, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
    }

    @Test(timeout = 4000)
    public void test83109() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(6, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        int int0 = base64_0.avail();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test83110() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(6, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        int int0 = base64_0.avail();
    }

    @Test(timeout = 4000)
    public void test84111() throws Throwable {
        Base64 base64_0 = new Base64();
        int int0 = base64_0.readResults((byte[]) null, (byte) 52, 0);
    }

    @Test(timeout = 4000)
    public void test84112() throws Throwable {
        Base64 base64_0 = new Base64();
        int int0 = base64_0.readResults((byte[]) null, (byte) 52, 0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test85113() throws Throwable {
        Base64 base64_0 = new Base64();
        int int0 = base64_0.avail();
    }

    @Test(timeout = 4000)
    public void test85114() throws Throwable {
        Base64 base64_0 = new Base64();
        int int0 = base64_0.avail();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test86115() throws Throwable {
        Base64 base64_0 = new Base64((-1));
        byte[] byteArray0 = new byte[6];
        base64_0.encode(byteArray0, (int) (byte) 0, (-4491));
        boolean boolean0 = base64_0.hasData();
    }

    @Test(timeout = 4000)
    public void test86116() throws Throwable {
        Base64 base64_0 = new Base64((-1));
        byte[] byteArray0 = new byte[6];
        base64_0.encode(byteArray0, (int) (byte) 0, (-4491));
        boolean boolean0 = base64_0.hasData();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test87117() throws Throwable {
        Base64 base64_0 = new Base64(false);
        boolean boolean0 = base64_0.hasData();
    }

    @Test(timeout = 4000)
    public void test87118() throws Throwable {
        Base64 base64_0 = new Base64(false);
        boolean boolean0 = base64_0.hasData();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test88119() throws Throwable {
        byte[] byteArray0 = Base64.decodeBase64("Paameter suppled to Base64 encode is not a byte[]");
        Base64 base64_0 = null;
        base64_0 = new Base64((-489), byteArray0);
    }

    @Test(timeout = 4000)
    public void test89120() throws Throwable {
        Base64 base64_0 = new Base64(0, (byte[]) null);
        base64_0.setInitialBuffer((byte[]) null, 0, 0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test90121() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
        boolean boolean0 = Base64.isArrayByteBase64(byteArray1);
    }

    @Test(timeout = 4000)
    public void test91123() throws Throwable {
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        Base64 base64_0 = new Base64(true);
        byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);
        byte[] byteArray2 = base64_0.encode(byteArray1);
    }

    @Test(timeout = 4000)
    public void test92124() throws Throwable {
        byte[] byteArray0 = new byte[5];
        String string0 = Base64.encodeBase64String(byteArray0);
    }

    @Test(timeout = 4000)
    public void test93125() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("\u0000Upq>l?a");
        byte[] byteArray1 = Base64.encodeBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test93127() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = base64_0.decode("\u0000Upq>l?a");
        byte[] byteArray1 = Base64.encodeBase64(byteArray0);
        base64_0.isUrlSafe();
    }
}
