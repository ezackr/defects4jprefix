/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 18:36:44 GMT 2023
 */
package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.TextBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class TextBuffer_ESTest extends TextBuffer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.append(charArray0, 1, 0);
        char[] charArray1 = textBuffer0.expandCurrentSegment(200);
        assertEquals(200, charArray1.length);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.append(charArray0, 1, 0);
        char[] charArray1 = textBuffer0.expandCurrentSegment(200);
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(2221, 272);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.append((String) null, (-1780), 1631);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[2];
        textBuffer0.resetWithCopy(charArray0, 0, 2);
        // Undeclared exception!
        try {
            textBuffer0.append("com.fasterxml.jackson.core.util.TextBuffer", (-1181), 0);
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.append('[');
        char[] charArray0 = new char[9];
        textBuffer0.setCurrentAndReturn(1000);
        // Undeclared exception!
        try {
            textBuffer0.append(charArray0, 0, 1000);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1, 3);
        textBuffer0.getTextBuffer();
        assertEquals(1, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[9];
        textBuffer0.resetWithShared(charArray0, '~', 262144);
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertEquals(126, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[9];
        textBuffer0.resetWithShared(charArray0, '~', 262144);
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1, 3);
        int int0 = textBuffer0.size();
        assertEquals(1, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1, 3);
        int int0 = textBuffer0.size();
        assertEquals(3, int0);
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(262144);
        int int0 = textBuffer0.size();
        assertEquals(262144, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test0711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(262144);
        int int0 = textBuffer0.size();
        assertEquals(262144, int0);
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength((-591));
        int int0 = textBuffer0.size();
        assertEquals((-591), textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test0813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength((-591));
        int int0 = textBuffer0.size();
        assertEquals((-591), int0);
    }

    @Test(timeout = 4000)
    public void test0914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.resetWithShared(charArray0, 3079, 3);
        int int0 = textBuffer0.getTextOffset();
        assertEquals(3, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test0915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.resetWithShared(charArray0, 3079, 3);
        int int0 = textBuffer0.getTextOffset();
        assertEquals(3079, int0);
    }

    @Test(timeout = 4000)
    public void test1016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('6');
        int int0 = textBuffer0.getCurrentSegmentSize();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1000, 1000);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.setCurrentLength((-2911));
        int int0 = textBuffer0.getCurrentSegmentSize();
        assertEquals((-2911), int0);
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('6');
        double double0 = textBuffer0.contentsAsDouble();
        assertEquals(1, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test1219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('6');
        double double0 = textBuffer0.contentsAsDouble();
        assertEquals(6.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(301, 1596);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('6');
        textBuffer0.contentsAsDecimal();
        assertEquals(1, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1000, 1779);
        // Undeclared exception!
        try {
            textBuffer0.toString();
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithShared((char[]) null, 1, 1);
        // Undeclared exception!
        try {
            textBuffer0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(0, 0);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.setCurrentAndReturn((-2061));
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        // Undeclared exception!
        try {
            textBuffer0.setCurrentAndReturn((-1410));
            fail("Expecting exception: NegativeArraySizeException");
        } catch (NegativeArraySizeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.lang.AbstractStringBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.getCurrentSegment();
        textBuffer0.finishCurrentSegment();
        // Undeclared exception!
        try {
            textBuffer0.setCurrentAndReturn((-81));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.lang.AbstractStringBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.resetWithCopy((char[]) null, 3, 0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.contentsAsArray();
        // Undeclared exception!
        try {
            textBuffer0.resetWithCopy(charArray0, 4, 1268);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithShared((char[]) null, 2, 1000);
        // Undeclared exception!
        try {
            textBuffer0.getCurrentSegment();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[1];
        textBuffer0.resetWithShared(charArray0, 0, 3);
        // Undeclared exception!
        try {
            textBuffer0.getCurrentSegment();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.finishCurrentSegment();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(0, 2667);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.expandCurrentSegment((-449));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.expandCurrentSegment();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(2814, 2814);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[4];
        textBuffer0.resetWithShared(charArray0, 0, 370);
        // Undeclared exception!
        try {
            textBuffer0.ensureNotShared();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(0, 0);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.emptyAndGetCurrentSegment();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 2
            //
            verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
        }
    }

    @Test(timeout = 4000)
    public void test2835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(262144);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsString();
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.getCurrentSegment();
        textBuffer0.setCurrentLength(2175);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsDouble();
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithShared((char[]) null, 1, 1);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsDouble();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithEmpty();
        textBuffer0.setCurrentLength(3);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsDecimal();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithShared((char[]) null, 1, 1);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsArray();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.Arrays", e);
        }
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(262144);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsArray();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.resetWithShared(charArray0, 2385, (-4697));
        // Undeclared exception!
        try {
            textBuffer0.append(charArray0, 1, 0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test3542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithString("5Tf=)&&x_=");
        // Undeclared exception!
        try {
            textBuffer0.append('o');
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[8];
        textBuffer0.resetWithShared(charArray0, 2, 2371);
        // Undeclared exception!
        try {
            textBuffer0.append('<');
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test3744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = bufferRecycler0.allocCharBuffer(1, 0);
        textBuffer0.append(charArray0, 0, 1268);
        assertEquals(68, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('N');
        textBuffer0.contentsAsString();
        assertFalse(textBuffer0.hasTextAsCharacters());
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test3947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        int int0 = textBuffer0.size();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test3948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        int int0 = textBuffer0.size();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithEmpty();
        char[] charArray0 = new char[8];
        // Undeclared exception!
        try {
            textBuffer0.append(charArray0, 2, 1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.core.util.TextBuffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('j');
        textBuffer0.finishCurrentSegment();
        textBuffer0.resetWithEmpty();
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test4251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 0, 1);
        textBuffer0.contentsAsArray();
        assertEquals(1, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test4352() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.contentsAsString();
        char[] charArray0 = textBuffer0.contentsAsArray();
        assertArrayEquals(new char[] {}, charArray0);
    }

    @Test(timeout = 4000)
    public void test4453() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1000, 1779);
        // Undeclared exception!
        try {
            textBuffer0.append("", 1000, 1);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test4554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1, 3);
        textBuffer0.ensureNotShared();
        assertEquals(3, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test4655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment(2);
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test4656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment(2);
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test4657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment(2);
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test4758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test4759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.expandCurrentSegment(262144);
        assertEquals(262144, charArray1.length);
    }

    @Test(timeout = 4000)
    public void test4760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.expandCurrentSegment(262144);
        char[] charArray2 = textBuffer0.expandCurrentSegment();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test4761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.expandCurrentSegment(262144);
        char[] charArray2 = textBuffer0.expandCurrentSegment();
        assertEquals(327680, charArray2.length);
    }

    @Test(timeout = 4000)
    public void test4862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test4863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment();
        assertEquals(300, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test4864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.expandCurrentSegment();
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test4965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.expandCurrentSegment(262144);
        textBuffer0.finishCurrentSegment();
        assertEquals(262144, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test5066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.finishCurrentSegment();
        assertEquals(1200, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test5167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        // Undeclared exception!
        try {
            textBuffer0.setCurrentAndReturn(2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test5268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        String string0 = textBuffer0.setCurrentAndReturn(0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test5369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test5370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.getCurrentSegment();
        assertEquals(0, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test5371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = textBuffer0.getCurrentSegment();
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test5472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.getCurrentSegment();
        // Undeclared exception!
        try {
            textBuffer0.append("\u0000o", 262144, 1214);
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test5573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append("com.fasterxml.jackson.core.util.TextBuffer", 1, 1);
        assertEquals(1, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test5674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('j');
        textBuffer0.ensureNotShared();
        assertEquals(1, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test5775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        try {
            textBuffer0.contentsAsDecimal();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            //
            // Value \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\" can not be represented as BigDecimal
            //
            verifyException("com.fasterxml.jackson.core.io.NumberInput", e);
        }
    }

    @Test(timeout = 4000)
    public void test5876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.resetWithShared(charArray0, 3079, 3);
        // Undeclared exception!
        try {
            textBuffer0.contentsAsDecimal();
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test5977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.contentsAsArray();
        try {
            textBuffer0.contentsAsDecimal();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            //
            // Value \"\" can not be represented as BigDecimal
            //
            verifyException("com.fasterxml.jackson.core.io.NumberInput", e);
        }
    }

    @Test(timeout = 4000)
    public void test6078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        try {
            textBuffer0.contentsAsDecimal();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            //
            // Value \"\" can not be represented as BigDecimal
            //
            verifyException("com.fasterxml.jackson.core.io.NumberInput", e);
        }
    }

    @Test(timeout = 4000)
    public void test6179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(301, 1596);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('6');
        textBuffer0.toString();
        textBuffer0.getTextBuffer();
        textBuffer0.contentsAsArray();
        assertEquals(1, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test6280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append('R');
        try {
            textBuffer0.contentsAsDouble();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test6381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1, 3);
        textBuffer0.contentsAsString();
        assertEquals(3, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test6482() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.contentsAsArray();
        String string0 = textBuffer0.contentsAsString();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.contentsAsString();
        textBuffer0.setCurrentAndReturn(2641);
        textBuffer0.getCurrentSegment();
        assertEquals(200, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test6684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertSame(charArray1, charArray0);
    }

    @Test(timeout = 4000)
    public void test6685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertEquals(200, charArray1.length);
    }

    @Test(timeout = 4000)
    public void test6686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertEquals(0, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test6687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertNotNull(charArray1);
    }

    @Test(timeout = 4000)
    public void test6788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.contentsAsString();
        assertFalse(textBuffer0.hasTextAsCharacters());
    }

    @Test(timeout = 4000)
    public void test6789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.contentsAsString();
        textBuffer0.getTextBuffer();
        assertTrue(textBuffer0.hasTextAsCharacters());
    }

    @Test(timeout = 4000)
    public void test6890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.append(charArray0, 1, 0);
        textBuffer0.contentsAsArray();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertEquals(0, charArray1.length);
    }

    @Test(timeout = 4000)
    public void test6891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.append(charArray0, 1, 0);
        textBuffer0.contentsAsArray();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test6892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = new char[5];
        textBuffer0.append(charArray0, 1, 0);
        textBuffer0.contentsAsArray();
        char[] charArray1 = textBuffer0.getTextBuffer();
        assertNotNull(charArray1);
    }

    @Test(timeout = 4000)
    public void test6993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.getTextBuffer();
        assertNull(charArray0);
    }

    @Test(timeout = 4000)
    public void test7094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.contentsAsString();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.getTextBuffer();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertEquals(200, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test7196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.getTextBuffer();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test7298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test7299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertEquals(0, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test72100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test73101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1739, 0);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        boolean boolean0 = textBuffer0.hasTextAsCharacters();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test74102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        int int0 = textBuffer0.getTextOffset();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test75103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append(')');
        int int0 = textBuffer0.getTextOffset();
        assertEquals(1, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test75104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.append(')');
        int int0 = textBuffer0.getTextOffset();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test76105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.resetWithString("");
        textBuffer0.size();
        assertFalse(textBuffer0.hasTextAsCharacters());
    }

    @Test(timeout = 4000)
    public void test77106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        assertEquals(200, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test77107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.contentsAsArray();
        assertNotNull(charArray1);
    }

    @Test(timeout = 4000)
    public void test77108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.contentsAsArray();
        int int0 = textBuffer0.size();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test77109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray1 = textBuffer0.contentsAsArray();
        int int0 = textBuffer0.size();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test78110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(912, 7);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        int int0 = textBuffer0.size();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test79111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.resetWithString("R\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
        assertEquals(300, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test80112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = bufferRecycler0.allocCharBuffer(1, 0);
        textBuffer0.append(')');
        textBuffer0.resetWithCopy(charArray0, 4, 1268);
        assertEquals(1268, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test81113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        char[] charArray0 = bufferRecycler0.allocCharBuffer(1, 0);
        textBuffer0.setCurrentLength(694);
        textBuffer0.append(')');
        textBuffer0.resetWithCopy(charArray0, 4, 1268);
        assertEquals(268, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test82114() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        char[] charArray0 = textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.finishCurrentSegment();
        textBuffer0.resetWithShared(charArray0, 1000, 1779);
        assertEquals(1779, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test83115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(694);
        textBuffer0.append(')');
        assertEquals(1, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test83116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.emptyAndGetCurrentSegment();
        textBuffer0.setCurrentLength(694);
        textBuffer0.append(')');
        textBuffer0.releaseBuffers();
        assertEquals(0, textBuffer0.getCurrentSegmentSize());
    }

    @Test(timeout = 4000)
    public void test84117() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.releaseBuffers();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test84118() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.releaseBuffers();
        char[] charArray0 = textBuffer0.getCurrentSegment();
        assertEquals(1000, charArray0.length);
    }

    @Test(timeout = 4000)
    public void test84119() throws Throwable {
        TextBuffer textBuffer0 = new TextBuffer((BufferRecycler) null);
        textBuffer0.releaseBuffers();
        char[] charArray0 = textBuffer0.getCurrentSegment();
        assertEquals(0, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test85120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler(1268, 1268);
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.releaseBuffers();
        assertEquals(0, textBuffer0.getTextOffset());
    }

    @Test(timeout = 4000)
    public void test86121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        int int0 = textBuffer0.getCurrentSegmentSize();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test87122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.getCurrentSegment();
        textBuffer0.setCurrentLength(1255);
        textBuffer0.append(charArray0, 3, 2);
        assertEquals(202, textBuffer0.size());
    }

    @Test(timeout = 4000)
    public void test87123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        char[] charArray0 = textBuffer0.getCurrentSegment();
        textBuffer0.setCurrentLength(1255);
        textBuffer0.append(charArray0, 3, 2);
        char[] charArray1 = textBuffer0.emptyAndGetCurrentSegment();
        assertNotSame(charArray1, charArray0);
    }

    @Test(timeout = 4000)
    public void test88124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        TextBuffer textBuffer0 = new TextBuffer(bufferRecycler0);
        textBuffer0.toString();
        String string0 = textBuffer0.contentsAsString();
        assertEquals("", string0);
    }
}
