/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 04:51:59 GMT 2023
 */
package org.apache.commons.math3.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.MaxEval;
import org.apache.commons.math3.optim.MaxIter;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.linear.SimplexSolver;
import org.apache.commons.math3.optim.univariate.BrentOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BaseOptimizer_ESTest extends BaseOptimizer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        SimplexSolver simplexSolver0 = new SimplexSolver(4.903687986212687E-49, 22, 22);
        OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
        double[] doubleArray0 = new double[0];
        InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
        optimizationDataArray0[3] = (OptimizationData) initialGuess0;
        SimpleBounds simpleBounds0 = SimpleBounds.unbounded(3965);
        optimizationDataArray0[7] = (OptimizationData) simpleBounds0;
        // Undeclared exception!
        try {
            simplexSolver0.optimize(optimizationDataArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // 3,965 != 0
            //
            verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        SimplexSolver simplexSolver0 = new SimplexSolver(1223.833820786675, (-633066204));
        OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
        // Undeclared exception!
        try {
            simplexSolver0.optimize(optimizationDataArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.Collections$UnmodifiableCollection", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        SimplexSolver simplexSolver0 = new SimplexSolver(18.43408335013158);
        ConvergenceChecker<PointValuePair> convergenceChecker0 = simplexSolver0.getConvergenceChecker();
        assertNull(convergenceChecker0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2330.5611073367345, 2330.5611073367345);
        OptimizationData[] optimizationDataArray0 = new OptimizationData[23];
        MaxIter maxIter0 = MaxIter.unlimited();
        optimizationDataArray0[16] = (OptimizationData) maxIter0;
        try {
            brentOptimizer0.optimize(optimizationDataArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // illegal state: maximal count (0) exceeded: evaluations
            //
            verifyException("org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback", e);
        }
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2330.5611073367345, 2330.5611073367345);
        OptimizationData[] optimizationDataArray0 = new OptimizationData[23];
        MaxEval maxEval0 = MaxEval.unlimited();
        optimizationDataArray0[7] = (OptimizationData) maxEval0;
        // Undeclared exception!
        try {
            brentOptimizer0.optimize(optimizationDataArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.math3.optim.univariate.UnivariateOptimizer", e);
        }
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
        int int0 = brentOptimizer0.getMaxEvaluations();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
        int int0 = brentOptimizer0.getMaxIterations();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
        int int0 = brentOptimizer0.getEvaluations();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test88() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer(2776.7344283859998, 2776.7344283859998);
        int int0 = brentOptimizer0.getIterations();
        assertEquals(0, int0);
    }
}
