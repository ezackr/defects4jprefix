/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 23:07:18 GMT 2023
 */
package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.IR;
import com.google.javascript.rhino.Node;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class IR_ESTest extends IR_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Node node0 = IR.empty();
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        Node node0 = IR.block();
        // Undeclared exception!
        try {
            IR.doNode(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Node node0 = new Node(114);
        // Undeclared exception!
        try {
            IR.comma(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        Node node0 = IR.trueNode();
        // Undeclared exception!
        try {
            IR.catchNode(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        Node node0 = IR.breakNode();
        // Undeclared exception!
        try {
            IR.tryCatchFinally(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        Node node0 = new Node(65);
        // Undeclared exception!
        try {
            IR.returnNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.paramList(nodeArray0);
        // Undeclared exception!
        try {
            IR.switchNode(node0, nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        Node node0 = IR.falseNode();
        // Undeclared exception!
        try {
            IR.breakNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        Node node0 = new Node(55);
        // Undeclared exception!
        try {
            IR.eq(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        Node node0 = IR.nullNode();
        // Undeclared exception!
        try {
            IR.assign(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        Node node0 = IR.thisNode();
        // Undeclared exception!
        try {
            IR.ifNode(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        Node node0 = new Node(61);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.and(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertEquals(130, node2.getType());
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.and(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test01214() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.and(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertTrue(node1.isAnd());
    }

    @Test(timeout = 4000)
    public void test01315() throws Throwable {
        Node node0 = IR.falseNode();
        // Undeclared exception!
        try {
            IR.regexp(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01416() throws Throwable {
        Node node0 = new Node(60);
        // Undeclared exception!
        try {
            IR.add(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01517() throws Throwable {
        Node node0 = IR.returnNode();
        // Undeclared exception!
        try {
            IR.label(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01618() throws Throwable {
        Node node0 = IR.breakNode();
        // Undeclared exception!
        try {
            IR.tryFinally(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01719() throws Throwable {
        Node node0 = new Node(10);
        Node node1 = IR.not(node0);
        assertTrue(node1.isNot());
    }

    @Test(timeout = 4000)
    public void test01820() throws Throwable {
        Node node0 = new Node(23);
        // Undeclared exception!
        try {
            IR.ifNode(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01921() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = IR.getelem(node0, node0);
        assertEquals(35, node1.getType());
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = IR.getelem(node0, node0);
        Node node2 = IR.assign(node1, node1);
        assertTrue(node0.isNull());
    }

    @Test(timeout = 4000)
    public void test01923() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = IR.getelem(node0, node0);
        Node node2 = IR.assign(node1, node1);
        assertEquals(86, node2.getType());
    }

    @Test(timeout = 4000)
    public void test02024() throws Throwable {
        Node node0 = IR.nullNode();
        // Undeclared exception!
        try {
            IR.function(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02125() throws Throwable {
        Node node0 = IR.continueNode();
        // Undeclared exception!
        try {
            IR.caseNode(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02226() throws Throwable {
        Node node0 = new Node(110);
        // Undeclared exception!
        try {
            IR.or(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02327() throws Throwable {
        Node node0 = IR.name("");
        node0.addChildToBack(node0);
        // Undeclared exception!
        try {
            IR.var(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02428() throws Throwable {
        Node node0 = IR.thisNode();
        // Undeclared exception!
        try {
            IR.block(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02529() throws Throwable {
        Node node0 = new Node(13);
        Node node1 = IR.sub(node0, node0);
        assertEquals(22, node1.getType());
    }

    @Test(timeout = 4000)
    public void test02630() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.pos(node0);
        // Undeclared exception!
        try {
            IR.forIn(node1, node1, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02731() throws Throwable {
        Node node0 = IR.trueNode();
        // Undeclared exception!
        try {
            IR.tryCatch(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test02832() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.neg(node0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test02833() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.neg(node0);
        assertEquals(29, node1.getType());
    }

    @Test(timeout = 4000)
    public void test02934() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.hook(node0, node0, node0);
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node1, node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03035() throws Throwable {
        Node node0 = IR.stringKey("");
        // Undeclared exception!
        try {
            IR.propdef(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03136() throws Throwable {
        Node node0 = new Node(111);
        // Undeclared exception!
        try {
            IR.throwNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03237() throws Throwable {
        Node node0 = IR.continueNode();
        // Undeclared exception!
        try {
            IR.continueNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03338() throws Throwable {
        Node node0 = IR.falseNode();
        // Undeclared exception!
        try {
            IR.defaultCase(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03439() throws Throwable {
        Node node0 = IR.breakNode();
        // Undeclared exception!
        try {
            IR.regexp(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03540() throws Throwable {
        Node node0 = IR.continueNode();
        // Undeclared exception!
        try {
            IR.paramList(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03641() throws Throwable {
        Node node0 = IR.name("^#K#iuzK>{Wq#*zv");
        // Undeclared exception!
        try {
            IR.var(node0, node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // new child has existing parent
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03742() throws Throwable {
        Node[] nodeArray0 = new Node[1];
        // Undeclared exception!
        try {
            IR.paramList(nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test03843() throws Throwable {
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        Node node0 = IR.paramList((List<Node>) linkedList0);
        assertTrue(node0.isParamList());
    }

    @Test(timeout = 4000)
    public void test03944() throws Throwable {
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        Node node0 = IR.falseNode();
        linkedList0.add(node0);
        // Undeclared exception!
        try {
            IR.paramList((List<Node>) linkedList0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04045() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.block(nodeArray0);
        assertTrue(node0.isBlock());
    }

    @Test(timeout = 4000)
    public void test04146() throws Throwable {
        Node[] nodeArray0 = new Node[2];
        // Undeclared exception!
        try {
            IR.block(nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test04247() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.script(nodeArray0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test04348() throws Throwable {
        Node[] nodeArray0 = new Node[9];
        // Undeclared exception!
        try {
            IR.script(nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test04449() throws Throwable {
        Node node0 = IR.breakNode();
        // Undeclared exception!
        try {
            IR.var(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04550() throws Throwable {
        Node node0 = new Node(118);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04651() throws Throwable {
        Node node0 = new Node(84);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04752() throws Throwable {
        Node node0 = new Node(93);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04853() throws Throwable {
        Node node0 = Node.newString(118, "o|-9u4z{BPik$:O9");
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04954() throws Throwable {
        Node node0 = new Node(22);
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test05055() throws Throwable {
        Node node0 = Node.newString(70, "", 80, 804);
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test05156() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.arraylit(nodeArray0);
        Node node1 = IR.switchNode(node0, nodeArray0);
        assertTrue(node0.isArrayLit());
    }

    @Test(timeout = 4000)
    public void test05157() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.arraylit(nodeArray0);
        Node node1 = IR.switchNode(node0, nodeArray0);
        assertEquals(110, node1.getType());
    }

    @Test(timeout = 4000)
    public void test05258() throws Throwable {
        Node node0 = IR.number(2529.405257);
        Node[] nodeArray0 = new Node[4];
        Node node1 = new Node(111);
        nodeArray0[0] = node1;
        // Undeclared exception!
        try {
            IR.switchNode(node0, nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test05359() throws Throwable {
        Node node0 = IR.number(2529.405257);
        Node[] nodeArray0 = new Node[4];
        nodeArray0[0] = node0;
        // Undeclared exception!
        try {
            IR.switchNode(node0, nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test05460() throws Throwable {
        // Undeclared exception!
        try {
            IR.labelName("");
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test05561() throws Throwable {
        Node node0 = IR.labelName("0T'");
        assertEquals(153, node0.getType());
    }

    @Test(timeout = 4000)
    public void test05662() throws Throwable {
        Node node0 = IR.block();
        Node[] nodeArray0 = new Node[0];
        Node node1 = IR.call(node0, nodeArray0);
        assertTrue(node1.isCall());
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        Node node0 = IR.block();
        Node[] nodeArray0 = new Node[0];
        Node node1 = IR.call(node0, nodeArray0);
        assertEquals(125, node0.getType());
    }

    @Test(timeout = 4000)
    public void test05764() throws Throwable {
        Node node0 = IR.thisNode();
        Node[] nodeArray0 = new Node[16];
        // Undeclared exception!
        try {
            IR.call(node0, nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test05865() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.breakNode();
        Node node1 = IR.newNode(node0, nodeArray0);
        assertTrue(node1.isNew());
    }

    @Test(timeout = 4000)
    public void test05866() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.breakNode();
        Node node1 = IR.newNode(node0, nodeArray0);
        assertEquals(116, node0.getType());
    }

    @Test(timeout = 4000)
    public void test05967() throws Throwable {
        Node node0 = IR.falseNode();
        Node[] nodeArray0 = new Node[1];
        // Undeclared exception!
        try {
            IR.newNode(node0, nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test06068() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.objectlit(nodeArray0);
        Node node1 = IR.switchNode(node0, nodeArray0);
        assertTrue(node1.isSwitch());
    }

    @Test(timeout = 4000)
    public void test06069() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = IR.objectlit(nodeArray0);
        Node node1 = IR.switchNode(node0, nodeArray0);
        assertEquals(64, node0.getType());
    }

    @Test(timeout = 4000)
    public void test06170() throws Throwable {
        Node node0 = IR.stringKey("x6:vIi#Mio");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = node0;
        // Undeclared exception!
        try {
            IR.objectlit(nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06271() throws Throwable {
        Node node0 = IR.thisNode();
        Node[] nodeArray0 = new Node[5];
        nodeArray0[0] = node0;
        // Undeclared exception!
        try {
            IR.objectlit(nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06372() throws Throwable {
        Node node0 = IR.stringKey("com.go#le.common.collect.SingletonImmutableList");
        node0.addChildrenToBack(node0);
        // Undeclared exception!
        try {
            IR.propdef(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06473() throws Throwable {
        Node[] nodeArray0 = new Node[4];
        // Undeclared exception!
        try {
            IR.arraylit(nodeArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.IR", e);
        }
    }

    @Test(timeout = 4000)
    public void test06574() throws Throwable {
        Node node0 = IR.name("^#K#iuzK>{Wq#*zv");
        assertTrue(node0.isUnscopedQualifiedName());
    }

    @Test(timeout = 4000)
    public void test06575() throws Throwable {
        Node node0 = IR.name("^#K#iuzK>{Wq#*zv");
        Node node1 = IR.assign(node0, node0);
        assertEquals(86, node1.getType());
    }

    @Test(timeout = 4000)
    public void test06676() throws Throwable {
        Node node0 = IR.returnNode();
        assertEquals(4, node0.getType());
    }

    @Test(timeout = 4000)
    public void test06677() throws Throwable {
        Node node0 = IR.returnNode();
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test06778() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(49, node0, node0, node0, 51, 40);
        Node node2 = IR.block(node1);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test06779() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(49, node0, node0, node0, 51, 40);
        Node node2 = IR.block(node1);
        assertTrue(node2.isBlock());
    }

    @Test(timeout = 4000)
    public void test06880() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test06981() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test07082() throws Throwable {
        Node node0 = IR.thisNode();
        assertEquals(42, node0.getType());
    }

    @Test(timeout = 4000)
    public void test07083() throws Throwable {
        Node node0 = IR.thisNode();
        node0.setType(108);
        Node node1 = IR.block(node0);
        assertFalse(node1.isLabel());
    }

    @Test(timeout = 4000)
    public void test07184() throws Throwable {
        Node node0 = new Node(110);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test07285() throws Throwable {
        Node node0 = new Node(113);
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test07386() throws Throwable {
        Node node0 = new Node(114, 3184, 79);
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test07487() throws Throwable {
        Node node0 = new Node(115);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test07588() throws Throwable {
        Node node0 = IR.breakNode();
        Node node1 = IR.block(node0);
        assertTrue(node0.isBreak());
    }

    @Test(timeout = 4000)
    public void test07589() throws Throwable {
        Node node0 = IR.breakNode();
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test07690() throws Throwable {
        Node node0 = IR.continueNode();
        Node node1 = IR.block(node0);
        assertEquals(117, node0.getType());
    }

    @Test(timeout = 4000)
    public void test07691() throws Throwable {
        Node node0 = IR.continueNode();
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test07792() throws Throwable {
        Node node0 = new Node(118);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test07893() throws Throwable {
        Node node0 = new Node(119);
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test07994() throws Throwable {
        Node node0 = IR.empty();
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test07995() throws Throwable {
        Node node0 = IR.empty();
        Node node1 = IR.block(node0);
        assertTrue(node0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test08096() throws Throwable {
        Node node0 = IR.block();
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test08097() throws Throwable {
        Node node0 = IR.block();
        Node node1 = IR.block(node0);
        assertEquals(125, node0.getType());
    }

    @Test(timeout = 4000)
    public void test08098() throws Throwable {
        Node node0 = IR.block();
        Node node1 = IR.block(node0);
        assertEquals(1, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test08199() throws Throwable {
        Node node0 = new Node(130);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test082100() throws Throwable {
        Node node0 = new Node(149);
        Node node1 = IR.block(node0);
        assertTrue(node1.isBlock());
    }

    @Test(timeout = 4000)
    public void test083101() throws Throwable {
        Node node0 = new Node(152);
        Node node1 = IR.block(node0);
        assertEquals(125, node1.getType());
    }

    @Test(timeout = 4000)
    public void test084102() throws Throwable {
        Node node0 = new Node(9);
        Node node1 = IR.sub(node0, node0);
        assertEquals(22, node1.getType());
    }

    @Test(timeout = 4000)
    public void test085103() throws Throwable {
        Node node0 = new Node(11);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test086104() throws Throwable {
        Node node0 = new Node(12);
        Node node1 = IR.not(node0);
        assertEquals(26, node1.getType());
    }

    @Test(timeout = 4000)
    public void test087105() throws Throwable {
        Node node0 = new Node(14);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test088106() throws Throwable {
        Node node0 = IR.thisNode();
        Node node1 = new Node(15, node0, node0, 39, 4);
        // Undeclared exception!
        try {
            IR.forIn(node0, node1, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test089107() throws Throwable {
        Node node0 = IR.block();
        Node node1 = new Node(16, node0, node0, 4095, 54);
        // Undeclared exception!
        try {
            IR.forIn(node1, node0, node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test090108() throws Throwable {
        Node node0 = new Node(18, 153, (-5095));
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test091109() throws Throwable {
        Node node0 = new Node(19);
        // Undeclared exception!
        try {
            IR.ifNode(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test092110() throws Throwable {
        Node node0 = new Node(20);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test093111() throws Throwable {
        Node node0 = new Node(21);
        // Undeclared exception!
        try {
            IR.ifNode(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test094112() throws Throwable {
        Node node0 = new Node(24, 24, 24);
        Node node1 = IR.sheq(node0, node0);
        assertEquals(45, node1.getType());
    }

    @Test(timeout = 4000)
    public void test095113() throws Throwable {
        Node node0 = new Node(25, 25, 25);
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test096114() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.not(node0);
        Node node2 = IR.voidNode(node1);
        assertEquals(26, node1.getType());
    }

    @Test(timeout = 4000)
    public void test096115() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.not(node0);
        Node node2 = IR.voidNode(node1);
        assertEquals(122, node2.getType());
    }

    @Test(timeout = 4000)
    public void test096116() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = IR.not(node0);
        Node node2 = IR.voidNode(node1);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test097117() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        Node node1 = IR.throwNode(node0);
        assertEquals(49, node1.getType());
    }

    @Test(timeout = 4000)
    public void test098118() throws Throwable {
        Node node0 = IR.falseNode();
        node0.type = 29;
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test099119() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = IR.exprResult(node0);
        assertEquals(130, node1.getType());
    }

    @Test(timeout = 4000)
    public void test100120() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(31, node0, node0, node0, node0, 32, 42);
        // Undeclared exception!
        try {
            IR.forIn(node0, node1, node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test101121() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(32, node0, node0, 39, 12);
        // Undeclared exception!
        try {
            IR.forIn(node0, node1, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test102122() throws Throwable {
        Node node0 = new Node(33);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test103123() throws Throwable {
        Node node0 = IR.block();
        node0.setType(34);
        // Undeclared exception!
        try {
            IR.voidNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test104124() throws Throwable {
        Node node0 = new Node(36);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test105125() throws Throwable {
        Node node0 = new Node(37);
        Node node1 = IR.not(node0);
        assertTrue(node1.isNot());
    }

    @Test(timeout = 4000)
    public void test106126() throws Throwable {
        Node node0 = IR.string("TYqe&%L<jUo2(@!U#");
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test107127() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = new Node(45, 32, 51);
        Node node2 = IR.hook(node0, node0, node1);
        assertTrue(node2.isHook());
    }

    @Test(timeout = 4000)
    public void test107128() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = new Node(45, 32, 51);
        Node node2 = IR.hook(node0, node0, node1);
        assertTrue(node0.isNull());
    }

    @Test(timeout = 4000)
    public void test107129() throws Throwable {
        Node node0 = IR.nullNode();
        Node node1 = new Node(45, 32, 51);
        Node node2 = IR.hook(node0, node0, node1);
        assertEquals(2, node2.getChildCount());
    }

    @Test(timeout = 4000)
    public void test108130() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(46, node0, node0, node0, 37, 0);
        Node node2 = IR.exprResult(node1);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test108131() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(46, node0, node0, node0, 37, 0);
        Node node2 = IR.exprResult(node1);
        assertTrue(node2.isExprResult());
    }

    @Test(timeout = 4000)
    public void test109132() throws Throwable {
        Node node0 = IR.falseNode();
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test109133() throws Throwable {
        Node node0 = IR.falseNode();
        node0.type = 47;
        Node node1 = IR.not(node0);
        assertTrue(node1.isNot());
    }

    @Test(timeout = 4000)
    public void test110134() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(48, node0, node0, node0, node0, 36, 1);
        // Undeclared exception!
        try {
            IR.not(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test111135() throws Throwable {
        Node node0 = IR.falseNode();
        Node node1 = new Node(49, node0, node0, node0, 51, 40);
        // Undeclared exception!
        try {
            IR.exprResult(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test112136() throws Throwable {
        Node node0 = IR.block();
        Node node1 = new Node(50);
        // Undeclared exception!
        try {
            IR.sheq(node1, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test113137() throws Throwable {
        Node node0 = new Node(51);
        // Undeclared exception!
        try {
            IR.getprop(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test114138() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = new Node(52);
        // Undeclared exception!
        try {
            IR.forIn(node1, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test115139() throws Throwable {
        Node node0 = new Node(53);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test116140() throws Throwable {
        Node node0 = IR.breakNode();
        Node node1 = new Node(54);
        // Undeclared exception!
        try {
            IR.forIn(node1, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test117141() throws Throwable {
        Node node0 = new Node(56, 56, 56);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test118142() throws Throwable {
        Node node0 = new Node(57);
        Node[] nodeArray0 = new Node[9];
        // Undeclared exception!
        try {
            IR.switchNode(node0, nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test119143() throws Throwable {
        Node node0 = new Node(58, 58, 58);
        // Undeclared exception!
        try {
            IR.getelem(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test120144() throws Throwable {
        Node node0 = new Node(59, 59, 59);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test121145() throws Throwable {
        Node node0 = new Node(62);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test122146() throws Throwable {
        Node node0 = new Node(66);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test123147() throws Throwable {
        Node node0 = new Node(67, 67, 67);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test124148() throws Throwable {
        Node node0 = new Node(68, 68, 68);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test125149() throws Throwable {
        Node node0 = new Node(69);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test126150() throws Throwable {
        Node node0 = new Node(71);
        Node[] nodeArray0 = new Node[2];
        // Undeclared exception!
        try {
            IR.switchNode(node0, nodeArray0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test127151() throws Throwable {
        Node node0 = new Node(72);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test128152() throws Throwable {
        Node node0 = new Node(73);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test129153() throws Throwable {
        Node node0 = new Node(74);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test130154() throws Throwable {
        Node node0 = new Node(75);
        // Undeclared exception!
        try {
            IR.sub(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test131155() throws Throwable {
        Node node0 = new Node(76, 76, 76);
        // Undeclared exception!
        try {
            IR.not(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test132156() throws Throwable {
        Node node0 = new Node(77);
        // Undeclared exception!
        try {
            IR.sub(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test133157() throws Throwable {
        Node node0 = new Node(78, 78, 78);
        // Undeclared exception!
        try {
            IR.not(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test134158() throws Throwable {
        Node node0 = new Node(79);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test135159() throws Throwable {
        Node node0 = new Node(80, 80, 80);
        // Undeclared exception!
        try {
            IR.forNode(node0, node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test136160() throws Throwable {
        Node node0 = new Node(81);
        // Undeclared exception!
        try {
            IR.sub(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test137161() throws Throwable {
        Node node0 = new Node(82);
        // Undeclared exception!
        try {
            IR.sub(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test138162() throws Throwable {
        Node node0 = new Node(85);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test139163() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test140164() throws Throwable {
        Node node0 = new Node(87);
        Node node1 = IR.exprResult(node0);
        assertTrue(node1.isExprResult());
    }

    @Test(timeout = 4000)
    public void test141165() throws Throwable {
        Node node0 = new Node(88);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test142166() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = IR.exprResult(node0);
        assertTrue(node1.isExprResult());
    }

    @Test(timeout = 4000)
    public void test143167() throws Throwable {
        Node node0 = new Node(90, 90, 90);
        Node node1 = IR.hook(node0, node0, node0);
        assertTrue(node1.isHook());
    }

    @Test(timeout = 4000)
    public void test144168() throws Throwable {
        Node node0 = new Node(91);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test145169() throws Throwable {
        Node node0 = new Node(92, 92, 109);
        Node node1 = IR.voidNode(node0);
        assertEquals(122, node1.getType());
    }

    @Test(timeout = 4000)
    public void test146170() throws Throwable {
        Node node0 = new Node(94);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test147171() throws Throwable {
        Node node0 = new Node(95);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test148172() throws Throwable {
        Node node0 = new Node(96);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test149173() throws Throwable {
        Node node0 = new Node(97);
        Node node1 = IR.not(node0);
        assertEquals(26, node1.getType());
    }

    @Test(timeout = 4000)
    public void test150174() throws Throwable {
        Node node0 = new Node(99);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test151175() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.or(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertEquals(100, node1.getType());
    }

    @Test(timeout = 4000)
    public void test151176() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.or(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test151177() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.or(node0, node0);
        Node node2 = IR.exprResult(node1);
        assertTrue(node2.isExprResult());
    }

    @Test(timeout = 4000)
    public void test152178() throws Throwable {
        Node node0 = new Node(102);
        Node node1 = IR.exprResult(node0);
        assertTrue(node1.isExprResult());
    }

    @Test(timeout = 4000)
    public void test153179() throws Throwable {
        Node node0 = new Node(103);
        Node node1 = IR.exprResult(node0);
        assertEquals(130, node1.getType());
    }

    @Test(timeout = 4000)
    public void test154180() throws Throwable {
        Node node0 = new Node(104);
        // Undeclared exception!
        try {
            IR.not(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test155181() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = IR.not(node0);
        assertEquals(26, node1.getType());
    }

    @Test(timeout = 4000)
    public void test156182() throws Throwable {
        Node node0 = new Node(106);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test157183() throws Throwable {
        Node node0 = new Node(107);
        // Undeclared exception!
        try {
            IR.ifNode(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test158184() throws Throwable {
        Node node0 = new Node(108);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test159185() throws Throwable {
        Node node0 = new Node(109, 109, 109);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test160186() throws Throwable {
        Node node0 = new Node(112);
        // Undeclared exception!
        try {
            IR.exprResult(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test161187() throws Throwable {
        Node node0 = new Node(113);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test162188() throws Throwable {
        Node node0 = new Node(115);
        // Undeclared exception!
        try {
            IR.and(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test163189() throws Throwable {
        Node node0 = IR.breakNode();
        // Undeclared exception!
        try {
            IR.comma(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test164190() throws Throwable {
        Node node0 = new Node(119);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test165191() throws Throwable {
        Node node0 = new Node(120);
        // Undeclared exception!
        try {
            IR.sub(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test166192() throws Throwable {
        Node node0 = new Node(121);
        // Undeclared exception!
        try {
            IR.forIn(node0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test167193() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.voidNode(node0);
        assertTrue(node1.isVoid());
    }

    @Test(timeout = 4000)
    public void test167194() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.voidNode(node0);
        Node node2 = IR.not(node1);
        assertEquals(26, node2.getType());
    }

    @Test(timeout = 4000)
    public void test167195() throws Throwable {
        Node node0 = IR.trueNode();
        Node node1 = IR.voidNode(node0);
        Node node2 = IR.not(node1);
        assertEquals(44, node0.getType());
    }
}
