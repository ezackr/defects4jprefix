/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 20:01:54 GMT 2023
 */
package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.util.StdDateFormat;
import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.Format;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.junit.runner.RunWith;

public class StdDateFormatTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        Locale locale0 = Locale.CHINESE;
        Boolean boolean0 = Boolean.FALSE;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        ParsePosition parsePosition0 = new ParsePosition(12);
        stdDateFormat0.instance.parseAsISO8601("yRt2'T", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
        stdDateFormat0.parse("(5");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("0");
    }

    @Test(timeout = 4000)
    public void test123() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(828, "");
        Boolean boolean0 = Boolean.valueOf("XDuAy@Z^kD:[0");
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, (Locale) null, boolean0);
        stdDateFormat0.withLocale((Locale) null);
    }

    @Test(timeout = 4000)
    public void test134() throws Throwable {
        Locale locale0 = Locale.ITALIAN;
        Boolean boolean0 = new Boolean("b7,lo8_@1v4U7~&i[d");
        StdDateFormat stdDateFormat0 = new StdDateFormat((TimeZone) null, locale0, boolean0);
        stdDateFormat0.setTimeZone((TimeZone) null);
    }

    @Test(timeout = 4000)
    public void test145() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        ParsePosition parsePosition0 = new ParsePosition((-1485));
        stdDateFormat0.parseAsRFC1123("yyyy-MM-dd'T'HH:mm:ss.SSSZ", parsePosition0);
    }

    @Test(timeout = 4000)
    public void test156() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(0);
        stdDateFormat0.parseAsRFC1123((String) null, parsePosition0);
    }

    @Test(timeout = 4000)
    public void test167() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        StdDateFormat stdDateFormat0 = new StdDateFormat((TimeZone) null, locale0);
        stdDateFormat0.parse("yyyy-MM-dd'T'HH:mm:ss.SSSZ", (ParsePosition) null);
    }

    @Test(timeout = 4000)
    public void test178() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse((String) null);
    }

    @Test(timeout = 4000)
    public void test189() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.looksLikeISO8601((String) null);
    }

    @Test(timeout = 4000)
    public void test1910() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1299), "PzXjh[;UJXIwmp&xL");
        StdDateFormat.getRFC1123Format((TimeZone) simpleTimeZone0, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test2011() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        StdDateFormat.getISO8601Format(timeZone0, (Locale) null);
    }

    @Test(timeout = 4000)
    public void test2112() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1372), "DpsS-:s#m{");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(338);
        stdDateFormat0.parseAsISO8601("DpsS-:s#m{", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test2413() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-98));
        stdDateFormat0.instance.parseAsISO8601("yyyy-MM-)_dd", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test2514() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TAIWAN;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(48);
        stdDateFormat0.parseAsISO8601("]a##wEY\f#\"", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test2615() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        ParsePosition parsePosition0 = new ParsePosition(127);
        stdDateFormat0.parseAsISO8601("~", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test2716() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        ParsePosition parsePosition0 = new ParsePosition((-752));
        stdDateFormat0.instance.parseAsISO8601("Yc2tBV$Gh>\"ELas", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test2817() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(33);
        stdDateFormat0.parseAsISO8601("GM)`CW}\"`XV+fY@", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test2918() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-98));
        stdDateFormat0.instance.parseAsISO8601("yyyy-M nA-dd", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3019() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-98));
        stdDateFormat0.instance.parseAsISO8601("yyy-M A-nd", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3120() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        ParsePosition parsePosition0 = new ParsePosition(938);
        Locale locale0 = Locale.CHINESE;
        Boolean boolean0 = Boolean.valueOf("");
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        stdDateFormat0.instance.parseAsISO8601("bCq[nG-{%", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3221() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-1826));
        stdDateFormat0.parseAsISO8601("1zXPrH)Q]F+o<T-?", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3322() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-204), "com.fasterxml.jackson.databind.util.StdDateFormat");
        Locale locale0 = Locale.JAPAN;
        Boolean boolean0 = Boolean.FALSE;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0, boolean0);
        ParsePosition parsePosition0 = new ParsePosition((-204));
        stdDateFormat0.parseAsISO8601("|<&w7rPetnViP+fp", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3423() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-98));
        stdDateFormat0.instance.parseAsISO8601("yyyy-MM-dd'T'HH:mm:ss.SSSZ", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test3524() throws Throwable {
        String string0 = "DateFormat ";
        StdDateFormat.getRFC1123Format((TimeZone) null);
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.instance.parseAsISO8601("E?btqVL8", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3625() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.instance.parseAsISO8601("E?btqVL8", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3726() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(0);
        stdDateFormat0.parseAsISO8601("Es`>V?t\"q", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test3827() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CHINA;
        Boolean boolean0 = Boolean.TRUE;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        stdDateFormat0.parseAsISO8601("yyyy-MM-dd'T'HH:mm:ss.SSSZ", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3928() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("2z<4.T9J");
    }

    @Test(timeout = 4000)
    public void test4229() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "*%303~[");
        stdDateFormat0.format((Date) null, stringBuffer0, (FieldPosition) null);
    }

    @Test(timeout = 4000)
    public void test4330() throws Throwable {
        int int0 = 0;
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
        stdDateFormat0._formatISO8601 = (DateFormat) stdDateFormat0;
        stdDateFormat0.instance.setTimeZone(simpleTimeZone0);
        locale0.getDisplayLanguage();
        stdDateFormat0.isLenient();
        Locale.Category locale_Category0 = Locale.Category.FORMAT;
        Locale.setDefault(locale0);
        Locale.setDefault(locale_Category0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(0);
        stdDateFormat0.parse("Es`>V?t\"q", parsePosition0);
        stdDateFormat0.format((Date) null);
    }

    @Test(timeout = 4000)
    public void test4431() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        Locale locale0 = Locale.ITALY;
        Boolean boolean0 = new Boolean("7xZ48WA@20)W'Z7Ie|{");
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        stdDateFormat0.instance.parse("Y169");
    }

    @Test(timeout = 4000)
    public void test4532() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(793, "%");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0, (Boolean) null);
        ParsePosition parsePosition0 = new ParsePosition(793);
        stdDateFormat0.parse("00", parsePosition0);
    }

    @Test(timeout = 4000)
    public void test4633() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("");
    }

    @Test(timeout = 4000)
    public void test4734() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Locale locale0 = Locale.ITALY;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
        StdDateFormat stdDateFormat2 = stdDateFormat1.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test4735() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Locale locale0 = Locale.ITALY;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
        StdDateFormat stdDateFormat2 = stdDateFormat1.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test4836() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.GERMAN;
        Boolean boolean0 = Boolean.valueOf(true);
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        TimeZone timeZone1 = TimeZone.getDefault();
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone1);
    }

    @Test(timeout = 4000)
    public void test5037() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
        stdDateFormat0._formatISO8601 = null;
        stdDateFormat0.instance.setTimeZone(simpleTimeZone0);
        locale0.getDisplayLanguage();
        stdDateFormat0.isLenient();
        Locale locale1 = Locale.US;
        Locale.Category locale_Category0 = Locale.Category.FORMAT;
        Locale.setDefault(locale0);
        Locale.setDefault(locale_Category0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(0);
        stdDateFormat0.parse("Es`>V?t\"q", parsePosition0);
        locale0.getDisplayVariant(locale1);
        boolean boolean0 = stdDateFormat0.isLenient();
    }

    @Test(timeout = 4000)
    public void test5038() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat0 = new StdDateFormat(simpleTimeZone0, locale0);
        stdDateFormat0._formatISO8601 = null;
        stdDateFormat0.instance.setTimeZone(simpleTimeZone0);
        locale0.getDisplayLanguage();
        stdDateFormat0.isLenient();
        Locale locale1 = Locale.US;
        Locale.Category locale_Category0 = Locale.Category.FORMAT;
        Locale.setDefault(locale0);
        Locale.setDefault(locale_Category0, locale0);
        ParsePosition parsePosition0 = new ParsePosition(0);
        stdDateFormat0.parse("Es`>V?t\"q", parsePosition0);
        locale0.getDisplayVariant(locale1);
        boolean boolean0 = stdDateFormat0.isLenient();
        String string0 = StdDateFormat.DATE_FORMAT_STR_PLAIN;
        ParsePosition parsePosition1 = new ParsePosition(0);
        stdDateFormat0.getTimeZone();
        parsePosition1.setIndex(0);
        DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
        stdDateFormat0._formatRFC1123 = dateFormat0;
        stdDateFormat0.parseAsRFC1123("English", parsePosition1);
        stdDateFormat0.withTimeZone(simpleTimeZone0);
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getISO8601Format((TimeZone) simpleTimeZone0);
        mockSimpleDateFormat0.toLocalizedPattern();
    }

    @Test(timeout = 4000)
    public void test5139() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), "");
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getISO8601Format((TimeZone) simpleTimeZone0, locale0);
        mockSimpleDateFormat0.toLocalizedPattern();
    }

    @Test(timeout = 4000)
    public void test5240() throws Throwable {
        Locale locale0 = Locale.ITALIAN;
        StdDateFormat stdDateFormat0 = new StdDateFormat((TimeZone) null, locale0);
        ParsePosition parsePosition0 = new ParsePosition((-1571));
        stdDateFormat0.parse("DateFormat ", parsePosition0);
    }
}
