/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 20:25:54 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.Comparator;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.junit.runner.RunWith;

public class HelpFormatterTest {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0002() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0003() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0004() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0005() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0006() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0007() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0008() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0009() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00010() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00011() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00012() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00013() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00014() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00015() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00016() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00017() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00018() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test00019() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test00020() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test00021() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test00022() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test00023() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test00024() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00025() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00026() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00027() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00028() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00029() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 194, 194, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test00130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test00131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test00132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test00133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test00134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test00135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00136() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00137() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test00138() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00139() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00144() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
    }

    @Test(timeout = 4000)
    public void test00146() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test00147() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test00148() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test00149() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test00150() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test00151() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test00152() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00153() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00154() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test00155() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00156() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00157() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00158() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00159() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00160() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 2273, "\"2", options0);
    }

    @Test(timeout = 4000)
    public void test00261() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test00262() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test00263() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00264() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00265() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test00266() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test00267() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test00268() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test00269() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00270() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00271() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00272() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00273() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00274() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00275() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test00276() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
    }

    @Test(timeout = 4000)
    public void test00277() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
    }

    @Test(timeout = 4000)
    public void test00278() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test00279() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test00280() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00281() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test00282() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test00283() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test00284() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test00285() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test00286() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test00287() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test00288() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test00289() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test00290() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test00291() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test00292() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test00293() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test00294() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test00295() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test00296() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test00297() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test00298() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test00299() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test002100() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test002101() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test002102() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test002103() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test002104() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test002105() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test002106() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test002107() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("F7Gt%Gd.FsnP^PT6", "   ");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1478, "arg");
    }

    @Test(timeout = 4000)
    public void test003108() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test003109() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test003110() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test003111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test003112() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test003113() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test003114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test003115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test003116() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003117() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003118() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003119() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003120() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003121() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003122() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test003123() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test003124() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test003125() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test003126() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test003127() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test003128() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test003129() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test003130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test003131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test003132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test003133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test003134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test003135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test003136() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test003137() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1451, "x\"4'y/eiUx", (String) null, options0, "2b|W", false);
    }

    @Test(timeout = 4000)
    public void test004138() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test004139() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test004140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test004141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test004142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test004143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test004144() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test004145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test004146() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004147() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004148() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004149() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004150() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004151() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004152() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test004153() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test004154() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test004155() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test004156() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test004157() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test004158() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test004159() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test004160() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test004161() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test004162() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test004163() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test004164() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test004165() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test004166() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test004167() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(" ", options0);
    }

    @Test(timeout = 4000)
    public void test005168() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test005169() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test005170() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test005171() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test005172() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test005173() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test005174() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test005175() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test005176() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005177() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005178() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005179() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005180() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005181() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005182() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test005183() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test005184() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.canExecute();
    }

    @Test(timeout = 4000)
    public void test005185() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.toString();
    }

    @Test(timeout = 4000)
    public void test005186() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.canWrite();
    }

    @Test(timeout = 4000)
    public void test005187() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.isFile();
    }

    @Test(timeout = 4000)
    public void test005188() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.canRead();
    }

    @Test(timeout = 4000)
    public void test005189() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test005190() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.getParent();
    }

    @Test(timeout = 4000)
    public void test005191() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test005192() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.isHidden();
    }

    @Test(timeout = 4000)
    public void test005193() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test005194() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.getName();
    }

    @Test(timeout = 4000)
    public void test005195() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.exists();
    }

    @Test(timeout = 4000)
    public void test005196() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test005197() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.lastModified();
    }

    @Test(timeout = 4000)
    public void test005198() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test005199() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        file0.length();
    }

    @Test(timeout = 4000)
    public void test005200() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
    }

    @Test(timeout = 4000)
    public void test005201() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
    }

    @Test(timeout = 4000)
    public void test005202() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test005203() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test005204() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test005205() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test005206() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test005207() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test005208() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test005209() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test005210() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.canExecute();
    }

    @Test(timeout = 4000)
    public void test005211() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.toString();
    }

    @Test(timeout = 4000)
    public void test005212() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.canWrite();
    }

    @Test(timeout = 4000)
    public void test005213() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.isFile();
    }

    @Test(timeout = 4000)
    public void test005214() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.canRead();
    }

    @Test(timeout = 4000)
    public void test005215() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test005216() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.getParent();
    }

    @Test(timeout = 4000)
    public void test005217() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test005218() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.isHidden();
    }

    @Test(timeout = 4000)
    public void test005219() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test005220() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.getName();
    }

    @Test(timeout = 4000)
    public void test005221() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.exists();
    }

    @Test(timeout = 4000)
    public void test005222() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test005223() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.lastModified();
    }

    @Test(timeout = 4000)
    public void test005224() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test005225() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
        file0.length();
    }

    @Test(timeout = 4000)
    public void test005226() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test005227() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test005228() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test005229() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test005230() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test005231() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        File file0 = MockFile.createTempFile("usage: ", "arg");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 201, "YZK9iN%.(JY)[Yf#ub>", "Fw=", options0, 201, 1974, "YG$21w3E=vb.O2@m0{K");
    }

    @Test(timeout = 4000)
    public void test006232() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test006233() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test006234() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test006235() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test006236() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test006237() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test006238() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test006239() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test006240() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006241() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006242() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006243() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006244() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006245() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006246() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test006247() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test006248() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test006249() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test006250() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test006251() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test006252() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test006253() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test006254() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test006255() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test006256() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test006257() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test006258() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test006259() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test006260() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test006261() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(12, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test007262() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test007263() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test007264() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test007265() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test007266() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test007267() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test007268() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test007269() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test007270() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007271() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007272() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007273() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007274() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007275() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007276() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test007277() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007278() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test007279() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test007280() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test007281() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test007282() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test007283() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test007284() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test007285() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test007286() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007287() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007288() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007289() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007290() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007291() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test007292() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test008293() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test008294() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test008295() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test008296() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test008297() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test008298() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test008299() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test008300() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test008301() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008302() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008303() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008304() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008305() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008306() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008307() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test008308() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test008309() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test008310() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
    }

    @Test(timeout = 4000)
    public void test008311() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test008312() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test008313() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test008314() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test008315() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test008316() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test008317() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test008318() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test008319() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test008320() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test008321() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        stringBuffer1.length();
    }

    @Test(timeout = 4000)
    public void test008322() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
        stringBuffer1.toString();
    }

    @Test(timeout = 4000)
    public void test008323() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008324() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008325() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008326() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008327() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008328() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008329() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008330() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test008331() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1, 1, "");
    }

    @Test(timeout = 4000)
    public void test009332() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test009333() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test009334() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test009335() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test009336() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test009337() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test009338() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test009339() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test009340() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009341() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009342() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009343() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009344() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009345() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009346() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test009347() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test009348() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test009349() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
    }

    @Test(timeout = 4000)
    public void test009350() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test009351() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test009352() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test009353() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test009354() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test009355() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test009356() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test009357() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test009358() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test009359() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test009360() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        stringBuffer1.length();
    }

    @Test(timeout = 4000)
    public void test009361() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
        stringBuffer1.toString();
    }

    @Test(timeout = 4000)
    public void test009362() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009363() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009364() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009365() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009366() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009367() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009368() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009369() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test009370() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "-");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 1324, 1324, "i*>9DTb%0");
    }

    @Test(timeout = 4000)
    public void test010371() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test010372() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test010373() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test010374() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test010375() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test010376() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test010377() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test010378() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test010379() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010380() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010381() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010382() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010383() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010384() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010385() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test010386() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test010387() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test010388() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test010389() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test010390() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test010391() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test010392() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test010393() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test010394() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test010395() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010396() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010397() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010398() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010399() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010400() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test010401() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = helpFormatter0.renderOptions((StringBuffer) null, 31, options0, 31, 31);
    }

    @Test(timeout = 4000)
    public void test011402() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test011403() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test011404() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test011405() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test011406() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test011407() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test011408() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test011409() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test011410() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011411() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011412() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011413() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011414() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011415() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011416() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test011417() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test011418() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test011419() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test011420() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
    }

    @Test(timeout = 4000)
    public void test011421() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test011422() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test011423() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test011424() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test011425() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test011426() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test011427() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test011428() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test011429() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test011430() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test011431() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        stringBuffer1.length();
    }

    @Test(timeout = 4000)
    public void test011432() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
        stringBuffer1.toString();
    }

    @Test(timeout = 4000)
    public void test011433() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011434() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011435() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011436() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011437() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011438() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011439() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011440() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test011441() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        StringBuffer stringBuffer0 = new StringBuffer();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 3070, options0, 684, 3);
    }

    @Test(timeout = 4000)
    public void test012442() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test012443() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test012444() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test012445() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test012446() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test012447() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test012448() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test012449() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test012450() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012451() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012452() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012453() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012454() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012455() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012456() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test012457() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test012458() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test012459() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
    }

    @Test(timeout = 4000)
    public void test012460() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test012461() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test012462() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test012463() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test012464() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test012465() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test012466() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test012467() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test012468() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test012469() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test012470() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test012471() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        stringBuffer1.length();
    }

    @Test(timeout = 4000)
    public void test012472() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
        stringBuffer1.toString();
    }

    @Test(timeout = 4000)
    public void test012473() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012474() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012475() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012476() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012477() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012478() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012479() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012480() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test012481() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "arg");
        Options options0 = new Options();
        StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, 1144, options0, 0, 8);
    }

    @Test(timeout = 4000)
    public void test013482() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013483() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test013484() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013485() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test013486() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test013487() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test013488() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test013489() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013490() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013491() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013492() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013493() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013494() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013495() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013496() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test013497() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013498() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test013499() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013500() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test013501() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test013502() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test013503() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013504() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test013505() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013506() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013507() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test013508() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test013509() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test013510() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test013511() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test013512() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013513() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test013514() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013515() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013516() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013517() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013518() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013519() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test013520() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultSyntaxPrefix = "";
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test014521() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test014522() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014523() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test014524() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test014525() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014526() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test014527() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014528() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test014529() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014530() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014531() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014532() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014533() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014534() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014535() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test014536() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test014537() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test014538() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test014539() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014540() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014541() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test014542() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014543() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test014544() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014545() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014546() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014547() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014548() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014549() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
    }

    @Test(timeout = 4000)
    public void test014550() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test014551() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test014552() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test014553() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014554() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014555() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test014556() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test014557() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test014558() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014559() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014560() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014561() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014562() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014563() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test014564() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine((String) null);
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015565() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test015566() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test015567() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015568() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test015569() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015570() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015571() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test015572() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test015573() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015574() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015575() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015576() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015577() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015578() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015579() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test015580() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test015581() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015582() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test015583() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015584() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test015585() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015586() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test015587() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test015588() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015589() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015590() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015591() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015592() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015593() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
    }

    @Test(timeout = 4000)
    public void test015594() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015595() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test015596() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015597() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test015598() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015599() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test015600() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test015601() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test015602() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test015603() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015604() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015605() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015606() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015607() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015608() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test015609() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("");
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test016610() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016611() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016612() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test016613() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test016614() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test016615() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test016616() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test016617() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test016618() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016619() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016620() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016621() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016622() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016623() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016624() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test016625() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016626() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test016627() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016628() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test016629() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test016630() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test016631() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test016632() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test016633() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016634() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016635() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016636() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016637() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016638() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
    }

    @Test(timeout = 4000)
    public void test016639() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016640() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016641() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test016642() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016643() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test016644() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test016645() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test016646() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test016647() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test016648() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016649() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016650() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016651() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016652() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016653() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test016654() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("");
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017655() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017656() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017657() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test017658() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017659() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test017660() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test017661() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test017662() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test017663() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017664() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017665() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017666() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017667() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017668() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017669() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test017670() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017671() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017672() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test017673() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017674() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test017675() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test017676() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test017677() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test017678() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017679() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017680() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017681() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test017682() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test017683() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test017684() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test017685() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test017686() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test017687() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017688() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017689() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017690() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017691() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test017692() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultLeftPad = (-1);
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test018693() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018694() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test018695() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test018696() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018697() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test018698() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test018699() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test018700() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018701() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018702() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018703() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018704() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018705() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018706() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018707() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test018708() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018709() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test018710() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test018711() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018712() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test018713() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test018714() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test018715() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018716() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018717() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018718() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018719() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018720() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018721() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
    }

    @Test(timeout = 4000)
    public void test018722() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018723() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018724() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test018725() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test018726() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test018727() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test018728() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test018729() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test018730() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018731() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018732() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018733() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018734() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018735() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test018736() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(0);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019737() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test019738() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test019739() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test019740() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019741() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test019742() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019743() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019744() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test019745() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019746() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019747() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019748() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019749() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019750() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019751() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test019752() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test019753() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test019754() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test019755() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test019756() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019757() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019758() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019759() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test019760() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019761() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test019762() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test019763() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test019764() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test019765() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019766() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019767() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test019768() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test019769() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019770() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019771() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019772() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019773() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test019774() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultDescPad = (-887);
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test020775() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test020776() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test020777() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020778() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020779() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020780() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test020781() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test020782() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test020783() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020784() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020785() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020786() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020787() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020788() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020789() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test020790() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test020791() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020792() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test020793() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020794() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020795() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test020796() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test020797() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test020798() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020799() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020800() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020801() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020802() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020803() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test020804() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test020805() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020806() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test020807() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020808() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test020809() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test020810() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test020811() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test020812() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020813() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020814() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020815() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020816() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020817() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test020818() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName((String) null);
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021819() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test021820() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test021821() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021822() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021823() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test021824() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test021825() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021826() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test021827() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021828() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021829() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021830() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021831() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021832() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021833() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test021834() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test021835() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test021836() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021837() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test021838() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test021839() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021840() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021841() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test021842() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021843() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test021844() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test021845() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021846() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test021847() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test021848() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test021849() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021850() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test021851() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021852() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021853() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021854() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021855() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021856() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test021857() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.defaultArgName = "";
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test022858() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test022859() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test022860() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test022861() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test022862() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test022863() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test022864() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test022865() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test022866() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022867() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022868() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022869() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022870() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022871() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022872() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test022873() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022874() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test022875() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test022876() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test022877() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test022878() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test022879() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test022880() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test022881() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test022882() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022883() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022884() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022885() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022886() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test022887() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("usage: ", 2, 2);
    }

    @Test(timeout = 4000)
    public void test023888() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test023889() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test023890() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test023891() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test023892() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test023893() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test023894() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test023895() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test023896() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023897() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023898() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023899() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023900() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023901() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023902() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test023903() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023904() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test023905() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test023906() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test023907() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test023908() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test023909() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test023910() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test023911() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test023912() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023913() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023914() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023915() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023916() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test023917() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("O'3:/*2", 1046, 74);
    }

    @Test(timeout = 4000)
    public void test024918() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test024919() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test024920() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test024921() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test024922() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test024923() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test024924() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test024925() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test024926() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024927() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024928() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024929() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024930() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024931() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024932() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test024933() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test024934() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test024935() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test024936() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test024937() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test024938() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test024939() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test024940() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test024941() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024942() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024943() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024944() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024945() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024946() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test024947() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(1326);
    }

    @Test(timeout = 4000)
    public void test025948() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test025949() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test025950() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test025951() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test025952() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test025953() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test025954() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test025955() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test025956() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025957() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025958() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025959() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025960() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025961() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025962() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test025963() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025964() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test025965() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test025966() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test025967() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test025968() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test025969() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test025970() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test025971() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test025972() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025973() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025974() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025975() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025976() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025977() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test025978() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.createPadding(0);
    }

    @Test(timeout = 4000)
    public void test026979() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test026980() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test026981() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test026982() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test026983() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test026984() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test026985() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test026986() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test026987() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026988() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026989() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026990() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026991() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026992() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026993() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test026994() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test026995() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test026996() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test026997() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test026998() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test026999() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    }

    @Test(timeout = 4000)
    public void test0261000() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "\"{kU1G");
    }

    @Test(timeout = 4000)
    public void test0271001() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0271002() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0271003() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0271004() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0271005() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0271006() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0271007() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0271008() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0271009() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271010() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271011() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271012() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271013() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271014() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271015() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0271016() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.renderWrappedText((StringBuffer) null, 3624, (-472), "[");
    }

    @Test(timeout = 4000)
    public void test0281017() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0281018() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0281019() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0281020() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0281021() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0281022() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0281023() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0281024() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0281025() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281026() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281027() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281028() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281029() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281030() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281031() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0281032() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0281033() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test0281034() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0281035() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test0281036() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0281037() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
    }

    @Test(timeout = 4000)
    public void test0281038() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        StringBuffer stringBuffer0 = stringWriter0.getBuffer();
        helpFormatter0.renderWrappedText(stringBuffer0, 0, (-1667), "usage: ");
    }

    @Test(timeout = 4000)
    public void test0291039() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0291040() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0291041() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0291042() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0291043() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0291044() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0291045() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0291046() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0291047() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291048() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291049() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291050() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291051() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291052() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291053() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0291054() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0291055() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
    }

    @Test(timeout = 4000)
    public void test0291056() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
    }

    @Test(timeout = 4000)
    public void test0291057() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
    }

    @Test(timeout = 4000)
    public void test0291058() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
        StringBuffer stringBuffer0 = new StringBuffer(3372);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0291059() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
        StringBuffer stringBuffer0 = new StringBuffer(3372);
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test0291060() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("arg", "org.apache.commons.cli.Options", false, "--");
        StringBuffer stringBuffer0 = new StringBuffer(3372);
    }

    @Test(timeout = 4000)
    public void test0301061() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0301062() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0301063() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0301064() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0301065() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0301066() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0301067() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0301068() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0301069() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301070() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301071() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301072() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301073() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301074() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301075() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0301076() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0301077() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0301078() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0301079() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0301080() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0301081() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0301082() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0301083() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0301084() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0301085() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0301086() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0301087() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0301088() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0301089() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0301090() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0301091() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0301092() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
    }

    @Test(timeout = 4000)
    public void test0301093() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
    }

    @Test(timeout = 4000)
    public void test0301094() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
    }

    @Test(timeout = 4000)
    public void test0301095() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0301096() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0301097() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0301098() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0301099() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0301100() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0301101() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0301102() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0301103() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0301104() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0301105() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0301106() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0301107() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0301108() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0301109() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0301110() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0301111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0301112() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0301113() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0301114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0301115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", true, "L8%8{?g9M^YL(<v)DxU");
        Options options1 = options0.addOption(option0);
        helpFormatter0.renderOptions((StringBuffer) null, (-2803), options1, 490, 655);
    }

    @Test(timeout = 4000)
    public void test0311116() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0311117() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0311118() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0311119() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0311120() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0311121() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0311122() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0311123() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0311124() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311125() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311126() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311127() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311128() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311129() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0311131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test0311132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0311133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
    }

    @Test(timeout = 4000)
    public void test0311134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        helpFormatter0.renderOptions(stringBuffer0, 300, (Options) null, 300, 300);
    }

    @Test(timeout = 4000)
    public void test0321135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0321136() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0321137() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0321138() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0321139() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0321140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0321141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0321142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0321143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321144() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321146() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321147() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321148() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321149() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0321150() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer("-");
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0321151() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer("-");
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test0321152() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer("-");
    }

    @Test(timeout = 4000)
    public void test0321153() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer("-");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0321154() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer("-");
        Options options0 = new Options();
        helpFormatter0.renderOptions(stringBuffer0, 0, options0, (-1), 0);
    }

    @Test(timeout = 4000)
    public void test0331155() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0331156() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0331157() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0331158() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0331159() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0331160() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0331161() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0331162() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0331163() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331164() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331165() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331166() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331167() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331168() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331169() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0331170() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0331171() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test0331172() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
    }

    @Test(timeout = 4000)
    public void test0331173() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "JP{");
    }

    @Test(timeout = 4000)
    public void test0341174() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0341175() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0341176() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0341177() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0341178() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0341179() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0341180() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0341181() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0341182() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341183() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341184() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341185() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341186() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341187() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341188() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0341189() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    }

    @Test(timeout = 4000)
    public void test0341190() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
    }

    @Test(timeout = 4000)
    public void test0341191() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, (String) null);
    }

    @Test(timeout = 4000)
    public void test0351192() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0351193() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0351194() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0351195() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0351196() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0351197() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0351198() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0351199() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0351200() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351201() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351202() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351203() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351204() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351205() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351206() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0351207() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printWrapped((PrintWriter) null, (-1), (-1), "");
    }

    @Test(timeout = 4000)
    public void test0361208() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0361209() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0361210() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0361211() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0361212() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0361213() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0361214() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0361215() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0361216() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361217() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361218() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361219() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361220() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361221() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361222() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0361223() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0361224() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0361225() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0361226() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0361227() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, (String) null);
    }

    @Test(timeout = 4000)
    public void test0371228() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0371229() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0371230() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0371231() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0371232() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0371233() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0371234() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0371235() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0371236() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371237() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371238() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371239() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371240() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371241() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371242() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0371243() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0371244() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printUsage((PrintWriter) null, 818, "!1m`", options0);
    }

    @Test(timeout = 4000)
    public void test0381245() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0381246() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0381247() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0381248() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0381249() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0381250() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0381251() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0381252() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0381253() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381254() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381255() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381256() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381257() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381258() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381259() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0381260() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintStream mockPrintStream0 = new MockPrintStream("T]~]LIvezO*");
    }

    @Test(timeout = 4000)
    public void test0381261() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintStream mockPrintStream0 = new MockPrintStream("T]~]LIvezO*");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
    }

    @Test(timeout = 4000)
    public void test0381262() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintStream mockPrintStream0 = new MockPrintStream("T]~]LIvezO*");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2090), "");
    }

    @Test(timeout = 4000)
    public void test0391263() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0391264() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0391265() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0391266() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0391267() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0391268() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0391269() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0391270() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0391271() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391272() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391273() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391274() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391275() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391276() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391277() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0391278() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    }

    @Test(timeout = 4000)
    public void test0391279() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0391280() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test0391281() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1276), (String) null);
    }

    @Test(timeout = 4000)
    public void test0401282() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0401283() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0401284() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0401285() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0401286() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0401287() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0401288() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0401289() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0401290() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401291() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401292() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401293() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401294() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401295() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401296() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0401297() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
    }

    @Test(timeout = 4000)
    public void test0401298() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0401299() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, (-956), options0, 0, (-2));
    }

    @Test(timeout = 4000)
    public void test0411300() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0411301() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0411302() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0411303() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0411304() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0411305() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0411306() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0411307() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0411308() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411309() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411310() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411311() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411312() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411313() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411314() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0411315() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0411316() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0411317() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0411318() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0411319() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0411320() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0411321() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0411322() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0411323() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411324() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411325() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411326() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411327() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411328() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
    }

    @Test(timeout = 4000)
    public void test0411329() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth((-1));
        helpFormatter0.printHelp("^bIz%Fe;b}T37J", (Options) null, false);
    }

    @Test(timeout = 4000)
    public void test0421330() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0421331() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0421332() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0421333() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0421334() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0421335() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0421336() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0421337() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0421338() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421339() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421340() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421341() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421342() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421343() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421344() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0421345() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printHelp("d||M },BT6w<Mx!", (Options) null, false);
    }

    @Test(timeout = 4000)
    public void test0431346() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0431347() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0431348() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0431349() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0431350() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0431351() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0431352() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0431353() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0431354() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431355() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431356() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431357() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431358() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431359() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431360() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0431361() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0431362() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0431363() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0431364() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0431365() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0431366() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0431367() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0431368() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0431369() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0431370() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.printHelp("   ", options0, true);
    }

    @Test(timeout = 4000)
    public void test0441371() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0441372() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0441373() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0441374() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0441375() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0441376() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0441377() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0441378() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0441379() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441380() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441381() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441382() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441383() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441384() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441385() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0441386() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0441387() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0441388() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0441389() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0441390() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0441391() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0441392() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0441393() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0441394() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441395() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441396() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441397() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441398() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441399() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
    }

    @Test(timeout = 4000)
    public void test0441400() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0441401() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding((-646));
        Options options0 = new Options();
        helpFormatter0.printHelp("Su", options0);
    }

    @Test(timeout = 4000)
    public void test0451402() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0451403() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0451404() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0451405() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0451406() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0451407() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0451408() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0451409() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0451410() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451411() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451412() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451413() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451414() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451415() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451416() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0451417() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0451418() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("", options0);
    }

    @Test(timeout = 4000)
    public void test0461419() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0461420() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0461421() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0461422() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0461423() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0461424() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0461425() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0461426() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0461427() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461428() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461429() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461430() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461431() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461432() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461433() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0461434() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0461435() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0461436() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0461437() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0461438() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0461439() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0461440() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0461441() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0461442() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0461443() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0461444() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0461445() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0461446() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0461447() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0461448() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0461449() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0461450() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0461451() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0461452() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0461453() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0461454() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0461455() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0461456() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0471457() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0471458() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0471459() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0471460() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0471461() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0471462() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0471463() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0471464() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0471465() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471466() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471467() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471468() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471469() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471470() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471471() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0471472() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printHelp("RsQ-!F>1", "'", (Options) null, ">", false);
    }

    @Test(timeout = 4000)
    public void test0481473() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0481474() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0481475() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0481476() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0481477() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0481478() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0481479() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0481480() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0481481() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481482() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481483() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481484() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481485() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481486() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481487() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0481488() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0481489() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0481490() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0481491() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0481492() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0481493() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0481494() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0481495() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0481496() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0481497() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultDescPad = (-1);
        helpFormatter0.printHelp("%&si'UC", "Q[#,&trk7", options0, "PPe6D", true);
    }

    @Test(timeout = 4000)
    public void test0491498() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0491499() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0491500() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0491501() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0491502() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0491503() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0491504() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0491505() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0491506() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491507() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491508() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491509() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491510() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491511() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491512() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0491513() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0491514() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("", "", options0, "AY`,8", false);
    }

    @Test(timeout = 4000)
    public void test0501515() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0501516() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0501517() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0501518() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0501519() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0501520() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0501521() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0501522() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0501523() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501524() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501525() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501526() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501527() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501528() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501529() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0501530() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0501531() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0501532() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0501533() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0501534() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0501535() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0501536() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0501537() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0501538() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0501539() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501540() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501541() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501542() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501543() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501544() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
    }

    @Test(timeout = 4000)
    public void test0501545() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setWidth((-3434));
        helpFormatter0.printHelp("73`;[0HHTlcEGzx5Yh", "s4`R\"=.oju3g&J;qg", options0, "s4`R\"=.oju3g&J;qg");
    }

    @Test(timeout = 4000)
    public void test0511546() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0511547() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0511548() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0511549() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0511550() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0511551() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0511552() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0511553() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0511554() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511555() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511556() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511557() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511558() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511559() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511560() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0511561() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0511562() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
    }

    @Test(timeout = 4000)
    public void test0511563() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
    }

    @Test(timeout = 4000)
    public void test0511564() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
    }

    @Test(timeout = 4000)
    public void test0511565() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
    }

    @Test(timeout = 4000)
    public void test0511566() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
    }

    @Test(timeout = 4000)
    public void test0511567() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
    }

    @Test(timeout = 4000)
    public void test0511568() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
    }

    @Test(timeout = 4000)
    public void test0511569() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
    }

    @Test(timeout = 4000)
    public void test0511570() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, false, "bleD'*bNhe8Fl");
        Options options2 = options0.addOption("arg", "", true, "3");
        helpFormatter0.printHelp("[", "org.apache.commons.cli.HelpFormatter", options2, "3");
    }

    @Test(timeout = 4000)
    public void test0521571() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0521572() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0521573() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0521574() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0521575() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0521576() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0521577() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0521578() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0521579() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521580() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521581() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521582() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521583() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521584() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521585() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0521586() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0521587() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("", "", options0, "JK?@");
    }

    @Test(timeout = 4000)
    public void test0531588() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0531589() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0531590() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0531591() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0531592() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0531593() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0531594() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0531595() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0531596() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531597() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531598() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531599() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531600() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531601() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531602() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0531603() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0531604() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test0531605() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
    }

    @Test(timeout = 4000)
    public void test0531606() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0541607() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0541608() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0541609() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0541610() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0541611() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0541612() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0541613() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0541614() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0541615() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541616() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541617() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541618() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541619() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541620() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541621() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0541622() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0541623() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) null, 9, "Cm\"x9&WrrTBICm`", "arg", options0, 9, 110, "Cm\"x9&WrrTBICm`", true);
    }

    @Test(timeout = 4000)
    public void test0551624() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0551625() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0551626() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0551627() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0551628() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0551629() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0551630() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0551631() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0551632() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551633() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551634() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551635() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551636() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551637() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551638() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0551639() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Z");
    }

    @Test(timeout = 4000)
    public void test0551640() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Z");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0551641() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Z");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-3491), "W_$&K:", "", options0, (-3491), (-3491), "W_$&K:");
    }

    @Test(timeout = 4000)
    public void test0561642() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0561643() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0561644() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0561645() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0561646() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0561647() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0561648() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0561649() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0561650() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561651() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561652() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561653() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561654() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561655() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561656() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0561657() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6:-i#>G'", true);
    }

    @Test(timeout = 4000)
    public void test0561658() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6:-i#>G'", true);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0561659() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6:-i#>G'", true);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0561660() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6:-i#>G'", true);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 0, "\"ZoU8K$<<9 ", "6:-i#>G'", options0, 0, (-1397), "");
    }

    @Test(timeout = 4000)
    public void test0571661() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0571662() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0571663() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0571664() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0571665() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0571666() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0571667() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0571668() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0571669() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571670() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571671() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571672() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571673() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571674() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571675() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0571676() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0571677() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0571678() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0571679() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0571680() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0571681() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-342), "", "", options0, 1577, (-1), "");
    }

    @Test(timeout = 4000)
    public void test0581682() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0581683() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0581684() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0581685() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0581686() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0581687() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0581688() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0581689() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0581690() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581691() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581692() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581693() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581694() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581695() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581696() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0581697() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printHelp(2335, "usage: ", "usage: ", (Options) null, "O'3:/*2", true);
    }

    @Test(timeout = 4000)
    public void test0591698() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0591699() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0591700() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0591701() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0591702() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0591703() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0591704() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0591705() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0591706() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591707() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591708() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591709() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591710() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591711() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591712() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0591713() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0591714() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(0, "&}\"P", "QC|", options0, "&}\"P", true);
    }

    @Test(timeout = 4000)
    public void test0601715() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0601716() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0601717() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0601718() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0601719() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0601720() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0601721() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0601722() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0601723() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601724() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601725() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601726() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601727() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601728() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601729() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0601730() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0601731() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(0, "", "", options0, "", false);
    }

    @Test(timeout = 4000)
    public void test0611732() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0611733() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0611734() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0611735() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0611736() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0611737() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0611738() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0611739() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0611740() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611741() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611742() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611743() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611744() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611745() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611746() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0611747() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printHelp(1252, "-", "i*>9DTb%0", (Options) null, "noNgKKx|zG\fa@$B");
    }

    @Test(timeout = 4000)
    public void test0621748() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0621749() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0621750() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0621751() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0621752() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0621753() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0621754() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0621755() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0621756() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621757() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621758() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621759() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621760() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621761() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621762() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0621763() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0621764() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1931, "", "", options0, "");
    }

    @Test(timeout = 4000)
    public void test0631765() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0631766() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0631767() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0631768() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0631769() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0631770() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0631771() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0631772() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0631773() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631774() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631775() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631776() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631777() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631778() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631779() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0631780() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.findWrapPos(":E2_FsGE+b^", (-1669), (-1669));
    }

    @Test(timeout = 4000)
    public void test0641781() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0641782() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0641783() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0641784() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0641785() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0641786() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0641787() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0641788() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0641789() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641790() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641791() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641792() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641793() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641794() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641795() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0641796() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.findWrapPos((String) null, (-73), 0);
    }

    @Test(timeout = 4000)
    public void test0651797() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0651798() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0651799() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0651800() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0651801() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0651802() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0651803() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0651804() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0651805() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651806() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651807() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651808() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651809() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651810() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651811() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0651812() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.createPadding((-2445));
    }

    @Test(timeout = 4000)
    public void test0661813() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0661814() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0661815() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0661816() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0661817() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0661818() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0661819() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0661820() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0661821() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661822() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661823() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661824() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661825() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661826() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661827() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0661828() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0661829() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0661830() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0661831() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0661832() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0661833() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661834() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0661835() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661836() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0661837() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0661838() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0661839() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661840() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0661841() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0661842() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0661843() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661844() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661845() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661846() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661847() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0661848() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0661849() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0661850() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0661851() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661852() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0661853() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661854() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0661855() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0661856() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0661857() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661858() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0661859() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0661860() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0661861() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661862() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0661863() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0661864() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0661865() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0661866() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0661867() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0661868() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0661869() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0661870() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0661871() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661872() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0661873() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661874() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0661875() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0661876() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0661877() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0661878() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0661879() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0661880() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0661881() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0661882() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661883() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661884() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661885() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661886() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661887() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661888() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661889() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661890() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
    }

    @Test(timeout = 4000)
    public void test0661891() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0661892() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0661893() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0661894() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
    }

    @Test(timeout = 4000)
    public void test0661895() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test0661896() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "\n", false, "");
        Options options1 = options0.addOption(option0);
        Options options2 = options1.addOption((String) null, "\n", false, "");
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-1), "", options2);
    }

    @Test(timeout = 4000)
    public void test0671897() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0671898() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0671899() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0671900() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0671901() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0671902() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0671903() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0671904() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0671905() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671906() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671907() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671908() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671909() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671910() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671911() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0671912() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0671913() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test0671914() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
    }

    @Test(timeout = 4000)
    public void test0671915() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0671916() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0671917() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671918() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
    }

    @Test(timeout = 4000)
    public void test0671919() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0671920() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0671921() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0671922() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671923() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671924() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671925() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0671926() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671927() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0671928() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671929() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0671930() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0671931() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0671932() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0671933() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
    }

    @Test(timeout = 4000)
    public void test0671934() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
    }

    @Test(timeout = 4000)
    public void test0671935() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
    }

    @Test(timeout = 4000)
    public void test0671936() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0671937() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671938() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0671939() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0671940() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0671941() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671942() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671943() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671944() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0671945() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671946() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0671947() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671948() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0671949() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0671950() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0671951() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0671952() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0671953() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671954() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0671955() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0671956() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0671957() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0671958() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0671959() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0671960() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671961() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0671962() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0671963() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0671964() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671965() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0671966() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671967() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0671968() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671969() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0671970() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0671971() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0671972() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0671973() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0671974() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0671975() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0671976() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0671977() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671978() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671979() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671980() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671981() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671982() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671983() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0671984() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringWriter stringWriter0 = new StringWriter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "}!@-yauo12<u", false, "-");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-134), "xsw<3@|TaY{", options0);
    }

    @Test(timeout = 4000)
    public void test0681985() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0681986() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0681987() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0681988() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0681989() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0681990() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0681991() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0681992() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0681993() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681994() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681995() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681996() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681997() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681998() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0681999() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0682000() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
    }

    @Test(timeout = 4000)
    public void test0682001() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0682002() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0682003() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0682004() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0682005() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0682006() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0682007() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0682008() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0682009() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0682010() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0682011() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0682012() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0682013() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0682014() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0682015() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ] [ long ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, " ] [ long ", false);
    }

    @Test(timeout = 4000)
    public void test0692016() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0692017() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0692018() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0692019() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0692020() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0692021() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0692022() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0692023() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0692024() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692025() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692026() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692027() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692028() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692029() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692030() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0692031() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
    }

    @Test(timeout = 4000)
    public void test0692032() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0692033() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0692034() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0692035() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0692036() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0692037() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0692038() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0692039() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0692040() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0692041() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0692042() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0692043() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0692044() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0692045() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0692046() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 194, ",Km}F{qw=jI#5'G", ",Km}F{qw=jI#5'G", options0, 681, 36, "\n", false);
    }

    @Test(timeout = 4000)
    public void test0702047() throws Throwable {
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0702048() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0702049() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0702050() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0702051() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0702052() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0702053() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0702054() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0702055() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0702056() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702057() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702058() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702059() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702060() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702061() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702062() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0702063() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
    }

    @Test(timeout = 4000)
    public void test0702064() throws Throwable {
        Options options0 = new Options();
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 27, "b[Qh-<N1SrT1", "", options0, 27, (-2457), "b[Qh-<N1SrT1", false);
    }

    @Test(timeout = 4000)
    public void test0712065() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0712066() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0712067() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0712068() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0712069() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0712070() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0712071() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0712072() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0712073() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712074() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712075() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712076() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712077() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712078() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712079() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0712080() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
    }

    @Test(timeout = 4000)
    public void test0712081() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0712082() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-51), "0Z]tc7g3[", "0Z]tc7g3[", options0, (-51), 3, "", true);
    }

    @Test(timeout = 4000)
    public void test0722083() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0722084() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0722085() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0722086() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0722087() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0722088() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0722089() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0722090() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0722091() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722092() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722093() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722094() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722095() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722096() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722097() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0722098() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
    }

    @Test(timeout = 4000)
    public void test0722099() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0722100() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2, "", "]", options0, 2, 13, (String) null, true);
    }

    @Test(timeout = 4000)
    public void test0732101() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0732102() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0732103() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0732104() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0732105() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0732106() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0732107() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0732108() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0732109() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732110() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732112() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732113() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0732116() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0732117() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0732118() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0732119() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0732120() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0732121() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0732122() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0732123() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0732124() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732125() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732126() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732127() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732128() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732129() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0732130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator comparator0 = helpFormatter0.getOptionComparator();
    }

    @Test(timeout = 4000)
    public void test0742131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0742132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0742133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0742134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0742135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0742136() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0742137() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0742138() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0742139() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742144() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0742146() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0742147() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0742148() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0742149() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0742150() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0742151() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0742152() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0742153() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0742154() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0742155() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0742156() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0742157() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0742158() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0742159() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0742160() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0742161() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0742162() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0742163() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0742164() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0742165() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 764, "");
    }

    @Test(timeout = 4000)
    public void test0752166() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0752167() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0752168() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0752169() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0752170() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0752171() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0752172() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0752173() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0752174() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752175() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752176() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752177() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752178() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752179() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752180() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0752181() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
    }

    @Test(timeout = 4000)
    public void test0752182() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
    }

    @Test(timeout = 4000)
    public void test0752183() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0752184() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0752185() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0752186() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0752187() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0752188() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0752189() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0752190() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0752191() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0752192() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0752193() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0752194() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0752195() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0752196() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0752197() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0752198() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0752199() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0752200() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0752201() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0752202() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0752203() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0752204() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0752205() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0752206() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0752207() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0752208() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0752209() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0752210() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0752211() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0752212() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0752213() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockFile mockFile0 = new MockFile("J8>Eh`Cj7Y:;7xZ48");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
        Options options0 = new Options();
        helpFormatter0.printOptions(mockPrintWriter0, 9, options0, 9, 9);
    }

    @Test(timeout = 4000)
    public void test0762214() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0762215() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0762216() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0762217() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0762218() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0762219() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0762220() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0762221() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0762222() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762223() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762224() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762225() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762226() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762227() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762228() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0762229() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
    }

    @Test(timeout = 4000)
    public void test0762230() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "' was specified but an option from this group ");
    }

    @Test(timeout = 4000)
    public void test0772231() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0772232() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0772233() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0772234() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0772235() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0772236() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0772237() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0772238() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0772239() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772240() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772241() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772242() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772243() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772244() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772245() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0772246() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
    }

    @Test(timeout = 4000)
    public void test0772247() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, " ] [ long ");
    }

    @Test(timeout = 4000)
    public void test0782248() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0782249() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0782250() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0782251() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0782252() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0782253() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0782254() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0782255() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0782256() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782257() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782258() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782259() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782260() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782261() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782262() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0782263() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0782264() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0782265() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0782266() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0782267() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0782268() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0782269() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0782270() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0782271() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0782272() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.defaultSyntaxPrefix = "";
        helpFormatter0.printHelp((PrintWriter) null, 1216, "   ", "~m ^0fT7k<!x@7%", options0, (-2), 2388, "~m ^0fT7k<!x@7%");
    }

    @Test(timeout = 4000)
    public void test0792273() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0792274() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0792275() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0792276() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0792277() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0792278() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0792279() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0792280() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0792281() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792282() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792283() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792284() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792285() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792286() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792287() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0792288() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792289() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0792290() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0792291() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0792292() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0792293() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0792294() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0792295() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0792296() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0792297() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792298() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792299() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792300() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792301() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792302() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0792303() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("");
    }

    @Test(timeout = 4000)
    public void test0802304() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0802305() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0802306() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0802307() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0802308() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0802309() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0802310() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0802311() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0802312() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802313() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802314() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802315() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802316() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802317() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802318() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0802319() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0802320() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0802321() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0802322() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0802323() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0802324() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0802325() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0802326() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0802327() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802328() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802329() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802330() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802331() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802332() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0802333() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test0812334() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0812335() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0812336() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0812337() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0812338() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0812339() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0812340() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0812341() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0812342() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812343() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812344() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812345() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812346() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812347() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812348() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0812349() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0812350() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0812351() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812352() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0812353() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0812354() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0812355() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0812356() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0812357() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0812358() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812359() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812360() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0812361() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812362() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0812363() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0812364() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test0812365() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test0812366() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test0812367() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0812368() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812369() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0812370() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0812371() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0812372() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0812373() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0812374() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0812375() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812376() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812377() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0812378() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812379() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0812380() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0812381() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0812382() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0812383() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0812384() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0812385() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0812386() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0812387() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0812388() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0812389() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0812390() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0812391() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0812392() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0812393() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0812394() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0812395() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812396() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0812397() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0812398() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0812399() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0812400() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0812401() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0812402() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812403() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0812404() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0812405() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0812406() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0812407() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0812408() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812409() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812410() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812411() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812412() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812413() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812414() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812415() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812416() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0812417() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("   ", options1, true);
    }

    @Test(timeout = 4000)
    public void test0822418() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0822419() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822420() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0822421() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822422() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0822423() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0822424() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0822425() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0822426() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822427() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822428() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822429() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822430() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822431() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822432() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0822433() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0822434() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0822435() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0822436() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
    }

    @Test(timeout = 4000)
    public void test0822437() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0822438() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822439() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0822440() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822441() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0822442() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0822443() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0822444() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0822445() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822446() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822447() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822448() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822449() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822450() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
    }

    @Test(timeout = 4000)
    public void test0822451() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0822452() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822453() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0822454() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0822455() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0822456() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0822457() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0822458() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0822459() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822460() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822461() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822462() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822463() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822464() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822465() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0822466() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "");
        helpFormatter0.setLeftPadding(3948);
        helpFormatter0.printHelp("usage: ", "usage: ", options1, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832467() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0832468() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0832469() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0832470() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0832471() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0832472() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0832473() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0832474() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0832475() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832476() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832477() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832478() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832479() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832480() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832481() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0832482() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0832483() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
    }

    @Test(timeout = 4000)
    public void test0832484() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
    }

    @Test(timeout = 4000)
    public void test0832485() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
    }

    @Test(timeout = 4000)
    public void test0832486() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0832487() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0832488() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0832489() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0832490() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
    }

    @Test(timeout = 4000)
    public void test0832491() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0832492() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0832493() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0832494() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0832495() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0832496() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0832497() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0832498() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0832499() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832500() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832501() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832502() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832503() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832504() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832505() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0832506() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "=JzkXr");
        Options options2 = options0.addOption("arg", true, " 9#,onjMI3y");
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842507() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0842508() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842509() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0842510() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0842511() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0842512() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0842513() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0842514() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0842515() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842516() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842517() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842518() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842519() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842520() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842521() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0842522() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0842523() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842524() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0842525() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
    }

    @Test(timeout = 4000)
    public void test0842526() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0842527() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0842528() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0842529() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0842530() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0842531() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842532() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0842533() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842534() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0842535() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842536() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0842537() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842538() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842539() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842540() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
    }

    @Test(timeout = 4000)
    public void test0842541() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
    }

    @Test(timeout = 4000)
    public void test0842542() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
    }

    @Test(timeout = 4000)
    public void test0842543() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0842544() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0842545() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0842546() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0842547() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842548() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0842549() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842550() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0842551() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0842552() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842553() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0842554() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842555() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842556() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842557() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test0842558() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
    }

    @Test(timeout = 4000)
    public void test0842559() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842560() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0842561() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0842562() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0842563() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0842564() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0842565() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842566() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0842567() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842568() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0842569() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0842570() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842571() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0842572() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842573() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842574() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842575() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842576() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0842577() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0842578() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0842579() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0842580() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0842581() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0842582() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842583() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0842584() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0842585() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0842586() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0842587() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0842588() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842589() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0842590() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842591() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0842592() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0842593() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842594() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0842595() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0842596() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842597() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0842598() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0842599() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0842600() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842601() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842602() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842603() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842604() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842605() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842606() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0842607() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0842608() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0842609() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0842610() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0842611() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0842612() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0842613() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0842614() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0842615() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842616() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842617() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842618() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842619() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842620() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0842621() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option((String) null, "", true, "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");
        option0.setArgName((String) null);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("usage: ", "usage: ", options0, "k*%o", true);
    }

    @Test(timeout = 4000)
    public void test0852622() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0852623() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test0852624() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0852625() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0852626() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0852627() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0852628() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0852629() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0852630() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852631() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852632() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852633() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852634() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852635() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852636() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test0852637() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
    }

    @Test(timeout = 4000)
    public void test0852638() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852639() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0852640() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
    }

    @Test(timeout = 4000)
    public void test0852641() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852642() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0852643() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0852644() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0852645() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852646() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0852647() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0852648() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0852649() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852650() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852651() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852652() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0852653() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0852654() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0852655() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
    }

    @Test(timeout = 4000)
    public void test0852656() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
    }

    @Test(timeout = 4000)
    public void test0852657() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
    }

    @Test(timeout = 4000)
    public void test0852658() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852659() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0852660() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852661() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0852662() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0852663() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0852664() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852665() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0852666() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0852667() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0852668() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852669() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852670() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852671() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0852672() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0852673() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0852674() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0852675() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852676() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0852677() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0852678() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0852679() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0852680() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test0852681() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852682() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup0.getSelected();
    }

    @Test(timeout = 4000)
    public void test0852683() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852684() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValue();
    }

    @Test(timeout = 4000)
    public void test0852685() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0852686() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgs();
    }

    @Test(timeout = 4000)
    public void test0852687() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852688() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0852689() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0852690() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test0852691() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852692() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0852693() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0852694() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test0852695() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0852696() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0852697() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.getSelected();
    }

    @Test(timeout = 4000)
    public void test0852698() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.isRequired();
    }

    @Test(timeout = 4000)
    public void test0852699() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852700() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852701() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852702() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852703() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852704() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852705() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
    }

    @Test(timeout = 4000)
    public void test0852706() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "--");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp(2, "a.FQ^4E!.f8", "", options1, "org.apache.commons.cli.Util", true);
    }

    @Test(timeout = 4000)
    public void test0862707() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "Q[#,&trk7", true, "org.apache.commons.cli.HelpFormatter$1");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        optionGroup1.setRequired(true);
        helpFormatter0.printHelp("%&si'UC", "Q[#,&trk7", options0, "PPe6D", true);
    }

    @Test(timeout = 4000)
    public void test0872708() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(")3RFdRndIQUT");
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 10, "NO_ARGS_ALLOWED", "has already been selected: '", options0, 0, 0, (String) null, false);
    }

    @Test(timeout = 4000)
    public void test0882709() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("73`;[0HHTlcEGzx5Yh", "", options0, "");
    }

    @Test(timeout = 4000)
    public void test0892710() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        MockPrintStream mockPrintStream0 = new MockPrintStream("\n");
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3735, (String) null, "K}%uE!Lb0+`:BU.", options0, 3735, 1, "--", false);
    }

    @Test(timeout = 4000)
    public void test0902711() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
    }

    @Test(timeout = 4000)
    public void test0902712() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0902713() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0902714() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0902715() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
    }

    @Test(timeout = 4000)
    public void test0902716() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0902717() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
    }

    @Test(timeout = 4000)
    public void test0912718() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0912719() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
    }

    @Test(timeout = 4000)
    public void test0912720() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
    }

    @Test(timeout = 4000)
    public void test0912721() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
    }

    @Test(timeout = 4000)
    public void test0912722() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0912723() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0912724() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0922725() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0922726() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0922727() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0922728() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0922729() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0922730() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0922731() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0932732() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0932733() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0932734() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0932735() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0932736() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0932737() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0932738() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0942739() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0942740() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0942741() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0942742() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0942743() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0942744() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0942745() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0952746() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("", options0, false);
    }

    @Test(timeout = 4000)
    public void test0962747() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0962748() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0962749() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0962750() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0962751() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0962752() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0962753() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0962754() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0972755() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp((PrintWriter) null, 10, "\n", "org.apache.commons.cli.HelpFormatter$1", options0, (-1472), 10, "p[fBG]");
    }

    @Test(timeout = 4000)
    public void test0982756() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0982757() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0982758() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0982759() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0982760() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0982761() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0982762() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0992763() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0992764() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0992765() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0992766() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0992767() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0992768() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test0992769() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test1002770() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
    }

    @Test(timeout = 4000)
    public void test1002771() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
    }

    @Test(timeout = 4000)
    public void test1002772() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1002773() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1002774() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1002775() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
    }

    @Test(timeout = 4000)
    public void test1002776() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1012777() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.printHelp("TO", (Options) null);
    }

    @Test(timeout = 4000)
    public void test1022778() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(8, "bWjGI8'A_c*", (String) null, options0, "%5F+:E_0IN");
    }

    @Test(timeout = 4000)
    public void test1032779() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setSyntaxPrefix("-");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1042780() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test1042781() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test1042782() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1042783() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1042784() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1042785() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test1042786() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1052787() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1052788() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1052789() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test1052790() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test1052791() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1052792() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test1052793() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getSyntaxPrefix();
    }
}
