/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 21:00:38 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.List;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.junit.runner.RunWith;

public class OptionsTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "u~P~HBlRk.&*Bo");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Options options0 = new Options();
        List<Option> list0 = options0.helpOptions();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, (String) null, true, (String) null);
        List<Option> list0 = options1.helpOptions();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        optionGroup1.setRequired(true);
        options1.getOptionGroup(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        options0.getOptionGroup(option0);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option((String) null, "");
        option0.setRequired(true);
        Options options1 = options0.addOption(option0);
        Option option1 = options1.getOption((String) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        option0.setValueSeparator('9');
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        Option option1 = options1.getOption("");
        option1.isRequired();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        option0.setOptionalArg(true);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        Option option1 = options1.getOption("");
        option1.isRequired();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option((String) null, (String) null);
        option0.setArgName(" ] [ long ");
        Options options1 = options0.addOption(option0);
        Option option1 = options1.getOption((String) null);
        option1.hasArgName();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption("m", false, "m");
        Option option0 = options1.getOption("m");
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption("m", false, "m");
        Option option0 = options1.getOption("m");
        option0.hasLongOpt();
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption("m", false, "m");
        Option option0 = options1.getOption("m");
        option0.hasArg();
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        Options options0 = new Options();
        options0.addOption("", "$O!cK K`1]", true, "");
        Option option0 = options0.getOption("$O!cK K`1]");
        option0.getDescription();
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        Options options0 = new Options();
        options0.addOption("", "$O!cK K`1]", true, "");
        Option option0 = options0.getOption("$O!cK K`1]");
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        Options options0 = new Options();
        options0.addOption("", "$O!cK K`1]", true, "");
        Option option0 = options0.getOption("$O!cK K`1]");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        Options options0 = new Options();
        options0.getOptionGroup((Option) null);
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        Options options0 = new Options();
        options0.addOption((String) null, "'kdQ+{ZJ2)Ww", false, "");
        options0.getMatchingOptions((String) null);
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        Options options0 = new Options();
        options0.addOptionGroup((OptionGroup) null);
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        Options options0 = new Options();
        options0.addOption((Option) null);
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        Options options0 = new Options();
        options0.addOption("[ARG...]", false, "[ARG...]");
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        Options options0 = new Options();
        options0.addOption("/)tH", "", false, "");
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Options options0 = new Options();
        options0.addOption("CY\"1z(nX*iI@:", "IA6{k");
    }

    @Test(timeout = 4000)
    public void test1822() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option((String) null, "?5BAgQ%R", false, "?5BAgQ%R");
        Options options1 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test1923() throws Throwable {
        Options options0 = new Options();
        boolean boolean0 = options0.hasShortOption((String) null);
    }

    @Test(timeout = 4000)
    public void test2024() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test2025() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        boolean boolean0 = options0.hasLongOption("");
    }

    @Test(timeout = 4000)
    public void test2126() throws Throwable {
        Options options0 = new Options();
        boolean boolean0 = options0.hasLongOption("CY\"1z(nX*iI@:");
    }

    @Test(timeout = 4000)
    public void test2227() throws Throwable {
        Options options0 = new Options();
        options0.addOption("", "hg;5D0/", false, "");
        boolean boolean0 = options0.hasOption("hg;5D0/");
    }

    @Test(timeout = 4000)
    public void test2328() throws Throwable {
        Options options0 = new Options();
        boolean boolean0 = options0.hasOption("hg;5D0/");
    }

    @Test(timeout = 4000)
    public void test2429() throws Throwable {
        Options options0 = new Options();
        options0.addOption("CrCr", " Cr", false, " Cr");
        List<String> list0 = options0.getMatchingOptions(" Cr");
        list0.contains(" Cr");
    }

    @Test(timeout = 4000)
    public void test2530() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test2531() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", false, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        List<String> list0 = options0.getMatchingOptions("?v)G(4%6<wLeCS{Oix");
        list0.contains("");
    }

    @Test(timeout = 4000)
    public void test2632() throws Throwable {
        Options options0 = new Options();
        Option option0 = options0.getOption("$O!cK K`1]");
    }

    @Test(timeout = 4000)
    public void test2733() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option((String) null, "");
        option0.setRequired(true);
        Options options1 = options0.addOption(option0);
        Options options2 = options0.addOption(option0);
    }

    @Test(timeout = 4000)
    public void test2834() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", true, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test2835() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "", true, "");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        boolean boolean0 = options0.hasShortOption("");
    }

    @Test(timeout = 4000)
    public void test2936() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup0);
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        Options options0 = new Options();
        Collection<OptionGroup> collection0 = options0.getOptionGroups();
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option((String) null, "");
        OptionGroup optionGroup0 = options0.getOptionGroup(option0);
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        Options options0 = new Options();
        String string0 = options0.toString();
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        Options options0 = new Options();
        List list0 = options0.getRequiredOptions();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        Options options0 = new Options();
        Collection<Option> collection0 = options0.getOptions();
    }

    @Test(timeout = 4000)
    public void test3542() throws Throwable {
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, (String) null);
        boolean boolean0 = options1.hasOption((String) null);
    }
}
