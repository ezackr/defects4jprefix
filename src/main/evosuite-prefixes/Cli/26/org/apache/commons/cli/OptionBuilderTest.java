/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 20:27:10 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionBuilder;
import org.junit.runner.RunWith;

public class OptionBuilderTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        OptionBuilder.isRequired(true);
        Option option0 = OptionBuilder.create("");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        OptionBuilder.withValueSeparator('e');
        Option option0 = OptionBuilder.create("arg");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        OptionBuilder.withValueSeparator('e');
        Option option0 = OptionBuilder.create("arg");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        OptionBuilder.withLongOpt("TPpq4");
        Option option0 = OptionBuilder.create("arg");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        OptionBuilder.hasOptionalArgs(1785);
        Option option0 = OptionBuilder.create((String) null);
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        OptionBuilder.hasOptionalArgs(1785);
        Option option0 = OptionBuilder.create((String) null);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        OptionBuilder.hasArgs(0);
        Option option0 = OptionBuilder.create("");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        OptionBuilder.create("");
        Option option0 = OptionBuilder.create("");
        option0.getArgName();
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        OptionBuilder.create("");
        Option option0 = OptionBuilder.create("");
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        OptionBuilder.create("");
        Option option0 = OptionBuilder.create("");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        OptionBuilder.create("");
        Option option0 = OptionBuilder.create("");
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0511() throws Throwable {
        OptionBuilder.create("");
        Option option0 = OptionBuilder.create("");
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0612() throws Throwable {
        OptionBuilder.isRequired();
        Option option0 = OptionBuilder.create('f');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0613() throws Throwable {
        OptionBuilder.isRequired();
        Option option0 = OptionBuilder.create('f');
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0614() throws Throwable {
        OptionBuilder.isRequired();
        Option option0 = OptionBuilder.create('f');
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0715() throws Throwable {
        OptionBuilder.withLongOpt("qOPlTS5Lz.^");
        Option option0 = OptionBuilder.create('l');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0716() throws Throwable {
        OptionBuilder.withLongOpt("qOPlTS5Lz.^");
        Option option0 = OptionBuilder.create('l');
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0817() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test0818() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0819() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0820() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test0821() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.hasValueSeparator();
    }

    @Test(timeout = 4000)
    public void test0822() throws Throwable {
        OptionBuilder.withLongOpt(" [ARG]");
        OptionBuilder.create();
        Option option0 = OptionBuilder.create('R');
        option0.hasArgName();
    }

    @Test(timeout = 4000)
    public void test0923() throws Throwable {
        OptionBuilder.hasOptionalArgs(0);
        Option option0 = OptionBuilder.create('F');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test0924() throws Throwable {
        OptionBuilder.hasOptionalArgs(0);
        Option option0 = OptionBuilder.create('F');
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test0925() throws Throwable {
        OptionBuilder.hasOptionalArgs(0);
        Option option0 = OptionBuilder.create('F');
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test1026() throws Throwable {
        OptionBuilder.hasArg(true);
        Option option0 = OptionBuilder.create('2');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1027() throws Throwable {
        OptionBuilder.hasArg(true);
        Option option0 = OptionBuilder.create('2');
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test1128() throws Throwable {
        OptionBuilder.withValueSeparator('L');
        OptionBuilder.withLongOpt("");
        Option option0 = OptionBuilder.create();
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test1129() throws Throwable {
        OptionBuilder.withValueSeparator('L');
        OptionBuilder.withLongOpt("");
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1230() throws Throwable {
        OptionBuilder.withLongOpt("");
        OptionBuilder.hasOptionalArgs((-822));
        Option option0 = OptionBuilder.create();
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test1231() throws Throwable {
        OptionBuilder.withLongOpt("");
        OptionBuilder.hasOptionalArgs((-822));
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1332() throws Throwable {
        OptionBuilder.withLongOpt("");
        OptionBuilder.withArgName("arg");
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1433() throws Throwable {
        OptionBuilder.withLongOpt("");
        OptionBuilder.hasArgs(0);
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1534() throws Throwable {
        OptionBuilder.create('&');
    }

    @Test(timeout = 4000)
    public void test1635() throws Throwable {
        OptionBuilder.create("7[");
    }

    @Test(timeout = 4000)
    public void test1736() throws Throwable {
        OptionBuilder.create();
    }

    @Test(timeout = 4000)
    public void test1837() throws Throwable {
        OptionBuilder.hasArg(true);
        OptionBuilder.withLongOpt(" [ARG]");
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test1938() throws Throwable {
        OptionBuilder optionBuilder0 = OptionBuilder.hasArg(false);
    }

    @Test(timeout = 4000)
    public void test2039() throws Throwable {
        OptionBuilder optionBuilder0 = OptionBuilder.withDescription("Cannot odd val\"e, l$st full.");
    }

    @Test(timeout = 4000)
    public void test2140() throws Throwable {
        OptionBuilder.hasOptionalArgs();
        Option option0 = OptionBuilder.create('');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test2141() throws Throwable {
        OptionBuilder.hasOptionalArgs();
        Option option0 = OptionBuilder.create('');
        option0.getId();
    }

    @Test(timeout = 4000)
    public void test2142() throws Throwable {
        OptionBuilder.hasOptionalArgs();
        Option option0 = OptionBuilder.create('');
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test2243() throws Throwable {
        OptionBuilder.hasArgs();
        OptionBuilder.withLongOpt("Cannot odd val\"e, l$st full.");
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test2344() throws Throwable {
        OptionBuilder optionBuilder0 = OptionBuilder.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test2445() throws Throwable {
        OptionBuilder.withValueSeparator();
        Option option0 = OptionBuilder.create('2');
        option0.getValueSeparator();
    }

    @Test(timeout = 4000)
    public void test2446() throws Throwable {
        OptionBuilder.withValueSeparator();
        Option option0 = OptionBuilder.create('2');
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test2447() throws Throwable {
        OptionBuilder.withValueSeparator();
        Option option0 = OptionBuilder.create('2');
        option0.getOpt();
    }

    @Test(timeout = 4000)
    public void test2548() throws Throwable {
        OptionBuilder.hasArg();
        Option option0 = OptionBuilder.create("arg");
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test2649() throws Throwable {
        OptionBuilder.isRequired();
        OptionBuilder.withLongOpt("Cannot odd val\"e, l$st full.");
        Option option0 = OptionBuilder.create();
        option0.getArgs();
    }

    @Test(timeout = 4000)
    public void test2650() throws Throwable {
        OptionBuilder.isRequired();
        OptionBuilder.withLongOpt("Cannot odd val\"e, l$st full.");
        Option option0 = OptionBuilder.create();
        option0.isRequired();
    }

    @Test(timeout = 4000)
    public void test2751() throws Throwable {
        OptionBuilder optionBuilder0 = OptionBuilder.withType("7[");
    }
}
