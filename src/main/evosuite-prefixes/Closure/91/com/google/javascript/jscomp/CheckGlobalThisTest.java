/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 02:22:53 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckGlobalThis;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import org.junit.runner.RunWith;

public class CheckGlobalThisTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(42, 42, 42);
        Node node1 = new Node(42, nodeArray0);
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        checkGlobalThis0.visit((NodeTraversal) null, node0, node1);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        Node node0 = Node.newNumber(1.0);
        checkGlobalThis0.visit(nodeTraversal0, node0, node0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Node node0 = Node.newString(86, "DQL*5", 86, 86);
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        Node node1 = Node.newString("DQL*5");
        checkGlobalThis0.shouldTraverse((NodeTraversal) null, node1, node0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        Node node0 = new Node(105);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        Node node1 = new Node(28, 14, 5);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        Node node0 = new Node(105);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        Node node1 = new Node(4095, 2, 6);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0, syntacticScopeCreator0);
        SyntheticAst syntheticAst0 = new SyntheticAst("<yA");
        Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        checkGlobalThis0.visit(nodeTraversal0, (Node) null, (Node) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        Node node0 = new Node(42);
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        checkGlobalThis0.visit(nodeTraversal0, node0, (Node) null);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        Node node0 = new Node(105);
        checkGlobalThis0.visit(nodeTraversal0, node0, node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, (NodeTraversal.Callback) null);
        Node node0 = new Node(105);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        Node node1 = Node.newNumber((double) 0);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Node node0 = new Node(105);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        SyntheticAst syntheticAst0 = new SyntheticAst("sY.&{)*}p\"F!");
        Node node1 = syntheticAst0.getAstRoot((AbstractCompiler) null);
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.OFF;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, (NodeTraversal.Callback) null);
        Node node0 = new Node(105);
        checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        Node node0 = new Node(42);
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, (Node) null);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        CheckLevel checkLevel0 = CheckLevel.WARNING;
        CheckGlobalThis checkGlobalThis0 = new CheckGlobalThis((AbstractCompiler) null, checkLevel0);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, checkGlobalThis0);
        Node node0 = new Node(105);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        Node node1 = Node.newString("", 33, 37);
        boolean boolean0 = checkGlobalThis0.shouldTraverse(nodeTraversal0, node0, node1);
    }
}
