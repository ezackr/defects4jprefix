/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 10:20:42 GMT 2023
 */
package org.mockito.internal.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.util.MockUtil;

public class MockUtilTest {

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        MockUtil mockUtil0 = new MockUtil();
        // Undeclared exception!
        try {
            mockUtil0.resetMock((Object) mockUtil0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        MockUtil mockUtil0 = new MockUtil();
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        Class<Object> class0 = Object.class;
        // Undeclared exception!
        try {
            mockUtil0.createMock(class0, mockSettingsImpl0);
            fail("Expecting exception: IncompatibleClassChangeError");
        } catch (IncompatibleClassChangeError e) {
            //
            // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
        }
    }

    @Test(timeout = 4000)
    public void test32() throws Throwable {
        MockUtil mockUtil0 = new MockUtil();
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        // Undeclared exception!
        try {
            mockUtil0.getMockName(mockSettingsImpl0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test63() throws Throwable {
        MockUtil mockUtil0 = new MockUtil();
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        mockSettingsImpl0.serializable();
        Class<Object> class0 = Object.class;
        // Undeclared exception!
        try {
            mockUtil0.createMock(class0, mockSettingsImpl0);
            fail("Expecting exception: IncompatibleClassChangeError");
        } catch (IncompatibleClassChangeError e) {
            //
            // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
        }
    }
}
