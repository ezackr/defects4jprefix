/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 01:54:54 GMT 2023
 */
package org.mockito.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.MockSettings;
import org.mockito.internal.MockitoCore;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.Invocation;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.api.VerificationMode;
import org.mockito.stubbing.ClonesArguments;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MockitoCore_ESTest extends MockitoCore_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
        mockitoCore0.verify((Object) null, (VerificationMode) noMoreInteractions0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        // Undeclared exception!
        try {
            mockitoCore0.getLastInvocation();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.mockito.internal.MockitoCore", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Class<Invocation> class0 = Invocation.class;
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        MockSettings mockSettings0 = mockSettingsImpl0.spiedInstance(class0);
        mockitoCore0.mock(class0, mockSettings0, false);
        // Undeclared exception!
        try {
            mockitoCore0.stub();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Class<Object> class0 = Object.class;
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        // Undeclared exception!
        try {
            mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0);
            fail("Expecting exception: IncompatibleClassChangeError");
        } catch (IncompatibleClassChangeError e) {
            //
            // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
            //
            verifyException("org.mockito.cglib.proxy.Enhancer", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Object[] objectArray0 = new Object[1];
        MockitoCore mockitoCore0 = new MockitoCore();
        // Undeclared exception!
        try {
            mockitoCore0.inOrder(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        // Undeclared exception!
        try {
            mockitoCore0.stub();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object object0 = new Object();
        // Undeclared exception!
        try {
            mockitoCore0.stub(object0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[1];
        objectArray0[0] = (Object) mockitoCore0;
        // Undeclared exception!
        try {
            mockitoCore0.reset(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[1];
        objectArray0[0] = (Object) mockitoCore0;
        // Undeclared exception!
        try {
            mockitoCore0.inOrder(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        mockitoCore0.validateMockitoUsage();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
        // Undeclared exception!
        try {
            mockitoCore0.verify((Object) noMoreInteractions0, (VerificationMode) noMoreInteractions0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        ClonesArguments clonesArguments0 = new ClonesArguments();
        mockitoCore0.doAnswer(clonesArguments0);
        // Undeclared exception!
        try {
            mockitoCore0.stub();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        mockitoCore0.when("void");
        Object[] objectArray0 = new Object[2];
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Invocation[] invocationArray0 = new Invocation[0];
        mockitoCore0.reset(invocationArray0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        mockitoCore0.stubVoid("q_p[_5s8lrKw4&");
        // Undeclared exception!
        try {
            mockitoCore0.stub();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[1];
        // Undeclared exception!
        try {
            mockitoCore0.verifyNoMoreInteractions(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[0];
        // Undeclared exception!
        try {
            mockitoCore0.verifyNoMoreInteractions(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        mockitoCore0.inOrder((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[1];
        objectArray0[0] = (Object) mockitoCore0;
        // Undeclared exception!
        try {
            mockitoCore0.verifyNoMoreInteractions(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        Object[] objectArray0 = new Object[0];
        // Undeclared exception!
        try {
            mockitoCore0.inOrder(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        MockitoCore mockitoCore0 = new MockitoCore();
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
    }
}
