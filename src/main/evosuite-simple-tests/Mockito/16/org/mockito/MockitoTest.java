/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 10:04:56 GMT 2023
 */
package org.mockito;

import org.junit.Test;
import static org.junit.Assert.*;
import java.sql.SQLRecoverableException;
import java.util.Locale;
import org.hamcrest.beans.HasProperty;
import org.junit.runner.RunWith;
import org.mockito.MockSettings;
import org.mockito.Mockito;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.verification.api.VerificationMode;
import org.mockito.stubbing.Answer;

public class MockitoTest {

    @Test(timeout = 4000)
    public void test080() throws Throwable {
        Class<Integer> class0 = Integer.class;
        Answer<Object> answer0 = Mockito.CALLS_REAL_METHODS;
        // Undeclared exception!
        try {
            Mockito.mock(class0, (Answer) answer0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test101() throws Throwable {
        Class<String> class0 = String.class;
        MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
        // Undeclared exception!
        try {
            Mockito.mock(class0, (MockSettings) mockSettingsImpl0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test112() throws Throwable {
        Object[] objectArray0 = new Object[4];
        // Undeclared exception!
        try {
            Mockito.verifyNoMoreInteractions(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test123() throws Throwable {
        SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
        // Undeclared exception!
        try {
            Mockito.doThrow(sQLRecoverableException0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test144() throws Throwable {
        Class<Integer> class0 = Integer.class;
        // Undeclared exception!
        try {
            Mockito.mock(class0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test155() throws Throwable {
        Class<Integer> class0 = Integer.class;
        String string0 = "";
        // Undeclared exception!
        try {
            Mockito.mock(class0, "");
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test166() throws Throwable {
        Mockito.doReturn("");
        // Undeclared exception!
        try {
            Mockito.atLeast(1806);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test187() throws Throwable {
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
        // Undeclared exception!
        try {
            Mockito.spy((Object) locale_FilteringMode0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test198() throws Throwable {
        String string0 = "org.mockito.exceptions.Reporter";
        // Undeclared exception!
        try {
            Mockito.stubVoid("org.mockito.exceptions.Reporter");
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test229() throws Throwable {
        // Undeclared exception!
        try {
            Mockito.validateMockitoUsage();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2310() throws Throwable {
        Object[] objectArray0 = new Object[11];
        // Undeclared exception!
        try {
            Mockito.inOrder(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2411() throws Throwable {
        Object[] objectArray0 = new Object[4];
        // Undeclared exception!
        try {
            Mockito.verifyZeroInteractions(objectArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2512() throws Throwable {
        Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
        // Undeclared exception!
        try {
            Mockito.stub(locale_FilteringMode0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
        }
    }
}
