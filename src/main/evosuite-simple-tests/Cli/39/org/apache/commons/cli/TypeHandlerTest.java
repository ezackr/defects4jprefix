/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 15 00:21:03 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.File;
import org.apache.commons.cli.TypeHandler;
import org.junit.runner.RunWith;

public class TypeHandlerTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createValue(" u+(Xxgg~BV'", (Object) " u+(Xxgg~BV'");
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // java.lang.String cannot be cast to java.lang.Class
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        try {
            TypeHandler.createClass("Not yet implem/n0ed");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find the class: Not yet implem/n0ed
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createFiles("]vM(o");
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // Not yet implemented
        }
    }

    @Test(timeout = 4000)
    public void test043() throws Throwable {
        try {
            TypeHandler.createURL("");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to parse the URL:
        }
    }

    @Test(timeout = 4000)
    public void test054() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createDate("Unable to find the class: ");
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // Not yet implemented
        }
    }

    @Test(timeout = 4000)
    public void test065() throws Throwable {
        File file0 = TypeHandler.createFile("");
        assertEquals(0L, file0.getTotalSpace());
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        Class<Object> class0 = Object.class;
        try {
            TypeHandler.createValue("", class0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find the class:
        }
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        Class<String> class0 = String.class;
        Object object0 = TypeHandler.createValue("Not yet implemented", class0);
        assertEquals("Not yet implemented", object0);
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        Class<Integer> class0 = Integer.class;
        Object object0 = TypeHandler.createValue("Not yet implemented", class0);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        try {
            TypeHandler.createNumber("Not yet implemented");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // For input string: \"Not yet implemented\"
        }
    }

    @Test(timeout = 4000)
    public void test1110() throws Throwable {
        try {
            TypeHandler.createNumber("org.apache.commons.cli.PatternOptionBuilder");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // For input string: \"org.apache.commons.cli.PatternOptionBuilder\"
        }
    }
}
