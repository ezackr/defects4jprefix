/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 14 23:46:13 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.util.Comparator;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals(74, int0);
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test017() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("usage: ");
        assertEquals("usage: ", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test028() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test029() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals(3, int0);
    }

    @Test(timeout = 4000)
    public void test0210() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test0211() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test0212() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test0213() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test0214() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test0315() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("arg");
        assertEquals("arg", helpFormatter0.getNewLine());
    }

    @Test(timeout = 4000)
    public void test0416() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName("-");
        assertEquals("-", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test0517() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        // Undeclared exception!
        try {
            helpFormatter0.printHelp((PrintWriter) null, 3, "arg", "arg", (Options) null, 3, 3, "arg");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.cli.HelpFormatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test0618() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setSyntaxPrefix("--");
        assertEquals("--", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test0719() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        // Undeclared exception!
        try {
            helpFormatter0.printHelp(1, "--", "--", (Options) null, "--");
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test0820() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth(3);
        assertEquals(3, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test0921() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("--");
        assertEquals("--", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1022() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1023() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1024() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1025() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1026() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1027() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1028() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1129() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals("arg", string0);
    }

    @Test(timeout = 4000)
    public void test1134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getArgName();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1236() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1237() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1238() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1239() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1240() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1241() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1242() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(3);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1343() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("arg", "arg", options0, "arg");
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1344() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("arg", "arg", options0, "arg");
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1445() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1446() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1447() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1448() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1449() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1450() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1451() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1452() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        assertEquals("\n", string0);
    }

    @Test(timeout = 4000)
    public void test1553() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1554() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1555() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1556() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1557() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1558() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals("--", string0);
    }

    @Test(timeout = 4000)
    public void test1559() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1660() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1661() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1662() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1663() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1664() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1665() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1666() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        assertEquals("usage: ", string0);
    }

    @Test(timeout = 4000)
    public void test1767() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1768() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1769() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals("-", string0);
    }

    @Test(timeout = 4000)
    public void test1770() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1771() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1772() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1773() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1874() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test1875() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "");
        optionGroup0.addOption(option0);
        Option option1 = new Option("arg", "--");
        optionGroup0.addOption(option1);
        Options options1 = options0.addOptionGroup(optionGroup0);
        helpFormatter0.printHelp("-", "-", options1, "-", true);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1976() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test1977() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1978() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test1979() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test1980() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test1981() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test1982() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test2083() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test2084() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test2085() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test2086() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test2087() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test2088() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test2089() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test2190() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        // Undeclared exception!
        try {
            helpFormatter0.printHelp((String) null, options0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // cmdLineSyntax not provided
            //
            verifyException("org.apache.commons.cli.HelpFormatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test2291() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        // Undeclared exception!
        try {
            helpFormatter0.printHelp("", "", options0, "", false);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // cmdLineSyntax not provided
            //
            verifyException("org.apache.commons.cli.HelpFormatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test2392() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("\n", "\n", options0, "\n", false);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test2493() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("arg", "--");
        optionGroup0.setRequired(true);
        optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup0);
        helpFormatter0.printHelp("-", "-", options1, "-", true);
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test2594() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("arg", true, "usage: ");
        option0.setArgName("");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        helpFormatter0.printHelp("PNy3", "-", options0, "", true);
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test2695() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("arg", "-", true, "usage: ");
        optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup0);
        helpFormatter0.printHelp("-", "-", options1, "-", true);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test2796() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption("", true, "-");
        Option option0 = new Option("arg", "A6gNYx$5F:av`z}z!5");
        Options options2 = options1.addOption(option0);
        helpFormatter0.printHelp("A6gNYx$5F:av`z}z!5", "--", options2, "A6gNYx$5F:av`z}z!5", true);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test2897() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setLeftPadding(74);
        Options options1 = options0.addOption((String) null, true, "usage: ");
        helpFormatter0.printHelp("-", options1, true);
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test2898() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.setLeftPadding(74);
        Options options1 = options0.addOption((String) null, true, "usage: ");
        helpFormatter0.printHelp("-", options1, true);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test2999() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", false, (String) null);
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp("--", "--", options1, "--", false);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test30100() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        // Undeclared exception!
        try {
            helpFormatter0.printUsage((PrintWriter) null, 3, "bLCaJ|E .");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.cli.HelpFormatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test31101() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        // Undeclared exception!
        try {
            helpFormatter0.findWrapPos("\n", (-896), (-896));
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test32102() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("\n", (-1), 1);
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test32103() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("\n", (-1), 1);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test32104() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("\n", (-1), 1);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test32105() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.findWrapPos("\n", (-1), 1);
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test33106() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test33107() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test33108() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test33109() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test33110() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test33111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test33112() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test33113() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test34114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test34115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test34116() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
        assertEquals(2, stringBuffer1.length());
    }

    @Test(timeout = 4000)
    public void test34117() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test34118() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "--");
        StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, "");
        assertEquals(3, helpFormatter0.defaultDescPad);
    }

    @Test(timeout = 4000)
    public void test35119() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals(1, helpFormatter0.defaultLeftPad);
    }

    @Test(timeout = 4000)
    public void test35120() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals("arg", helpFormatter0.getArgName());
    }

    @Test(timeout = 4000)
    public void test35121() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals(74, helpFormatter0.defaultWidth);
    }

    @Test(timeout = 4000)
    public void test35122() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals("-", helpFormatter0.getOptPrefix());
    }

    @Test(timeout = 4000)
    public void test35123() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test35124() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals("usage: ", helpFormatter0.getSyntaxPrefix());
    }

    @Test(timeout = 4000)
    public void test35125() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals("--", helpFormatter0.getLongOptPrefix());
    }

    @Test(timeout = 4000)
    public void test35126() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim("\n");
        assertEquals(3, helpFormatter0.defaultDescPad);
    }
}
