/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 21:08:20 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.File;
import java.io.FileInputStream;
import org.apache.commons.cli.TypeHandler;
import org.junit.runner.RunWith;

public class TypeHandlerTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        try {
            TypeHandler.createObject("org.apache.commons.cli.Option");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // java.lang.InstantiationException; Unable to create an instance of: org.apache.commons.cli.Option
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.commons.cli.PatternOptionBuilder");
        FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
        FileInputStream fileInputStream0 = TypeHandler.openFile("org.apache.commons.cli.PatternOptionBuilder");
        assertEquals(0, fileInputStream0.available());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.commons.cli.PatternOptionBuilder");
        byte[] byteArray0 = new byte[8];
        FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
        FileInputStream fileInputStream0 = TypeHandler.openFile("org.apache.commons.cli.PatternOptionBuilder");
        assertEquals(8, fileInputStream0.available());
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Class<String> class0 = String.class;
        Object object0 = TypeHandler.createValue("#+LsyzUr", (Object) class0);
        assertEquals("#+LsyzUr", object0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Object object0 = TypeHandler.createObject("org.apache.commons.cli.PatternOptionBuilder");
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Number number0 = TypeHandler.createNumber("0");
        assertEquals(0L, number0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Number number0 = TypeHandler.createNumber("2");
        assertEquals(2L, number0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        File file0 = TypeHandler.createFile(".jX");
        assertTrue(file0.isFile());
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        File file0 = TypeHandler.createFile("");
        assertEquals("", file0.toString());
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("S.OkAjX");
        FileSystemHandling.appendStringToFile(evoSuiteFile0, "#qKOF6or e)");
        File file0 = TypeHandler.createFile("S.OkAjX");
        assertEquals(0L, file0.getUsableSpace());
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        File file0 = TypeHandler.createFile("/&hx");
        assertEquals("/", file0.getParent());
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Class<?> class0 = TypeHandler.createClass("org.apache.commons.cli.ParseException");
        assertFalse(class0.isPrimitive());
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Class<?> class0 = TypeHandler.createClass("org.apache.commons.cli.Option$1");
        assertFalse(class0.isAnnotation());
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.openFile((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Class<Object> class0 = Object.class;
        // Undeclared exception!
        try {
            TypeHandler.createValue((String) null, class0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createObject((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createNumber((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createClass((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Class<Object> class0 = Object.class;
        try {
            TypeHandler.createValue("", class0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find the class:
        }
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Class<Integer> class0 = Integer.class;
        Integer integer0 = TypeHandler.createValue("", class0);
        assertNull(integer0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        try {
            TypeHandler.createNumber("org.apace-common8.cli$PatternOptionBXilder");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // For input string: \"org.apace-common8.cli$PatternOptionBXilder\"
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Class<String> class0 = String.class;
        String string0 = TypeHandler.createValue("Una!le to8lnd filD6 ", class0);
        assertEquals("Una!le to8lnd filD6 ", string0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Class<Object> class0 = Object.class;
        try {
            TypeHandler.createValue("Fa", (Object) class0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find the class: Fa
        }
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createFile((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createDate("%F@r#kTmqe*6B%h");
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // Not yet implemented
        }
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        try {
            TypeHandler.createURL((String) null);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to parse the URL: null
        }
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        TypeHandler typeHandler0 = new TypeHandler();
        // Undeclared exception!
        try {
            TypeHandler.createValue("", (Object) typeHandler0);
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.apache.commons.cli.TypeHandler cannot be cast to java.lang.Class
        }
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createFiles("Unable to find file: ");
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // Not yet implemented
        }
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        try {
            TypeHandler.openFile("UXakp*q");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find file: UXakp*q
        }
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        try {
            TypeHandler.createClass("cu(%MZ>C");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unable to find the class: cu(%MZ>C
        }
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Object object0 = TypeHandler.createValue("Fa", (Object) null);
        assertNull(object0);
    }
}
