/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 19:38:17 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.File;
import java.net.URL;
import java.util.Date;
import org.apache.commons.cli.PatternOptionBuilder;
import org.apache.commons.cli.TypeHandler;
import org.junit.runner.RunWith;

public class TypeHandlerTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<String> class0 = String.class;
        Object object0 = TypeHandler.createValue("M", (Object) class0);
        assertEquals("M", object0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Object object0 = TypeHandler.createObject("org.apache.commons.cli.PatternOptionBuilder");
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        File file0 = TypeHandler.createFile(".7&@Ivs");
        assertFalse(file0.exists());
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        File file0 = TypeHandler.createFile("");
        assertTrue(file0.canWrite());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        File file0 = TypeHandler.createFile("/1F:r#`");
        assertFalse(file0.canExecute());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.apache.commons.cli.PatternOptionBuilder");
        byte[] byteArray0 = new byte[2];
        FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
        File file0 = TypeHandler.createFile("org.apache.commons.cli.PatternOptionBuilder");
        assertEquals(0L, file0.getUsableSpace());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        File file0 = TypeHandler.createFile("org.apache.commons.cli.PatternOptionBuilder");
        // Undeclared exception!
        try {
            TypeHandler.createValue("org.apache.commons.cli.PatternOptionBuilder", (Object) file0);
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.evosuite.runtime.mock.java.io.MockFile cannot be cast to java.lang.Class
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Class<Object> class0 = Object.class;
        // Undeclared exception!
        try {
            TypeHandler.createValue((String) null, class0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createObject((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createFile((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createClass((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Date date0 = TypeHandler.createDate("m{(t%>PLe'>AZM");
        assertNull(date0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Class class0 = TypeHandler.createClass("org.apache.commons.cli.PatternOptionBuilder");
        Object object0 = TypeHandler.createValue("", class0);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Class class0 = TypeHandler.createClass("m{(t%>PLe'>AZM");
        assertNull(class0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Object object0 = TypeHandler.createObject("");
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Class<Object> class0 = Object.class;
        Object object0 = TypeHandler.createValue("L]u?2br.<4M6xa\"", class0);
        Object object1 = TypeHandler.createValue("L]u?2br.<4M6xa\"", ((PatternOptionBuilder) object0).URL_VALUE);
        assertNull(object1);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Class<Object> class0 = Object.class;
        Object object0 = TypeHandler.createValue("org.apache.commons.cli.AlreadySelectedException", class0);
        MockFile mockFile0 = (MockFile) TypeHandler.createValue("org.apache.commons.cli.AlreadySelectedException", ((PatternOptionBuilder) object0).FILE_VALUE);
        assertFalse(mockFile0.canRead());
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Class<Object> class0 = Object.class;
        Object object0 = TypeHandler.createValue("org.apache.commons.cli.AlreadySelectedException", class0);
        // Undeclared exception!
        try {
            TypeHandler.createValue("org.apache.commons.cli.AlreadySelectedException", ((PatternOptionBuilder) object0).NUMBER_VALUE);
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            //
            // org/apache/commons/lang/math/NumberUtils
        }
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Class<String> class0 = String.class;
        Object object0 = TypeHandler.createValue((String) null, class0);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        URL uRL0 = TypeHandler.createURL("");
        assertNull(uRL0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        File[] fileArray0 = TypeHandler.createFiles((String) null);
        assertNull(fileArray0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        // Undeclared exception!
        try {
            TypeHandler.createNumber("wLvb.F");
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            //
            // org/apache/commons/lang/math/NumberUtils
        }
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Object object0 = TypeHandler.createValue((String) null, (Object) null);
        assertNull(object0);
    }
}
