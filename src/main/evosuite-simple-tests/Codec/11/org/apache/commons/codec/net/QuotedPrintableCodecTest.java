/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 03:35:44 GMT 2023
 */
package org.apache.commons.codec.net;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.UnsupportedEncodingException;
import java.nio.LongBuffer;
import java.util.BitSet;
import org.apache.commons.codec.net.QuotedPrintableCodec;
import org.junit.runner.RunWith;

public class QuotedPrintableCodecTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
        String string0 = quotedPrintableCodec0.getDefaultCharset();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        String string0 = quotedPrintableCodec0.getDefaultCharset();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        long[] longArray0 = new long[9];
        BitSet bitSet0 = BitSet.valueOf(longArray0);
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
        assertFalse(byteArray1.equals((Object) byteArray0));
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("V-SwopsGjdev!");
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
        assertNotSame(byteArray0, byteArray1);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("UTF-8", "UTF-8");
        assertEquals("UTF-8", string0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("", "UTF-8");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.encode((Object) "");
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.encode((Object) "");
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
        assertFalse(byteArray1.equals((Object) byteArray0));
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
        assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = quotedPrintableCodec0.decode(byteArray0);
        assertFalse(byteArray1.equals((Object) byteArray0));
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("ZlB8 3hK");
        String string0 = quotedPrintableCodec0.decode("ZlB8 3hK", "UTF-8");
        assertEquals("ZlB8 3hK", string0);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode("b.");
        assertEquals("b.", string0);
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode("b.");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode("");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode("");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        try {
            quotedPrintableCodec0.encode("UTF-8", "zi#ThtC+iAsdS2");
            fail("Expecting exception: UnsupportedEncodingException");
        } catch (UnsupportedEncodingException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        try {
            quotedPrintableCodec0.encode("");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            //
        }
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
        // Undeclared exception!
        try {
            quotedPrintableCodec0.encode("+Iq?6$O!c");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = new byte[7];
        byteArray0[5] = (byte) 61;
        try {
            quotedPrintableCodec0.decode(byteArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Invalid URL encoding: not a valid digit (radix 16): 0
        }
    }

    @Test(timeout = 4000)
    public void test1822() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("nL=*`V|f}<");
        try {
            quotedPrintableCodec0.decode("nL=*`V|f}<", "nL=*`V|f}<");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Invalid URL encoding: not a valid digit (radix 16): 42
        }
    }

    @Test(timeout = 4000)
    public void test1923() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        try {
            quotedPrintableCodec0.decode("i", "");
            fail("Expecting exception: UnsupportedEncodingException");
        } catch (UnsupportedEncodingException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2024() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
        // Undeclared exception!
        try {
            quotedPrintableCodec0.decode("'tJ~VTig-");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2125() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
        // Undeclared exception!
        try {
            quotedPrintableCodec0.decode((Object) "3IA)]dL6mS7.Oi");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2226() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        // Undeclared exception!
        try {
            quotedPrintableCodec0.encode("", (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2327() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        try {
            quotedPrintableCodec0.decode("");
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            //
        }
    }

    @Test(timeout = 4000)
    public void test2428() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[2] = (byte) 61;
        try {
            QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Invalid quoted-printable encoding
        }
    }

    @Test(timeout = 4000)
    public void test2529() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = QuotedPrintableCodec.decodeQuotedPrintable(byteArray0);
        assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
    }

    @Test(timeout = 4000)
    public void test2630() throws Throwable {
        byte[] byteArray0 = QuotedPrintableCodec.decodeQuotedPrintable((byte[]) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2731() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[1] = (byte) (-101);
        long[] longArray0 = new long[9];
        longArray0[2] = (long) (byte) (-5);
        LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
        BitSet bitSet0 = BitSet.valueOf(longBuffer0);
        byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
        assertEquals(25, byteArray1.length);
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        BitSet bitSet0 = new BitSet();
        byte[] byteArray0 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, (byte[]) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.getDefaultCharset();
        assertEquals("UTF-8", string0);
    }

    @Test(timeout = 4000)
    public void test3034() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        String string0 = quotedPrintableCodec0.encode((String) null, "org.apache.commons.codec.DecoderException");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3135() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = new Object();
        try {
            quotedPrintableCodec0.decode(object0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Objects of type java.lang.Object cannot be quoted-printable decoded
        }
    }

    @Test(timeout = 4000)
    public void test3236() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.decode((Object) null);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3337() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = new Object();
        try {
            quotedPrintableCodec0.encode(object0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Objects of type java.lang.Object cannot be quoted-printable encoded
        }
    }

    @Test(timeout = 4000)
    public void test3438() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.encode((Object) null);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3539() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3640() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.decode((String) null, (String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3741() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3842() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.decode((Object) "VM=7F");
        assertEquals("VM", object0);
    }

    @Test(timeout = 4000)
    public void test3843() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        Object object0 = quotedPrintableCodec0.decode((Object) "VM=7F");
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test3944() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        // Undeclared exception!
        try {
            quotedPrintableCodec0.decode("UTF-8", (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test4045() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = quotedPrintableCodec0.decode((byte[]) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4146() throws Throwable {
        BitSet bitSet0 = new BitSet();
        byte[] byteArray0 = new byte[2];
        byteArray0[1] = (byte) (-7);
        byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray0);
        assertArrayEquals(new byte[] { (byte) 61, (byte) 48, (byte) 48, (byte) 61, (byte) 70, (byte) 57 }, byteArray1);
    }

    @Test(timeout = 4000)
    public void test4247() throws Throwable {
        byte[] byteArray0 = new byte[11];
        byte[] byteArray1 = QuotedPrintableCodec.encodeQuotedPrintable((BitSet) null, byteArray0);
        assertEquals(33, byteArray1.length);
    }

    @Test(timeout = 4000)
    public void test4348() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = quotedPrintableCodec0.encode((byte[]) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4449() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
        assertArrayEquals(new byte[] { (byte) 61, (byte) 48, (byte) 48 }, byteArray1);
    }

    @Test(timeout = 4000)
    public void test4450() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = quotedPrintableCodec0.encode(byteArray0);
        assertNotNull(byteArray1);
    }

    @Test(timeout = 4000)
    public void test4551() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("8Nmlf.>\"5Zl");
        assertEquals("8Nmlf.>\"5Zl", string0);
    }

    @Test(timeout = 4000)
    public void test4552() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec();
        String string0 = quotedPrintableCodec0.encode("8Nmlf.>\"5Zl");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test4653() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        String string0 = quotedPrintableCodec0.decode("", "UTF-8");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test4654() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec("");
        String string0 = quotedPrintableCodec0.decode("", "UTF-8");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test4755() throws Throwable {
        QuotedPrintableCodec quotedPrintableCodec0 = new QuotedPrintableCodec((String) null);
        // Undeclared exception!
        try {
            quotedPrintableCodec0.encode((Object) "K");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }
}
