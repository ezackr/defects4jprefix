/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 04:30:35 GMT 2023
 */
package org.apache.commons.lang.time;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.time.DateTimeException;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.format.DateTimeParseException;
import java.util.Calendar;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.junit.runner.RunWith;

public class DurationFormatUtilsTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertEquals(6, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test008() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test009() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0010() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0015() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test0016() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        assertNotNull(zoneId0);
    }

    @Test(timeout = 4000)
    public void test0017() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0018() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test0019() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0020() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test0021() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0026() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test0027() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test0028() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test0029() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test0030() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertFalse(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test0031() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0032() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test0035() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test0038() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0039() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test0040() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertFalse(string6.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0041() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        assertNotNull(string6);
    }

    @Test(timeout = 4000)
    public void test0042() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test0043() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        assertEquals(6, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0046() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test0047() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test0048() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test0050() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test0051() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertFalse(string7.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test0052() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertNotNull(string7);
    }

    @Test(timeout = 4000)
    public void test0053() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test0054() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertTrue(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test0058() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertTrue(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test0059() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test0060() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test0061() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test0062() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0063() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0064() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test0065() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        ZoneId zoneId0 = ZoneId.systemDefault();
        String string3 = DurationFormatUtils.formatDurationWords((-2300L), false, true);
        TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
        String string4 = DurationFormatUtils.formatPeriod((-1907L), 86400000L, "java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", true, timeZone0);
        String string5 = DurationFormatUtils.formatPeriodISO((-1L), 1944L);
        String string6 = DurationFormatUtils.formatDurationISO(86400000L);
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
        String string7 = DurationFormatUtils.formatPeriod((long) 228, 1L, "0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059", true, timeZone0);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token2);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test0168() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test0169() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0170() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test0171() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertEquals(6, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test0172() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test0173() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0174() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0175() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0176() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test0177() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0178() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test0179() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0180() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0181() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test0182() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test0183() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0184() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test0185() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "Minimum abbreviation width with offset is 7");
        long long1 = 86400000L;
        // Undeclared exception!
        try {
            ZoneId.of("0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059");
            fail("Expecting exception: DateTimeException");
        } catch (DateTimeException e) {
            //
            // Invalid ID for region-based ZoneId, invalid format: 0java.lang.StringBuffer@000000005400java.lang.StringBuffer@0000000055java.lang.StringBuffer@00000000560java.lang.StringBuffer@000000005701java.lang.StringBuffer@0000000058java.lang.StringBuffer@0000000059
        }
    }

    @Test(timeout = 4000)
    public void test0286() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test0287() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0288() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test0289() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0290() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0291() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0292() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test0293() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test0294() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test0295() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test0296() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test0297() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test0298() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "");
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test0299() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "");
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test02100() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "");
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test02101() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "");
        assertEquals("", string2);
    }

    @Test(timeout = 4000)
    public void test02102() throws Throwable {
        long long0 = (-1907L);
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords((-1907L), true, true);
        String string1 = DurationFormatUtils.formatDurationISO((-1907L));
        int int0 = 228;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 228);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000280java.lang.StringBuffer@00000000290java.lang.StringBuffer@00000000300java.lang.StringBuffer@00000000310java.lang.StringBuffer@00000000320java.lang.StringBuffer@0000000033-1java.lang.StringBuffer@00000000343java.lang.StringBuffer@0000000035", 228);
        boolean boolean1 = durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
        String string2 = DurationFormatUtils.formatPeriod((-1907L), (-371L), "");
        long long1 = 86400000L;
        // Undeclared exception!
        try {
            ZoneId.of("");
            fail("Expecting exception: DateTimeException");
        } catch (DateTimeException e) {
            //
            // Invalid ID for ZoneOffset, invalid format:
        }
    }

    @Test(timeout = 4000)
    public void test03103() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test03104() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03105() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test03106() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        assertEquals("s", string0);
    }

    @Test(timeout = 4000)
    public void test03107() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03108() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03109() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03110() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03111() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test03112() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03113() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03114() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03115() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03116() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03117() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test03118() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03119() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03120() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertTrue(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03121() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03122() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03123() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03124() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test03125() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03126() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03127() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03128() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03129() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03130() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertNotNull(durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03132() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03133() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03134() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test03135() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03136() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03137() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03138() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03139() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03140() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03141() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03142() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03143() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03144() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        assertNotNull(durationFormatUtils_Token4);
    }

    @Test(timeout = 4000)
    public void test03145() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03146() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03147() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03148() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test03149() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03150() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test03151() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03152() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03153() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03154() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03155() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03156() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03157() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test03158() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        assertNotNull(durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test03159() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03160() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03161() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03162() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03163() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test03164() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test03165() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03166() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03167() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03168() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test03169() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03170() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03171() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03172() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03173() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token4);
    }

    @Test(timeout = 4000)
    public void test03174() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test03175() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03176() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03177() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03178() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test03179() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03180() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test03181() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03182() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test03183() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03184() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test03185() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test03186() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03187() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03188() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test03189() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test03190() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test03191() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test03192() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test03193() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03194() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token4);
    }

    @Test(timeout = 4000)
    public void test03195() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test03196() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03197() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token2, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03198() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test03199() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test03200() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test03201() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test03202() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        assertNotSame(durationFormatUtils_Token4, durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test03203() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        assertEquals(6, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test03204() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03205() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03206() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03207() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03208() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03209() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test03210() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03211() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03212() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03213() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertFalse(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03214() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test03215() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test03216() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03217() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03218() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test03219() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03220() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03221() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertFalse(string6.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test03222() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        assertNotNull(string6);
    }

    @Test(timeout = 4000)
    public void test03223() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03224() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test03225() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test03226() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03227() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03228() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03229() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertFalse(string7.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test03230() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        assertNotNull(string7);
    }

    @Test(timeout = 4000)
    public void test03231() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03233() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03234() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03235() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test03236() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test03237() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test03238() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertFalse(string8.equals((Object) string7));
    }

    @Test(timeout = 4000)
    public void test03239() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        assertNotNull(string8);
    }

    @Test(timeout = 4000)
    public void test03240() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string7));
    }

    @Test(timeout = 4000)
    public void test03241() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test03242() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test03243() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test03244() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string8));
    }

    @Test(timeout = 4000)
    public void test03245() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test03246() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test03247() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test03248() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertFalse(string9.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test03249() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        String string1 = durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        String string2 = durationFormatUtils_Token2.toString();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
        String string3 = durationFormatUtils_Token4.toString();
        durationFormatUtils_Token4.increment();
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object0);
        String string4 = DurationFormatUtils.formatDurationWords(2299, true, true);
        String string5 = DurationFormatUtils.formatPeriodISO(2299, (-1L));
        String string6 = DurationFormatUtils.formatPeriod(1985L, (-1932L), "0java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000182java.lang.StringBuffer@0000000019");
        String string7 = DurationFormatUtils.formatPeriod((-1932L), (-837L), "java.lang.StringBuffer@00000000350java.lang.StringBuffer@00000000360java.lang.StringBuffer@00000000370java.lang.StringBuffer@00000000380java.lang.StringBuffer@00000000390java.lang.StringBuffer@0000000040-2java.lang.StringBuffer@000000004100java.lang.StringBuffer@0000000042");
        String string8 = DurationFormatUtils.formatDurationISO((-1724L));
        String string9 = DurationFormatUtils.formatPeriod((-495L), (-1724L), "~U6O:");
        assertNotNull(string9);
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test04251() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        assertEquals("M", string0);
    }

    @Test(timeout = 4000)
    public void test04252() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test04253() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04254() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test04255() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04256() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04257() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test04258() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        assertNotNull(stringBuffer0);
    }

    @Test(timeout = 4000)
    public void test04259() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        assertEquals("M", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test04260() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        assertEquals(1, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test04261() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04262() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04263() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test04264() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertNotNull(durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test04265() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals("M", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test04266() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals(1, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test04267() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04268() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test04269() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04270() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test04271() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        assertNotNull(durationFormatUtils_Token4);
    }

    @Test(timeout = 4000)
    public void test04272() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test04273() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test04274() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        assertEquals("d", string1);
    }

    @Test(timeout = 4000)
    public void test04275() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test04276() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04277() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test04278() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04279() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test04280() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        assertNotNull(durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test04281() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04282() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test04283() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test04284() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test04285() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04286() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test04287() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test04288() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test04289() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test04290() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test04291() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test04292() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertNotNull(durationFormatUtils_Token6);
    }

    @Test(timeout = 4000)
    public void test04293() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token6;
        String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 115, 39, 8192, 3, 8192, (-2107), true);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test04294() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token6;
        String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 115, 39, 8192, 3, 8192, (-2107), true);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test04295() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token6;
        String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 115, 39, 8192, 3, 8192, (-2107), true);
        assertEquals(7, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test04296() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
        String string0 = (String) DurationFormatUtils.M;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M", (-2107));
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("M");
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(" 1 hours");
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "M");
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(" 1 hours", 115);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token4;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("d", 115);
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token5;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token6;
        String string2 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 115, 39, 8192, 3, 8192, (-2107), true);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test05297() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test05298() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05299() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test05300() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test05301() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        assertTrue(object0.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05302() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        assertFalse(object0.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05303() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test05304() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test05305() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test05306() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        assertTrue(timeZone1.equals((Object) timeZone0));
    }

    @Test(timeout = 4000)
    public void test05307() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        assertNotSame(timeZone1, timeZone0);
    }

    @Test(timeout = 4000)
    public void test05308() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        assertNotNull(timeZone1);
    }

    @Test(timeout = 4000)
    public void test05309() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        assertEquals("GMT", timeZone1.getID());
    }

    @Test(timeout = 4000)
    public void test05310() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        assertTrue(timeZone0.equals((Object) timeZone1));
    }

    @Test(timeout = 4000)
    public void test05311() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        assertNotSame(timeZone0, timeZone1);
    }

    @Test(timeout = 4000)
    public void test05312() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test05313() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test05314() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertTrue(timeZone2.equals((Object) timeZone1));
    }

    @Test(timeout = 4000)
    public void test05315() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertTrue(timeZone2.equals((Object) timeZone0));
    }

    @Test(timeout = 4000)
    public void test05316() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertNotSame(timeZone2, timeZone0);
    }

    @Test(timeout = 4000)
    public void test05317() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertNotSame(timeZone2, timeZone1);
    }

    @Test(timeout = 4000)
    public void test05318() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertNotNull(timeZone2);
    }

    @Test(timeout = 4000)
    public void test05319() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        assertEquals("GMT", timeZone2.getID());
    }

    @Test(timeout = 4000)
    public void test05320() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertTrue(timeZone0.equals((Object) timeZone2));
    }

    @Test(timeout = 4000)
    public void test05321() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertTrue(timeZone0.equals((Object) timeZone1));
    }

    @Test(timeout = 4000)
    public void test05322() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05323() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertFalse(string2.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05324() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05325() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertNotSame(timeZone0, timeZone2);
    }

    @Test(timeout = 4000)
    public void test05326() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertNotSame(timeZone0, timeZone1);
    }

    @Test(timeout = 4000)
    public void test05327() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test05328() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test05329() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05330() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        assertFalse(string3.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05331() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05332() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05333() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test05334() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05335() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05336() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05337() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertFalse(string4.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05338() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05339() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test05340() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        assertEquals("H", string4);
    }

    @Test(timeout = 4000)
    public void test05341() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test05342() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test05343() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05344() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test05345() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05346() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05347() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05348() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05349() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test05350() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertFalse(object1.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test05351() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertTrue(object1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05352() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertFalse(object1.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertFalse(object1.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05354() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertFalse(object1.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05355() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertFalse(object1.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05356() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        assertNotNull(object1);
    }

    @Test(timeout = 4000)
    public void test05357() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test05358() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        assertFalse(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test05359() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test05360() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        assertTrue(boolean2);
    }

    @Test(timeout = 4000)
    public void test05361() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) object1));
    }

    @Test(timeout = 4000)
    public void test05362() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test05363() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05364() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05365() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05366() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05367() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05368() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertFalse(string6.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test05369() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        assertNotNull(string6);
    }

    @Test(timeout = 4000)
    public void test05370() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05371() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test05372() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05373() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05374() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) object1));
    }

    @Test(timeout = 4000)
    public void test05375() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test05376() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05377() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05378() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertFalse(string7.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test05379() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        assertNotNull(string7);
    }

    @Test(timeout = 4000)
    public void test05380() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        assertNotNull(object2);
    }

    @Test(timeout = 4000)
    public void test05381() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test05382() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test05383() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test05384() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test05385() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test05386() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test05387() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test05388() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test05389() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string7));
    }

    @Test(timeout = 4000)
    public void test05390() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test05391() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test05392() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) object1));
    }

    @Test(timeout = 4000)
    public void test05393() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test05394() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test05395() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertFalse(string8.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05396() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        assertNotNull(string8);
    }

    @Test(timeout = 4000)
    public void test05397() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test05398() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test05399() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertTrue(int1 == int0);
    }

    @Test(timeout = 4000)
    public void test05400() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test05401() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertNotSame(durationFormatUtils_Token1, durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test05402() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        String string1 = DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone timeZone1 = TimeZone.getDefault();
        boolean boolean0 = timeZone0.observesDaylightTime();
        TimeZone timeZone2 = TimeZone.getDefault();
        String string2 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string3 = DurationFormatUtils.formatDuration(4574L, " 1 second");
        String string4 = (String) DurationFormatUtils.H;
        boolean boolean1 = durationFormatUtils_Token0.equals("H");
        String string5 = durationFormatUtils_Token0.toString();
        Object object1 = durationFormatUtils_Token0.getValue();
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean2 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        String string6 = DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        String string7 = DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object2 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        String string8 = DurationFormatUtils.formatDurationISO(0L);
        int int1 = durationFormatUtils_Token1.getCount();
        assertEquals(1, int1);
    }

    @Test(timeout = 4000)
    public void test06403() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test06404() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06405() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test06406() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06407() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06408() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06409() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test06410() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06411() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06412() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06413() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06414() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06415() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06416() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06417() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        assertNotNull(durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test06418() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06419() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06420() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06421() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06422() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06423() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06424() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06425() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06426() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06427() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06428() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06429() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06430() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertFalse(durationFormatUtils_Token4.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06431() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        assertNotNull(durationFormatUtils_Token4);
    }

    @Test(timeout = 4000)
    public void test06432() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06433() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06434() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06435() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06436() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertFalse(durationFormatUtils_Token5.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06437() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        assertNotNull(durationFormatUtils_Token5);
    }

    @Test(timeout = 4000)
    public void test06438() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test06439() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        assertEquals("y", string0);
    }

    @Test(timeout = 4000)
    public void test06440() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06441() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06442() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test06443() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06444() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06445() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertFalse(durationFormatUtils_Token6.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06446() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        assertNotNull(durationFormatUtils_Token6);
    }

    @Test(timeout = 4000)
    public void test06447() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        assertNotNull(stringBuffer0);
    }

    @Test(timeout = 4000)
    public void test06448() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        assertEquals("y", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test06449() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        assertEquals(1, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test06450() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06451() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06452() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06453() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06454() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token6));
    }

    @Test(timeout = 4000)
    public void test06455() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06456() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertFalse(durationFormatUtils_Token7.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test06457() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertNotNull(durationFormatUtils_Token7);
    }

    @Test(timeout = 4000)
    public void test06458() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertEquals("y", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test06459() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        assertEquals(1, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test06460() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06461() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06462() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test06463() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token7));
    }

    @Test(timeout = 4000)
    public void test06465() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token6));
    }

    @Test(timeout = 4000)
    public void test06466() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06467() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token6));
    }

    @Test(timeout = 4000)
    public void test06468() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test06469() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06470() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06471() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token7));
    }

    @Test(timeout = 4000)
    public void test06472() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06473() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06474() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertFalse(durationFormatUtils_Token8.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06475() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        assertNotNull(durationFormatUtils_Token8);
    }

    @Test(timeout = 4000)
    public void test06476() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test06477() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token8));
    }

    @Test(timeout = 4000)
    public void test06478() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test06479() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token4));
    }

    @Test(timeout = 4000)
    public void test06480() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token7));
    }

    @Test(timeout = 4000)
    public void test06481() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token5));
    }

    @Test(timeout = 4000)
    public void test06482() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test06483() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token6));
    }

    @Test(timeout = 4000)
    public void test06484() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertFalse(durationFormatUtils_Token9.equals((Object) durationFormatUtils_Token3));
    }

    @Test(timeout = 4000)
    public void test06485() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertNotNull(durationFormatUtils_Token9);
    }

    @Test(timeout = 4000)
    public void test06486() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals("y", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test06487() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals(1, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test06488() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[8] = durationFormatUtils_Token9;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 3, 1276, 980, 980, 674, 1276, true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test06489() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[8] = durationFormatUtils_Token9;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 3, 1276, 980, 980, 674, 1276, true);
        assertEquals(9, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test06490() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[9];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute");
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("y", 674);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 13);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 48);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token("y", 13);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        String string0 = (String) DurationFormatUtils.y;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("y");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        StringBuffer stringBuffer0 = new StringBuffer("y");
        DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(stringBuffer0, 13);
        durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token7;
        DurationFormatUtils.Token durationFormatUtils_Token8 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token8;
        DurationFormatUtils.Token durationFormatUtils_Token9 = new DurationFormatUtils.Token(stringBuffer0);
        durationFormatUtils_TokenArray0[8] = durationFormatUtils_Token9;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 3, 3, 1276, 980, 980, 674, 1276, true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test09491() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertNotNull(simpleTimeZone0);
    }

    @Test(timeout = 4000)
    public void test09492() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertEquals("java.util.SimpleTimeZone[id= 1 minutes,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=77,endTime=77,endTimeMode=0]", simpleTimeZone0.toString());
    }

    @Test(timeout = 4000)
    public void test09493() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertFalse(simpleTimeZone0.useDaylightTime());
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertEquals(" 1 minutes", simpleTimeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test09495() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertEquals(0, simpleTimeZone0.getDSTSavings());
    }

    @Test(timeout = 4000)
    public void test09496() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        assertEquals(0, simpleTimeZone0.getRawOffset());
    }

    @Test(timeout = 4000)
    public void test09497() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertNotNull(locale0);
    }

    @Test(timeout = 4000)
    public void test09498() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09499() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09500() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09501() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09502() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09503() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09504() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09505() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertSame(locale1, locale0);
    }

    @Test(timeout = 4000)
    public void test09506() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertNotNull(locale1);
    }

    @Test(timeout = 4000)
    public void test09507() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09508() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09509() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09510() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09511() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09512() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09513() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zh", locale1.toString());
    }

    @Test(timeout = 4000)
    public void test09514() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale1.getCountry());
    }

    @Test(timeout = 4000)
    public void test09515() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zho", locale1.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09516() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("zh", locale1.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09517() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale1.getVariant());
    }

    @Test(timeout = 4000)
    public void test09518() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        assertEquals("", locale1.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09519() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertFalse(locale2.equals((Object) locale1));
    }

    @Test(timeout = 4000)
    public void test09520() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertFalse(locale2.equals((Object) locale0));
    }

    @Test(timeout = 4000)
    public void test09521() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertNotSame(locale2, locale1);
    }

    @Test(timeout = 4000)
    public void test09522() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertNotSame(locale2, locale0);
    }

    @Test(timeout = 4000)
    public void test09523() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertNotNull(locale2);
    }

    @Test(timeout = 4000)
    public void test09524() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.toString());
    }

    @Test(timeout = 4000)
    public void test09525() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09526() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.getCountry());
    }

    @Test(timeout = 4000)
    public void test09527() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.getVariant());
    }

    @Test(timeout = 4000)
    public void test09528() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09529() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        assertEquals("", locale2.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09530() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09531() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        assertFalse(locale1.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09532() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        assertNotNull(mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test09533() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09534() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertFalse(calendar0.equals((Object) mockGregorianCalendar0));
    }

    @Test(timeout = 4000)
    public void test09535() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09536() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09537() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertNotSame(calendar0, mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test09538() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertNotNull(calendar0);
    }

    @Test(timeout = 4000)
    public void test09539() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09540() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09541() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09542() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09543() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09544() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09545() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test09546() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals(1, calendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test09547() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertTrue(calendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test09548() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        assertEquals(1, calendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test09549() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09550() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09551() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09552() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test09553() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("Chinese", string0);
    }

    @Test(timeout = 4000)
    public void test09554() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09555() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09556() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09557() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09558() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09559() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09560() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09561() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertFalse(locale1.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09562() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertFalse(mockGregorianCalendar0.equals((Object) calendar0));
    }

    @Test(timeout = 4000)
    public void test09563() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertFalse(calendar0.equals((Object) mockGregorianCalendar0));
    }

    @Test(timeout = 4000)
    public void test09564() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09565() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09566() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertSame(locale1, locale0);
    }

    @Test(timeout = 4000)
    public void test09567() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertNotSame(locale1, locale2);
    }

    @Test(timeout = 4000)
    public void test09568() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertNotSame(mockGregorianCalendar0, calendar0);
    }

    @Test(timeout = 4000)
    public void test09569() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertNotSame(calendar0, mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test09570() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test09571() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("java.util.SimpleTimeZone[id= 1 minutes,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=77,endTime=77,endTimeMode=0]", simpleTimeZone0.toString());
    }

    @Test(timeout = 4000)
    public void test09572() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertFalse(simpleTimeZone0.useDaylightTime());
    }

    @Test(timeout = 4000)
    public void test09573() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(" 1 minutes", simpleTimeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test09574() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(0, simpleTimeZone0.getDSTSavings());
    }

    @Test(timeout = 4000)
    public void test09575() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(0, simpleTimeZone0.getRawOffset());
    }

    @Test(timeout = 4000)
    public void test09576() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09577() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09578() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09579() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09580() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09581() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09582() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zh", locale1.toString());
    }

    @Test(timeout = 4000)
    public void test09583() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale1.getCountry());
    }

    @Test(timeout = 4000)
    public void test09584() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zho", locale1.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09585() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("zh", locale1.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09586() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale1.getVariant());
    }

    @Test(timeout = 4000)
    public void test09587() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("", locale1.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09588() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=java.util.SimpleTimeZone[id= 1 minutes,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=77,endTime=77,endTimeMode=0],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
    }

    @Test(timeout = 4000)
    public void test09589() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test09590() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertTrue(mockGregorianCalendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test09591() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test09592() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test09593() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(1, calendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test09594() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertTrue(calendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        assertEquals(1, calendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test09596() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09597() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test09598() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09599() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09600() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09601() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09602() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09603() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09604() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09605() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09606() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09607() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09608() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09609() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09610() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09611() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09612() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09613() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09614() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test09615() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09616() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09617() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test09618() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", string1);
    }

    @Test(timeout = 4000)
    public void test09619() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09620() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09621() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09622() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09623() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09624() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09625() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09626() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test09627() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09628() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09629() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test09630() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("", string2);
    }

    @Test(timeout = 4000)
    public void test09631() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09632() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09633() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09634() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09635() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09636() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09637() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertFalse(locale0.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09638() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertFalse(locale1.equals((Object) locale2));
    }

    @Test(timeout = 4000)
    public void test09639() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertFalse(mockGregorianCalendar0.equals((Object) calendar0));
    }

    @Test(timeout = 4000)
    public void test09640() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertFalse(calendar0.equals((Object) mockGregorianCalendar0));
    }

    @Test(timeout = 4000)
    public void test09641() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertTrue(int1 == int0);
    }

    @Test(timeout = 4000)
    public void test09642() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertNotSame(locale0, locale2);
    }

    @Test(timeout = 4000)
    public void test09643() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test09644() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertSame(locale1, locale0);
    }

    @Test(timeout = 4000)
    public void test09645() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertNotSame(locale1, locale2);
    }

    @Test(timeout = 4000)
    public void test09646() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertNotSame(mockGregorianCalendar0, calendar0);
    }

    @Test(timeout = 4000)
    public void test09647() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertNotSame(calendar0, mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test09648() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(0, int1);
    }

    @Test(timeout = 4000)
    public void test09649() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("java.util.SimpleTimeZone[id= 1 minutes,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=77,endTime=77,endTimeMode=0]", simpleTimeZone0.toString());
    }

    @Test(timeout = 4000)
    public void test09650() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertFalse(simpleTimeZone0.useDaylightTime());
    }

    @Test(timeout = 4000)
    public void test09651() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(" 1 minutes", simpleTimeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test09652() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(0, simpleTimeZone0.getDSTSavings());
    }

    @Test(timeout = 4000)
    public void test09653() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(0, simpleTimeZone0.getRawOffset());
    }

    @Test(timeout = 4000)
    public void test09654() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zh", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test09655() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test09656() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09657() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09658() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test09659() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09660() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zh", locale1.toString());
    }

    @Test(timeout = 4000)
    public void test09661() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale1.getCountry());
    }

    @Test(timeout = 4000)
    public void test09662() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zho", locale1.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test09663() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("zh", locale1.getLanguage());
    }

    @Test(timeout = 4000)
    public void test09664() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale1.getVariant());
    }

    @Test(timeout = 4000)
    public void test09665() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("", locale1.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test09666() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=java.util.SimpleTimeZone[id= 1 minutes,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=77,endTime=77,endTimeMode=0],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
    }

    @Test(timeout = 4000)
    public void test09667() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test09668() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertTrue(mockGregorianCalendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test09669() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test09670() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test09671() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(1, calendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test09672() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertTrue(calendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test09673() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        assertEquals(1, calendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test09674() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, " 1 minutes", 0, 0, 0, 0, 0, 0, 77, 77);
        Locale locale0 = Locale.CHINESE;
        Locale locale1 = locale0.stripExtensions();
        Locale locale2 = Locale.forLanguageTag(" 1 minutes");
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale1);
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        String string0 = locale0.getDisplayLanguage();
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, calendar0, 0, 0);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(locale0, (-1735));
        Locale.setDefault(locale0);
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        int int1 = DurationFormatUtils.reduceAndCorrect(calendar0, mockGregorianCalendar0, 0, 0);
        // Undeclared exception!
        try {
            MockLocalDate.parse((CharSequence) "");
            fail("Expecting exception: DateTimeParseException");
        } catch (DateTimeParseException e) {
            //
            // Text '' could not be parsed at index 0
        }
    }

    @Test(timeout = 4000)
    public void test10675() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test10676() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test10677() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test10678() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test10679() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertEquals(15, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test10680() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test10681() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test10682() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test10683() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test10684() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        assertNotNull(calendar0);
    }

    @Test(timeout = 4000)
    public void test10685() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        assertTrue(calendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test10686() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test10687() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        assertEquals(1, calendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test10688() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        assertEquals(1, calendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test10689() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriod(1L, 1L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string1 = DurationFormatUtils.formatDuration((-1175L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        String string2 = DurationFormatUtils.formatDurationWords(0L, true, true);
        Calendar calendar0 = MockCalendar.getInstance();
        int int0 = 401;
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect(calendar0, calendar0, 401, 401);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test11690() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test11691() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test11692() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test11693() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        assertNotNull(zoneOffset0);
    }

    @Test(timeout = 4000)
    public void test11694() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test11695() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        assertEquals("UTC", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test11696() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        String string2 = DurationFormatUtils.formatPeriod(2419200000L, 162L, "F=X_Bul]Oc[O", false, timeZone0);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test11697() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        String string2 = DurationFormatUtils.formatPeriod(2419200000L, 162L, "F=X_Bul]Oc[O", false, timeZone0);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test11698() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        String string2 = DurationFormatUtils.formatPeriod(2419200000L, 162L, "F=X_Bul]Oc[O", false, timeZone0);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test11699() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(0L, 1L, "ZyB}gFSlRyk<z7a/Yim");
        String string1 = DurationFormatUtils.formatDuration(0L, "java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000101java.lang.StringBuffer@00000000110java.lang.StringBuffer@00000000120");
        ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(0, 0, 0);
        TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
        String string2 = DurationFormatUtils.formatPeriod(2419200000L, 162L, "F=X_Bul]Oc[O", false, timeZone0);
        assertEquals("UTC", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test12700() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test12701() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test12702() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test12703() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test12704() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test12705() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test12706() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test12707() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test12708() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test12709() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test12710() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test12711() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        assertEquals("", string3);
    }

    @Test(timeout = 4000)
    public void test12712() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test12713() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test12714() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test12715() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test12716() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test12717() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000330java.lang.StringBuffer@00000000340java.lang.StringBuffer@00000000350java.lang.StringBuffer@0000000036", 0);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test12718() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(60000L, (-1984L));
        String string1 = DurationFormatUtils.formatDurationWords(181L, true, true);
        String string2 = DurationFormatUtils.formatDurationISO(986L);
        String string3 = DurationFormatUtils.formatPeriod(1020L, (-1L), "");
        String string4 = DurationFormatUtils.formatPeriodISO((-1L), (-1L));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000330java.lang.StringBuffer@00000000340java.lang.StringBuffer@00000000350java.lang.StringBuffer@0000000036", 0);
        boolean boolean0 = durationFormatUtils_Token0.equals("java.lang.StringBuffer@00000000520java.lang.StringBuffer@00000000530java.lang.StringBuffer@00000000540java.lang.StringBuffer@00000000550java.lang.StringBuffer@00000000560java.lang.StringBuffer@00000000570java.lang.StringBuffer@0000000058986java.lang.StringBuffer@0000000059");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test14719() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test14720() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test14721() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test14722() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test14723() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test14724() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test14725() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test14726() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test14727() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals(41, int0);
    }

    @Test(timeout = 4000)
    public void test14728() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test14729() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test14730() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test14731() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test14732() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        Object object0 = durationFormatUtils_Token0.getValue();
        assertSame(durationFormatUtils0, object0);
    }

    @Test(timeout = 4000)
    public void test14733() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        Object object0 = durationFormatUtils_Token0.getValue();
        assertSame(object0, durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test14734() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        Object object0 = durationFormatUtils_Token0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test14735() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 39);
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = DurationFormatUtils.formatPeriod(1L, (long) 39, "0java.lang.StringBuffer@000000000900java.lang.StringBuffer@000000001000java.lang.StringBuffer@0000000011001");
        int int0 = durationFormatUtils_Token0.getCount();
        long long0 = (-1552L);
        String string3 = DurationFormatUtils.formatPeriodISO((-1552L), 41);
        Object object0 = durationFormatUtils_Token0.getValue();
        String string4 = null;
        // Undeclared exception!
        try {
            DurationFormatUtils.formatDuration(1L, (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test15736() throws Throwable {
        String string0 = null;
        // Undeclared exception!
        try {
            DurationFormatUtils.lexx((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test16737() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test16738() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test16739() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16740() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test16741() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test16742() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16743() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16744() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test16745() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        assertEquals(0, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test16746() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test16747() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16748() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test16749() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16750() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test16751() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test16752() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test16753() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16754() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test16755() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16756() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test16757() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test16758() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test16759() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test16760() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test16761() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test16762() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test16763() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16764() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertFalse(string6.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16765() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        assertNotNull(string6);
    }

    @Test(timeout = 4000)
    public void test16766() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test16767() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test16768() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16769() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16770() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test16771() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test16772() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertFalse(string7.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test16773() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        assertNotNull(string7);
    }

    @Test(timeout = 4000)
    public void test16774() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertTrue(string8.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test16775() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test16776() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string6));
    }

    @Test(timeout = 4000)
    public void test16777() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertTrue(string8.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test16778() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test16779() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string7));
    }

    @Test(timeout = 4000)
    public void test16780() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test16781() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertFalse(string8.equals((Object) string5));
    }

    @Test(timeout = 4000)
    public void test16782() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertNotNull(string8);
    }

    @Test(timeout = 4000)
    public void test16783() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        assertEquals("", string8);
    }

    @Test(timeout = 4000)
    public void test16784() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        int int0 = 3431;
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3431, 3431, 4367);
        assertNotNull(mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test16785() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(1L, "", false);
        boolean boolean0 = false;
        String string1 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatDurationHMS(142L);
        String string3 = "";
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        String string4 = DurationFormatUtils.formatDurationWords(1L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("-.b8!,H/6RhUL8L}x", 0);
        durationFormatUtils_Token0.increment();
        String string5 = durationFormatUtils_Token0.toString();
        String string6 = DurationFormatUtils.formatDuration(4242L, "->", true);
        durationFormatUtils_Token0.increment();
        String string7 = DurationFormatUtils.formatDurationWords(4242L, false, true);
        String string8 = DurationFormatUtils.formatDuration((long) 0, "");
        int int0 = 3431;
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3431, 3431, 4367);
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 3431, 0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 3431
        }
    }

    @Test(timeout = 4000)
    public void test17786() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test17787() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        assertEquals("s", string0);
    }

    @Test(timeout = 4000)
    public void test17788() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test17789() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test17790() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test17791() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test17792() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test17793() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test17794() throws Throwable {
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.increment();
        boolean boolean0 = false;
        // Undeclared exception!
        try {
            DurationFormatUtils.formatPeriod((-1107L), (-1107L), (String) null, false, (TimeZone) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test18795() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test18796() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test18797() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test18798() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test18799() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        assertEquals(7, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test18800() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test18801() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test18802() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test18803() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test18804() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test18805() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test18806() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertNotNull(locale0);
    }

    @Test(timeout = 4000)
    public void test18807() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("TW", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test18808() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test18809() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test18810() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test18811() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("zh_TW", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test18812() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        assertEquals("TWN", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test18813() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertNotNull(calendar0);
    }

    @Test(timeout = 4000)
    public void test18814() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test18815() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("TW", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test18816() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test18817() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test18818() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test18819() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("zh_TW", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test18820() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("TWN", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test18821() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertTrue(calendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test18822() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test18823() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals(1, calendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test18824() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        assertEquals(1, calendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test18825() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertFalse(locale1.equals((Object) locale0));
    }

    @Test(timeout = 4000)
    public void test18826() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertNotSame(locale1, locale0);
    }

    @Test(timeout = 4000)
    public void test18827() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertNotNull(locale1);
    }

    @Test(timeout = 4000)
    public void test18828() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("", locale1.getCountry());
    }

    @Test(timeout = 4000)
    public void test18829() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("ita", locale1.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test18830() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("it", locale1.toString());
    }

    @Test(timeout = 4000)
    public void test18831() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("", locale1.getVariant());
    }

    @Test(timeout = 4000)
    public void test18832() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("it", locale1.getLanguage());
    }

    @Test(timeout = 4000)
    public void test18833() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        assertEquals("", locale1.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test18834() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertFalse(locale0.equals((Object) locale1));
    }

    @Test(timeout = 4000)
    public void test18835() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertFalse(locale1.equals((Object) locale0));
    }

    @Test(timeout = 4000)
    public void test18836() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test18837() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test18838() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test18839() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertNotSame(locale0, locale1);
    }

    @Test(timeout = 4000)
    public void test18840() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertNotSame(locale1, locale0);
    }

    @Test(timeout = 4000)
    public void test18841() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test18842() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("cinese (Taiwan)", string3);
    }

    @Test(timeout = 4000)
    public void test18843() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("TW", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test18844() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test18845() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("zho", locale0.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test18846() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("zh", locale0.getLanguage());
    }

    @Test(timeout = 4000)
    public void test18847() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("zh_TW", locale0.toString());
    }

    @Test(timeout = 4000)
    public void test18848() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("TWN", locale0.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test18849() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("", locale1.getCountry());
    }

    @Test(timeout = 4000)
    public void test18850() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("ita", locale1.getISO3Language());
    }

    @Test(timeout = 4000)
    public void test18851() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("it", locale1.toString());
    }

    @Test(timeout = 4000)
    public void test18852() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("", locale1.getVariant());
    }

    @Test(timeout = 4000)
    public void test18853() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("it", locale1.getLanguage());
    }

    @Test(timeout = 4000)
    public void test18854() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        assertEquals("", locale1.getISO3Country());
    }

    @Test(timeout = 4000)
    public void test18855() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, true);
        String string1 = DurationFormatUtils.formatDuration(1359L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", true);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000191359java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        String string2 = DurationFormatUtils.formatDurationHMS(0L);
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
        Locale locale1 = Locale.ITALIAN;
        String string3 = locale0.getDisplayName(locale1);
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect(calendar0, (Calendar) null, 1088, 1088);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test19856() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test19857() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test19858() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test19859() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test19860() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test19861() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test19862() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        assertEquals(1, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test19863() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test19864() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        assertEquals("", string1);
    }

    @Test(timeout = 4000)
    public void test19865() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        String string2 = DurationFormatUtils.formatDuration(2419200000L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test19866() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        String string2 = DurationFormatUtils.formatDuration(2419200000L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test19867() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(durationFormatUtils0, 121);
        String string0 = DurationFormatUtils.formatPeriod(440L, 0L, "0M_E/RG9tfSu&DE.l9");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 858, 858, 858, 24, 24, 24, 0, false);
        String string2 = DurationFormatUtils.formatDuration(2419200000L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test20868() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test20869() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test20870() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test20871() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test20872() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertEquals("", string1);
    }

    @Test(timeout = 4000)
    public void test20873() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test20874() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertTrue(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test20875() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test20876() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        assertEquals("", string2);
    }

    @Test(timeout = 4000)
    public void test20877() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test20878() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test20879() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test20880() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertTrue(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test20881() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertTrue(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test20882() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test20883() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertEquals("", string3);
    }

    @Test(timeout = 4000)
    public void test20884() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO((-3962L), 86400000L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000181java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@00000000213java.lang.StringBuffer@0000000022962java.lang.StringBuffer@0000000023");
        durationFormatUtils_Token0.increment();
        String string1 = DurationFormatUtils.formatDuration(86400000L, "", true);
        String string2 = DurationFormatUtils.formatDuration(86400000L, "", true);
        TimeZone timeZone0 = TimeZone.getTimeZone("m");
        String string3 = DurationFormatUtils.formatPeriod((-3962L), (-2021L), "", true, timeZone0);
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test21885() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test21886() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test21887() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test21888() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test21889() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test21890() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test21891() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        String string3 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test21892() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        String string3 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test21893() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        String string3 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test21894() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(1L, 2419200000L, " ");
        String string1 = DurationFormatUtils.formatDuration(2419200000L, " 1 seconds", false);
        String string2 = DurationFormatUtils.formatDurationHMS(1L);
        String string3 = DurationFormatUtils.formatDurationHMS(0L);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test22895() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(607L, 607L, "");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test22896() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriod(607L, 607L, "");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test23897() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test23898() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        assertEquals(0, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test23899() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test23900() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test23901() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test23902() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test23903() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertTrue(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test23904() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test23905() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test23906() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test23907() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test23908() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test23909() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test23910() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        assertNotSame(durationFormatUtils_Token0, durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test23911() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals(1001, int0);
    }

    @Test(timeout = 4000)
    public void test23912() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test23913() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertEquals(0, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test23914() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-1730L), false, false);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012", 1000);
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        String string2 = durationFormatUtils_Token0.toString();
        boolean boolean0 = durationFormatUtils_Token0.equals("");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1000);
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@0000000011-1java.lang.StringBuffer@0000000012");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test24915() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test24916() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        assertEquals("d", string0);
    }

    @Test(timeout = 4000)
    public void test24917() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test24918() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertFalse(durationFormatUtils_Token1.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test24919() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertNotNull(durationFormatUtils_Token1);
    }

    @Test(timeout = 4000)
    public void test24920() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test24921() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertTrue(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test24922() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test24923() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        assertNotNull(durationFormatUtils_Token2);
    }

    @Test(timeout = 4000)
    public void test24924() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test24925() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token0.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test24926() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertTrue(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test24927() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token2.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test24928() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token2));
    }

    @Test(timeout = 4000)
    public void test24929() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token1));
    }

    @Test(timeout = 4000)
    public void test24930() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertFalse(durationFormatUtils_Token3.equals((Object) durationFormatUtils_Token0));
    }

    @Test(timeout = 4000)
    public void test24931() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        assertNotNull(durationFormatUtils_Token3);
    }

    @Test(timeout = 4000)
    public void test24932() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token3;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 12, (-4698), (-4698), 749, 12, 12, 2340, true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test24933() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token3;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 12, (-4698), (-4698), 749, 12, 12, 2340, true);
        assertEquals(2, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test24934() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token3;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 12, (-4698), (-4698), 749, 12, 12, 2340, true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test24935() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
        String string0 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("d", 12);
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 12);
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token3;
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 12, (-4698), (-4698), 749, 12, 12, 2340, true);
        assertEquals("", string1);
    }

    @Test(timeout = 4000)
    public void test25936() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        assertNotNull(mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test25937() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test25938() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        assertEquals(1, mockGregorianCalendar0.getMinimalDaysInFirstWeek());
    }

    @Test(timeout = 4000)
    public void test25939() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        assertEquals(1, mockGregorianCalendar0.getFirstDayOfWeek());
    }

    @Test(timeout = 4000)
    public void test25940() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-61867346400000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=9,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=185,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=6,HOUR_OF_DAY=18,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
    }

    @Test(timeout = 4000)
    public void test25941() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        assertTrue(mockGregorianCalendar0.isLenient());
    }

    @Test(timeout = 4000)
    public void test25942() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test25943() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test25944() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        assertEquals("m", string0);
    }

    @Test(timeout = 4000)
    public void test25945() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        boolean boolean0 = durationFormatUtils_Token0.equals("m");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test25946() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        boolean boolean0 = durationFormatUtils_Token0.equals("m");
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test25947() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        boolean boolean0 = durationFormatUtils_Token0.equals("m");
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
        assertEquals(5, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test25948() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 114, 0, 114, 0);
        int int0 = DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 0, (-1));
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
        String string0 = (String) DurationFormatUtils.m;
        boolean boolean0 = durationFormatUtils_Token0.equals("m");
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
        boolean boolean1 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test26949() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test26950() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test26951() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test26952() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        assertEquals(4, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test26953() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test26954() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int1 = durationFormatUtils_Token0.getCount();
        assertTrue(int1 == int0);
    }

    @Test(timeout = 4000)
    public void test26955() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int1 = durationFormatUtils_Token0.getCount();
        assertEquals(1, int1);
    }

    @Test(timeout = 4000)
    public void test26956() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int1 = durationFormatUtils_Token0.getCount();
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-2083), 1, 0, 1, (-2083), (-2083), 0, true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test26957() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int1 = durationFormatUtils_Token0.getCount();
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-2083), 1, 0, 1, (-2083), (-2083), 0, true);
        assertEquals(4, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test26958() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-4147L), "x9X@wFn#Teo$gd)&", false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int0 = durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("java.lang.StringBuffer@00000000040java.lang.StringBuffer@0000000005");
        int int1 = durationFormatUtils_Token0.getCount();
        String string1 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-2083), 1, 0, 1, (-2083), (-2083), 0, true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test27959() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test27960() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test27961() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test27962() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test27963() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        TimeZone timeZone0 = TimeZone.getDefault();
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test27964() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        TimeZone timeZone0 = TimeZone.getDefault();
        assertEquals("GMT", timeZone0.getID());
    }

    @Test(timeout = 4000)
    public void test27965() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        TimeZone timeZone0 = TimeZone.getDefault();
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
        assertNotNull(mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test27966() throws Throwable {
        long long0 = 0L;
        String string0 = DurationFormatUtils.formatDuration(0L, "!G'6'fEr[EH");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatDurationWords(0L, false, false);
        TimeZone timeZone0 = TimeZone.getDefault();
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, 378, 378);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test28967() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test28968() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test28969() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        assertNotNull(stringWriter0);
    }

    @Test(timeout = 4000)
    public void test28970() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        assertEquals("", stringWriter0.toString());
    }

    @Test(timeout = 4000)
    public void test28971() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        assertSame(stringWriter0, stringWriter1);
    }

    @Test(timeout = 4000)
    public void test28972() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        assertSame(stringWriter1, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test28973() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        assertNotNull(stringWriter1);
    }

    @Test(timeout = 4000)
    public void test28974() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        assertEquals("", stringWriter0.toString());
    }

    @Test(timeout = 4000)
    public void test28975() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        assertEquals("", stringWriter1.toString());
    }

    @Test(timeout = 4000)
    public void test28976() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertSame(stringWriter0, stringWriter1);
    }

    @Test(timeout = 4000)
    public void test28977() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertSame(stringWriter1, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test28978() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertNotNull(stringBuffer0);
    }

    @Test(timeout = 4000)
    public void test28979() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertEquals("", stringWriter0.toString());
    }

    @Test(timeout = 4000)
    public void test28980() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertEquals("", stringWriter1.toString());
    }

    @Test(timeout = 4000)
    public void test28981() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertEquals("", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test28982() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        assertEquals(0, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test28983() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test28984() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals("", stringWriter0.toString());
    }

    @Test(timeout = 4000)
    public void test28985() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals("", stringWriter1.toString());
    }

    @Test(timeout = 4000)
    public void test28986() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals("", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test28987() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        assertEquals(0, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test28988() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test28989() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertSame(stringWriter0, stringWriter1);
    }

    @Test(timeout = 4000)
    public void test28990() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertSame(stringWriter1, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test28991() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test28992() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", stringWriter0.toString());
    }

    @Test(timeout = 4000)
    public void test28993() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", stringWriter1.toString());
    }

    @Test(timeout = 4000)
    public void test28994() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", stringBuffer0.toString());
    }

    @Test(timeout = 4000)
    public void test28995() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration((-1L), "", true);
        StringWriter stringWriter0 = new StringWriter();
        StringWriter stringWriter1 = stringWriter0.append((CharSequence) "");
        StringBuffer stringBuffer0 = stringWriter1.getBuffer();
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals(0, stringBuffer0.length());
    }

    @Test(timeout = 4000)
    public void test29996() throws Throwable {
        // Undeclared exception!
        try {
            DurationFormatUtils.format((DurationFormatUtils.Token[]) null, (-2335), (-2335), (-2335), 298, 1134, (-3119), (-2335), true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test30997() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test30998() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test30999() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301000() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test301001() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        assertFalse(object0.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test301002() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        assertTrue(object0.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301003() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test301004() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test301005() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        assertFalse(string2.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test301006() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test301007() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301008() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test301009() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test301010() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        assertFalse(string3.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test301011() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test301012() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test301013() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301014() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test301015() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test301016() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertFalse(string4.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test301017() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test301018() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test301019() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301020() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test301021() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals(4, int0);
    }

    @Test(timeout = 4000)
    public void test301022() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) object0));
    }

    @Test(timeout = 4000)
    public void test301023() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test301024() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test301025() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test301026() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test301027() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertFalse(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test301028() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test301029() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        boolean boolean1 = durationFormatUtils_Token0.equals("java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test301030() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1652L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010652");
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        Object object0 = durationFormatUtils_Token0.getValue();
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string2 = DurationFormatUtils.formatPeriodISO(1652L, 1652L);
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils0);
        String string3 = DurationFormatUtils.formatDuration(1652L, " 1 days", true);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatPeriodISO(0L, (-457L));
        int int0 = durationFormatUtils_Token0.getCount();
        String string5 = DurationFormatUtils.formatDuration(1652L, "java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066", true);
        boolean boolean1 = durationFormatUtils_Token0.equals("java.lang.StringBuffer@00000000590java.lang.StringBuffer@00000000600java.lang.StringBuffer@00000000610java.lang.StringBuffer@00000000620java.lang.StringBuffer@00000000630java.lang.StringBuffer@00000000640java.lang.StringBuffer@000000006543java.lang.StringBuffer@0000000066");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test311031() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test311032() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        assertNotNull(durationFormatUtils_Token0);
    }

    @Test(timeout = 4000)
    public void test311033() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test311034() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test311035() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        assertEquals("", string1);
    }

    @Test(timeout = 4000)
    public void test311036() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test311037() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test311038() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        assertEquals("", string2);
    }

    @Test(timeout = 4000)
    public void test311039() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test311040() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test311041() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        assertEquals("", string3);
    }

    @Test(timeout = 4000)
    public void test311042() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        int int0 = durationFormatUtils_Token0.getCount();
        assertEquals((-1390), int0);
    }

    @Test(timeout = 4000)
    public void test311043() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = durationFormatUtils_Token0.equals("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test311044() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = durationFormatUtils_Token0.equals("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test311045() throws Throwable {
        boolean boolean0 = true;
        String string0 = DurationFormatUtils.formatDurationWords(1L, true, true);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", (-1391));
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = durationFormatUtils_Token0.toString();
        String string3 = durationFormatUtils_Token0.toString();
        int int0 = durationFormatUtils_Token0.getCount();
        boolean boolean1 = durationFormatUtils_Token0.equals("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect((Calendar) null, (Calendar) null, 1, 1270);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test321046() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(2L, true, false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test321047() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(2L, true, false);
        String string1 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test321048() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(2L, true, false);
        String string1 = DurationFormatUtils.formatDurationWords(0L, true, true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test331049() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("M}dJ^i,E");
        assertEquals(4, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test331050() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("M}dJ^i,E");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test331051() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("M}dJ^i,E");
        String string0 = DurationFormatUtils.formatDuration(2884L, "`V;I`35Rf:?F0IK=S#G", false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test331052() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("M}dJ^i,E");
        String string0 = DurationFormatUtils.formatDuration(2884L, "`V;I`35Rf:?F0IK=S#G", false);
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 2710, 0, 0);
        assertNotNull(mockGregorianCalendar0);
    }

    @Test(timeout = 4000)
    public void test331053() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("M}dJ^i,E");
        String string0 = DurationFormatUtils.formatDuration(2884L, "`V;I`35Rf:?F0IK=S#G", false);
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 2710, 0, 0);
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar0, (-1), (-1));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test341054() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        assertNotNull(durationFormatUtils0);
    }

    @Test(timeout = 4000)
    public void test341055() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test341056() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        String string1 = DurationFormatUtils.formatDuration(3600000L, "q_:+", true);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test341057() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        String string1 = DurationFormatUtils.formatDuration(3600000L, "q_:+", true);
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test341058() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        String string1 = DurationFormatUtils.formatDuration(3600000L, "q_:+", true);
        String string2 = DurationFormatUtils.formatDurationISO(3600000L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test341059() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        String string1 = DurationFormatUtils.formatDuration(3600000L, "q_:+", true);
        String string2 = DurationFormatUtils.formatDurationISO(3600000L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test341060() throws Throwable {
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string0 = DurationFormatUtils.formatPeriodISO(0L, 1L);
        String string1 = DurationFormatUtils.formatDuration(3600000L, "q_:+", true);
        String string2 = DurationFormatUtils.formatDurationISO(3600000L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test351061() throws Throwable {
        String string0 = DurationFormatUtils.formatDuration(2419200000L, "xs{*:,");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test361062() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test361063() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test361064() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        assertNotNull(string1);
    }

    @Test(timeout = 4000)
    public void test361065() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        assertFalse(string2.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test361066() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        assertFalse(string2.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test361067() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        assertNotNull(string2);
    }

    @Test(timeout = 4000)
    public void test361068() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertFalse(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test361069() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test361070() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertFalse(string3.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test361071() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertEquals(0, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test361072() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertNotNull(string3);
    }

    @Test(timeout = 4000)
    public void test361073() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        assertEquals("", string3);
    }

    @Test(timeout = 4000)
    public void test361074() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        assertFalse(string4.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test361075() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        assertFalse(string4.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test361076() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test361077() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        assertFalse(string4.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test361078() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        assertNotNull(string4);
    }

    @Test(timeout = 4000)
    public void test361079() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertFalse(string5.equals((Object) string4));
    }

    @Test(timeout = 4000)
    public void test361080() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertFalse(string5.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test361081() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertFalse(string5.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test361082() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertTrue(string5.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test361083() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test361084() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertNotNull(string5);
    }

    @Test(timeout = 4000)
    public void test361085() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords((-2053L), false, false);
        String string1 = DurationFormatUtils.formatDurationHMS((-2053L));
        String string2 = DurationFormatUtils.formatPeriodISO(1L, 1L);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        String string3 = DurationFormatUtils.format(durationFormatUtils_TokenArray0, 2773, 2773, 2773, 2773, 2773, 83, 83, false);
        String string4 = DurationFormatUtils.formatDurationHMS((-276L));
        String string5 = DurationFormatUtils.formatDuration((-1L), "");
        assertEquals("", string5);
    }

    @Test(timeout = 4000)
    public void test371086() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("yfL8t2\"|YP[c%Sx");
        assertEquals(4, durationFormatUtils_TokenArray0.length);
    }

    @Test(timeout = 4000)
    public void test371087() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("yfL8t2\"|YP[c%Sx");
        assertNotNull(durationFormatUtils_TokenArray0);
    }

    @Test(timeout = 4000)
    public void test371088() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("yfL8t2\"|YP[c%Sx");
        String string0 = (String) DurationFormatUtils.d;
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test371089() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("yfL8t2\"|YP[c%Sx");
        String string0 = (String) DurationFormatUtils.d;
        assertEquals("d", string0);
    }

    @Test(timeout = 4000)
    public void test381090() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationHMS(1L);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000900java.lang.StringBuffer@0000000010001", 0);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string1 = DurationFormatUtils.formatPeriod(0L, 0L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, (TimeZone) null);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test391091() throws Throwable {
        // Undeclared exception!
        try {
            DurationFormatUtils.formatPeriod(60000L, (-1L), (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test401092() throws Throwable {
        long long0 = (-1L);
        String string0 = null;
        // Undeclared exception!
        try {
            DurationFormatUtils.formatDuration((-1L), (String) null, true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test411093() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO(2498L, 0L);
        String string1 = DurationFormatUtils.formatPeriod(2498L, 0L, "java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000180java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@0000000021-2java.lang.StringBuffer@000000002202java.lang.StringBuffer@0000000023");
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test421094() throws Throwable {
        String string0 = DurationFormatUtils.formatPeriodISO(1L, 0L);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test431095() throws Throwable {
        String string0 = (String) DurationFormatUtils.H;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H", (-862));
        boolean boolean0 = durationFormatUtils_Token0.equals("d' days 'H' hours 'm' minutes 's' seconds'");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test441096() throws Throwable {
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 days", 4165);
        Object object0 = durationFormatUtils_Token0.getValue();
        assertEquals(" 1 days", object0);
    }

    @Test(timeout = 4000)
    public void test451097() throws Throwable {
        long long0 = 0L;
        DurationFormatUtils.formatPeriod(0L, 2419200000L, "WRs!dWao}m");
        Object object0 = null;
        int int0 = 12;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null, 12);
        durationFormatUtils_Token0.equals("java.lang.StringBuffer@00000000070java.lang.StringBuffer@000000000828java.lang.StringBuffer@00000000090");
        DurationFormatUtils.formatPeriod((-2300L), 0L, "WRs!dWao}m");
        long long1 = (-1L);
        // Undeclared exception!
        try {
            durationFormatUtils_Token0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test461098() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, false);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string1 = DurationFormatUtils.formatDuration(4574L, ">lg)E6-d=e%_VsjI~");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        DurationFormatUtils.formatPeriod(0L, 2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        assertTrue(object0.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test461099() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, false);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string1 = DurationFormatUtils.formatDuration(4574L, ">lg)E6-d=e%_VsjI~");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        DurationFormatUtils.formatPeriod(0L, 2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test461100() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, false);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string1 = DurationFormatUtils.formatDuration(4574L, ">lg)E6-d=e%_VsjI~");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        DurationFormatUtils.formatPeriod(0L, 2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object1 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        DurationFormatUtils.formatDurationISO(0L);
        int int0 = durationFormatUtils_Token1.getCount();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test461101() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, true, false);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.getValue();
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        String string1 = DurationFormatUtils.formatDuration(4574L, ">lg)E6-d=e%_VsjI~");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        DurationFormatUtils.formatPeriod(0L, 2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        Object object0 = durationFormatUtils_Token0.getValue();
        durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        DurationFormatUtils.formatPeriodISO((-1382L), 1L);
        DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        Object object1 = new Object();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("", 1);
        DurationFormatUtils.formatDurationISO(0L);
        int int0 = durationFormatUtils_Token1.getCount();
        String string3 = DurationFormatUtils.formatDurationHMS((-716L));
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test471102() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, true);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        String string1 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        assertFalse(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test471103() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, true);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        String string1 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        DurationFormatUtils.formatDuration(4574L, " 1 son");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        durationFormatUtils_Token0.toString();
        Object object0 = durationFormatUtils_Token0.getValue();
        assertTrue(object0.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test471104() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, true);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        String string1 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        DurationFormatUtils.formatDuration(4574L, " 1 son");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        durationFormatUtils_Token0.toString();
        Object object0 = durationFormatUtils_Token0.getValue();
        durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test471105() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, true);
        DurationFormatUtils.formatDuration(2419200000L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuffer@0000000019-1875767296java.lang.StringBuffer@0000000020java.lang.StringBuffer@0000000021java.lang.StringBuffer@0000000022java.lang.StringBuffer@0000000023");
        TimeZone.getDefault();
        timeZone0.observesDaylightTime();
        TimeZone.getDefault();
        String string1 = DurationFormatUtils.formatPeriod(0L, 0L, "0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012", false, timeZone0);
        DurationFormatUtils.formatDuration(4574L, " 1 son");
        String string2 = (String) DurationFormatUtils.H;
        durationFormatUtils_Token0.equals("H");
        durationFormatUtils_Token0.toString();
        Object object0 = durationFormatUtils_Token0.getValue();
        durationFormatUtils_Token0.getCount();
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[0];
        boolean boolean0 = durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
        DurationFormatUtils.formatDurationHMS(0L);
        DurationFormatUtils.formatPeriod((long) 1, 4574L, "OU4cq2M-5ffJXi\"fg?");
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.StringBuffer@00000000310java.lang.StringBuffer@0000000032java.lang.StringBuffer@0000000033java.lang.StringBuffer@0000000034java.lang.StringBuffer@0000000035", 1);
        DurationFormatUtils.formatDurationISO(0L);
        DurationFormatUtils.formatDurationHMS((-716L));
        StringBuffer stringBuffer0 = new StringBuffer(1000);
        boolean boolean1 = durationFormatUtils_Token1.equals(stringBuffer0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test481106() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        Object object0 = new Object();
        int int0 = 2299;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2299);
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("s", 2299);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("s");
        durationFormatUtils_Token2.toString();
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
        durationFormatUtils_Token2.toString();
        durationFormatUtils_Token0.increment();
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_TokenArray0[3], 2299);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token3;
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
        // Undeclared exception!
        try {
            durationFormatUtils_Token3.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test491107() throws Throwable {
        String string0 = (String) DurationFormatUtils.H;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H", (-3000));
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
        DurationFormatUtils.formatPeriod((long) (-3000), (long) (-3000), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
        durationFormatUtils_Token1.increment();
        durationFormatUtils_Token1.toString();
        String string1 = (String) DurationFormatUtils.m;
        durationFormatUtils_Token1.equals("m");
        DurationFormatUtils.formatDurationISO((-3000));
        durationFormatUtils_Token1.toString();
        DurationFormatUtils.formatDurationWords((-2L), true, false);
        durationFormatUtils_Token0.increment();
        DurationFormatUtils.formatDurationWords(2193L, true, true);
        DurationFormatUtils.formatDurationISO(2193L);
        durationFormatUtils_Token1.increment();
        // Undeclared exception!
        try {
            DurationFormatUtils.reduceAndCorrect((Calendar) null, (Calendar) null, (-3000), (-3000));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test501108() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = new Locale("", "AI<l~HS6");
        simpleTimeZone0.observesDaylightTime();
        locale0.getDisplayName();
        Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0, locale0);
        int int0 = DurationFormatUtils.reduceAndCorrect(calendar0, calendar0, 0, 0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test501109() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "");
        Locale locale0 = new Locale("", "AI<l~HS6");
        simpleTimeZone0.observesDaylightTime();
        locale0.getDisplayName();
        Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0, locale0);
        int int0 = DurationFormatUtils.reduceAndCorrect(calendar0, calendar0, 0, 0);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=java.util.SimpleTimeZone[id=,offset=0,dstSavings=3600000,useDaylight=false,startYear=0,startMode=0,startMonth=0,startDay=0,startDayOfWeek=0,startTime=0,startTimeMode=0,endMode=0,endMonth=0,endDay=0,endDayOfWeek=0,endTime=0,endTimeMode=0],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test511110() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = DurationFormatUtils.formatDuration(0L, "");
        DurationFormatUtils.formatDurationISO(2123L);
        durationFormatUtils_Token0.increment();
        String string3 = DurationFormatUtils.formatPeriod(1L, 2123L, "", false, (TimeZone) null);
        assertTrue(string3.equals((Object) string2));
    }

    @Test(timeout = 4000)
    public void test511111() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = DurationFormatUtils.formatDuration(0L, "");
        DurationFormatUtils.formatDurationISO(2123L);
        durationFormatUtils_Token0.increment();
        String string3 = DurationFormatUtils.formatPeriod(1L, 2123L, "", false, (TimeZone) null);
        assertFalse(string3.equals((Object) string1));
    }

    @Test(timeout = 4000)
    public void test511112() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = DurationFormatUtils.formatDuration(0L, "");
        DurationFormatUtils.formatDurationISO(2123L);
        durationFormatUtils_Token0.increment();
        String string3 = DurationFormatUtils.formatPeriod(1L, 2123L, "", false, (TimeZone) null);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatDurationHMS(0L);
        assertFalse(string4.equals((Object) string3));
    }

    @Test(timeout = 4000)
    public void test511113() throws Throwable {
        String string0 = DurationFormatUtils.formatDurationWords(0L, false, false);
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
        durationFormatUtils_Token0.increment();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string1 = durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.increment();
        String string2 = DurationFormatUtils.formatDuration(0L, "");
        DurationFormatUtils.formatDurationISO(2123L);
        durationFormatUtils_Token0.increment();
        String string3 = DurationFormatUtils.formatPeriod(1L, 2123L, "", false, (TimeZone) null);
        durationFormatUtils_Token0.increment();
        String string4 = DurationFormatUtils.formatDurationHMS(0L);
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        String string5 = DurationFormatUtils.formatDurationWords((-110L), false, false);
        assertFalse(string5.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test521114() throws Throwable {
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
        String string0 = (String) DurationFormatUtils.s;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s", 1);
        durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("", 1);
        durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
        durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
        String string1 = (String) DurationFormatUtils.d;
        DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token("d");
        DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3, 1);
        durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token4;
        DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token4);
        durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token5;
        durationFormatUtils_Token4.increment();
        String string2 = (String) DurationFormatUtils.H;
        DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("H");
        durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token6;
        durationFormatUtils_Token3.increment();
        durationFormatUtils_Token5.toString();
        DurationFormatUtils.format(durationFormatUtils_TokenArray0, 221, 1592, 1, 3158, 221, 425, 939, true);
        // Undeclared exception!
        try {
            ZoneOffset.ofHoursMinutesSeconds(221, 221, 939);
            fail("Expecting exception: DateTimeException");
        } catch (DateTimeException e) {
            //
            // Zone offset hours not in valid range: value 221 is not in the range -18 to 18
        }
    }

    @Test(timeout = 4000)
    public void test531115() throws Throwable {
        String string0 = (String) DurationFormatUtils.H;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H");
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.equals("H");
        durationFormatUtils_Token0.toString();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.String@0000000002", 12);
        durationFormatUtils_Token1.increment();
        durationFormatUtils_Token1.toString();
        DurationFormatUtils.formatDuration((long) 12, "_tbC-%xi+9l");
        durationFormatUtils_Token1.equals("_tbC-%xi+9l");
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.formatDuration((-332L), "org.apache.commons.lang.time.DurationFormatUtils$Token");
        DurationFormatUtils.formatDuration((-332L), "s", false);
        DurationFormatUtils.formatDurationISO(1L);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("");
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token2);
        Locale locale0 = Locale.JAPAN;
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        DurationFormatUtils.reduceAndCorrect(calendar0, calendar0, 12, 12);
        assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392408561320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=9,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", calendar0.toString());
    }

    @Test(timeout = 4000)
    public void test531116() throws Throwable {
        String string0 = (String) DurationFormatUtils.H;
        DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("H");
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.toString();
        durationFormatUtils_Token0.equals("H");
        durationFormatUtils_Token0.toString();
        DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.String@0000000002", 12);
        durationFormatUtils_Token1.increment();
        durationFormatUtils_Token1.toString();
        DurationFormatUtils.formatDuration((long) 12, "_tbC-%xi+9l");
        durationFormatUtils_Token1.equals("_tbC-%xi+9l");
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
        DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
        DurationFormatUtils.formatDuration((-332L), "org.apache.commons.lang.time.DurationFormatUtils$Token");
        DurationFormatUtils.formatDuration((-332L), "s", false);
        DurationFormatUtils.formatDurationISO(1L);
        DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("");
        boolean boolean0 = DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token2);
        Locale locale0 = Locale.JAPAN;
        Calendar calendar0 = MockCalendar.getInstance(locale0);
        DurationFormatUtils.reduceAndCorrect(calendar0, calendar0, 12, 12);
        DurationFormatUtils.Token[] durationFormatUtils_TokenArray1 = new DurationFormatUtils.Token[0];
        locale0.getDisplayName();
        DurationFormatUtils.format(durationFormatUtils_TokenArray1, 0, 0, 0, 0, 2628, 1059, 0, false);
        String string1 = (String) DurationFormatUtils.S;
        boolean boolean1 = durationFormatUtils_Token0.equals("S");
        assertTrue(boolean1 == boolean0);
    }
}
