/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 20:24:50 GMT 2023
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Entities;
import org.junit.runner.RunWith;

public class EntitiesTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        String string0 = Entities.unescape("");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Document document0 = new Document("jT[b");
        Document.OutputSettings document_OutputSettings0 = document0.new OutputSettings();
        String string0 = Entities.escape("", document_OutputSettings0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Charset charset0 = Charset.defaultCharset();
        CharsetEncoder charsetEncoder0 = charset0.newEncoder();
        Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
        String string0 = Entities.escape("Ubi*BVLuS\"c%", charsetEncoder0, entities_EscapeMode0);
        assertEquals("Ubi*BVLuS&quot;c%", string0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Charset charset0 = Charset.defaultCharset();
        CharsetEncoder charsetEncoder0 = charset0.newEncoder();
        Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
        String string0 = Entities.escape("", charsetEncoder0, entities_EscapeMode0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        // Undeclared exception!
        try {
            Entities.unescape((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        // Undeclared exception!
        try {
            Entities.unescape("&bsol;&lcub;e");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // character to be escaped is missing
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        // Undeclared exception!
        try {
            Entities.escape((String) null, (Document.OutputSettings) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
        // Undeclared exception!
        try {
            Entities.escape("au(C{mK <vz", (CharsetEncoder) null, entities_EscapeMode0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        String string0 = Entities.unescape("&F");
        assertEquals("&F", string0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        String string0 = Entities.unescape("im ]C&#EOe");
        assertEquals("im ]C&#EOe", string0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        String string0 = Entities.unescape("au(C{mK &lt;vz");
        assertEquals("au(C{mK <vz", string0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Document document0 = new Document("");
        Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
        Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
        String string0 = Entities.escape("sfr", document_OutputSettings1);
        assertEquals("sfr", string0);
    }
}
