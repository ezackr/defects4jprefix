/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:19:23 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.jsoup.nodes.Attributes;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

public class TokenTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag(" />", attributes0);
        String string0 = token_StartTag0.name();
        assertEquals(" />", string0);
    }

    @Test(timeout = 4000)
    public void test041() throws Throwable {
        Token.Comment token_Comment0 = new Token.Comment();
        String string0 = token_Comment0.getData();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test052() throws Throwable {
        Token.Character token_Character0 = new Token.Character("|#8%_F&&?:?[Cv).[{");
        String string0 = token_Character0.getData();
        assertEquals("|#8%_F&&?:?[Cv).[{", string0);
    }

    @Test(timeout = 4000)
    public void test063() throws Throwable {
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("", attributes0);
        Token.StartTag token_StartTag1 = token_StartTag0.asStartTag();
        assertSame(token_StartTag0, token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test074() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        token_Doctype0.forceQuirks = true;
        Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
        assertTrue(token_Doctype1.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test085() throws Throwable {
        Token.Comment token_Comment0 = new Token.Comment();
        Token.Comment token_Comment1 = token_Comment0.asComment();
        assertSame(token_Comment1, token_Comment0);
    }

    @Test(timeout = 4000)
    public void test096() throws Throwable {
        Token.Character token_Character0 = new Token.Character((String) null);
        Token.Character token_Character1 = token_Character0.asCharacter();
        assertSame(token_Character0, token_Character1);
    }

    @Test(timeout = 4000)
    public void test107() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag("");
        // Undeclared exception!
        try {
            token_EndTag0.asDoctype();
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Doctype
        }
    }

    @Test(timeout = 4000)
    public void test118() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isEOF();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test129() throws Throwable {
        Token.Character token_Character0 = new Token.Character("c@te");
        boolean boolean0 = token_Character0.isCharacter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1310() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = token_Doctype0.isCharacter();
        assertFalse(token_Doctype0.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test1311() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = token_Doctype0.isCharacter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1412() throws Throwable {
        Token.Comment token_Comment0 = new Token.Comment();
        boolean boolean0 = token_Comment0.isComment();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1513() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isComment();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1614() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isEndTag();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1715() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = token_Doctype0.isEndTag();
        assertFalse(token_Doctype0.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test1716() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = token_Doctype0.isEndTag();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1817() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
        Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
        token_EndTag1.type = token_TokenType0;
        boolean boolean0 = token_EndTag1.isStartTag();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1918() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isStartTag();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2019() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
        token_EndTag0.type = token_TokenType0;
        boolean boolean0 = token_EndTag0.isDoctype();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2120() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isDoctype();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2221() throws Throwable {
        Token.StartTag token_StartTag0 = new Token.StartTag("org.j^oup.parser.Token$TokenT]pe");
        String string0 = token_StartTag0.toString();
        assertEquals("<org.j^oup.parser.Token$TokenT]pe>", string0);
    }

    @Test(timeout = 4000)
    public void test2522() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        token_EndTag0.appendTagName('J');
        String string0 = token_EndTag0.toString();
        assertEquals("</J>", string0);
    }

    @Test(timeout = 4000)
    public void test2623() throws Throwable {
        Token.StartTag token_StartTag0 = new Token.StartTag("", (Attributes) null);
        // Undeclared exception!
        try {
            token_StartTag0.toString();
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Must be false
        }
    }

    @Test(timeout = 4000)
    public void test2824() throws Throwable {
        Token.Character token_Character0 = new Token.Character("Doctype");
        String string0 = token_Character0.toString();
        assertEquals("Doctype", string0);
    }

    @Test(timeout = 4000)
    public void test2925() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = token_Doctype0.isForceQuirks();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3026() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        token_Doctype0.getPublicIdentifier();
        assertFalse(token_Doctype0.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test3127() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        token_Doctype0.getName();
        assertFalse(token_Doctype0.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test3228() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        token_Doctype0.getSystemIdentifier();
        assertFalse(token_Doctype0.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test3329() throws Throwable {
        Token.Comment token_Comment0 = new Token.Comment();
        String string0 = token_Comment0.toString();
        assertEquals("<!---->", string0);
    }

    @Test(timeout = 4000)
    public void test3430() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        boolean boolean0 = token_EndTag0.isSelfClosing();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3531() throws Throwable {
        Token.StartTag token_StartTag0 = new Token.StartTag("L8N5Xye})SGoac`r&", (Attributes) null);
        token_StartTag0.appendAttributeName('O');
        token_StartTag0.finaliseTag();
        String string0 = token_StartTag0.toString();
        assertEquals("<L8N5Xye})SGoac`r&  o=\"\">", string0);
    }

    @Test(timeout = 4000)
    public void test3632() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        Token.Tag token_Tag0 = token_EndTag0.name("");
        assertSame(token_EndTag0, token_Tag0);
    }

    @Test(timeout = 4000)
    public void test3733() throws Throwable {
        Token.EndTag token_EndTag0 = new Token.EndTag();
        Attributes attributes0 = token_EndTag0.getAttributes();
        assertNull(attributes0);
    }

    @Test(timeout = 4000)
    public void test3834() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        // Undeclared exception!
        try {
            token_Doctype0.asComment();
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$Comment
        }
    }

    @Test(timeout = 4000)
    public void test3935() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
        Token.TokenType token_TokenType0 = Token.TokenType.EOF;
        token_Doctype1.type = token_TokenType0;
        boolean boolean0 = token_Doctype1.isEOF();
        assertFalse(token_Doctype1.isForceQuirks());
    }

    @Test(timeout = 4000)
    public void test3936() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
        Token.TokenType token_TokenType0 = Token.TokenType.EOF;
        token_Doctype1.type = token_TokenType0;
        boolean boolean0 = token_Doctype1.isEOF();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4037() throws Throwable {
        Token.Comment token_Comment0 = new Token.Comment();
        // Undeclared exception!
        try {
            token_Comment0.asStartTag();
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$StartTag
        }
    }

    @Test(timeout = 4000)
    public void test4138() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        // Undeclared exception!
        try {
            token_Doctype0.asCharacter();
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$Character
        }
    }

    @Test(timeout = 4000)
    public void test4239() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        // Undeclared exception!
        try {
            token_Doctype0.asEndTag();
            fail("Expecting exception: ClassCastException");
        } catch (ClassCastException e) {
            //
            // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$EndTag
        }
    }

    @Test(timeout = 4000)
    public void test4340() throws Throwable {
        Token.Doctype token_Doctype0 = new Token.Doctype();
        token_Doctype0.tokenType();
        assertFalse(token_Doctype0.isForceQuirks());
    }
}
