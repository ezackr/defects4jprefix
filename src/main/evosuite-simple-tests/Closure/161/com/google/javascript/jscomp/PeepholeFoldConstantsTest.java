/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 05:56:07 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.junit.runner.RunWith;

public class PeepholeFoldConstantsTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        SyntheticAst syntheticAst0 = new SyntheticAst("8(sqX?`&&");
        Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(4095, Node.MAX_COLUMN_NUMBER);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1327), (-1327), 101);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(1, Node.LEFT);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(0, 0, 0);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(44, Node.IS_OPTIONAL_PARAM);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(97, "vS65J", 86, 35);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(96);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(95, "AH", 95, (-29));
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(92, "vS65J", 86, 35);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = new Node(91);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(90);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(87);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(86, "");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(85, "\n\nSubtree1: ", 85, 85);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(32, Node.INCRDECR_PROP);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(77, 78, (-2634));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(39, Node.EMPTY_BLOCK);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(74);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(37, Node.OPT_ARG_NAME);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(73, "\n\nSubtree1: ", 73, 73);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(72);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(13, Node.CASES_PROP);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(67);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(1, Node.LEFT);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(64, "", 64, 64);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(0, Node.NON_SPECIALCALL);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(63);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(0, node1.getLength());
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(62, 62, 62);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(15, Node.CASEARRAY_PROP);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(61, "com.google.javascript.jscomp.ReferenceCollectingCallback$Reference");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(36, Node.QUOTED_PROP);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(59, "lzI", 52, 120);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals((-2), Node.OBJECT_IDS_PROP);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(57, "\n\nSubtree1: ", 57, 57);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(8, Node.CODEOFFSET_PROP);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(56, 56, 56);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals((-2), Node.OBJECT_IDS_PROP);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(55, 55, 55);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(25, Node.ISNUMBER_PROP);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(54);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(51, Node.STATIC_SOURCE_FILE);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("");
        node0.setType(52);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(20, Node.FINALLY_PROP);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(50);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals((-1), Node.CATCH_SCOPE_PROP);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(46, 12, 30);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node1.wasEmptyNode());
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(41, "", 41, 41);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals((-2), Node.OBJECT_IDS_PROP);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(39, Node.EMPTY_BLOCK);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(35, "com.google.javascript.jscomp.Scope$Var", 35, 35);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(34, "", 34, 34);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(30, Node.VAR_ARGS_NAME);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(25);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(6, Node.TEMP_PROP);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(21, 140, 21);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            //
            // com/google/common/base/Predicate
        }
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(16, 30, 37);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(44, Node.IS_OPTIONAL_PARAM);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(15);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(40, Node.ORIGINALNAME_PROP);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(14);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(34, Node.NAME_PROP);
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(13);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(16, Node.SOURCENAME_PROP);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(122, "AH", 122, 0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber(0.0);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(17, Node.TYPE_PROP);
    }
}
