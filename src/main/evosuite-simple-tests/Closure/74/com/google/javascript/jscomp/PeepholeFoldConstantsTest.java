/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 01:42:44 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.rhino.Node;
import org.junit.runner.RunWith;

public class PeepholeFoldConstantsTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-2148));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(29, Node.VAR_ARGS_NAME);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(0, 0, 0);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(6, Node.TEMP_PROP);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(93, (-4096), (-2048));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(27, Node.SPECIALCALL_PROP);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(92);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(90, "67qe @qB{Z");
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(89, "", 89, (-923));
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(86);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(30, Node.SKIP_INDEXES_PROP);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(85);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node1.isLocalResultCall());
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(82);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(0, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(79, 302, 302);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node1.isVarArgs());
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(68, "WRyV~h!VASf@r04z");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(6, Node.TEMP_PROP);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(54, 302, 302);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(49, Node.FREE_CALL);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(44);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(7, Node.LOCAL_PROP);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(42, "");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals((-3), Node.LOCAL_BLOCK_PROP);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("[uP2spC+", (-2720), (-2720));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(23, Node.VARIABLE_PROP);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(22, 15, 9);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node1.isUnscopedQualifiedName());
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(13, "4Ki^Y$-|AR[0?\"0");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(42, Node.IS_CONSTANT_NAME);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((-1450.943739274602));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(11, Node.USES_PROP);
    }
}
