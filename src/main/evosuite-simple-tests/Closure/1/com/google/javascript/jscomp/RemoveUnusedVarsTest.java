/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 21:52:42 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.RemoveUnusedVars;
import com.google.javascript.jscomp.SimpleDefinitionFinder;
import com.google.javascript.rhino.Node;
import org.junit.runner.RunWith;

public class RemoveUnusedVarsTest {

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("aruments");
        AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
        compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
        RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, true, true, true);
        // Undeclared exception!
        try {
            removeUnusedVars0.process(node0, node0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // INTERNAL COMPILER ERROR.
            // Please report this problem.
            // Unexpected lValue type NAME
            //   Node(NAME aruments): [testcode]:1:0
            // aruments
            //   Parent(EXPR_RESULT): [testcode]:1:0
            // aruments
        }
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("argumens");
        RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, true, true, true);
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
        Node node1 = new Node(37, node0, node0, node0, node0);
        removeUnusedVars0.process(node0, node1, simpleDefinitionFinder0);
        assertEquals(37, node1.getType());
    }

    @Test(timeout = 4000)
    public void test32() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("inlineP`erties");
        RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, false, false, false);
        Node node0 = Node.newString(86, "inlineP`erties", 32, 49);
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
        // Undeclared exception!
        try {
            removeUnusedVars0.process(node0, node0, simpleDefinitionFinder0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test43() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arguments");
        RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, false, false, false);
        SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
        removeUnusedVars0.process(node0, node0, simpleDefinitionFinder0);
        assertFalse(node0.isExprResult());
    }
}
