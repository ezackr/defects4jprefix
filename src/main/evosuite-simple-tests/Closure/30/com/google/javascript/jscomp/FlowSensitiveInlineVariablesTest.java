/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 23:13:08 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.FlowSensitiveInlineVariables;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.rhino.Node;
import org.junit.runner.RunWith;

public class FlowSensitiveInlineVariablesTest {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
        // Undeclared exception!
        try {
            flowSensitiveInlineVariables0.process((Node) null, (Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
        flowSensitiveInlineVariables0.exitScope(nodeTraversal0);
        assertEquals(0, nodeTraversal0.getLineNumber());
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
        flowSensitiveInlineVariables0.visit(nodeTraversal0, (Node) null, (Node) null);
        assertEquals(0, nodeTraversal0.getLineNumber());
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
        flowSensitiveInlineVariables0.enterScope(nodeTraversal0);
        assertEquals(0, nodeTraversal0.getLineNumber());
    }
}
