/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 23:27:18 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.CodeConsumer;
import com.google.javascript.jscomp.CodeGenerator;
import com.google.javascript.rhino.Node;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.junit.runner.RunWith;

public class CodeGeneratorTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("\t\n\u000B\f\r \u0085\u1680\u2028\u2029\u205F\u3000");
        assertEquals("/\\t\\n\\x0B\\u000c\\r \\u0085\\u1680\\u2028\\u2029\\u205f\\u3000/", string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.tagAsStrict();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("bmC]]>F8k");
        assertEquals("\"bmC]]\\>F8k\"", string0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addCaseBody((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = new Node(47);
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test085() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test096() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("\"h</script>e\"");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test107() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("662");
        assertEquals(662.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test118() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("yk7)</scriptle_a+");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test129() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("0");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1310() throws Throwable {
        Node node0 = new Node(85);
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addArrayList(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1411() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = Node.newString("h<!--(s>>e");
        CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0, false, codeGenerator_Context0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1512() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = Node.newString(51, "?5+IBxkrW!Wvx");
        CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0, true, codeGenerator_Context0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1713() throws Throwable {
        Node node0 = new Node(92, 92, 92);
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addAllSiblings(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
        }
    }

    @Test(timeout = 4000)
    public void test1814() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("\"[h<!--\"(.s>>e\"");
        assertEquals("\"\\\"[h<\\!--\\\"(.s>>e\\\"\"", string0);
    }

    @Test(timeout = 4000)
    public void test1915() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("{1)S3CQ.}'nM0%9%R");
        assertEquals("\"{1)S3CQ.}'nM0%9%R\"", string0);
    }

    @Test(timeout = 4000)
    public void test2016() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString(">A=9fq");
        assertEquals("\">A=9fq\"", string0);
    }

    @Test(timeout = 4000)
    public void test2117() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("!-->%");
        assertEquals("\"!--\\>%\\u007f\"", string0);
    }

    @Test(timeout = 4000)
    public void test2218() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("]a->N~b?7=E");
        assertEquals("/]a->N~b?7=E/", string0);
    }

    @Test(timeout = 4000)
    public void test2319() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("!.(K0C=]Kg]><S)/G");
        assertEquals("\"!.(K0C=]Kg]><S)/G\"", string0);
    }

    @Test(timeout = 4000)
    public void test2420() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("h</script");
        assertEquals("/h<\\/script/", string0);
    }

    @Test(timeout = 4000)
    public void test2521() throws Throwable {
        Charset charset0 = Charset.defaultCharset();
        CharsetEncoder charsetEncoder0 = charset0.newEncoder();
        String string0 = CodeGenerator.regexpEscape(":6Do(`&gRv^", charsetEncoder0);
        assertEquals("/:6Do(`&gRv^/", string0);
    }

    @Test(timeout = 4000)
    public void test2622() throws Throwable {
        String string0 = CodeGenerator.identifierEscape("\t\n\u000B\f\r \u0085\u1680\u2028\u2029");
        assertEquals("\\u0009\\u000a\\u000b\\u000c\\u000d \\u0085\\u1680\\u2028\\u2029", string0);
    }

    @Test(timeout = 4000)
    public void test2723() throws Throwable {
        String string0 = CodeGenerator.identifierEscape(":+P)%`a");
        assertEquals(":+P)%`a", string0);
    }
}
