/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 23:38:25 GMT 2024
 */
package com.fasterxml.jackson.databind.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.ValueInstantiator;
import com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
import com.fasterxml.jackson.databind.jsontype.NamedType;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.Annotations;
import com.fasterxml.jackson.databind.util.ViewMatcher;
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import java.sql.SQLTransientException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SettableBeanProperty_ESTest extends SettableBeanProperty_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        Boolean boolean0 = Boolean.valueOf(true);
        ObjectMapper objectMapper1 = objectMapper0.setDefaultMergeable(boolean0);
        Class<IllegalArgumentException> class0 = IllegalArgumentException.class;
        ObjectReader objectReader0 = objectMapper1.readerFor(class0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        creatorProperty0._throwAsIOE((Exception) null, propertyMetadata0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        int int0 = creatorProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        int int0 = creatorProperty0.getPropertyIndex();
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<Annotation> class0 = Annotation.class;
        creatorProperty0.getContextAnnotation(class0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        TypeDeserializer typeDeserializer0 = creatorProperty0.getValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        AnnotationMap annotationMap0 = new AnnotationMap();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, annotationMap0, (AnnotatedParameter) null, (-2289), (Object) null, propertyMetadata0);
        ObjectIdInfo objectIdInfo0 = ObjectIdInfo.empty();
        ObjectIdReferenceProperty objectIdReferenceProperty0 = new ObjectIdReferenceProperty(creatorProperty0, objectIdInfo0);
        objectIdReferenceProperty0.markAsIgnorable();
        objectIdReferenceProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        creatorProperty0.getDeclaringClass();
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1787), (Object) null, propertyMetadata0);
        MockIOException mockIOException0 = new MockIOException();
        creatorProperty0._throwAsIOE(mockIOException0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 68, (Object) null, propertyMetadata0);
        creatorProperty0.setManagedReferenceName("#on Q");
        creatorProperty0.isRequired();
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-4), "Null JavaType passed", propertyMetadata0);
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
        SettableBeanProperty settableBeanProperty0 = creatorProperty1.withSimpleName("JSON");
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-4), "Null JavaType passed", propertyMetadata0);
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
        SettableBeanProperty settableBeanProperty0 = creatorProperty1.withSimpleName("JSON");
        creatorProperty1.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-4), "Null JavaType passed", propertyMetadata0);
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, (PropertyName) null);
        SettableBeanProperty settableBeanProperty0 = creatorProperty1.withSimpleName("JSON");
        settableBeanProperty0.getName();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        AnnotationMap annotationMap0 = new AnnotationMap();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, annotationMap0, (AnnotatedParameter) null, (-2289), (Object) null, propertyMetadata0);
        Class<MapType> class0 = MapType.class;
        Class<ObjectIdGenerators.IntSequenceGenerator> class1 = ObjectIdGenerators.IntSequenceGenerator.class;
        Class<ObjectIdResolver> class2 = ObjectIdResolver.class;
        ObjectIdInfo objectIdInfo0 = new ObjectIdInfo((PropertyName) null, class0, class1, class2);
        ObjectIdReferenceProperty objectIdReferenceProperty0 = new ObjectIdReferenceProperty(creatorProperty0, objectIdInfo0);
        String string0 = objectIdReferenceProperty0.toString();
        objectIdReferenceProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test1015() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        AnnotationMap annotationMap0 = new AnnotationMap();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, annotationMap0, (AnnotatedParameter) null, (-2289), (Object) null, propertyMetadata0);
        Class<MapType> class0 = MapType.class;
        Class<ObjectIdGenerators.IntSequenceGenerator> class1 = ObjectIdGenerators.IntSequenceGenerator.class;
        Class<ObjectIdResolver> class2 = ObjectIdResolver.class;
        ObjectIdInfo objectIdInfo0 = new ObjectIdInfo((PropertyName) null, class0, class1, class2);
        ObjectIdReferenceProperty objectIdReferenceProperty0 = new ObjectIdReferenceProperty(creatorProperty0, objectIdInfo0);
        String string0 = objectIdReferenceProperty0.toString();
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        PropertyName propertyName0 = creatorProperty0.getWrapperName();
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        PropertyName propertyName0 = creatorProperty0.getWrapperName();
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1139), (Object) null, propertyMetadata0);
        ObjectIdInfo objectIdInfo0 = ObjectIdInfo.empty();
        creatorProperty0.setObjectIdInfo(objectIdInfo0);
        objectIdInfo0.getAlwaysAsId();
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        PropertyName propertyName0 = creatorProperty0.getFullName();
    }

    @Test(timeout = 4000)
    public void test1320() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        PropertyName propertyName0 = creatorProperty0.getFullName();
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        creatorProperty0.getNullValueProvider();
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 2331, (Object) null, propertyMetadata0);
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer((JsonDeserializer<?>) null);
        settableBeanProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test1523() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 2331, (Object) null, propertyMetadata0);
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer((JsonDeserializer<?>) null);
    }

    @Test(timeout = 4000)
    public void test1624() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 9, (Object) null, propertyMetadata0);
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withSimpleName("");
    }

    @Test(timeout = 4000)
    public void test1725() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, (Object) null, propertyMetadata0);
        creatorProperty0.assignIndex(2);
        creatorProperty0.assignIndex(2);
    }

    @Test(timeout = 4000)
    public void test1826() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yr? P3MXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base();
        creatorProperty0.depositSchemaProperty(jsonObjectFormatVisitor_Base0, defaultSerializerProvider_Impl0);
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test1927() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yr? P3MXq", true, (JavaType) null);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 836, (Object) null, propertyMetadata0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base();
        creatorProperty0.depositSchemaProperty(jsonObjectFormatVisitor_Base0, defaultSerializerProvider_Impl0);
        creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 101, (Object) null, propertyMetadata0);
        JsonDeserializer<CreatorProperty> jsonDeserializer0 = (JsonDeserializer<CreatorProperty>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
        boolean boolean0 = creatorProperty1.hasValueDeserializer();
        creatorProperty1.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test2029() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 101, (Object) null, propertyMetadata0);
        JsonDeserializer<CreatorProperty> jsonDeserializer0 = (JsonDeserializer<CreatorProperty>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
        boolean boolean0 = creatorProperty1.hasValueDeserializer();
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        boolean boolean0 = creatorProperty0.hasValueTypeDeserializer();
    }

    @Test(timeout = 4000)
    public void test2231() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 2, propertyMetadata0, propertyMetadata0);
        JsonDeserializer<Object> jsonDeserializer0 = creatorProperty0.getValueDeserializer();
    }

    @Test(timeout = 4000)
    public void test2332() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<Object> class0 = Object.class;
        boolean boolean0 = creatorProperty0.visibleInView(class0);
    }

    @Test(timeout = 4000)
    public void test2433() throws Throwable {
        Class<SettableBeanProperty> class0 = SettableBeanProperty.class;
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 2, propertyMetadata0, propertyMetadata0);
        ViewMatcher viewMatcher0 = new ViewMatcher();
        creatorProperty0._viewMatcher = viewMatcher0;
        boolean boolean0 = creatorProperty0.visibleInView(class0);
    }

    @Test(timeout = 4000)
    public void test2534() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<ClassNameIdResolver>[] classArray0 = (Class<ClassNameIdResolver>[]) Array.newInstance(Class.class, 8);
        Class<ClassNameIdResolver> class0 = ClassNameIdResolver.class;
        classArray0[0] = class0;
        creatorProperty0.setViews(classArray0);
        boolean boolean0 = creatorProperty0.visibleInView(class0);
        creatorProperty0.hasViews();
    }

    @Test(timeout = 4000)
    public void test2535() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<ClassNameIdResolver>[] classArray0 = (Class<ClassNameIdResolver>[]) Array.newInstance(Class.class, 8);
        Class<ClassNameIdResolver> class0 = ClassNameIdResolver.class;
        classArray0[0] = class0;
        creatorProperty0.setViews(classArray0);
        boolean boolean0 = creatorProperty0.visibleInView(class0);
    }

    @Test(timeout = 4000)
    public void test2636() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1:Kyx~Yo? P3zMXq", false, (JavaType) null);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 17, asPropertyTypeDeserializer0, propertyMetadata0);
        ViewMatcher viewMatcher0 = new ViewMatcher();
        creatorProperty0._viewMatcher = viewMatcher0;
        boolean boolean0 = creatorProperty0.hasViews();
    }

    @Test(timeout = 4000)
    public void test2737() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, classNameIdResolver0, "JSON", false, (JavaType) null);
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asWrapperTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, (-1019), (Object) null, propertyMetadata0);
        creatorProperty0.deserialize(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2838() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(simpleObjectIdResolver0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
        Object object0 = creatorProperty1.deserialize(jsonParser0, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2839() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(simpleObjectIdResolver0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
        Object object0 = creatorProperty1.deserialize(jsonParser0, (DeserializationContext) null);
        creatorProperty1.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test2940() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        doReturn((Object) null).when(jsonDeserializer0).getNullValue(any(com.fasterxml.jackson.databind.DeserializationContext.class));
        CreatorProperty creatorProperty1 = new CreatorProperty(creatorProperty0, jsonDeserializer0, jsonDeserializer0);
        creatorProperty1.deserialize(jsonParser0, (DeserializationContext) null);
        creatorProperty1.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test3041() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, "", true, (JavaType) null);
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, (-261), "", propertyMetadata0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        creatorProperty0.deserializeWith(jsonParser0, (DeserializationContext) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test3142() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<SettableBeanProperty> class0 = SettableBeanProperty.class;
        NamedType namedType0 = new NamedType(class0);
        JsonDeserializer<NamedType> jsonDeserializer0 = (JsonDeserializer<NamedType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(namedType0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.jsontype.NamedType.class));
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        Object object0 = settableBeanProperty0.deserializeWith(jsonParser0, (DeserializationContext) null, (Object) null);
        settableBeanProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test3143() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        Class<SettableBeanProperty> class0 = SettableBeanProperty.class;
        NamedType namedType0 = new NamedType(class0);
        JsonDeserializer<NamedType> jsonDeserializer0 = (JsonDeserializer<NamedType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(namedType0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.jsontype.NamedType.class));
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        Object object0 = settableBeanProperty0.deserializeWith(jsonParser0, (DeserializationContext) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test3244() throws Throwable {
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, (-1), (Object) null, propertyMetadata0);
        JsonDeserializer<ReaderBasedJsonParser> jsonDeserializer0 = (JsonDeserializer<ReaderBasedJsonParser>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.core.json.ReaderBasedJsonParser.class));
        doReturn((Object) null).when(jsonDeserializer0).getNullValue(any(com.fasterxml.jackson.databind.DeserializationContext.class));
        SettableBeanProperty settableBeanProperty0 = creatorProperty0.withValueDeserializer(jsonDeserializer0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        settableBeanProperty0.deserializeWith(jsonParser0, (DeserializationContext) null, (Object) null);
        settableBeanProperty0.getPropertyIndex();
    }

    @Test(timeout = 4000)
    public void test3345() throws Throwable {
        Class<Object> class0 = Object.class;
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, (TypeDeserializer) null, (Annotations) null, (AnnotatedParameter) null, 24, valueInstantiator_Base0, propertyMetadata0);
        MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException();
        creatorProperty0._throwAsIOE((JsonParser) null, mockIllegalArgumentException0, class0);
    }

    @Test(timeout = 4000)
    public void test3446() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "WM1Kbx~Yo? P3zMXq", true, (JavaType) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();
        CreatorProperty creatorProperty0 = new CreatorProperty((PropertyName) null, (JavaType) null, (PropertyName) null, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 2, asPropertyTypeDeserializer0, propertyMetadata0);
        SQLTransientException sQLTransientException0 = new SQLTransientException("WM1Kbx~Yo? P3zMXq");
        MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException(sQLTransientException0);
        Object object0 = new Object();
        creatorProperty0._throwAsIOE(mockIllegalArgumentException0, object0);
    }
}
