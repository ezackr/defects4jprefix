/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 23:04:48 GMT 2024
 */
package com.fasterxml.jackson.databind.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.CollectionType;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ReferenceType_ESTest extends ReferenceType_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        Class<CollectionType> class0 = CollectionType.class;
        TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
        ReferenceType referenceType1 = (ReferenceType) referenceType0.refine(class0, typeBindings0, referenceType0, (JavaType[]) null);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        JavaType javaType0 = referenceType0.getReferencedType();
        javaType0.useStaticType();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        boolean boolean0 = referenceType0.isReferenceType();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        String string0 = referenceType0.getTypeName();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        String string0 = referenceType0.getErasedSignature();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        Class<String> class0 = String.class;
        ReferenceType referenceType1 = (ReferenceType) referenceType0._narrow(class0);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        boolean boolean0 = referenceType0.hasContentType();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Class<SimpleType> class0 = SimpleType.class;
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType.construct((Class<?>) class0, (JavaType) referenceType0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        StringBuilder stringBuilder0 = new StringBuilder();
        referenceType0.getGenericSignature(stringBuilder0);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Class<String> class0 = String.class;
        TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        JavaType[] javaTypeArray0 = new JavaType[1];
        MapType mapType0 = new MapType(simpleType0, javaTypeArray0[0], simpleType0);
        ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, javaTypeArray0[0], javaTypeArray0, (JavaType) mapType0);
        JavaType javaType0 = referenceType0.getAnchorType();
        javaType0.useStaticType();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Class<String> class0 = String.class;
        TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        JavaType[] javaTypeArray0 = new JavaType[1];
        MapType mapType0 = new MapType(simpleType0, javaTypeArray0[0], simpleType0);
        ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, javaTypeArray0[0], javaTypeArray0, (JavaType) mapType0);
        JavaType javaType0 = referenceType0.getAnchorType();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        CollectionType collectionType0 = new CollectionType(simpleType0, simpleType0);
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        JavaType javaType0 = collectionType0.withHandlersFrom(referenceType0);
        javaType0.hasValueHandler();
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        ReferenceType.upgradeFrom((JavaType) null, (JavaType) null);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
        ReferenceType.upgradeFrom((JavaType) null, simpleType0);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(referenceType0);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(referenceType0);
        referenceType1.equals((Object) referenceType0);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(simpleType0);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
        ReferenceType referenceType1 = referenceType0.withTypeHandler(typeBindings0);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1518() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
        ReferenceType referenceType1 = referenceType0.withTypeHandler(typeBindings0);
        referenceType1.equals((Object) referenceType0);
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        PlaceholderForType placeholderForType0 = new PlaceholderForType(55);
        ReferenceType referenceType0 = new ReferenceType(placeholderForType0, placeholderForType0);
        ReferenceType referenceType1 = referenceType0.withTypeHandler((Object) null);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1720() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentTypeHandler((Object) null);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        Integer integer0 = new Integer(1);
        ReferenceType referenceType1 = referenceType0.withValueHandler(integer0);
        boolean boolean0 = referenceType1.isAnchorType();
        referenceType0.equals((Object) referenceType1);
    }

    @Test(timeout = 4000)
    public void test1822() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        Integer integer0 = new Integer(1);
        ReferenceType referenceType1 = referenceType0.withValueHandler(integer0);
        boolean boolean0 = referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        Integer integer0 = new Integer(1);
        ReferenceType referenceType1 = referenceType0.withValueHandler(integer0);
        boolean boolean0 = referenceType1.isAnchorType();
        referenceType0.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test1924() throws Throwable {
        Class<Object> class0 = Object.class;
        SimpleType simpleType0 = new SimpleType(class0);
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withValueHandler((Object) null);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2025() throws Throwable {
        Class<SimpleType> class0 = SimpleType.class;
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentValueHandler(class0);
        referenceType1.equals((Object) referenceType0);
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        Class<SimpleType> class0 = SimpleType.class;
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentValueHandler(class0);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
        CollectionType collectionType0 = new CollectionType(simpleType0, simpleType0);
        ReferenceType referenceType0 = new ReferenceType(collectionType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentValueHandler((Object) null);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2228() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withStaticTyping();
        ReferenceType referenceType2 = referenceType1.withStaticTyping();
        referenceType2.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withStaticTyping();
        ReferenceType referenceType2 = referenceType1.withStaticTyping();
        referenceType0.equals((Object) referenceType1);
    }

    @Test(timeout = 4000)
    public void test2230() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withStaticTyping();
        ReferenceType referenceType2 = referenceType1.withStaticTyping();
        referenceType2.useStaticType();
    }

    @Test(timeout = 4000)
    public void test2331() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        boolean boolean0 = referenceType0.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2432() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        boolean boolean0 = referenceType0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test2533() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        TypeFactory typeFactory0 = TypeFactory.instance;
        Class<LinkedList> class0 = LinkedList.class;
        CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class0, (JavaType) referenceType0);
        collectionType0.isCollectionLikeType();
    }

    @Test(timeout = 4000)
    public void test2634() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
        ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(917);
        boolean boolean0 = referenceType0.equals(placeholderForType0);
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentTypeHandler(simpleType0);
        boolean boolean0 = referenceType0.equals(referenceType1);
    }

    @Test(timeout = 4000)
    public void test2736() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        ReferenceType referenceType1 = referenceType0.withContentTypeHandler(simpleType0);
        boolean boolean0 = referenceType0.equals(referenceType1);
        referenceType1.isAnchorType();
    }

    @Test(timeout = 4000)
    public void test2837() throws Throwable {
        SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        ArrayType arrayType0 = ArrayType.construct((JavaType) simpleType0, typeBindings0);
        ReferenceType referenceType1 = new ReferenceType(arrayType0, referenceType0);
        boolean boolean0 = referenceType1.equals(referenceType0);
    }
}
