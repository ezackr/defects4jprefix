/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 18:22:23 GMT 2024
 */
package org.apache.commons.math3.optimization.fitting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer;
import org.apache.commons.math3.optimization.fitting.HarmonicFitter;
import org.apache.commons.math3.optimization.fitting.WeightedObservedPoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HarmonicFitter_ESTest extends HarmonicFitter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        HarmonicFitter harmonicFitter0 = new HarmonicFitter((DifferentiableMultivariateVectorOptimizer) null);
        harmonicFitter0.fit((double[]) null);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        HarmonicFitter harmonicFitter0 = new HarmonicFitter((DifferentiableMultivariateVectorOptimizer) null);
        harmonicFitter0.fit();
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1030.4608761268375, 1030.4608761268375, 1030.4608761268375);
        WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4];
        weightedObservedPointArray0[0] = weightedObservedPoint0;
        weightedObservedPointArray0[1] = weightedObservedPoint0;
        weightedObservedPointArray0[2] = weightedObservedPoint0;
        weightedObservedPointArray0[3] = weightedObservedPointArray0[0];
        HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0);
        double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1030.4608761268375, 1030.4608761268375, 1030.4608761268375);
        WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(1030.4608761268375, (-322.64885113551), 1030.4608761268375);
        WeightedObservedPoint weightedObservedPoint2 = new WeightedObservedPoint(1030.4608761268375, (-321.598), (-321.598));
        WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4];
        weightedObservedPointArray0[0] = weightedObservedPoint0;
        weightedObservedPointArray0[1] = weightedObservedPoint1;
        weightedObservedPointArray0[2] = weightedObservedPoint2;
        WeightedObservedPoint weightedObservedPoint3 = new WeightedObservedPoint(1030.4608761268375, (-1420.9443359), 1030.4608761268375);
        weightedObservedPointArray0[3] = weightedObservedPoint3;
        HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0);
        double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess();
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1030.4608761268375, 1030.4608761268375, 1030.4608761268375);
        WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(1030.4608761268375, (-322.64885113551), 1030.4608761268375);
        WeightedObservedPoint weightedObservedPoint2 = new WeightedObservedPoint(1030.4608761268375, (-321.598), (-321.598));
        WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4];
        weightedObservedPointArray0[0] = weightedObservedPoint0;
        weightedObservedPointArray0[1] = weightedObservedPoint1;
        weightedObservedPointArray0[2] = weightedObservedPoint2;
        WeightedObservedPoint weightedObservedPoint3 = new WeightedObservedPoint(1030.4608761268375, (-322.6488511355125), 1030.4608761268375);
        weightedObservedPointArray0[3] = weightedObservedPoint3;
        HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0);
        double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess();
    }
}
