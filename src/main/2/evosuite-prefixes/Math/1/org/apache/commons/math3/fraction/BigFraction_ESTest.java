/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 16:22:55 GMT 2024
 */
package org.apache.commons.math3.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.math3.fraction.BigFraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BigFraction_ESTest extends BigFraction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1212), (-1212));
        bigFraction0.pow((double) (-1212));
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction(629, 629);
        bigFraction0.FOUR_FIFTHS.bigDecimalValue(629);
        Object object0 = null;
        object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        BigFraction bigFraction1 = bigFraction0.reduce();
        BigFraction bigFraction2 = bigFraction1.FOUR_FIFTHS.divide(1);
        bigFraction0.doubleValue();
        bigFraction1.intValue();
        bigFraction0.THREE_FIFTHS.pow((double) 1);
        bigFraction2.hashCode();
        bigFraction1.getDenominatorAsLong();
        bigFraction2.getNumerator();
        bigFraction1.pow(1452.93995995);
        bigFraction1.subtract(bigFraction2);
        bigFraction1.getField();
        BigFraction bigFraction3 = new BigFraction((double) 2L);
        bigFraction3.longValue();
        bigFraction3.bigDecimalValue(0, (-2144306896));
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1));
        bigFraction0.THREE_QUARTERS.getNumeratorAsLong();
        bigFraction0.getDenominator();
        bigFraction0.negate();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;
        bigFraction0.percentageValue();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigFraction0.TWO.subtract(bigInteger0);
        bigFraction0.add(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.ONE_QUARTER.subtract(1057);
        bigFraction1.ZERO.add(bigFraction0);
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.add(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(553.603);
        bigFraction0.ONE_QUARTER.getField();
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        bigFraction0.ONE_FIFTH.subtract((-3512299194304650054L));
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1702.8185132671565));
        bigFraction0.TWO_FIFTHS.bigDecimalValue(3643, 3643);
        Object object0 = null;
        bigFraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigFraction bigFraction1 = BigFraction.ONE;
        BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
        bigFraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BigFraction bigFraction0 = BigFraction.MINUS_ONE;
        bigFraction0.TWO_FIFTHS.getDenominatorAsLong();
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        bigFraction0.ONE_HALF.pow(2481);
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = bigFraction0.TWO.reduce();
        bigFraction1.TWO_QUARTERS.longValue();
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        bigFraction0.floatValue();
        bigFraction0.pow((-1061L));
        bigFraction0.doubleValue();
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction0.subtract(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO;
        bigFraction0.subtract(bigFraction0);
        BigFraction bigFraction1 = bigFraction0.add(bigFraction0);
        bigFraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-1715.0));
        bigFraction0.ONE_HALF.doubleValue();
        bigFraction0.divide((BigFraction) null);
        int int0 = 2146784824;
        Random.setNextRandom(int0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        bigFraction0.ONE_HALF.add((-1380L));
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction1 = new BigFraction(bigInteger0);
        bigFraction0.add(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        bigFraction0.bigDecimalValue();
        BigFraction bigFraction1 = new BigFraction(986.0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        bigFraction0.doubleValue();
        bigFraction0.TWO_THIRDS.intValue();
        Object object0 = new Object();
        bigFraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.ONE_THIRD.multiply(9007194020249600L);
        bigFraction0.add(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigFraction bigFraction1 = BigFraction.getReducedFraction(2147483584, 2147483584);
        bigFraction0.add(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        Object object0 = new Object();
        bigFraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = BigFraction.ONE_THIRD;
        bigFraction1.MINUS_ONE.reciprocal();
        bigFraction1.toString();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        bigFraction0.TWO_QUARTERS.subtract(bigFraction0);
        BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.reduce();
        BigFraction bigFraction2 = bigFraction0.ONE_FIFTH.reciprocal();
        bigFraction2.TWO.compareTo(bigFraction1);
        BigFraction bigFraction3 = bigFraction0.subtract((-2123));
        BigFraction bigFraction4 = bigFraction3.ONE.pow((-2123));
        bigFraction1.getDenominatorAsLong();
        BigFraction bigFraction5 = bigFraction1.subtract(bigFraction0);
        bigFraction4.subtract(bigFraction0);
        bigFraction5.subtract(bigFraction2);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(260L);
        bigFraction0.ONE_FIFTH.hashCode();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(2.0902045062932175E102);
        bigFraction0.ONE.pow(2.0902045062932175E102);
        bigFraction0.ONE_THIRD.divide(113236205062349959L);
        bigFraction0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((double) (byte) (-28));
        bigFraction0.THREE_QUARTERS.getDenominatorAsInt();
        Object object0 = new Object();
        bigFraction0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-9223372036854775808L));
        BigInteger bigInteger0 = BigInteger.ONE;
        bigFraction0.pow(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(3.430336362898836E-90);
        bigFraction0.TWO.divide(1037);
        bigFraction0.equals("");
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = bigFraction0.TWO.pow(3429L);
        bigFraction0.doubleValue();
        BigInteger bigInteger0 = BigInteger.TEN;
        bigFraction1.subtract(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 716);
        bigFraction0.getNumeratorAsInt();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction1 = null;
        bigFraction1 = new BigFraction(bigInteger0, bigInteger0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        bigFraction0.floatValue();
        bigFraction0.multiply(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.reciprocal();
        bigFraction0.divide(bigFraction0);
        bigFraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.FOUR_FIFTHS.add(2147481325);
        bigFraction0.TWO.getNumeratorAsInt();
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        BigFraction bigFraction1 = bigFraction0.TWO_THIRDS.multiply((-2785));
        bigFraction0.divide(bigFraction1);
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;
        bigFraction0.add(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-37L), 3972L);
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        BigFraction bigFraction1 = bigFraction0.TWO.multiply((-2571));
        bigFraction1.THREE_QUARTERS.getDenominatorAsInt();
        bigFraction1.ONE_QUARTER.intValue();
        bigFraction0.ONE.percentageValue();
        BigInteger bigInteger0 = null;
        bigFraction0.ONE_QUARTER.divide((BigInteger) null);
        long long0 = 724L;
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((-2931.0756520898617), 656.7105368, 734);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = new BigFraction((-6.950808333865794E-9), (-6.950808333865794E-9), 1);
        bigFraction1.toString();
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        BigFraction bigFraction1 = BigFraction.ONE_HALF;
        BigFraction bigFraction2 = new BigFraction((double) (-181), (-2767));
        bigFraction2.subtract(bigFraction1);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1.7636451721191406);
        BigFraction bigFraction1 = bigFraction0.subtract(0L);
        BigFraction bigFraction2 = bigFraction1.pow(0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigFraction1.TWO_QUARTERS.multiply(bigInteger0);
        bigFraction0.THREE_FIFTHS.divide(bigInteger0);
        BigFraction bigFraction3 = BigFraction.THREE_QUARTERS;
        bigFraction3.add(bigFraction2);
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1.7396889119023863E293, 1.7396889119023863E293, 52);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;
        bigFraction0.TWO_THIRDS.multiply((-2785));
        BigFraction bigFraction1 = bigFraction0.add((-2939L));
        bigFraction1.ONE_FIFTH.pow((-2785));
        bigFraction1.reduce();
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(260L);
        BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;
        bigFraction1.ONE_FIFTH.hashCode();
        bigFraction0.THREE_FIFTHS.multiply(bigFraction1);
        bigFraction0.getNumeratorAsLong();
        bigFraction1.abs();
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        BigFraction bigFraction1 = BigFraction.TWO;
        BigFraction bigFraction2 = bigFraction0.TWO_THIRDS.add(bigFraction1);
        BigFraction bigFraction3 = bigFraction2.ONE_HALF.pow((-1571L));
        BigFraction bigFraction4 = BigFraction.getReducedFraction((-2331), (-2331));
        bigFraction0.ONE.add((-1571L));
        double double0 = bigFraction0.TWO_THIRDS.pow(0.0);
        bigFraction0.ONE_FIFTH.getDenominatorAsLong();
        bigFraction0.intValue();
        bigFraction0.getNumeratorAsLong();
        bigFraction0.multiply((BigFraction) null);
        bigFraction4.longValue();
        bigFraction2.pow(double0);
        bigFraction4.bigDecimalValue();
        bigFraction3.bigDecimalValue();
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_THIRDS;
        BigFraction bigFraction1 = new BigFraction(2301, 2301, (-1107));
        BigInteger bigInteger0 = BigInteger.TEN;
        BigFraction bigFraction2 = bigFraction1.multiply(bigInteger0);
        BigFraction bigFraction3 = BigFraction.ZERO;
        BigFraction bigFraction4 = bigFraction3.pow(bigInteger0);
        BigFraction bigFraction5 = new BigFraction((-1107));
        BigFraction bigFraction6 = bigFraction3.multiply(bigInteger0);
        BigFraction bigFraction7 = bigFraction1.multiply(bigFraction4);
        BigFraction bigFraction8 = BigFraction.TWO_QUARTERS;
        BigFraction bigFraction9 = bigFraction8.reduce();
        bigFraction2.multiply(bigFraction7);
        BigFraction bigFraction10 = bigFraction6.negate();
        bigFraction9.hashCode();
        bigFraction6.getDenominatorAsLong();
        BigInteger bigInteger1 = BigInteger.ZERO;
        bigFraction9.subtract(bigInteger0);
        BigFraction bigFraction11 = BigFraction.MINUS_ONE;
        bigFraction11.divide(bigFraction7);
        bigFraction10.bigDecimalValue();
        bigFraction4.percentageValue();
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ZERO;
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        BigFraction bigFraction1 = BigFraction.ONE;
        bigFraction0.equals(bigFraction1);
        BigFraction bigFraction2 = BigFraction.ONE_THIRD;
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.reciprocal();
        bigFraction0.divide(bigFraction0);
        bigFraction0.toString();
        bigFraction0.doubleValue();
        BigFraction bigFraction2 = BigFraction.ONE_HALF;
        BigFraction bigFraction3 = new BigFraction(0.3333333333333333, (-181));
        bigFraction1.subtract(bigFraction3);
        bigFraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(553.603);
        bigFraction0.getDenominatorAsLong();
        BigFraction bigFraction1 = new BigFraction((double) 8796093022208L);
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        BigFraction bigFraction1 = new BigFraction(0.28229647874832153, (-181));
        BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
        bigFraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.reciprocal();
        BigFraction bigFraction2 = bigFraction0.divide(bigFraction0);
        BigFraction bigFraction3 = bigFraction0.subtract(100L);
        bigFraction3.toString();
        bigFraction1.doubleValue();
        BigFraction bigFraction4 = BigFraction.ONE_HALF;
        BigFraction bigFraction5 = bigFraction1.subtract((BigFraction) null);
        bigFraction1.abs();
        bigFraction2.add(bigFraction5);
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = bigFraction0.MINUS_ONE.reciprocal();
        bigFraction1.ZERO.multiply(bigFraction0);
        bigFraction0.divide(bigFraction0);
        bigFraction0.toString();
        bigFraction0.doubleValue();
        BigFraction bigFraction2 = BigFraction.ONE_HALF;
        BigFraction bigFraction3 = new BigFraction(0.3333333333333333, (-181));
        bigFraction2.doubleValue();
    }

    @Test(timeout = 4000)
    public void test5959() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        BigFraction bigFraction1 = BigFraction.ONE_THIRD;
        BigFraction bigFraction2 = bigFraction1.MINUS_ONE.reciprocal();
        BigFraction bigFraction3 = bigFraction0.ONE_QUARTER.divide((-965));
        BigFraction bigFraction4 = bigFraction0.ZERO.multiply(2049);
        BigFraction bigFraction5 = bigFraction1.ONE_HALF.add((-965));
        bigFraction0.divide(bigFraction1);
        bigFraction1.add(bigFraction5);
        bigFraction4.multiply(bigFraction0);
        bigFraction2.getNumeratorAsLong();
        bigFraction3.abs();
    }

    @Test(timeout = 4000)
    public void test6060() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        BigFraction bigFraction1 = new BigFraction(6.589508586785087E-6, Integer.MAX_VALUE);
        bigFraction0.TWO_QUARTERS.add(bigFraction1);
        bigFraction0.toString();
    }

    @Test(timeout = 4000)
    public void test6161() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_FIFTH;
        bigFraction0.add((BigFraction) null);
    }

    @Test(timeout = 4000)
    public void test6262() throws Throwable {
        BigFraction bigFraction0 = new BigFraction((double) 769, 769);
        BigFraction bigFraction1 = null;
    }

    @Test(timeout = 4000)
    public void test6363() throws Throwable {
        BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.multiply((-2785));
        BigFraction bigFraction2 = bigFraction0.subtract((long) (-2785));
        BigFraction bigFraction3 = bigFraction0.pow(1808);
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction4 = bigFraction0.multiply(bigInteger0);
        bigFraction3.bigDecimalValue(0);
        bigFraction1.reduce();
        bigFraction0.multiply((-4510L));
        BigFraction bigFraction5 = bigFraction4.add(3122);
        BigFraction bigFraction6 = bigFraction3.subtract(bigFraction5);
        bigFraction5.getNumeratorAsLong();
        bigFraction2.doubleValue();
        bigFraction6.multiply(bigInteger0);
        bigFraction6.floatValue();
    }

    @Test(timeout = 4000)
    public void test6464() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_THIRD;
        bigFraction0.MINUS_ONE.reciprocal();
        bigFraction0.divide(bigFraction0);
        bigFraction0.toString();
        bigFraction0.doubleValue();
        BigFraction bigFraction1 = BigFraction.ONE_HALF;
        BigFraction bigFraction2 = new BigFraction(0.3333333333333333, (-181));
        bigFraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test6565() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_HALF;
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction1 = bigFraction0.pow(bigInteger0);
        BigFraction bigFraction2 = bigFraction1.subtract(bigInteger0);
        BigFraction bigFraction3 = new BigFraction(1519.99, 2147483067);
        BigFraction bigFraction4 = bigFraction0.subtract(bigFraction2);
        bigFraction4.doubleValue();
    }

    @Test(timeout = 4000)
    public void test6666() throws Throwable {
        BigFraction bigFraction0 = BigFraction.ONE_QUARTER;
        BigFraction bigFraction1 = new BigFraction(192L);
        BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 48;
        byteArray0[1] = (byte) 16;
        byteArray0[2] = (byte) 3;
        byteArray0[3] = (byte) (-35);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigFraction2.TWO_THIRDS.divide(bigInteger0);
        BigInteger bigInteger1 = null;
        BigFraction bigFraction3 = bigFraction2.subtract((BigInteger) null);
        bigFraction3.TWO_QUARTERS.hashCode();
        bigFraction1.ZERO.reciprocal();
        BigFraction bigFraction4 = bigFraction1.multiply(bigInteger1);
        BigFraction bigFraction5 = BigFraction.TWO_FIFTHS;
        bigFraction4.TWO.divide(bigFraction5);
    }

    @Test(timeout = 4000)
    public void test6767() throws Throwable {
        BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
        bigFraction0.doubleValue();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-23);
        byteArray0[1] = (byte) (-14);
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigInteger0.toByteArray();
        bigFraction0.pow(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test6868() throws Throwable {
        BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;
        bigFraction0.floatValue();
        BigFraction bigFraction1 = bigFraction0.subtract(bigFraction0);
        bigFraction1.doubleValue();
        bigFraction0.multiply(bigFraction1);
        Random.setNextRandom((-181));
    }

    @Test(timeout = 4000)
    public void test6969() throws Throwable {
        BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;
        bigFraction0.ONE_THIRD.multiply((BigInteger) null);
        bigFraction0.add(bigFraction0);
    }

    @Test(timeout = 4000)
    public void test7070() throws Throwable {
        BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;
        BigFraction bigFraction1 = bigFraction0.pow((-2134));
        BigInteger bigInteger0 = BigInteger.ZERO;
        BigFraction bigFraction2 = bigFraction1.multiply(bigInteger0);
        bigFraction1.bigDecimalValue(0);
        BigFraction bigFraction3 = bigFraction1.reduce();
        bigFraction0.toString();
        BigInteger bigInteger1 = BigInteger.ONE;
        BigFraction bigFraction4 = bigFraction2.subtract(bigInteger1);
        BigFraction bigFraction5 = bigFraction3.negate();
        BigFraction bigFraction6 = bigFraction3.subtract(0);
        bigFraction4.add(624);
        BigFraction bigFraction7 = BigFraction.ONE_FIFTH;
        BigFraction bigFraction8 = bigFraction6.subtract(bigFraction5);
        bigFraction8.multiply(bigFraction2);
        bigFraction3.add(bigFraction8);
        bigFraction6.doubleValue();
    }

    @Test(timeout = 4000)
    public void test7171() throws Throwable {
        BigFraction bigFraction0 = new BigFraction(1.7636451721191406);
        bigFraction0.subtract((-32L));
        bigFraction0.THREE_FIFTHS.pow((-527L));
        BigFraction bigFraction1 = new BigFraction((double) 0);
    }
}
