/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 16:29:30 GMT 2024
 */
package org.apache.commons.math3.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.apache.commons.math3.geometry.euclidean.threed.Line;
import org.apache.commons.math3.geometry.euclidean.threed.Segment;
import org.apache.commons.math3.geometry.euclidean.threed.SubLine;
import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SubLine_ESTest extends SubLine_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(229.0, vector3D0, 2843.220076091, vector3D0);
        SubLine subLine0 = new SubLine(vector3D0, vector3D1);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(0.6, vector3D0, 245.64227893666842, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        Segment segment0 = new Segment(vector3D1, vector3D0, line0);
        SubLine subLine0 = new SubLine(segment0);
        Vector3D vector3D2 = subLine0.intersection(subLine0, false);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(229.0, vector3D0, 2843.220076091, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        SubLine subLine0 = line0.wholeLine();
        List<Segment> list0 = subLine0.getSegments();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(229.0, vector3D0, 2843.220076091, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        SubLine subLine0 = line0.wholeLine();
        Vector3D vector3D2 = subLine0.intersection(subLine0, false);
        vector3D2.isInfinite();
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(229.0, vector3D0, 2843.220076091, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        SubLine subLine0 = line0.wholeLine();
        Vector3D vector3D2 = subLine0.intersection(subLine0, true);
        vector3D2.getNormSq();
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(0.6, vector3D0, 245.64227893666842, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        SubLine subLine0 = line0.wholeLine();
        Segment segment0 = new Segment(vector3D1, vector3D0, line0);
        SubLine subLine1 = new SubLine(segment0);
        Vector3D vector3D2 = subLine1.intersection(subLine0, true);
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        Vector3D vector3D0 = Vector3D.PLUS_K;
        Vector3D vector3D1 = new Vector3D(0.6, vector3D0, 245.64227893666842, vector3D0);
        Line line0 = new Line(vector3D1, vector3D0);
        SubLine subLine0 = line0.wholeLine();
        Segment segment0 = new Segment(vector3D1, vector3D0, line0);
        SubLine subLine1 = new SubLine(segment0);
        Vector3D vector3D2 = subLine0.intersection(subLine1, true);
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        Vector3D vector3D0 = Vector3D.ZERO;
        Vector3D vector3D1 = Vector3D.MINUS_J;
        Line line0 = new Line(vector3D1, vector3D0);
        Segment segment0 = new Segment(vector3D0, vector3D1, line0);
        SubLine subLine0 = new SubLine(segment0);
        SubLine subLine1 = line0.wholeLine();
        Vector3D vector3D2 = subLine1.intersection(subLine0, false);
    }
}
