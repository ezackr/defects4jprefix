/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 23:44:05 GMT 2024
 */
package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.BlockRealMatrix;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getImagEigenvalues();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 1429);
        eigenDecompositionImpl0.getImagEigenvalue(1610);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(2, 2);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
        eigenDecompositionImpl0.getRealEigenvalue(52);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(5, 5);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
        double[] doubleArray0 = eigenDecompositionImpl0.getRealEigenvalues();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Double[] doubleArray0 = new Double[2];
        Double double0 = new Double(6.073276751593961E-26);
        doubleArray0[0] = double0;
        Double double1 = new Double((-2853.6267));
        doubleArray0[1] = double1;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0, (double) doubleArray0[1]);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (-2853.6267));
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getSolver();
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getD();
        eigenDecompositionImpl0.getD();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getVT();
        eigenDecompositionImpl0.getVT();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getSolver();
        eigenDecompositionImpl0.getVT();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getSolver();
        eigenDecompositionImpl0.getEigenvector((-3578));
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(33, 33);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
        // Undeclared exception!
        eigenDecompositionImpl0.getEigenvector(52);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(33, 33);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
        double double0 = eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BlockRealMatrix blockRealMatrix0 = new BlockRealMatrix(3, 3);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(blockRealMatrix0, 52);
        eigenDecompositionImpl0.getVT();
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        decompositionSolver0.isNonSingular();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        double[] doubleArray0 = new double[2];
        double[] doubleArray1 = new double[3];
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray1, doubleArray0, Double.NEGATIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 0.563;
        doubleArray1[1] = 0.563;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = (-6.583943380515026);
        doubleArray1[1] = (-6.583943380515026);
        doubleArray1[2] = (-651.0);
        doubleArray1[3] = 5.940819391980767E-9;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray1, doubleArray0, (-6.583943380515026));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, Double.NaN);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = (-0.49453920305508536);
        doubleArray1[1] = (-0.49453920305508536);
        doubleArray1[2] = 2762.6678957;
        doubleArray1[3] = 2762.6678957;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2762.6678957);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        Double double0 = new Double((-11.31));
        doubleArray0[0] = double0;
        Double double1 = new Double(2080.3916722485);
        doubleArray0[1] = double1;
        doubleArray0[2] = double1;
        Double double2 = new Double((double) doubleArray0[2]);
        doubleArray0[3] = double2;
        Double double3 = new Double((-11.31));
        doubleArray0[4] = double3;
        Double double4 = new Double((-715.3009044878053));
        doubleArray0[5] = double4;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
        openMapRealVector0.unitize();
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (double) doubleArray0[0]);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = 6.073276751593961E-26;
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray1, doubleArray0, Double.POSITIVE_INFINITY);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[1] = 2.896051306941992E-305;
        doubleArray0[2] = 11.0;
        doubleArray0[3] = 11.0;
        doubleArray0[6] = (-3060.084393319762);
        doubleArray0[7] = (-3060.084393319762);
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = 11.0;
        doubleArray1[3] = 11.0;
        doubleArray1[4] = 11.0;
        doubleArray1[5] = 11.0;
        doubleArray1[7] = (-3060.084393319762);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3654.434708915));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        double[] doubleArray0 = new double[4];
        double[] doubleArray1 = new double[3];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[1] = 2.2250738585072014E-308;
        doubleArray1[2] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Double double0 = new Double(11.75874);
        Double double1 = new Double(0.9999999999999998);
        Double[] doubleArray0 = new Double[9];
        doubleArray0[0] = double1;
        doubleArray0[1] = double0;
        doubleArray0[2] = doubleArray0[0];
        doubleArray0[3] = double1;
        doubleArray0[4] = double0;
        doubleArray0[5] = doubleArray0[1];
        doubleArray0[6] = doubleArray0[3];
        doubleArray0[7] = doubleArray0[1];
        doubleArray0[8] = doubleArray0[7];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        openMapRealVector0.unitize();
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 1.0E-12);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = 0.6;
        doubleArray1[2] = 0.6;
        doubleArray1[3] = 0.6;
        doubleArray1[4] = 38.84305683657026;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.6);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 6.0E-9;
        doubleArray1[1] = 0.333;
        doubleArray1[2] = 6.0E-9;
        doubleArray1[3] = 6.0E-9;
        doubleArray1[4] = 6.0E-9;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 6.0E-9);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[0] = (-3088.055320155765);
        doubleArray0[1] = 38.97563833982721;
        doubleArray0[2] = 6.0E-9;
        doubleArray0[3] = (-3088.055320155765);
        double[] doubleArray1 = new double[8];
        doubleArray1[3] = 11.0;
        doubleArray1[4] = 11.0;
        doubleArray1[5] = 11.0;
        doubleArray1[6] = 6.0E-9;
        doubleArray1[7] = (-3088.055320155765);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3654.434708915));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[1] = 2.896051306941992E-305;
        doubleArray0[2] = 11.0;
        doubleArray0[3] = 11.0;
        doubleArray0[6] = (-3060.084393319762);
        doubleArray0[7] = (-3060.084393319762);
        double[] doubleArray1 = new double[8];
        doubleArray1[3] = 11.0;
        doubleArray1[4] = 11.0;
        doubleArray1[5] = 11.0;
        doubleArray1[6] = (-3060.084393319762);
        doubleArray1[7] = (-3060.084393319762);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3654.434708915));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[1] = 2.896051306941992E-305;
        doubleArray0[2] = 11.0;
        doubleArray0[3] = 11.0;
        doubleArray0[6] = (-3060.084393319762);
        doubleArray0[7] = (-3060.084393319762);
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = 11.0;
        doubleArray1[3] = 11.0;
        doubleArray1[4] = 11.0;
        doubleArray1[5] = 11.0;
        doubleArray1[6] = (-3060.084393319762);
        doubleArray1[7] = (-3060.084393319762);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3654.434708915));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 11.0;
        doubleArray1[1] = 5.940819391980767E-9;
        doubleArray1[2] = 11.0;
        doubleArray1[3] = 5.940819391980767E-9;
        doubleArray1[4] = (-3060.413916596856);
        doubleArray1[5] = 11.0;
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3060.413916596856));
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = 10.835897250006635;
        doubleArray1[2] = 10.835897250006635;
        doubleArray1[3] = (-3543.0);
        doubleArray1[4] = 2729.5853724984563;
        doubleArray1[5] = 10.835897250006635;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-3543.0));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = (-19.46382744833058);
        doubleArray1[1] = 1.0525E-6;
        doubleArray1[2] = (-19.46382744833058);
        doubleArray1[3] = (-19.46382744833058);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-19.46382744833058));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 27.47375476738692;
        doubleArray1[1] = 0.6699601622641747;
        doubleArray1[2] = 27.47375476738692;
        doubleArray1[3] = 27.47375476738692;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 27.47375476738692);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = (-0.49453920305508536);
        doubleArray1[1] = (-0.49453920305508536);
        doubleArray1[2] = 2762.6678957;
        doubleArray1[3] = 2762.6678957;
        doubleArray1[4] = (-0.49453920305508536);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2762.6678957);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[1] = 11.759;
        doubleArray1[2] = 11.759;
        doubleArray1[3] = 0.42009940569019133;
        doubleArray1[4] = (-378.04652405908);
        doubleArray1[5] = 11.759;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.42009940569019133);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[1] = 6.073276751593961E-26;
        doubleArray1[2] = 6.073276751593961E-26;
        doubleArray1[3] = 6.073276751593961E-26;
        doubleArray1[0] = 6.073276751593961E-26;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = new double[6];
        doubleArray1[0] = 0.563;
        doubleArray1[1] = 1.0524978490145745E-6;
        doubleArray1[2] = 1.0524978490145745E-6;
        doubleArray1[3] = 0.563;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 0.563);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        Double[] doubleArray0 = new Double[8];
        Double double0 = new Double((-1.0));
        doubleArray0[0] = double0;
        Double double1 = new Double(1297.570433516);
        doubleArray0[1] = double1;
        Double double2 = new Double((double) doubleArray0[0]);
        doubleArray0[2] = double2;
        doubleArray0[3] = double1;
        Double double3 = new Double(748.63919184);
        doubleArray0[4] = double3;
        Double double4 = new Double(0.0);
        doubleArray0[5] = double4;
        Double double5 = new Double((-2748.935975108));
        doubleArray0[6] = double5;
        doubleArray0[7] = doubleArray0[3];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
        openMapRealVector1.unitize();
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector1);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, (double) doubleArray0[0]);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[0] = 1.052E-6;
        doubleArray1[1] = 1.052E-6;
        doubleArray1[2] = 1.052E-6;
        doubleArray1[3] = 2.546002620558795E-21;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 1.052E-6);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        Double double0 = new Double(11.75874);
        Double double1 = new Double(0.9999999999999998);
        Double[] doubleArray0 = new Double[9];
        doubleArray0[0] = double1;
        doubleArray0[1] = double0;
        doubleArray0[2] = doubleArray0[0];
        doubleArray0[3] = doubleArray0[0];
        doubleArray0[4] = double1;
        doubleArray0[5] = doubleArray0[0];
        doubleArray0[6] = doubleArray0[3];
        doubleArray0[7] = double0;
        doubleArray0[8] = double0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
        openMapRealVector1.unitize();
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector1.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 1.0E-12);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = new double[2];
        doubleArray1[0] = 15.96;
        doubleArray1[1] = Double.NEGATIVE_INFINITY;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 15.96);
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        decompositionSolver0.isNonSingular();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        double[] doubleArray0 = new double[6];
        double[] doubleArray1 = new double[5];
        doubleArray1[2] = (-2148.878307597);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-2148.878307597));
        eigenDecompositionImpl0.getSolver();
        eigenDecompositionImpl0.getDeterminant();
    }
}
