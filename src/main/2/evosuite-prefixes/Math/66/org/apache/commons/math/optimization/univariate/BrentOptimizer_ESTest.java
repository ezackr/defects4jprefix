/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 23:04:25 GMT 2024
 */
package org.apache.commons.math.optimization.univariate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.optimization.GoalType;
import org.apache.commons.math.optimization.univariate.BrentOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BrentOptimizer_ESTest extends BrentOptimizer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        brentOptimizer0.doOptimize();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        brentOptimizer0.resetRelativeAccuracy();
        GoalType goalType0 = GoalType.MAXIMIZE;
        brentOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 0.5, 0.5);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        brentOptimizer0.resetAbsoluteAccuracy();
        GoalType goalType0 = GoalType.MAXIMIZE;
        brentOptimizer0.optimize((UnivariateRealFunction) null, goalType0, (-0.5954927814375433), (-0.5954927814375433), (-0.5954927814375433));
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        brentOptimizer0.resetMaximalIterationCount();
        double[] doubleArray0 = new double[5];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        GoalType goalType0 = GoalType.MINIMIZE;
        brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MINIMIZE;
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = (-762.904076848751);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, (-762.904076848751));
        brentOptimizer0.getEvaluations();
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MINIMIZE;
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = (-762.904076848751);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, (-762.904076848751));
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MAXIMIZE;
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = (-899.2313204);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, (-899.2313204));
        brentOptimizer0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test57() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MAXIMIZE;
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = (-899.2313204);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, (-899.2313204));
    }

    @Test(timeout = 4000)
    public void test68() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MAXIMIZE;
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = (-911.0508017868533);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-911.0508017868533), 8.262102492811719, (-911.0508017868533));
        brentOptimizer0.getEvaluations();
    }

    @Test(timeout = 4000)
    public void test69() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        GoalType goalType0 = GoalType.MAXIMIZE;
        double[] doubleArray0 = new double[3];
        doubleArray0[2] = (-911.0508017868533);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-911.0508017868533), 8.262102492811719, (-911.0508017868533));
    }

    @Test(timeout = 4000)
    public void test710() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        double[] doubleArray0 = new double[3];
        doubleArray0[1] = (-1.0);
        doubleArray0[2] = (-1.0);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 9.851358506271103E-10, (-1.0));
        brentOptimizer0.getEvaluations();
    }

    @Test(timeout = 4000)
    public void test711() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        double[] doubleArray0 = new double[3];
        doubleArray0[1] = (-1.0);
        doubleArray0[2] = (-1.0);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 9.851358506271103E-10, (-1.0));
    }

    @Test(timeout = 4000)
    public void test812() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = Double.NaN;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 3524.42485557, 1068.61078511);
        brentOptimizer0.getIterationCount();
    }

    @Test(timeout = 4000)
    public void test813() throws Throwable {
        BrentOptimizer brentOptimizer0 = new BrentOptimizer();
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = Double.NaN;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        GoalType goalType0 = GoalType.MAXIMIZE;
        double double0 = brentOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 3524.42485557, 1068.61078511);
    }
}
