/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 23:30:30 GMT 2024
 */
package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ArrayRealVector_ESTest extends ArrayRealVector_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[] doubleArray0 = new double[3];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
        double[] doubleArray1 = arrayRealVector0.toArray();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        double[] doubleArray0 = arrayRealVector0.getData();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        String string0 = arrayRealVector0.toString();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        RealVector realVector0 = arrayRealVector0.append((RealVector) arrayRealVector0);
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2296);
        double double0 = arrayRealVector0.getDistance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2296);
        double double0 = arrayRealVector0.getDistance((RealVector) arrayRealVector0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        RealVector realVector0 = arrayRealVector0.add((RealVector) openMapRealVector0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976);
        ArrayRealVector arrayRealVector1 = arrayRealVector0.append(arrayRealVector0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1839, 1839);
        RealVector realVector0 = arrayRealVector0.ebeMultiply((RealVector) arrayRealVector0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
        double[] doubleArray1 = arrayRealVector0.getDataRef();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        double[] doubleArray0 = new double[0];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.setSubVector((-232), (RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.ebeDivide((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
        RealVector realVector0 = arrayRealVector0.projection(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
        RealVector realVector0 = arrayRealVector0.projection(doubleArray0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2173, 2173);
        arrayRealVector0.getSubVector(2173, 2173);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        double[] doubleArray0 = new double[3];
        RealVector realVector0 = arrayRealVector0.append(doubleArray0);
        arrayRealVector0.subtract(realVector0);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(17, 17);
        RealMatrix realMatrix0 = arrayRealVector0.outerProduct(arrayRealVector0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        RealVector realVector0 = arrayRealVector0.projection((RealVector) openMapRealVector0);
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.setEntry((-3911), (-3911));
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        RealVector realVector0 = arrayRealVector0.append(1.0E-12);
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        RealVector realVector0 = arrayRealVector0.add((RealVector) arrayRealVector0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.subtract((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.set(Double.POSITIVE_INFINITY);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        ArrayRealVector arrayRealVector0 = null;
        arrayRealVector0 = new ArrayRealVector((double[]) null, false);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        double[] doubleArray0 = new double[0];
        ArrayRealVector arrayRealVector0 = null;
        arrayRealVector0 = new ArrayRealVector(doubleArray0, (-2504), (-2504));
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        double[] doubleArray0 = new double[0];
        ArrayRealVector arrayRealVector0 = null;
        arrayRealVector0 = new ArrayRealVector(doubleArray0, 976, 976);
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        ArrayRealVector arrayRealVector0 = null;
        arrayRealVector0 = new ArrayRealVector(doubleArray0, 402, 402);
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        Double[] doubleArray0 = new Double[0];
        ArrayRealVector arrayRealVector0 = null;
        arrayRealVector0 = new ArrayRealVector(doubleArray0, (-5088), 974);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1638, 1638);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, false);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2040);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1850, 1850);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector((RealVector) arrayRealVector0, arrayRealVector0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        RealVector realVector0 = arrayRealVector0.subtract((RealVector) openMapRealVector0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        RealVector realVector0 = arrayRealVector0.subtract((RealVector) openMapRealVector0);
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3);
        RealVector realVector0 = arrayRealVector0.subtract((RealVector) arrayRealVector0);
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test3438() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3);
        RealVector realVector0 = arrayRealVector0.subtract((RealVector) arrayRealVector0);
        realVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test3539() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        RealVector realVector0 = arrayRealVector0.mapAdd(83);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test3540() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        RealVector realVector0 = arrayRealVector0.mapAdd(83);
        realVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test3641() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(819);
        RealVector realVector0 = arrayRealVector0.mapSubtract(819);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test3642() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(819);
        RealVector realVector0 = arrayRealVector0.mapSubtract(819);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test3743() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(35, 35);
        arrayRealVector0.unitize();
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test3844() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3883, 3883);
        RealVector realVector0 = arrayRealVector0.mapPow(3883);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3883, 3883);
        RealVector realVector0 = arrayRealVector0.mapPow(3883);
        realVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(972);
        RealVector realVector0 = arrayRealVector0.mapExp();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test3947() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(972);
        RealVector realVector0 = arrayRealVector0.mapExp();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4048() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1008, 1008);
        RealVector realVector0 = arrayRealVector0.mapExpm1();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1008, 1008);
        RealVector realVector0 = arrayRealVector0.mapExpm1();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4150() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1850, 1850);
        RealVector realVector0 = arrayRealVector0.mapLog();
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test4151() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1850, 1850);
        RealVector realVector0 = arrayRealVector0.mapLog();
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test4252() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        RealVector realVector0 = arrayRealVector0.mapLog1p();
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test4353() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2173, 2173);
        RealVector realVector0 = arrayRealVector0.mapCosh();
        realVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test4354() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2173, 2173);
        RealVector realVector0 = arrayRealVector0.mapCosh();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4455() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapSinh();
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test4456() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapSinh();
        realVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test4557() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        RealVector realVector0 = arrayRealVector0.mapTanh();
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test4558() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        RealVector realVector0 = arrayRealVector0.mapTanh();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4659() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapCos();
        realVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test4660() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapCos();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test4761() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2173, 2173);
        arrayRealVector0.mapSinToSelf();
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test4862() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        RealVector realVector0 = arrayRealVector0.mapTan();
        realVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test4963() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        RealVector realVector0 = arrayRealVector0.mapAsin();
        realVector0.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test5064() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1008, 1008);
        RealVector realVector0 = arrayRealVector0.mapAtan();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5065() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1008, 1008);
        RealVector realVector0 = arrayRealVector0.mapAtan();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5166() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, 2);
        RealVector realVector0 = arrayRealVector0.mapInv();
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test5167() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, 2);
        RealVector realVector0 = arrayRealVector0.mapInv();
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test5268() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(972);
        RealVector realVector0 = arrayRealVector0.mapAbs();
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test5369() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(972);
        RealVector realVector0 = arrayRealVector0.mapSqrt();
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test5470() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1014, 1014);
        RealVector realVector0 = arrayRealVector0.mapCbrt();
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test5471() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1014, 1014);
        RealVector realVector0 = arrayRealVector0.mapCbrt();
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test5572() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(454, 454);
        RealVector realVector0 = arrayRealVector0.mapCeil();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5673() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(9);
        RealVector realVector0 = arrayRealVector0.mapFloor();
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test5774() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(38, 38);
        RealVector realVector0 = arrayRealVector0.mapRint();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5875() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapSignum();
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5876() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapSignum();
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test5977() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapUlp();
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test5978() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        RealVector realVector0 = arrayRealVector0.mapUlp();
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test6079() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(50, 50);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(50);
        RealVector realVector0 = arrayRealVector0.ebeMultiply((RealVector) openMapRealVector0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test6080() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(50, 50);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(50);
        RealVector realVector0 = arrayRealVector0.ebeMultiply((RealVector) openMapRealVector0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test6181() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1148, 1148);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        RealVector realVector0 = arrayRealVector0.ebeDivide((RealVector) openMapRealVector0);
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test6282() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3, 3);
        ArrayRealVector arrayRealVector1 = arrayRealVector0.ebeDivide(arrayRealVector0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test6383() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        double double0 = arrayRealVector0.dotProduct((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test6484() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1148, 1148);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        double double0 = arrayRealVector0.dotProduct((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test6585() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        double double0 = arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test6686() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        double double0 = arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test6787() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(2479, 2479);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(2479);
        double double0 = arrayRealVector0.getDistance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test6888() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3789, 3789);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        double double0 = arrayRealVector0.getL1Distance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test6989() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976);
        double double0 = arrayRealVector0.getL1Distance((RealVector) arrayRealVector0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test6990() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976);
        double double0 = arrayRealVector0.getL1Distance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test7091() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(83);
        double double0 = arrayRealVector0.getLInfDistance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test7192() throws Throwable {
        double[] doubleArray0 = new double[1];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        double double0 = arrayRealVector0.getLInfDistance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test7293() throws Throwable {
        Double[] doubleArray0 = new Double[5];
        Double double0 = new Double(Double.NaN);
        doubleArray0[0] = double0;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = double0;
        doubleArray0[3] = doubleArray0[0];
        doubleArray0[4] = doubleArray0[3];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        RealVector realVector0 = arrayRealVector0.unitVector();
        realVector0.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test7394() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.unitVector();
    }

    @Test(timeout = 4000)
    public void test7495() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.unitize();
    }

    @Test(timeout = 4000)
    public void test7596() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(48, 48);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        RealMatrix realMatrix0 = arrayRealVector0.outerProduct((RealVector) openMapRealVector0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test7697() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.outerProduct((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test7798() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.setSubVector(81, (RealVector) openMapRealVector0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test7899() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(748, 748);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        arrayRealVector0.setSubVector(748, (RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test79100() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(3788, 3788);
        RealVector realVector0 = arrayRealVector0.mapAcos();
        arrayRealVector0.equals(realVector0);
    }

    @Test(timeout = 4000)
    public void test80101() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        boolean boolean0 = arrayRealVector0.isInfinite();
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test80102() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(976, 976);
        boolean boolean0 = arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test81103() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = Double.NaN;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        boolean boolean0 = arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test81104() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = Double.NaN;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        boolean boolean0 = arrayRealVector0.isInfinite();
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test82105() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        double[] doubleArray0 = new double[1];
        arrayRealVector0.data = doubleArray0;
        arrayRealVector0.mapLog10ToSelf();
        boolean boolean0 = arrayRealVector0.isInfinite();
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test82106() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        double[] doubleArray0 = new double[1];
        arrayRealVector0.data = doubleArray0;
        arrayRealVector0.mapLog10ToSelf();
        boolean boolean0 = arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test83107() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        boolean boolean0 = arrayRealVector0.equals(arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test84108() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        boolean boolean0 = arrayRealVector0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test85109() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        boolean boolean0 = arrayRealVector0.equals("vector must have at least one element");
    }

    @Test(timeout = 4000)
    public void test86110() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1216, 1.0E-12);
        boolean boolean0 = arrayRealVector0.equals(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test87111() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(15, (-5198.09037));
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(15, 15);
        boolean boolean0 = arrayRealVector0.equals(arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test87112() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(15, (-5198.09037));
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(15, 15);
        boolean boolean0 = arrayRealVector0.equals(arrayRealVector1);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test88113() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(83, 83);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        boolean boolean0 = arrayRealVector0.equals(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test89114() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        arrayRealVector0.hashCode();
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test90115() throws Throwable {
        Double[] doubleArray0 = new Double[5];
        Double double0 = new Double(Double.NaN);
        doubleArray0[0] = double0;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = doubleArray0[0];
        doubleArray0[3] = doubleArray0[0];
        doubleArray0[4] = doubleArray0[3];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        arrayRealVector0.hashCode();
        arrayRealVector0.isNaN();
    }
}
