/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 10:42:02 GMT 2024
 */
package org.apache.commons.jxpath.ri.compiler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.BasicNodeSet;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.EvalContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.axes.AttributeContext;
import org.apache.commons.jxpath.ri.axes.InitialContext;
import org.apache.commons.jxpath.ri.axes.PredicateContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.axes.UnionContext;
import org.apache.commons.jxpath.ri.compiler.Constant;
import org.apache.commons.jxpath.ri.compiler.CoreFunction;
import org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan;
import org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.compiler.ExtensionFunction;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.VariableReference;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CoreFunction_ESTest extends CoreFunction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(32, expressionArray0);
        int int0 = coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        Expression[] expressionArray0 = new Expression[17];
        CoreFunction coreFunction0 = new CoreFunction(4, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Expression[] expressionArray0 = new Expression[17];
        CoreFunction coreFunction0 = new CoreFunction(25, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(27, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(28, (Expression[]) null);
        coreFunction0.getArgumentCount();
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(28, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(21, expressionArray0);
        Object object0 = coreFunction0.computeValue((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(21, expressionArray0);
        Object object0 = coreFunction0.computeValue((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(2, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(26, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test00810() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(20, (Expression[]) null);
        Object object0 = coreFunction0.computeValue((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test00811() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(20, (Expression[]) null);
        Object object0 = coreFunction0.computeValue((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test00912() throws Throwable {
        Expression[] expressionArray0 = new Expression[3];
        CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
        coreFunction0.functionCount((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        Expression[] expressionArray0 = new Expression[2];
        CoreFunction coreFunction0 = new CoreFunction(2, expressionArray0);
        coreFunction0.functionPosition((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        Expression[] expressionArray0 = new Expression[2];
        CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(5, (Expression[]) null);
        coreFunction0.functionLang((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(6, (Expression[]) null);
        coreFunction0.functionNot((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(7, expressionArray0);
        coreFunction0.functionFalse((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        Expression[] expressionArray0 = new Expression[3];
        CoreFunction coreFunction0 = new CoreFunction(8, expressionArray0);
        String string0 = coreFunction0.getFunctionName();
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(9, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01720() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(10, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01821() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(11, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(12, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02023() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(13, expressionArray0);
        coreFunction0.computeValue((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02124() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(14, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02225() throws Throwable {
        Expression[] expressionArray0 = new Expression[10];
        CoreFunction coreFunction0 = new CoreFunction(15, expressionArray0);
        String string0 = coreFunction0.toString();
    }

    @Test(timeout = 4000)
    public void test02326() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(16, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02427() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(17, (Expression[]) null);
        String string0 = coreFunction0.getFunctionName();
    }

    @Test(timeout = 4000)
    public void test02528() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(18, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02629() throws Throwable {
        Expression[] expressionArray0 = new Expression[2];
        CoreFunction coreFunction0 = new CoreFunction(19, expressionArray0);
        coreFunction0.functionBoolean((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02730() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(20, expressionArray0);
        coreFunction0.functionNormalizeSpace((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02831() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(21, expressionArray0);
        coreFunction0.functionTranslate((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test02932() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        coreFunction0.functionSubstring((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test03033() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(24, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test03134() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(28, (Expression[]) null);
        coreFunction0.functionKey((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test03235() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(29, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test03336() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(30, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test03437() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(11, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test03438() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(11, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test03539() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("&MuZ");
        ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
        expressionArray0[0] = (Expression) extensionFunction0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test03540() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("&MuZ");
        ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
        expressionArray0[0] = (Expression) extensionFunction0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test03641() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test03742() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(2, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test03843() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test03844() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test03945() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(4, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test03946() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(4, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04047() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(5, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        Constant constant0 = new Constant("&");
        Expression[] expressionArray0 = new Expression[5];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant0;
        expressionArray0[3] = (Expression) constant0;
        expressionArray0[4] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(6, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04149() throws Throwable {
        Constant constant0 = new Constant("&");
        Expression[] expressionArray0 = new Expression[5];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant0;
        expressionArray0[3] = (Expression) constant0;
        expressionArray0[4] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(6, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(7, expressionArray0);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test04351() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(8, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04452() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(9, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04453() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(9, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04554() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(10, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04555() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(10, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04656() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(12, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04657() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(12, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04758() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(13, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test04759() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(13, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04860() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(14, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test04861() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(14, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test04962() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(15, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test04963() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(15, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05064() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(16, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05065() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(16, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05166() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(17, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05167() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(17, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05268() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(18, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05369() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(19, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05370() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(19, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05471() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(20, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05472() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(20, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test05573() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(21, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05574() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(21, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05675() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(22, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test05776() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(23, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05877() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'su[': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(24, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test05878() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'su[': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(24, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05979() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(25, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test05980() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(25, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test06081() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(26, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06082() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(26, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test06183() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(27, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test06184() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(27, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06285() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(28, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06286() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(28, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test06387() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(29, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06388() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(29, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test06489() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'vu[': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test06490() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'vu[': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06591() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(2644, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test06592() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(2644, (Expression[]) null);
        boolean boolean0 = coreFunction0.computeContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06693() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(30, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
    }

    @Test(timeout = 4000)
    public void test06694() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(30, (Expression[]) null);
        boolean boolean0 = coreFunction0.isContextDependent();
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test06795() throws Throwable {
        Constant constant0 = new Constant("");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationNotEqual0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        boolean boolean0 = coreFunction0.computeContextDependent();
    }

    @Test(timeout = 4000)
    public void test06896() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(5, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test06997() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(6, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test07098() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(7, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test07199() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(8, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test072100() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(15, (Expression[]) null);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test073101() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(19, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test074102() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test075103() throws Throwable {
        Expression[] expressionArray0 = new Expression[7];
        CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test076104() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(21, (Expression[]) null);
        QName qName0 = new QName(")wPrUV2.b", ")wPrUV2.b");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, ")wPrUV2.b", (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, qName0, nodePointer0);
        EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();
        Object object0 = coreFunction0.functionLast(evalContext0);
        evalContext0.getPosition();
    }

    @Test(timeout = 4000)
    public void test076105() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(21, (Expression[]) null);
        QName qName0 = new QName(")wPrUV2.b", ")wPrUV2.b");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, ")wPrUV2.b", (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, qName0, nodePointer0);
        EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();
        Object object0 = coreFunction0.functionLast(evalContext0);
    }

    @Test(timeout = 4000)
    public void test077106() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        CoreFunction coreFunction0 = new CoreFunction(1, (Expression[]) null);
        AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeTypeTest0);
        attributeContext0.nextNode();
        Object object0 = coreFunction0.compute(attributeContext0);
        attributeContext0.getPosition();
    }

    @Test(timeout = 4000)
    public void test077107() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        CoreFunction coreFunction0 = new CoreFunction(1, (Expression[]) null);
        AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeTypeTest0);
        attributeContext0.nextNode();
        Object object0 = coreFunction0.compute(attributeContext0);
    }

    @Test(timeout = 4000)
    public void test078108() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        Object object0 = coreFunction0.functionCount((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test078109() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        Object object0 = coreFunction0.functionCount((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test079110() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("jfT&;sMd!y*FNW7,+:w");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) expressionArray0[0]);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) null);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        Double double0 = (Double) coreFunction0.functionCount(initialContext0);
    }

    @Test(timeout = 4000)
    public void test080111() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(5, expressionArray0);
        Object object0 = coreFunction0.functionCount((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test080112() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(5, expressionArray0);
        Object object0 = coreFunction0.functionCount((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test081113() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("jf+&;sMd!]*F~NW7,+:w", "jf+&;sMd!]*F~NW7,+:w");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) expressionArray0[0]);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) null);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        Boolean boolean0 = (Boolean) coreFunction0.functionLang(initialContext0);
    }

    @Test(timeout = 4000)
    public void test082114() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        EvalContext[] evalContextArray0 = new EvalContext[0];
        UnionContext unionContext0 = new UnionContext((EvalContext) null, evalContextArray0);
        coreFunction0.functionLang(unionContext0);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test083115() throws Throwable {
        Constant constant0 = new Constant("{l1>");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(35, expressionArray0);
        Double double0 = Expression.NOT_A_NUMBER;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) double0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, (NodePointer) null);
        InitialContext initialContext0 = (InitialContext) rootContext0.getAbsoluteRootContext();
        Boolean boolean0 = (Boolean) coreFunction0.functionLang(initialContext0);
    }

    @Test(timeout = 4000)
    public void test083116() throws Throwable {
        Constant constant0 = new Constant("{l1>");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(35, expressionArray0);
        Double double0 = Expression.NOT_A_NUMBER;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) double0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, (NodePointer) null);
        InitialContext initialContext0 = (InitialContext) rootContext0.getAbsoluteRootContext();
        Boolean boolean0 = (Boolean) coreFunction0.functionLang(initialContext0);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test084117() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction((-92), (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction((-92), expressionArray0);
        coreFunction1.functionKey((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test085118() throws Throwable {
        Constant constant0 = new Constant("substring-before");
        QName qName0 = new QName("substring-before");
        VariableReference variableReference0 = new VariableReference(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) variableReference0;
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        BasicNodeSet basicNodeSet0 = (BasicNodeSet) coreFunction0.functionKey(initialContext0);
    }

    @Test(timeout = 4000)
    public void test086119() throws Throwable {
        Expression[] expressionArray0 = new Expression[12];
        QName qName0 = new QName("jfT&;sMd!y,F~rW7,+:w");
        VariableReference variableReference0 = new VariableReference(qName0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) expressionArray0[0]);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) null);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        Expression[] expressionArray1 = new Expression[2];
        expressionArray1[0] = (Expression) variableReference0;
        expressionArray1[1] = (Expression) variableReference0;
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray1);
        coreFunction0.functionKey(initialContext0);
    }

    @Test(timeout = 4000)
    public void test087120() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1, (Expression[]) null);
        QName qName0 = new QName("zEh:ph4zp+k8", "zEh:ph4zp+k8");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "zEh:ph4zp+k8", (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, nodePointer0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);
        Object object0 = coreFunction0.functionNamespaceURI(rootContext0);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test087121() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1, (Expression[]) null);
        QName qName0 = new QName("zEh:ph4zp+k8", "zEh:ph4zp+k8");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "zEh:ph4zp+k8", (Locale) null);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, nodePointer0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);
        Object object0 = coreFunction0.functionNamespaceURI(rootContext0);
    }

    @Test(timeout = 4000)
    public void test088122() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        coreFunction0.functionNamespaceURI((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test089123() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("NIVjO+sMd!]F#~W,W,", "NIVjO+sMd!]F#~W,W,");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionNamespaceURI(initialContext0);
    }

    @Test(timeout = 4000)
    public void test090124() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("NIVjO+sMd!]F#~W,W,", "NIVjO+sMd!]F#~W,W,");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) expressionArray0[0]);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionNamespaceURI(initialContext0);
        initialContext0.getPosition();
    }

    @Test(timeout = 4000)
    public void test090125() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("NIVjO+sMd!]F#~W,W,", "NIVjO+sMd!]F#~W,W,");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) expressionArray0[0]);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionNamespaceURI(initialContext0);
    }

    @Test(timeout = 4000)
    public void test091126() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(537, expressionArray0);
        Expression[] expressionArray1 = new Expression[1];
        expressionArray1[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(537, expressionArray1);
        coreFunction1.functionLocalName((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test092127() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("d*r>Rj)yR'+)^HbF\"~");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionLocalName(initialContext0);
    }

    @Test(timeout = 4000)
    public void test093128() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("d*r>Rj)yR'+)^HbF\"~");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) variableReference0);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionLocalName(initialContext0);
    }

    @Test(timeout = 4000)
    public void test094129() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(537, expressionArray0);
        Expression[] expressionArray1 = new Expression[1];
        expressionArray1[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(537, expressionArray1);
        coreFunction1.functionName((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test095130() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("NIVjO+sMd!]F#~W,W,", "NIVjO+sMd!]F#~W,W,");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionName(initialContext0);
    }

    @Test(timeout = 4000)
    public void test096131() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("NIVjO+sMd!]F#~W,W,", "NIVjO+sMd!]F#~W,W,");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) variableReference0);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) expressionArray0[0]);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        String string0 = (String) coreFunction0.functionName(initialContext0);
    }

    @Test(timeout = 4000)
    public void test097132() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        CoreFunction coreFunction0 = new CoreFunction(2170, expressionArray0);
        coreFunction0.functionString((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test098133() throws Throwable {
        Constant constant0 = new Constant("Inva}id a}gument typ~ for '[': ");
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(229, expressionArray0);
        Object object0 = coreFunction0.functionConcat((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test098134() throws Throwable {
        Constant constant0 = new Constant("Inva}id a}gument typ~ for '[': ");
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(229, expressionArray0);
        Object object0 = coreFunction0.functionConcat((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test099135() throws Throwable {
        Constant constant0 = new Constant(")(MMYO|");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionStartsWith((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test099136() throws Throwable {
        Constant constant0 = new Constant(")(MMYO|");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionStartsWith((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test100137() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionStartsWith((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test100138() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionStartsWith((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test101139() throws Throwable {
        Constant constant0 = new Constant("oIU29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionContains((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test101140() throws Throwable {
        Constant constant0 = new Constant("oIU29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionContains((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test102141() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionContains((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test102142() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionContains((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test103143() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1130, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1130, expressionArray0);
        coreFunction1.functionSubstringBefore((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test104144() throws Throwable {
        Constant constant0 = new Constant("oIU29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        coreFunction0.functionSubstringBefore((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test105145() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        coreFunction1.functionSubstringAfter((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test106146() throws Throwable {
        Constant constant0 = new Constant("oI^29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationNotEqual0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(724, expressionArray0);
        Object object0 = coreFunction0.functionSubstringAfter((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test106147() throws Throwable {
        Constant constant0 = new Constant("oI^29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationNotEqual0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(724, expressionArray0);
        Object object0 = coreFunction0.functionSubstringAfter((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test107148() throws Throwable {
        Constant constant0 = new Constant("oIDU29[");
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test108149() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        Double double0 = new Double(110);
        Constant constant1 = new Constant(double0);
        expressionArray0[1] = (Expression) constant1;
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        PredicateContext predicateContext0 = new PredicateContext((EvalContext) null, constant0);
        Object object0 = coreFunction0.functionSubstring(predicateContext0);
    }

    @Test(timeout = 4000)
    public void test109150() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreFunction0;
        expressionArray0[1] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        coreFunction1.functionSubstring((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test110151() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction((-65494), expressionArray0);
        coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test111152() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(41, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test111153() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(41, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test112154() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Byte byte0 = new Byte((byte) (-80));
        Constant constant1 = new Constant(byte0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant1;
        CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test112155() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Byte byte0 = new Byte((byte) (-80));
        Constant constant1 = new Constant(byte0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant1;
        CoreFunction coreFunction0 = new CoreFunction(1, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test113156() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction((-296), expressionArray0);
        coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test114157() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) coreOperationNotEqual0;
        CoreFunction coreFunction0 = new CoreFunction(75, expressionArray0);
        coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test115158() throws Throwable {
        Constant constant0 = new Constant("false)(MYr|");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(10, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test115159() throws Throwable {
        Constant constant0 = new Constant("false)(MYr|");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(10, expressionArray0);
        Object object0 = coreFunction0.functionSubstring((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test116160() throws Throwable {
        Expression[] expressionArray0 = new Expression[7];
        CoreFunction coreFunction0 = new CoreFunction((-2027), expressionArray0);
        coreFunction0.functionStringLength((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test117161() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        Object object0 = coreFunction0.functionNormalizeSpace((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test117162() throws Throwable {
        Constant constant0 = new Constant("Invalid argument type for 'sum': ");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);
        Object object0 = coreFunction0.functionNormalizeSpace((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test118163() throws Throwable {
        Constant constant0 = new Constant("zO  HrxP8t");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction((-5865), expressionArray0);
        Object object0 = coreFunction0.functionNormalizeSpace((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test118164() throws Throwable {
        Constant constant0 = new Constant("zO  HrxP8t");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction((-5865), expressionArray0);
        Object object0 = coreFunction0.functionNormalizeSpace((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test119165() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) coreOperationGreaterThan0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(17, expressionArray0);
        Object object0 = coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test120167() throws Throwable {
        Constant constant0 = new Constant("oI^29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) coreOperationNotEqual0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionTranslate((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test120168() throws Throwable {
        Constant constant0 = new Constant("oI^29[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        expressionArray0[2] = (Expression) coreOperationNotEqual0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionTranslate((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test121169() throws Throwable {
        Constant constant0 = new Constant("oIDU29[");
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionTranslate((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test121170() throws Throwable {
        Constant constant0 = new Constant("oIDU29[");
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) constant0;
        expressionArray0[2] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        Object object0 = coreFunction0.functionTranslate((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test122171() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionBoolean((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test122172() throws Throwable {
        CoreFunction coreFunction0 = new CoreFunction(1117, (Expression[]) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(1117, expressionArray0);
        Object object0 = coreFunction1.functionBoolean((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test123173() throws Throwable {
        Constant constant0 = new Constant("&");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction((-65536), expressionArray0);
        Object object0 = coreFunction0.functionBoolean((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test123174() throws Throwable {
        Constant constant0 = new Constant("&");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction((-65536), expressionArray0);
        Object object0 = coreFunction0.functionBoolean((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test124175() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(103, expressionArray0);
        Object object0 = coreFunction0.functionNot((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test124176() throws Throwable {
        Constant constant0 = new Constant((String) null);
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(103, expressionArray0);
        Object object0 = coreFunction0.functionNot((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test125177() throws Throwable {
        Constant constant0 = new Constant("/tE}i#?yrx<%@2 \"#'");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
        Object object0 = coreFunction0.functionNot((EvalContext) null);
        coreFunction0.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test125178() throws Throwable {
        Constant constant0 = new Constant("/tE}i#?yrx<%@2 \"#'");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(3, expressionArray0);
        Object object0 = coreFunction0.functionNot((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test126179() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(23, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test127180() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(537, expressionArray0);
        Expression[] expressionArray1 = new Expression[1];
        expressionArray1[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(537, expressionArray1);
        Object object0 = coreFunction1.functionSum((EvalContext) null);
        coreFunction1.getFunctionCode();
    }

    @Test(timeout = 4000)
    public void test127181() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreFunction coreFunction0 = new CoreFunction(537, expressionArray0);
        Expression[] expressionArray1 = new Expression[1];
        expressionArray1[0] = (Expression) coreFunction0;
        CoreFunction coreFunction1 = new CoreFunction(537, expressionArray1);
        Object object0 = coreFunction1.functionSum((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test128182() throws Throwable {
        Constant constant0 = new Constant("&");
        Expression[] expressionArray0 = new Expression[1];
        expressionArray0[0] = (Expression) constant0;
        CoreFunction coreFunction0 = new CoreFunction(35, expressionArray0);
        coreFunction0.functionSum((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test129183() throws Throwable {
        Expression[] expressionArray0 = new Expression[1];
        QName qName0 = new QName("jfT&;sMd!y*FNW7,+:w");
        VariableReference variableReference0 = new VariableReference(qName0);
        expressionArray0[0] = (Expression) variableReference0;
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) expressionArray0[0]);
        BasicVariables basicVariables0 = (BasicVariables) jXPathContextReferenceImpl0.getVariables();
        VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
        variablePointer0.createPath((JXPathContext) jXPathContextReferenceImpl0, (Object) null);
        InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();
        CoreFunction coreFunction0 = new CoreFunction(Integer.MIN_VALUE, expressionArray0);
        Double double0 = (Double) coreFunction0.functionSum(initialContext0);
    }

    @Test(timeout = 4000)
    public void test130184() throws Throwable {
        Constant constant0 = new Constant("oIDU2[");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationNotEqual0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) "");
        QName qName0 = new QName("oIDU2[");
        Integer integer0 = new Integer(30);
        Locale locale0 = Locale.ROOT;
        BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, integer0, locale0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, beanPointer0);
        InitialContext initialContext0 = (InitialContext) rootContext0.getVariableContext(qName0);
        coreFunction0.compute(initialContext0);
    }

    @Test(timeout = 4000)
    public void test131185() throws Throwable {
        Constant constant0 = new Constant((String) null);
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        Expression[] expressionArray0 = new Expression[3];
        expressionArray0[0] = (Expression) constant0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        coreFunction0.compute((EvalContext) null);
    }

    @Test(timeout = 4000)
    public void test132186() throws Throwable {
        Constant constant0 = new Constant("");
        CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(constant0, constant0);
        CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThan0, constant0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(30);
        Expression[] expressionArray0 = new Expression[2];
        expressionArray0[0] = (Expression) coreOperationNotEqual0;
        expressionArray0[1] = (Expression) coreOperationGreaterThan0;
        CoreFunction coreFunction0 = new CoreFunction(30, expressionArray0);
        AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, nodeTypeTest0);
        coreFunction0.compute(attributeContext0);
    }
}
