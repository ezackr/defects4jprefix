/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:07:16 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameElementImpl;
import org.apache.html.dom.HTMLModElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLTableCaptionElementImpl;
import org.apache.html.dom.HTMLTitleElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "H3");
        boolean boolean0 = dOMNodePointer0.isLanguage("H3");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) attrNSImpl0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodePointer nodePointer0 = dOMNodePointer0.namespacePointer((String) null);
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        int int0 = dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIAttrNSImpl0);
        dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        QName qName0 = new QName("xmlns");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        Element element0 = pSVIDocumentImpl0.createElementNS("H=C[u3H&x5`", "charset", "H=C[u3H&x5`");
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
        // Undeclared exception!
        dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) deferredDocumentImpl0);
        QName qName0 = new QName("xml:lang");
        NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        nodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeIterator nodeIterator0 = dOMNodePointer0.childIterator((NodeTest) null, true, (NodePointer) null);
        nodeIterator0.getPosition();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) null);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl0, "H3");
        boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        Element element0 = pSVIDocumentImpl0.createElementNS("H=C[u3H&x5`", "charset", "H=C[u3H&x5`");
        QName qName0 = new QName("H=C[u3H&x5`");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, ":k?zTC>/=T24U^|P");
        QName qName0 = new QName(":k?zTC>/=T24U^|P", ":k?zTC>/=T24U^|P");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLTableCaptionElementImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTitleElementImpl hTMLTitleElementImpl0 = new HTMLTitleElementImpl(hTMLDocumentImpl0, "(7=SK");
        QName qName0 = new QName("(7=SK");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLTitleElementImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "=(=AU:_;qu=qu@crEa,");
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "=(=AU:_;qu=qu@crEa,");
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        nodeNameTest0.toString();
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "=(=AU:_;qu=qu@crEa,");
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "=(=AU:_;qu=qu@crEa,");
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xml:space", "xml:space");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstruction0, (NodeTest) processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        Comment comment0 = hTMLDocumentImpl0.createComment("0Du8ukA*[,6`p;aw<B");
        boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3541);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) attrNSImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("M<8:I<07R");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xml:space", "xml:space");
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xml:space", "xml:space");
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        String string0 = dOMNodePointer0.getNamespaceURI("");
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
    }

    @Test(timeout = 4000)
    public void test3134() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getNamespaceURI("T");
        String string0 = dOMNodePointer0.getNamespaceURI("T");
    }

    @Test(timeout = 4000)
    public void test3235() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getNamespaceURI((String) null);
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        String string0 = dOMNodePointer0.getDefaultNamespaceURI();
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        dOMNodePointer0.createPath(jXPathContext0, (Object) locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test3639() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        dOMNodePointer0.createPath(jXPathContext0, (Object) dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test3740() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMANY;
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "[");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0, "\"{S(^yk;");
        dOMNodePointer0.setValue("\"{S(^yk;");
        dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test3841() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        dOMNodePointer0.createPath((JXPathContext) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        NodePointer nodePointer0 = dOMNodePointer0.createPath(jXPathContext0, (Object) hTMLElement0);
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "xml:space");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "xml:space");
        dOMNodePointer0.createPath(jXPathContext0, (Object) cDATASectionImpl0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        dOMNodePointer0.setValue(hTMLDocumentImpl0);
        hTMLDocumentImpl0.getDomain();
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.setValue((Object) null);
        dOMNodePointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        NodePointer nodePointer0 = dOMNodePointer0.createPath(jXPathContext0, (Object) dOMNodePointer0);
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.JAPANESE;
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-2005240702));
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        QName qName0 = new QName("<<unknown namespace>>");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "[");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLTableCaptionElementImpl0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        dOMNodePointer0.remove();
        dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test4952() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        dOMNodePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "\"<=\"");
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        Locale locale0 = Locale.CANADA;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "I");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, (Locale) null);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
    }

    @Test(timeout = 4000)
    public void test5558() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Entity entity0 = hTMLDocumentImpl0.createEntity("uv");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entity0, (Locale) null);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5659() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("Z", "Z");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5760() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.US;
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.parser.TokenMgrError");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5861() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragmentImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5962() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        QName qName0 = new QName("Cannot remove root DOM node", "Cannot remove root DOM node");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, qName0, locale0);
        HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
        NodePointer nodePointer1 = NodePointer.newChildNodePointer(nodePointer0, qName0, hTMLPreElementImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer1, hTMLPreElementImpl0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) nodePointer0);
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
        DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLElement0);
        String string0 = dOMNodePointer2.asPath();
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test6265() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
        boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test6366() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "|+ZSW/{eGpWF2%Cc;v");
        HTMLFrameElementImpl hTMLFrameElementImpl0 = new HTMLFrameElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
        boolean boolean0 = dOMNodePointer0.equals(hTMLFrameElementImpl0);
    }

    @Test(timeout = 4000)
    public void test6467() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "[");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, (Locale) null);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test6568() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, (Locale) null);
        QName qName0 = dOMNodePointer0.getName();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test6669() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
    }

    @Test(timeout = 4000)
    public void test6770() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, commentImpl0);
        Object object0 = dOMNodePointer1.getValue();
    }

    @Test(timeout = 4000)
    public void test6871() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test6972() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "QD!KcCY");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCaptionElementImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLOListElementImpl");
        dOMNodePointer0.createPath(jXPathContext0, (Object) commentImpl0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7073() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("Z", (String) null);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0, (String) null);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7174() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.US;
        ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("U4c", "U4c");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstruction0, locale0, "U4c");
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7275() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) attrNSImpl0);
        dOMNodePointer0.getPointerByID(jXPathContext0, "(5~~nG");
    }

    @Test(timeout = 4000)
    public void test7376() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "|+ZSW/{eGpWF2%Cc;v");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "");
        nullPointer0.isNode();
    }

    @Test(timeout = 4000)
    public void test7477() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "|+ZSW/{eGpWF2%Cc;v");
        dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        Pointer pointer0 = dOMNodePointer0.getPointerByID(jXPathContext0, "");
    }

    @Test(timeout = 4000)
    public void test7578() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIAttrNSImpl0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test7679() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIAttrNSImpl0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test7780() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        HTMLModElementImpl hTMLModElementImpl0 = new HTMLModElementImpl(hTMLDocumentImpl0, "`.C$O%s?6pe2q");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLModElementImpl0, (Locale) null);
        hTMLDocumentImpl0.getHead();
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
    }
}
