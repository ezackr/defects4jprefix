/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 10:28:13 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFrameSetElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLMetaElementImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLGoElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Bf@cK\"74dpJ@nZXo");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        Element element0 = pSVIDocumentImpl0.createElementNS("http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
        dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) pSVIDocumentImpl0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createChild(jXPathContext0, qName0, (-1884002153), (Object) pSVIDocumentImpl0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "9:J_+ M/AQgq");
        NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("9:J_+ M/AQgq");
        nodePointer0.isContainer();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        int int0 = dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("')");
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
        dOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        dOMNodePointer0.namespaceIterator();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        QName qName0 = dOMNodePointer0.getName();
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        dOMNodePointer0.childIterator(nodeTypeTest0, true, variablePointer0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) null);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
        QName qName0 = new QName("");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLButtonElementImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "W9VV_^M{BDj;E7}$");
        QName qName0 = new QName("W9VV_^M{BDj;E7}$");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "-", "-");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("-");
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        Comment comment0 = hTMLDocumentImpl0.createComment("Ih#,");
        boolean boolean0 = DOMNodePointer.testNode((Node) comment0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "space", "space");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        HTMLMetaElementImpl hTMLMetaElementImpl0 = new HTMLMetaElementImpl(hTMLDocumentImpl0, ")");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLMetaElementImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("V(Q5");
        boolean boolean0 = DOMNodePointer.testNode((Node) pSVIDocumentImpl0, (NodeTest) processingInstructionTest0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "-");
        QName qName0 = new QName("-");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        QName qName0 = new QName("qAwC.5}z+zq)+&DM8");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "qAwC.5}z+zq)+&DM8");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        Element element0 = wMLDocumentImpl0.createElementNS("qAwC.5}z+zq)+&DM8", "[|]", "qAwC.5}z+zq)+&DM8");
        boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "&nknown namespace prefix: ");
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        Element element0 = pSVIDocumentImpl0.createElementNS("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
        QName qName0 = dOMNodePointer1.getName();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "o such function: ", "o such function: ");
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "o such function: ");
        QName qName0 = dOMNodePointer0.getName();
        qName0.toString();
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "o such function: ", "o such function: ");
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0, "o such function: ");
        QName qName0 = dOMNodePointer0.getName();
        qName0.getName();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        dOMNodePointer0.getNamespaceURI("H:&-\rbQPLUF O)SQ");
        String string0 = dOMNodePointer0.getNamespaceURI("H:&-\rbQPLUF O)SQ");
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = new Locale("");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
        dOMNodePointer0.getNamespaceURI("");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        DOMNodePointer dOMNodePointer1 = (DOMNodePointer) dOMNodePointer0.getPointerByID(jXPathContext0, "");
        dOMNodePointer1.isAttribute();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xml");
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getNamespaceURI((String) null);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.isLeaf();
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
        dOMNodePointer0.setValue(hTMLBodyElementImpl0);
        dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "?#cT3Rdx~0H");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "?#cT3Rdx~0H");
        dOMNodePointer0.setValue("?#cT3Rdx~0H");
        dOMNodePointer0.getIndex();
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Text text0 = hTMLDocumentImpl0.createTextNode("K`tozZELjIGp");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, (Locale) null, "K`tozZELjIGp");
        dOMNodePointer0.setValue((Object) null);
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "K`tozZELjIGp");
        dOMNodePointer0.setValue(dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
        dOMNodePointer0.setValue(nodeTypeTest0);
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.setValue(hTMLDocumentImpl0);
        hTMLDocumentImpl0.getCookie();
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "-<p'c[jG?}XU(]");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "-<p'c[jG?}XU(]");
        dOMNodePointer0.setValue(wMLDocumentImpl0);
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, (Locale) null);
        dOMNodePointer0.setValue((Object) null);
        dOMNodePointer0.isCollection();
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "K`tozZELjIGp");
        dOMNodePointer0.setValue(dOMNodePointer0);
        dOMNodePointer0.isActual();
    }

    @Test(timeout = 4000)
    public void test4648() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test4749() throws Throwable {
        QName qName0 = new QName("xmlns:");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) variablePointer0);
        HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "xmlns:");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLTableColElementImpl0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test4850() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test4951() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Element element0 = hTMLDocumentImpl0.createElement("");
        QName qName0 = new QName("", "");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, element0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
    }

    @Test(timeout = 4000)
    public void test5052() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "R");
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLIElementImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "\"boolean\"");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        WMLGoElementImpl wMLGoElementImpl0 = new WMLGoElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) wMLGoElementImpl0);
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        NodePointer nodePointer0 = dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        nodePointer0.isAttribute();
    }

    @Test(timeout = 4000)
    public void test5153() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, (Locale) null);
        dOMNodePointer0.remove();
        dOMNodePointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test5254() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, (Locale) null);
        dOMNodePointer0.remove();
    }

    @Test(timeout = 4000)
    public void test5355() throws Throwable {
        Locale locale0 = Locale.KOREA;
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5456() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection(".Q^hM");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5557() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "K`tozZELjIGp");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, (Locale) null);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5658() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "//");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5759() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5860() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DocumentFragment documentFragment0 = hTMLDocumentImpl0.createDocumentFragment();
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test5961() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREA;
        Element element0 = hTMLDocumentImpl0.getDocumentElement();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test6062() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "\" could not be added as a namespace to \"");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLLIElementImpl0);
        String string0 = dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test6163() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        Element element0 = pSVIDocumentImpl0.createElementNS("*", "*", "*");
        QName qName0 = new QName("*");
        NodePointer nodePointer0 = NodePointer.newChildNodePointer((NodePointer) null, qName0, qName0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
        dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test6264() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "UH\"~Kq'.Z1Qr@X");
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test6365() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "/");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
        String string0 = dOMNodePointer1.asPath();
    }

    @Test(timeout = 4000)
    public void test6466() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "space", "space");
        hTMLDocumentImpl0.getLinks();
        Node node0 = hTMLDocumentImpl0.appendChild(processingInstructionImpl0);
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
        String string0 = dOMNodePointer0.asPath();
    }

    @Test(timeout = 4000)
    public void test6567() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Text text0 = hTMLDocumentImpl0.createTextNode("K`tozZELjIGp");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, (Locale) null, "K`tozZELjIGp");
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test6668() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0, "f>-%>E#]4!(N{&)");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentImpl0);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test6769() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test6870() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        TextImpl textImpl0 = new TextImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, (Locale) null, "K`tozZELjIGp");
        EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, entityReferenceImpl0);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test6971() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml:space");
        String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLIsIndexElementImpl0);
    }

    @Test(timeout = 4000)
    public void test7072() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        HTMLFrameSetElementImpl hTMLFrameSetElementImpl0 = new HTMLFrameSetElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLFrameSetElementImpl0);
        QName qName1 = dOMNodePointer0.getName();
        qName1.toString();
    }

    @Test(timeout = 4000)
    public void test7173() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Comment comment0 = hTMLDocumentImpl0.createComment("&2VF4yMDB)\"\"cZ?}");
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7274() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7375() throws Throwable {
        CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
        DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(coreDocumentImpl0);
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragmentImpl0, locale0);
        CommentImpl commentImpl0 = new CommentImpl(coreDocumentImpl0, "(D");
        dOMNodePointer0.setValue(commentImpl0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7476() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, (String) null);
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7577() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Text text0 = hTMLDocumentImpl0.createTextNode("org.apache.html.dom.HTMLDirectoryElementImpl@0000000004");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, (Locale) null);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7678() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7779() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(pSVIDocumentImpl0, "org.apache.commons.jxpath.ri.model.domOMAttributeIterator", "org.apache.commons.jxpath.ri.model.domOMAttributeIterator");
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
    }

    @Test(timeout = 4000)
    public void test7880() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "");
        Locale locale0 = new Locale("");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLLinkElementImpl0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer1.getPointerByID(jXPathContext0, "");
        nullPointer0.getLength();
    }

    @Test(timeout = 4000)
    public void test7981() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "http://www.w3.org/2000/xmlns/");
        nullPointer0.isRoot();
    }

    @Test(timeout = 4000)
    public void test8082() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0);
        int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test8183() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, attrNSImpl0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
    }

    @Test(timeout = 4000)
    public void test8284() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Bf@cK\"74dpJ@nZXo");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test8385() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "K`tozZELjIGp", "?S8.~&XG\"`");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, (Locale) null);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, (Locale) null, "http://www.w3.org/2000/xmlns/");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
    }

    @Test(timeout = 4000)
    public void test8486() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "3O&C");
        Element element0 = hTMLDocumentImpl0.getDocumentElement();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
    }
}
