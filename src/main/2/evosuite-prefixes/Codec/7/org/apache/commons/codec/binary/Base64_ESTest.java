/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:00:48 GMT 2024
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.binary.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Base64_ESTest extends Base64_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = new byte[6];
        BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
        byte[] byteArray1 = Base64.encodeInteger(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Base64 base64_0 = new Base64();
        String string0 = base64_0.encodeToString((byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Base64 base64_0 = new Base64();
        String string0 = base64_0.encodeToString((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        byte[] byteArray0 = new byte[1];
        String string0 = Base64.encodeBase64String(byteArray0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        byte[] byteArray0 = new byte[5];
        String string0 = Base64.encodeBase64URLSafeString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Base64 base64_0 = new Base64(102, (byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
        Base64 base64_0 = null;
        base64_0 = new Base64(1393, byteArray0);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Base64 base64_0 = new Base64();
        boolean boolean0 = base64_0.hasData();
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        Base64 base64_0 = new Base64();
        boolean boolean0 = base64_0.hasData();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[5];
        String string0 = base64_0.encodeToString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[5];
        String string0 = base64_0.encodeToString(byteArray0);
        boolean boolean0 = base64_0.hasData();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[5];
        String string0 = base64_0.encodeToString(byteArray0);
        boolean boolean0 = base64_0.hasData();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(3191, byteArray0, false);
        int int0 = base64_0.avail();
    }

    @Test(timeout = 4000)
    public void test1015() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64 base64_0 = new Base64(3191, byteArray0, false);
        int int0 = base64_0.avail();
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[0];
        base64_0.decode(byteArray0, 64, 64);
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[1];
        int int0 = base64_0.readResults(byteArray0, (byte) (-40), 113);
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[1];
        int int0 = base64_0.readResults(byteArray0, (byte) (-40), 113);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        byte[] byteArray0 = new byte[1];
        Base64 base64_0 = new Base64(67, byteArray0, false);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        int int0 = base64_0.readResults(byteArray1, 10, (byte) 8);
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        byte[] byteArray0 = new byte[5];
        Base64 base64_0 = new Base64((byte) 0);
        base64_0.encodeToString(byteArray0);
        base64_0.readResults(byteArray0, (byte) 0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        Base64 base64_0 = new Base64();
        base64_0.decode((Object) "fjo;OJj}O7WvU");
        byte[] byteArray0 = new byte[1];
        base64_0.readResults(byteArray0, (byte) (-40), 113);
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        Base64 base64_0 = new Base64();
        base64_0.setInitialBuffer((byte[]) null, 76, 76);
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        Base64 base64_0 = new Base64(18, byteArray0, true);
        base64_0.setInitialBuffer(byteArray0, 61, 18);
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        byte[] byteArray0 = new byte[1];
        Base64 base64_0 = new Base64(3);
        base64_0.encodeToString(byteArray0);
        base64_0.encode(byteArray0, 76, 3);
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        byte[] byteArray0 = new byte[7];
        Base64.encodeBase64URLSafeString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        byte[] byteArray0 = new byte[1];
        Base64 base64_0 = new Base64(64, byteArray0);
        base64_0.encode(byteArray0, 64, (-5419));
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        Base64 base64_0 = new Base64();
        base64_0.encode((byte[]) null, 64, 64);
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        Base64 base64_0 = new Base64();
        Object object0 = base64_0.decode((Object) "fj;OJj}OWv}");
        base64_0.encode(object0);
    }

    @Test(timeout = 4000)
    public void test2330() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
        Base64 base64_0 = new Base64(18);
        base64_0.encode(byteArray1);
    }

    @Test(timeout = 4000)
    public void test2431() throws Throwable {
        Base64.decodeBase64("AAAzAAA=");
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        Base64 base64_0 = new Base64();
        Object object0 = base64_0.decode((Object) "fjo;OJj}O7WvU");
        base64_0.decode(object0);
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        Base64.decodeBase64("J");
    }

    @Test(timeout = 4000)
    public void test2734() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
        Base64.isArrayByteBase64(byteArray1);
    }

    @Test(timeout = 4000)
    public void test2835() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-68);
        Base64 base64_0 = new Base64(3191, byteArray0, false);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test2936() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) 125;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        Base64 base64_0 = new Base64();
        base64_0.decode((Object) null);
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Base64.decodeBase64((String) null);
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        Base64.decodeBase64("");
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        byte[] byteArray0 = new byte[3];
        Base64.encodeBase64(byteArray0, false, false, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3544() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[1] = (byte) 9;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3646() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[1] = (byte) 32;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3749() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 111;
        byteArray0[1] = (byte) 111;
        byteArray0[2] = (byte) 111;
        byteArray0[3] = (byte) 111;
        byteArray0[4] = (byte) 111;
        byteArray0[5] = (byte) 9;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3850() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) 32;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test3951() throws Throwable {
        Base64 base64_0 = new Base64();
        base64_0.encode((Object) base64_0);
    }

    @Test(timeout = 4000)
    public void test4052() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[0];
        String string0 = base64_0.encodeToString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4053() throws Throwable {
        Base64 base64_0 = new Base64();
        byte[] byteArray0 = new byte[0];
        String string0 = base64_0.encodeToString(byteArray0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test4154() throws Throwable {
        byte[] byteArray0 = new byte[9];
        String string0 = Base64.encodeBase64URLSafeString(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4255() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        Base64 base64_0 = new Base64(7, byteArray0);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test4256() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        Base64 base64_0 = new Base64(7, byteArray0);
        byte[] byteArray1 = base64_0.encode(byteArray0);
    }

    @Test(timeout = 4000)
    public void test4358() throws Throwable {
        Base64.encodeInteger((BigInteger) null);
    }
}
