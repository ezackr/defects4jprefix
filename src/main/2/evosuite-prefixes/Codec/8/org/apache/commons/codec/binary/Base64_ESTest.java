/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:03:27 GMT 2024
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.binary.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Base64_ESTest extends Base64_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MockRandom mockRandom0 = new MockRandom();
        BigInteger bigInteger0 = new BigInteger(3074, mockRandom0);
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        byte[] byteArray0 = new byte[29];
        byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Base64 base64_0 = new Base64(535, (byte[]) null);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = new byte[68];
        Base64 base64_0 = new Base64(10, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        byte[] byteArray0 = new byte[68];
        Base64 base64_0 = new Base64(10, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        byte[] byteArray2 = base64_0.encode(byteArray1);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        byte[] byteArray0 = new byte[52];
        Base64 base64_0 = new Base64(10, byteArray0, true);
        base64_0.setInitialBuffer((byte[]) null, 10, 10);
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        byte[] byteArray0 = new byte[7];
        Base64 base64_0 = new Base64((-1), byteArray0, false);
        base64_0.encode(byteArray0, (-1), (-1));
        base64_0.isUrlSafe();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        BigInteger bigInteger0 = BigInteger.TEN;
        byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        byte[] byteArray0 = Base64.decodeBase64("f%b@H~+FUn*c60G");
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 45;
        byteArray0[1] = (byte) 43;
        byteArray0[2] = (byte) 32;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        byte[] byteArray0 = new byte[52];
        Base64.encodeBase64(byteArray0, false, false, 64);
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[4] = (byte) 32;
        byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 9;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
        boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        byte[] byteArray0 = new byte[52];
        Base64 base64_0 = new Base64(25, byteArray0, true);
        byte[] byteArray1 = base64_0.encode(byteArray0);
        byte[] byteArray2 = Base64.encodeBase64(byteArray1, true);
    }

    @Test(timeout = 4000)
    public void test1521() throws Throwable {
        Base64.encodeInteger((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test1622() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ZERO;
        byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    }
}
