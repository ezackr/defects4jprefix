/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 10:27:03 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AnalyzePrototypeProperties;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSModuleGraph;
import com.google.javascript.jscomp.PeepholeSimplifyRegExp;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Deque;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class AnalyzePrototypeProperties_ESTest extends AnalyzePrototypeProperties_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.mozilla.rhino.ast.XmlString");
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
        analyzePrototypeProperties0.process(node0, node0);
        node0.isTrue();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Compiler compiler0 = new Compiler();
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
        AnalyzePrototypeProperties.NameInfo analyzePrototypeProperties_NameInfo0 = analyzePrototypeProperties0.new NameInfo("");
        Deque<AnalyzePrototypeProperties.Symbol> deque0 = analyzePrototypeProperties_NameInfo0.getDeclarations();
        deque0.size();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
        AnalyzePrototypeProperties.NameInfo analyzePrototypeProperties_NameInfo0 = analyzePrototypeProperties0.new NameInfo("F#rzz'v]*.5SDA");
        String string0 = analyzePrototypeProperties_NameInfo0.toString();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
        AnalyzePrototypeProperties.NameInfo analyzePrototypeProperties_NameInfo0 = analyzePrototypeProperties0.new NameInfo("");
        boolean boolean0 = analyzePrototypeProperties_NameInfo0.readsClosureVariables();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
        Collection<AnalyzePrototypeProperties.NameInfo> collection0 = analyzePrototypeProperties0.getAllNameInfo();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Node node0 = Node.newString((-1908874352), "'");
        AnalyzePrototypeProperties.LiteralProperty analyzePrototypeProperties_LiteralProperty0 = new AnalyzePrototypeProperties.LiteralProperty(node0, node0, node0, node0, (JSModule) null);
        Node node1 = analyzePrototypeProperties_LiteralProperty0.getPrototype();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node0 = compiler0.parseSyntheticCode("\"S1!s2]c", "\"S1!s2]c");
        AnalyzePrototypeProperties.LiteralProperty analyzePrototypeProperties_LiteralProperty0 = new AnalyzePrototypeProperties.LiteralProperty(node0, node0, node0, node0, (JSModule) null);
        Node node1 = analyzePrototypeProperties_LiteralProperty0.getValue();
        node1.getSideEffectFlags();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = Node.newString((-1908874352), "'");
        AnalyzePrototypeProperties.LiteralProperty analyzePrototypeProperties_LiteralProperty0 = new AnalyzePrototypeProperties.LiteralProperty(node0, node0, node0, node0, (JSModule) null);
        analyzePrototypeProperties_LiteralProperty0.remove();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntheticAst syntheticAst0 = new SyntheticAst("ERROR");
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        AnalyzePrototypeProperties.LiteralProperty analyzePrototypeProperties_LiteralProperty0 = new AnalyzePrototypeProperties.LiteralProperty((Node) null, (Node) null, (Node) null, node0, (JSModule) null);
        JSModule jSModule0 = analyzePrototypeProperties_LiteralProperty0.getModule();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        JSModule jSModule0 = new JSModule("valueOf");
        AnalyzePrototypeProperties.AssignmentProperty analyzePrototypeProperties_AssignmentProperty0 = new AnalyzePrototypeProperties.AssignmentProperty((Node) null, jSModule0);
        analyzePrototypeProperties_AssignmentProperty0.getPrototype();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        AnalyzePrototypeProperties.AssignmentProperty analyzePrototypeProperties_AssignmentProperty0 = new AnalyzePrototypeProperties.AssignmentProperty((Node) null, (JSModule) null);
        JSModule jSModule0 = analyzePrototypeProperties_AssignmentProperty0.getModule();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        JSModule jSModule0 = new JSModule("");
        AnalyzePrototypeProperties.AssignmentProperty analyzePrototypeProperties_AssignmentProperty0 = new AnalyzePrototypeProperties.AssignmentProperty((Node) null, jSModule0);
        analyzePrototypeProperties_AssignmentProperty0.remove();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        JSModule jSModule0 = new JSModule("$!+*FCz*8fg$85vkSW");
        AnalyzePrototypeProperties.AssignmentProperty analyzePrototypeProperties_AssignmentProperty0 = new AnalyzePrototypeProperties.AssignmentProperty((Node) null, jSModule0);
        analyzePrototypeProperties_AssignmentProperty0.getValue();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("'[1w37eE&y[gzrl");
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
        analyzePrototypeProperties0.process(node0, node0);
        node0.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("VQBxIR6q_t=~$");
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
        analyzePrototypeProperties0.process(node0, node0);
        node0.isThis();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Compiler compiler0 = new Compiler();
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
        Node node0 = Node.newString("AnalyzePrototypeProperties$1");
        AnalyzePrototypeProperties.GlobalFunction analyzePrototypeProperties_GlobalFunction0 = null;
        analyzePrototypeProperties_GlobalFunction0 = analyzePrototypeProperties0.new GlobalFunction(node0, node0, node0, (JSModule) null);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Compiler compiler0 = new Compiler();
        ArrayList<JSModule> arrayList0 = new ArrayList<JSModule>();
        JSModule jSModule0 = new JSModule("vA");
        arrayList0.add(jSModule0);
        JSModuleGraph jSModuleGraph0 = new JSModuleGraph(arrayList0);
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, jSModuleGraph0, true, true);
        AnalyzePrototypeProperties.NameInfo analyzePrototypeProperties_NameInfo0 = analyzePrototypeProperties0.new NameInfo("vA");
        boolean boolean0 = analyzePrototypeProperties_NameInfo0.markReference(jSModule0);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        Compiler compiler0 = new Compiler();
        ArrayList<JSModule> arrayList0 = new ArrayList<JSModule>();
        JSModule jSModule0 = new JSModule("vA");
        arrayList0.add(jSModule0);
        JSModuleGraph jSModuleGraph0 = new JSModuleGraph(arrayList0);
        AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, jSModuleGraph0, true, true);
        AnalyzePrototypeProperties.NameInfo analyzePrototypeProperties_NameInfo0 = analyzePrototypeProperties0.new NameInfo("vA");
        boolean boolean0 = analyzePrototypeProperties_NameInfo0.markReference(jSModule0);
        boolean boolean1 = analyzePrototypeProperties_NameInfo0.markReference(jSModule0);
    }
}
