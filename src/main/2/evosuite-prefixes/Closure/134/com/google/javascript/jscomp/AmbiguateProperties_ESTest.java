/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 08:01:18 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AmbiguateProperties;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.rhino.Node;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class AmbiguateProperties_ESTest extends AmbiguateProperties_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[14];
        Node node0 = compiler0.parseSyntheticCode("c^m.google.javascript.jscomp.AmZigfteProperties$PropertyGraph", "c^m.google.javascript.jscomp.AmZigfteProperties$PropertyGraph");
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        ambiguateProperties0.process(node0, node0);
        node0.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("f{K|Kc2i#.");
        Compiler compiler0 = new Compiler(mockPrintStream0);
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, (char[]) null);
        Map<String, String> map0 = ambiguateProperties0.getRenamingMap();
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[14];
        Node node0 = compiler0.parseSyntheticCode("c^m.google.javascript.jscomp.AmZigfteProperties$PropertyGraph", "c^m.google.javascript.jscomp.AmZigfteProperties$PropertyGraph");
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node1 = new Node(29);
        ambiguateProperties0.process(node1, node0);
        ambiguateProperties0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[7];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = new Node(64);
        ambiguateProperties0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[1];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = compiler0.parseTestCode("JSAbtractCompilerAmZigfteProperties$PropertyGaph");
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[12];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString("x%?cJl7<yI`;X", 64, 64);
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[1];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString(".U]ob!85p+@crM#f", 58, 58);
        Node node1 = new Node(35, node0, 28, 14);
        ambiguateProperties0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[12];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString("x%?cJl7<yI`;X", 64, 64);
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[3];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = compiler0.parseTestCode("x%?cJl7<yI`<X");
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[14];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString("x%u?cJl#Q<yI<X");
        node0.setQuotedString();
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[1];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString(58, ".U]ob!85p+@crM#f");
        Node node1 = new Node(35, node0, 28, 14);
        ambiguateProperties0.process(node1, node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Compiler compiler0 = new Compiler();
        char[] charArray0 = new char[3];
        AmbiguateProperties ambiguateProperties0 = new AmbiguateProperties(compiler0, charArray0);
        Node node0 = Node.newString("JSAbstractCompilerAmZigfteProperties$PropertyGaph", 64, 64);
        Node node1 = new Node(64, node0, 29, 0);
        ambiguateProperties0.process(node0, node1);
    }
}
