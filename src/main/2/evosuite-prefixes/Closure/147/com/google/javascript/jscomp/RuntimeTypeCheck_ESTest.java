/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 09:09:33 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.RuntimeTypeCheck;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class RuntimeTypeCheck_ESTest extends RuntimeTypeCheck_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Compiler compiler0 = new Compiler();
        RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, "`9+sI*K(bsRdS}");
        Node node0 = Node.newString("`9+sI*K(bsRdS}");
        runtimeTypeCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("function(warning, expr) {}");
        RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, "function(warning, expr) {}");
        runtimeTypeCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Node.newString(4, "V'DgO6![}VK]5#a-w:", 4, 4);
        RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, "V'DgO6![}VK]5#a-w:");
        runtimeTypeCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        RuntimeTypeCheck.getBoilerplateCode((AbstractCompiler) null, (String) null);
    }
}
