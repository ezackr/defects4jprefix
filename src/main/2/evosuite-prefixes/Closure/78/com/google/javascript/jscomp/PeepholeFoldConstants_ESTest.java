/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 04:24:09 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.SourceInformationAnnotator;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PeepholeFoldConstants_ESTest extends PeepholeFoldConstants_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 238, 238, 238);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        Node node0 = Node.newString("");
        Node node1 = new Node(26, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Node node0 = Node.newNumber((double) (-1123), (-1123), (-1123));
        Node node1 = new Node(27, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        Node node0 = new Node(47, 47, 47);
        Node node1 = new Node(28, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 229, 229, 229);
        Node node1 = new Node(29, node0, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        Node node0 = Node.newString(37, "rW,");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("");
        Node node1 = new Node(122, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 238, 238, 238);
        Node node1 = new Node(36, node0, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 238, 238, 238);
        Node node1 = new Node(36, node0, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getType();
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        Node node0 = Node.newString(842, "pW,", 842, 842);
        Node node1 = Node.newNumber((double) 48);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(16, node1, node0, node0, node0, 48, 41);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01011() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(10, node0, node1, 15, 36);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01012() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(10, node0, node1, 15, 36);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test01113() throws Throwable {
        Node node0 = Node.newNumber(1666.0);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
        Node node2 = new Node(11, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        Node node0 = Node.newNumber(1666.0);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
        Node node2 = new Node(11, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 99, 99, 99);
        Node node1 = Node.newNumber(99.0);
        Node node2 = new Node(13, node0, node0, node0, node1, 39, 8);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        Node node0 = Node.newString("");
        Node node1 = new Node(2);
        Node node2 = new Node(14, node0, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = new Node(29);
        Node node2 = new Node(15, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        Node node0 = Node.newString("Ai\"9cg`&iP+.SkI<z");
        Node node1 = new Node(27, 47, 0);
        Node node2 = new Node(17, node0, node0, node1, (-3), 36);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        Node node0 = new Node(93);
        Node node1 = new Node(29);
        Node node2 = new Node(18, node1, node0, node0, node0, 41, 18);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test01720() throws Throwable {
        Node node0 = new Node(46, 46, 46);
        Node node1 = new Node(24, 1, (-2));
        Node node2 = new Node(19, node1, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01821() throws Throwable {
        Node node0 = Node.newNumber((double) 25, 25, 25);
        Node node1 = Node.newNumber((double) 48, 1, 37);
        Node node2 = new Node(20, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        Node node0 = new Node(20);
        Node node1 = new Node(12, 2, 20);
        Node node2 = new Node(21, node1, node1, node1, node0, 30, 9);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test02023() throws Throwable {
        Node node0 = Node.newString(38, ".P|TT*Q/o6A6v^abR");
        Node node1 = new Node(14);
        Node node2 = new Node(22, node1, node0, node1, node0, 5, (-416));
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02024() throws Throwable {
        Node node0 = Node.newString(38, ".P|TT*Q/o6A6v^abR");
        Node node1 = new Node(14);
        Node node2 = new Node(22, node1, node0, node1, node0, 5, (-416));
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test02125() throws Throwable {
        Node node0 = new Node(93);
        Node node1 = new Node(7, 12, 1659);
        Node node2 = new Node(23, node1, node1, node1, node0, 42, 31);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test02126() throws Throwable {
        Node node0 = new Node(93);
        Node node1 = new Node(7, 12, 1659);
        Node node2 = new Node(23, node1, node1, node1, node0, 42, 31);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02227() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = Node.newNumber((-179.8645), 31, 47);
        Node node2 = new Node(24, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02228() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = Node.newNumber((-179.8645), 31, 47);
        Node node2 = new Node(24, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test02329() throws Throwable {
        Node node0 = Node.newString(30, "?S");
        Node node1 = Node.newString(1, "?S", 1, 1);
        Node node2 = new Node(25, node1, node1, node1, node0, 12, 6);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02330() throws Throwable {
        Node node0 = Node.newString(30, "?S");
        Node node1 = Node.newString(1, "?S", 1, 1);
        Node node2 = new Node(25, node1, node1, node1, node0, 12, 6);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test02431() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(577);
        Node node1 = new Node(48, 19, 18);
        Node node2 = new Node(31, node1, node0, node0, node0, 8, 21);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02532() throws Throwable {
        Node node0 = new Node(51);
        Node node1 = Node.newString("k+O@'s");
        Node node2 = new Node(33, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test02633() throws Throwable {
        Node node0 = new Node(80);
        Node node1 = new Node(14, (-2), 8);
        Node node2 = new Node(34, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02734() throws Throwable {
        Node node0 = new Node(111);
        Node node1 = new Node(12);
        Node node2 = new Node(35, node1, node0, node0, node0, 41, 35);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02835() throws Throwable {
        Node node0 = Node.newString("Ai\"9cg`&iP+.SkI<z");
        Node node1 = new Node(27, 47, 0);
        Node node2 = new Node(36, node0, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02936() throws Throwable {
        Node node0 = Node.newString("lasInexOB5f");
        Node node1 = new Node(24, 8, 49);
        Node node2 = new Node(38, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03037() throws Throwable {
        Node node0 = new Node(63);
        Node node1 = new Node(63);
        Node node2 = new Node(39, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03138() throws Throwable {
        Node node0 = Node.newString("");
        Node node1 = new Node(43, 18, 16);
        Node node2 = new Node(40, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03239() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(41, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03340() throws Throwable {
        Node node0 = new Node(111);
        Node node1 = new Node(12);
        Node node2 = new Node(42, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03441() throws Throwable {
        Node node0 = Node.newString(",_FBH.*");
        Node node1 = new Node(39, 1, 37);
        Node node2 = new Node(43, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03542() throws Throwable {
        Node node0 = Node.newString("Ai\"9cg`&iP+.SkI<z");
        Node node1 = new Node(29, 2, 1);
        Node node2 = new Node(44, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03643() throws Throwable {
        Node node0 = Node.newString("xj?>;64M]~ `v%6XE?");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = Node.newString("0}iYon8HM;)|^82H[");
        Node node2 = new Node(45, node0, node0, node1, node1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03744() throws Throwable {
        Node node0 = Node.newString("lasInexOB5f");
        Node node1 = new Node(24, 8, 49);
        Node node2 = new Node(46, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test03845() throws Throwable {
        Node node0 = Node.newString("rW,");
        Node node1 = Node.newNumber((double) 19, 39, 43);
        Node node2 = new Node(47, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03946() throws Throwable {
        Node node0 = Node.newString(",_wFBH.*");
        Node node1 = new Node(24, 8, 49);
        Node node2 = new Node(48, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04047() throws Throwable {
        Node node0 = new Node(19, 19, 19);
        Node node1 = new Node(30, 21, 12);
        Node node2 = new Node(49, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isSyntheticBlock();
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        Node node0 = Node.newNumber((double) 238, 238, 238);
        Node node1 = Node.newNumber((-1.0));
        Node node2 = new Node(50, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04249() throws Throwable {
        Node node0 = Node.newString("0}iYon8HM;)|^82H[");
        Node node1 = new Node(24, 8, 14);
        Node node2 = new Node(51, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04350() throws Throwable {
        Node node0 = new Node(46);
        Node node1 = new Node(24, 1, (-2));
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(53, node1, node1, node0, node0, 45, 100);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSideEffectFlags();
    }

    @Test(timeout = 4000)
    public void test04451() throws Throwable {
        Node node0 = new Node(1, 1, 1);
        Node node1 = new Node(30, 21, 12);
        Node node2 = new Node(54, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSideEffectFlags();
    }

    @Test(timeout = 4000)
    public void test04552() throws Throwable {
        Node node0 = new Node(44);
        Node node1 = Node.newNumber((double) 15, 91, 15);
        Node node2 = new Node(55, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04653() throws Throwable {
        Node node0 = new Node(4080);
        Node node1 = new Node(1);
        Node node2 = new Node(56, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04754() throws Throwable {
        Node node0 = new Node(70);
        Node node1 = new Node(29);
        Node node2 = new Node(57, node1, node0, node0, node0, 41, 51);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04855() throws Throwable {
        Node node0 = new Node(60, 60, 4096);
        Node node1 = new Node(15);
        Node node2 = new Node(58, node1, node0, node0, node0, 17, 28);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04956() throws Throwable {
        Node node0 = new Node((-1386));
        Node node1 = new Node(1);
        Node node2 = new Node(59, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05057() throws Throwable {
        Node node0 = new Node(5);
        Node node1 = new Node(2, 0, 2);
        Node node2 = new Node(60, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05158() throws Throwable {
        Node node0 = new Node(123);
        Node node1 = Node.newString("]bsH<");
        Node node2 = new Node(61, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05259() throws Throwable {
        Node node0 = new Node(93, 93, 93);
        Node node1 = new Node(29);
        Node node2 = new Node(62, node1, node0, node0, node0, 41, 62);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test05360() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(63, node1, node0, node0, node0, 41, 63);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test05461() throws Throwable {
        Node node0 = Node.newString(93, "Ai\"9cg`&iP+.SkI<z");
        Node node1 = new Node(27, 47, 0);
        Node node2 = new Node(64, node0, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05562() throws Throwable {
        Node node0 = new Node(78);
        Node node1 = Node.newString("stVing");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(65, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(97);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
        Node node2 = new Node(66, node0, node1, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05764() throws Throwable {
        Node node0 = new Node(4080);
        Node node1 = new Node(1);
        Node node2 = new Node(67, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05865() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(80);
        Node node1 = Node.newString("k+@'s");
        Node node2 = new Node(68, node1, node1, node1, node0, 6, 12);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test05966() throws Throwable {
        Node node0 = new Node(102, 102, 102);
        Node node1 = new Node(12);
        Node node2 = new Node(69, node1, node0, node0, node0, 41, 69);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06067() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(70, node1, node0, node0, node0, 41, 70);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test06168() throws Throwable {
        Node node0 = new Node(123);
        Node node1 = new Node(63, 39, 7);
        Node node2 = new Node(71, node0, node1, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06269() throws Throwable {
        Node node0 = new Node((-3576), (-3576), (-3576));
        Node node1 = new Node(29);
        Node node2 = new Node(72, node1, node0, node0, node0, 41, 72);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06370() throws Throwable {
        Node node0 = new Node((-43));
        Node node1 = Node.newString("stVing");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(73, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06471() throws Throwable {
        Node node0 = new Node(92);
        Node node1 = Node.newString("@d QyEPqbq");
        Node node2 = new Node(74, node1, node0, node0, node0, 2, 16);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06572() throws Throwable {
        Node node0 = Node.newString("Oprand out of range, bitwise peration will lose information: {0}");
        Node node1 = Node.newString("Oprand out of range, bitwise peration will lose information: {0}", 4095, 29);
        Node node2 = new Node(75, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06673() throws Throwable {
        Node node0 = new Node(60, 60, 95);
        Node node1 = Node.newString("length");
        Node node2 = new Node(76, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06774() throws Throwable {
        Node node0 = Node.newString("hota, Stati ~nctions:");
        Node node1 = Node.newString("hota, Stati ~nctions:", 18, 12);
        Node node2 = new Node(77, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06875() throws Throwable {
        Node node0 = new Node(46, 46, 46);
        Node node1 = new Node(24, 1, (-2));
        Node node2 = new Node(78, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06976() throws Throwable {
        Node node0 = new Node(94, 94, 94);
        Node node1 = Node.newString("");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(79, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test07077() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = new Node(29);
        Node node2 = new Node(80, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.wasEmptyNode();
    }

    @Test(timeout = 4000)
    public void test07178() throws Throwable {
        Node node0 = new Node(70);
        Node node1 = new Node(29);
        Node node2 = new Node(81, node0, node0, node0, node1, 35, 46);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07279() throws Throwable {
        Node node0 = new Node(14, 14, 14);
        Node node1 = Node.newString("#!n7T;c`jNb*UB", 45, 12);
        Node node2 = new Node(82, node0, node1, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07380() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = new Node(4);
        Node node2 = new Node(83, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07481() throws Throwable {
        Node node0 = new Node(46, 46, 46);
        Node node1 = new Node(24, 1, (-2));
        Node node2 = new Node(84, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07582() throws Throwable {
        Node node0 = new Node(74);
        Node node1 = Node.newString("");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(85, node0, node1, node0, node1, 36, 8);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07683() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = new Node(4);
        Node node2 = new Node(86, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test07784() throws Throwable {
        Node node0 = Node.newString(54, "Ai\"9cg`&iP+.SkI<z");
        Node node1 = new Node(27, 47, 0);
        Node node2 = new Node(87, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSideEffectFlags();
    }

    @Test(timeout = 4000)
    public void test07885() throws Throwable {
        Node node0 = new Node(111);
        Node node1 = new Node(12);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = new Node(88, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07986() throws Throwable {
        Node node0 = new Node(14, 14, 14);
        Node node1 = Node.newString("#!n7;cjNb*UB");
        Node node2 = new Node(89, node1, node1, node0, node0, 26, 17);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test08087() throws Throwable {
        Node node0 = new Node((-3560), (-3560), (-3560));
        Node node1 = new Node(29);
        Node node2 = new Node(90, node1, node0, node0, node0, 41, 90);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08188() throws Throwable {
        Node node0 = Node.newString(54, "Ai\"9cg`&i+.SkIz");
        Node node1 = new Node(27, 47, 0);
        Node node2 = new Node(91, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08289() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(80);
        Node node1 = Node.newString("k+O@'s");
        Node node2 = new Node(92, node1, node1, node1, node0, 6, 12);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08390() throws Throwable {
        Node node0 = new Node(4080, 4080, 4080);
        Node node1 = Node.newNumber((double) 21, 7, 29);
        Node node2 = new Node(93, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08491() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 66, 86, 66);
        Node node1 = Node.newNumber(3095.891);
        Node node2 = new Node(94, node0, node0, node0, node1, 32, 48);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08592() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(80);
        Node node1 = Node.newString("k+@'s");
        Node node2 = new Node(95, node1, node1, node1, node0, 6, 12);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08693() throws Throwable {
        Node node0 = new Node(46, 46, 46);
        Node node1 = new Node(24, 1, (-2));
        Node node2 = new Node(96, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08794() throws Throwable {
        Node node0 = new Node(111);
        Node node1 = new Node(12);
        Node node2 = new Node(97, node1, node0, node0, node0, 41, 97);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08895() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(108);
        Node node1 = Node.newString("k+O@'s");
        Node node2 = new Node(98, node1, node1, node1, node0, 6, 12);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08996() throws Throwable {
        Node node0 = new Node(4080, 4080, 4080);
        Node node1 = new Node(1);
        Node node2 = new Node(99, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test09097() throws Throwable {
        Node node0 = new Node(95);
        Node node1 = Node.newString("@dQyEPbq");
        Node node2 = new Node(100, node0, node1, node0, node1, 2, 16);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test09098() throws Throwable {
        Node node0 = new Node(95);
        Node node1 = Node.newString("@dQyEPbq");
        Node node2 = new Node(100, node0, node1, node0, node1, 2, 16);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test09199() throws Throwable {
        Node node0 = Node.newString("hota, Stati ~nctions:");
        Node node1 = Node.newString("hota, Stati ~nctions:", 18, 12);
        Node node2 = new Node(101, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test092100() throws Throwable {
        Node node0 = Node.newString("Ai\"19cg`&iP+.SkI<z");
        Node node1 = Node.newNumber((double) 1, 9, 22);
        Node node2 = new Node(4, node0, node1, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test093101() throws Throwable {
        Node node0 = Node.newString("NaN");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = Node.newString(16, "NaN", 2, 15);
        Node node2 = new Node(21, node1, node0, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test094102() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(85, "tbeR");
        Node node1 = new Node(9, node0, node0, node0, node0, 8, 16);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test095103() throws Throwable {
        Node node0 = new Node(98);
        Node node1 = new Node(20, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test096104() throws Throwable {
        Node node0 = new Node(100);
        Node node1 = new Node(20, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test097105() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(20, node0, node0, node0, node0, 10, 4);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test098106() throws Throwable {
        Node node0 = Node.newString(38, "undefined", 38, 38);
        Node node1 = new Node(18, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test099107() throws Throwable {
        Node node0 = new Node(44, 44, 44);
        Node node1 = new Node(27, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test100108() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(32);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test101109() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = new Node(32, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getChildCount();
    }

    @Test(timeout = 4000)
    public void test102110() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(39);
        Node node1 = new Node(32, node0, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test103111() throws Throwable {
        Node node0 = Node.newString("rW,");
        Node node1 = new Node(32, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test104112() throws Throwable {
        Node node0 = new Node(43, 43, 43);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = new Node(32, node0, node0, node0, node0, 17, 9);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test105113() throws Throwable {
        Node node0 = new Node(44);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = new Node(32, node0, node0, node0, node0, 17, 9);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test106114() throws Throwable {
        Node node0 = new Node(63);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test107115() throws Throwable {
        Node node0 = new Node(47, 47, 47);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = new Node(32, node0, node0, node0, node0, 17, 9);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test108116() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(97, 97, 97);
        Node node1 = new Node(28, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test108117() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(97, 97, 97);
        Node node1 = new Node(28, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getLineno();
    }

    @Test(timeout = 4000)
    public void test109118() throws Throwable {
        Node node0 = Node.newNumber((double) 57);
        Node node1 = new Node(26, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test110119() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 97, 97, 1);
        Node node1 = new Node(28, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test111120() throws Throwable {
        Node node0 = Node.newNumber((double) (-1123), (-1123), (-1123));
        node0.setDouble(1808.79);
        Node node1 = new Node(27, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test112121() throws Throwable {
        Node node0 = new Node((-1900));
        Node node1 = Node.newString("");
        Node node2 = new Node(52, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test113122() throws Throwable {
        Node node0 = Node.newString("oWL<]", (-1871), (-1871));
        Node node1 = Node.newString("oWL<]");
        Node node2 = new Node(52, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("oWL<]", true);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, sourceInformationAnnotator0);
        peepholeFoldConstants0.beginTraversal(nodeTraversal0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test114123() throws Throwable {
        Node node0 = new Node((-3586));
        Node node1 = new Node(4);
        Node node2 = new Node(86, node1, node0, node0, node0);
        node0.addChildToFront(node2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test115124() throws Throwable {
        Node node0 = new Node(92);
        Node node1 = Node.newString("@d QyEPqbq");
        Node node2 = Node.newString("@d QyEPqbq");
        Node node3 = new Node(100, node1, node2, node0, node2, 2, 16);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node3);
    }

    @Test(timeout = 4000)
    public void test116125() throws Throwable {
        Node node0 = Node.newString("rW,");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = new Node(11);
        Node node2 = new Node(21, node0, node0, node0, node1, 1, 17);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test117126() throws Throwable {
        Node node0 = new Node(21);
        Node node1 = Node.newString("Shift amount out of bounQs: {0}", 0, 49);
        Node node2 = new Node(21, node1, node1, node1, node0, 30, 9);
        node0.addChildrenToBack(node2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test118127() throws Throwable {
        Node node0 = Node.newString(":,");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node1 = Node.newString(":,");
        Node node2 = new Node(21, node1, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test119128() throws Throwable {
        Node node0 = Node.newNumber((double) 25, 25, 25);
        Node node1 = Node.newNumber((double) 1, (-73), 71);
        Node node2 = new Node(9, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test120129() throws Throwable {
        Node node0 = new Node(61);
        Node node1 = Node.newNumber((double) 48, 1, 37);
        Node node2 = new Node(20, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test121130() throws Throwable {
        Node node0 = Node.newNumber((double) 61, 61, 61);
        Node node1 = Node.newNumber((double) 48, 1, 37);
        Node node2 = new Node(20, node1, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test122131() throws Throwable {
        Node node0 = Node.newString("rW,");
        Node node1 = new Node(15, 24, (-2));
        Node node2 = new Node(14, node1, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isVarArgs();
    }

    @Test(timeout = 4000)
    public void test123132() throws Throwable {
        Node node0 = new Node(44, 44, 44);
        Node node1 = new Node(30, 21, 12);
        Node node2 = new Node(14, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test124133() throws Throwable {
        Node node0 = Node.newString("?S", (-1), (-1));
        Node node1 = Node.newString("?S");
        Node node2 = new Node(12, node1, node0, node1, node0, 27, 0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test125134() throws Throwable {
        Node node0 = Node.newString("Array igdex nHt integBr: {0}");
        Node node1 = Node.newString("Array igdex not integer: {0}", 49, 2);
        Node node2 = new Node(13, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test126135() throws Throwable {
        Node node0 = Node.newString("", (-1871), (-1871));
        Node node1 = Node.newString("");
        Node node2 = new Node(46, node0, node1, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test127136() throws Throwable {
        Node node0 = Node.newString("lastIndexOf");
        Node node1 = Node.newString("|zGCTfGHgt&$");
        Node node2 = new Node(16, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test128137() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber(2161.591, (-423), (-423));
        Node node1 = Node.newNumber(202.0, 38, 42);
        Node node2 = new Node(16, node1, node0, node1, node0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test129138() throws Throwable {
        Node node0 = Node.newNumber((double) (-3560), (-3560), (-3560));
        Node node1 = Node.newNumber((double) (-3560), (-3560), (-3560));
        Node node2 = new Node(14, node1, node0, node1, node0, 8, 0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test130139() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 193, 193, 193);
        Node node1 = Node.newNumber((double) 1);
        Node node2 = new Node(13, node0, node0, node0, node1, 39, 8);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test131140() throws Throwable {
        Node node0 = Node.newNumber((double) (-3560), (-3560), (-3560));
        Node node1 = Node.newNumber(3620.265543);
        Node node2 = new Node(14, node0, node0, node0, node1, 8, 0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test132141() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = new Node(32, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test133142() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 86, 86, 86);
        Node node1 = new Node(37, node0, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getCharno();
    }

    @Test(timeout = 4000)
    public void test134143() throws Throwable {
        Node node0 = Node.newString("rW,");
        Node node1 = Node.newNumber((double) 19, 39, 43);
        Node node2 = new Node(33, node1, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }
}
