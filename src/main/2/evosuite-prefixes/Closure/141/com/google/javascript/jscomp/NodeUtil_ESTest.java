/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 08:38:38 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.FunctionNode;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NodeUtil_ESTest extends NodeUtil_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("M{{#ebyv'vpAkS+J9", 126, 126);
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "M{{#ebyv'vpAkS+J9");
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("M{{#ebyv'vpAkS+J9", 126, 126);
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "M{{#ebyv'vpAkS+J9");
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test0002() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("M{{#ebyv'vpAkS+J9", 126, 126);
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "M{{#ebyv'vpAkS+J9");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        NodeUtil.redeclareVarsInsideBranch(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test0026() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        NodeUtil.redeclareVarsInsideBranch(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test0027() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        NodeUtil.redeclareVarsInsideBranch(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test0038() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.getPrototypePropertyName(node0);
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.containsCall(node0);
    }

    @Test(timeout = 4000)
    public void test00410() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.containsCall(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test00511() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.containsFunctionDeclaration(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test00512() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.containsFunctionDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test00513() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.containsFunctionDeclaration(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test00614() throws Throwable {
        Node node0 = new Node(38);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test00715() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isNodeTypeReferenced(node0, 40);
    }

    @Test(timeout = 4000)
    public void test00716() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isNodeTypeReferenced(node0, 40);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test00817() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 3);
    }

    @Test(timeout = 4000)
    public void test00818() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 3);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test00919() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.isVarArgsFunction(node0);
    }

    @Test(timeout = 4000)
    public void test01020() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newQualifiedNameNode(": ", node0, ": ");
        node0.addChildToFront(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test01021() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newQualifiedNameNode(": ", node0, ": ");
        node0.addChildToFront(node1);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test01022() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newQualifiedNameNode(": ", node0, ": ");
        node0.addChildToFront(node1);
        Node node2 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node2);
        node2.getType();
    }

    @Test(timeout = 4000)
    public void test01023() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newQualifiedNameNode(": ", node0, ": ");
        node0.addChildToFront(node1);
        Node node2 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node2);
        Node node3 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node3);
        node0.addChildrenToFront(node0);
        Node node4 = NodeUtil.getConditionExpression(node0);
        node4.getCharno();
    }

    @Test(timeout = 4000)
    public void test01024() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newQualifiedNameNode(": ", node0, ": ");
        node0.addChildToFront(node1);
        Node node2 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node2);
        Node node3 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node3);
        node0.addChildrenToFront(node0);
        Node node4 = NodeUtil.getConditionExpression(node0);
        node4.getLineno();
    }

    @Test(timeout = 4000)
    public void test01125() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = NodeUtil.getFunctionBody(node0);
    }

    @Test(timeout = 4000)
    public void test01226() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.referencesThis(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test01227() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.referencesThis(node0);
    }

    @Test(timeout = 4000)
    public void test01328() throws Throwable {
        Node node0 = new Node(41, 41, 41);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test01429() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test01530() throws Throwable {
        Node node0 = Node.newString("DOTQUERY");
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test01631() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("{Rno7J$(EOFz/9vV", 37, (-1308));
        Node node1 = new Node(43, node0, node0, node0, node0, 108, (-1661));
        boolean boolean0 = NodeUtil.getBooleanValue(node1);
    }

    @Test(timeout = 4000)
    public void test01632() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("{Rno7J$(EOFz/9vV", 37, (-1308));
        Node node1 = new Node(43, node0, node0, node0, node0, 108, (-1661));
        boolean boolean0 = NodeUtil.getBooleanValue(node1);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test01633() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("{Rno7J$(EOFz/9vV", 37, (-1308));
        Node node1 = new Node(43, node0, node0, node0, node0, 108, (-1661));
        boolean boolean0 = NodeUtil.getBooleanValue(node1);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test01734() throws Throwable {
        Node node0 = new Node(44, 708, 44);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test01835() throws Throwable {
        Node node0 = new Node(47);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test01936() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02037() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test02038() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02139() throws Throwable {
        Node node0 = new Node(46);
        NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02240() throws Throwable {
        Node node0 = Node.newString("", 86, 8207);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02341() throws Throwable {
        Node node0 = Node.newNumber((double) 110);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02442() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test02443() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02444() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test02545() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("Infinity", 32768, 32768);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02546() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("Infinity", 32768, 32768);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test02647() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("NaN", 101, 101);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test02648() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("NaN", 101, 101);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test02649() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("NaN", 101, 101);
        boolean boolean0 = NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02750() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(">>=", 91, 91);
        NodeUtil.getBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test02851() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("LO#AL_LOAD", 9, 28);
        NodeUtil.getStringValue(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test02852() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("LO#AL_LOAD", 9, 28);
        NodeUtil.getStringValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test02953() throws Throwable {
        Node node0 = Node.newString("Infinity");
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03054() throws Throwable {
        Node node0 = Node.newNumber((-2653.906));
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03155() throws Throwable {
        Node node0 = new Node(93);
        Node node1 = new Node(41, node0, 43, (-1216));
        String string0 = NodeUtil.getStringValue(node1);
    }

    @Test(timeout = 4000)
    public void test03256() throws Throwable {
        Node node0 = Node.newNumber((double) 77);
        Node node1 = new Node(43, node0, node0, node0);
        String string0 = NodeUtil.getStringValue(node1);
    }

    @Test(timeout = 4000)
    public void test03357() throws Throwable {
        Node node0 = Node.newNumber((-1750.2606849));
        node0.setType(44);
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03458() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03559() throws Throwable {
        Node node0 = new Node(88);
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03660() throws Throwable {
        Node node0 = Node.newNumber(0.0, 142, 142);
        String string0 = NodeUtil.getStringValue(node0);
    }

    @Test(timeout = 4000)
    public void test03761() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        NodeUtil.getFunctionName(node1, node0);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test03762() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        NodeUtil.getFunctionName(node1, node0);
        node1.getLineno();
    }

    @Test(timeout = 4000)
    public void test03763() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        NodeUtil.getFunctionName(node1, node0);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test03764() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        NodeUtil.getFunctionName(node1, node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test03865() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[10];
        Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
        String string0 = NodeUtil.getFunctionName(node0, node0);
    }

    @Test(timeout = 4000)
    public void test03966() throws Throwable {
        Node node0 = NodeUtil.newVarNode("|", (Node) null);
    }

    @Test(timeout = 4000)
    public void test03967() throws Throwable {
        Node node0 = NodeUtil.newVarNode("|", (Node) null);
        String string0 = NodeUtil.getFunctionName(node0, node0);
    }

    @Test(timeout = 4000)
    public void test03968() throws Throwable {
        Node node0 = NodeUtil.newVarNode("|", (Node) null);
        String string0 = NodeUtil.getFunctionName(node0, node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test04070() throws Throwable {
        Node node0 = new Node(29);
        NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04171() throws Throwable {
        Node node0 = new Node(32);
        Node node1 = NodeUtil.newName("Infinity", node0);
        boolean boolean0 = NodeUtil.isLiteralValue(node1);
    }

    @Test(timeout = 4000)
    public void test04172() throws Throwable {
        Node node0 = new Node(32);
        Node node1 = NodeUtil.newName("Infinity", node0);
        boolean boolean0 = NodeUtil.isLiteralValue(node1);
        node1.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test04273() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(63);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04374() throws Throwable {
        Node node0 = Node.newString("UXAQg^j^/)'cg!05B");
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04475() throws Throwable {
        Node node0 = new Node(41, 41, 41);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04576() throws Throwable {
        Node node0 = Node.newString(">>>=");
        node0.setType(43);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04677() throws Throwable {
        Node node0 = new Node(44, 44, 44);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04778() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(86, node0, node0, node0, node0, 6, 24);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test04879() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04880() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("undefined", 124, (-2230));
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test04981() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("Expected NEW node, got ", 105, 105);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test04982() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("Expected NEW node, got ", 105, 105);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test04983() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("Expected NEW node, got ", 105, 105);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test05084() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = NodeUtil.newName("NaN", node0, "=TqJNl-9Z|m5.jWJu\"");
        boolean boolean0 = NodeUtil.isImmutableValue(node1);
    }

    @Test(timeout = 4000)
    public void test05085() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = NodeUtil.newName("NaN", node0, "=TqJNl-9Z|m5.jWJu\"");
        boolean boolean0 = NodeUtil.isImmutableValue(node1);
        node1.isQualifiedName();
    }

    @Test(timeout = 4000)
    public void test05186() throws Throwable {
        Node node0 = new Node(47);
        boolean boolean0 = NodeUtil.isLiteralValue(node0);
    }

    @Test(timeout = 4000)
    public void test05287() throws Throwable {
        Node node0 = new Node(2943);
        Node node1 = new Node(47, node0, 38, 46);
        boolean boolean0 = NodeUtil.isLiteralValue(node1);
    }

    @Test(timeout = 4000)
    public void test05388() throws Throwable {
        Node node0 = new Node(124, 124, 124);
        Node node1 = new Node(9, node0, node0, node0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test05489() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = new Node(10, node0, node0, node0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test05590() throws Throwable {
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
        JSType[] jSTypeArray0 = new JSType[1];
        Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
        node0.setType(11);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test05691() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(12);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test05792() throws Throwable {
        Locale locale0 = Locale.forLanguageTag("<;/A<=|,KX`lHm,x");
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Node node0 = Node.newString("<;/A<=|,KX`lHm,x");
        Node node1 = new Node(13, node0, node0, node0);
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    }

    @Test(timeout = 4000)
    public void test05893() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(14, node0, node0);
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    }

    @Test(timeout = 4000)
    public void test05994() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(15, node0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test06095() throws Throwable {
        Node node0 = new Node(16, 16, 16);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test06196() throws Throwable {
        Node node0 = new Node(34, 34, 34);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Node node1 = new Node(17, node0, 1, 77);
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test06297() throws Throwable {
        Node node0 = new Node(18);
        Locale locale0 = Locale.PRC;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test06398() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(19);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test06499() throws Throwable {
        Node node0 = new Node(20);
        Locale locale0 = Locale.ENGLISH;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test065100() throws Throwable {
        Node node0 = new Node(21, 26, 45);
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test066101() throws Throwable {
        Node node0 = new Node(22);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test067102() throws Throwable {
        Node node0 = new Node(54);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Node node1 = new Node(23, node0, node0, node0, node0, 117, 4231);
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test068103() throws Throwable {
        Locale locale0 = Locale.CHINA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(24, node0, node0, node0);
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    }

    @Test(timeout = 4000)
    public void test069104() throws Throwable {
        Node node0 = new Node(25, 25, 25);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test070105() throws Throwable {
        Node node0 = new Node(26);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test071106() throws Throwable {
        Node node0 = new Node(27);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test072107() throws Throwable {
        Node node0 = new Node(28);
        Locale locale0 = Locale.UK;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test073108() throws Throwable {
        Node node0 = new Node(29);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test074109() throws Throwable {
        Node node0 = new Node(30, 30, 30);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test075110() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(31, node0, node0, node0, 10, 40);
        Locale locale0 = Locale.ITALY;
        Set<String> set0 = locale0.getUnicodeLocaleKeys();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    }

    @Test(timeout = 4000)
    public void test076111() throws Throwable {
        Node node0 = new Node(32);
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    }

    @Test(timeout = 4000)
    public void test077112() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test077113() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test077114() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test077115() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test077116() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        node0.isQualifiedName();
    }

    @Test(timeout = 4000)
    public void test078117() throws Throwable {
        Node node0 = new Node(34);
        Locale locale0 = Locale.UK;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test079118() throws Throwable {
        Node node0 = new Node(35, 4096, 113);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test080119() throws Throwable {
        Node node0 = new Node(36);
        Locale locale0 = Locale.UK;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test081120() throws Throwable {
        Node node0 = new Node(37);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test082121() throws Throwable {
        Node node0 = Node.newNumber(130.03674247591135);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test083122() throws Throwable {
        Node node0 = Node.newString("~6U$Td!e3m#^W)9%<");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test084123() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(41, node0, node0, node0, 41, 37);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test085124() throws Throwable {
        Node node0 = new Node(42);
        Locale locale0 = Locale.ENGLISH;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    }

    @Test(timeout = 4000)
    public void test086125() throws Throwable {
        Node node0 = new Node(43, 43, 43);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test087126() throws Throwable {
        Node node0 = new Node(44);
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    }

    @Test(timeout = 4000)
    public void test088127() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
        node0.addChildrenToFront(node1);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test088128() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
        node0.addChildrenToFront(node1);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test089129() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("~Y%;w`", (-963), (-963));
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        linkedHashSet0.add("~Y%;w`");
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test090130() throws Throwable {
        Node node0 = new Node(125);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    }

    @Test(timeout = 4000)
    public void test091131() throws Throwable {
        Node node0 = new Node(63);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    }

    @Test(timeout = 4000)
    public void test092132() throws Throwable {
        Node node0 = new Node(125);
        Node node1 = new Node(125, node0);
        boolean boolean0 = NodeUtil.isEmptyBlock(node1);
    }

    @Test(timeout = 4000)
    public void test093133() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    }

    @Test(timeout = 4000)
    public void test094134() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    }

    @Test(timeout = 4000)
    public void test095135() throws Throwable {
        Node node0 = new Node(11);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test096136() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(12);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test097137() throws Throwable {
        Node node0 = new Node(13, 13, 13);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test098138() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(14, node0, node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test099139() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(15);
    }

    @Test(timeout = 4000)
    public void test100140() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(16);
    }

    @Test(timeout = 4000)
    public void test101141() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(17, node0, node0, node0, node0, 13, 4095);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test102142() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(18);
    }

    @Test(timeout = 4000)
    public void test103143() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(19);
    }

    @Test(timeout = 4000)
    public void test104144() throws Throwable {
        Node node0 = new Node(20);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test105145() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(21);
    }

    @Test(timeout = 4000)
    public void test106146() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(22);
    }

    @Test(timeout = 4000)
    public void test107147() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(23);
    }

    @Test(timeout = 4000)
    public void test108148() throws Throwable {
        Node node0 = new Node(24);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test109149() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(25);
    }

    @Test(timeout = 4000)
    public void test110150() throws Throwable {
        Node node0 = new Node(26);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test111151() throws Throwable {
        Node node0 = new Node(27);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test112152() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(28);
    }

    @Test(timeout = 4000)
    public void test113153() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(29);
    }

    @Test(timeout = 4000)
    public void test114154() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    }

    @Test(timeout = 4000)
    public void test115155() throws Throwable {
        Node node0 = new Node(31);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test116156() throws Throwable {
        Node node0 = new Node(32);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test117157() throws Throwable {
        Node node0 = new Node(33);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test118158() throws Throwable {
        Node node0 = new Node(34);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test119159() throws Throwable {
        Node node0 = new Node(35);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test120160() throws Throwable {
        Node node0 = new Node(36, 36, 36);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test121161() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    }

    @Test(timeout = 4000)
    public void test122162() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    }

    @Test(timeout = 4000)
    public void test123163() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(39);
    }

    @Test(timeout = 4000)
    public void test124164() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(40);
    }

    @Test(timeout = 4000)
    public void test125165() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(41);
    }

    @Test(timeout = 4000)
    public void test126166() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    }

    @Test(timeout = 4000)
    public void test127167() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(43);
    }

    @Test(timeout = 4000)
    public void test128168() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(44);
    }

    @Test(timeout = 4000)
    public void test129169() throws Throwable {
        Node node0 = new Node(46);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test130170() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    }

    @Test(timeout = 4000)
    public void test131171() throws Throwable {
        Node node0 = new Node(48);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test132172() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(49);
    }

    @Test(timeout = 4000)
    public void test133173() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    }

    @Test(timeout = 4000)
    public void test134174() throws Throwable {
        Node node0 = new Node(52);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test135175() throws Throwable {
        Node node0 = new Node(53);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test136176() throws Throwable {
        Node node0 = new Node(54, 54, 54);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test137177() throws Throwable {
        Node node0 = new Node(56);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test138178() throws Throwable {
        Node node0 = new Node(57);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test139179() throws Throwable {
        Node node0 = new Node(58, 58, 58);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test140180() throws Throwable {
        Node node0 = new Node(59);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test141181() throws Throwable {
        Node node0 = new Node(60);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test142182() throws Throwable {
        Node node0 = new Node(61);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test143183() throws Throwable {
        Node node0 = new Node(101, 101, 101);
        Node node1 = new Node(62, node0, node0, node0, node0, 40, 22);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test144184() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    }

    @Test(timeout = 4000)
    public void test145185() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    }

    @Test(timeout = 4000)
    public void test146186() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test147187() throws Throwable {
        Node node0 = new Node(67, 67, 67);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test148188() throws Throwable {
        Node node0 = new Node(68, 68, 68);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test149189() throws Throwable {
        Node node0 = new Node(69);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test150190() throws Throwable {
        Node node0 = new Node(70, 70, 70);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test151191() throws Throwable {
        Node node0 = new Node(71, 71, 71);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test152192() throws Throwable {
        Node node0 = new Node(72);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test153193() throws Throwable {
        Node node0 = new Node(73);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test154194() throws Throwable {
        Node node0 = new Node(74);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test155195() throws Throwable {
        Node node0 = new Node(75, 75, 75);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test156196() throws Throwable {
        Node node0 = new Node(76);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test157197() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(77);
    }

    @Test(timeout = 4000)
    public void test158198() throws Throwable {
        Node node0 = new Node(78);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test159199() throws Throwable {
        Node node0 = new Node(79);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test160200() throws Throwable {
        Node node0 = new Node(80);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test161201() throws Throwable {
        Node node0 = new Node(81);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test162202() throws Throwable {
        Node node0 = new Node(82);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test163203() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(83);
    }

    @Test(timeout = 4000)
    public void test164204() throws Throwable {
        Node node0 = new Node(84, 114, 121);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test165205() throws Throwable {
        Node node0 = new Node(85);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test166206() throws Throwable {
        Node node0 = new Node(87);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test167207() throws Throwable {
        Node node0 = new Node(88);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test168208() throws Throwable {
        Node node0 = new Node(89, 89, (-1974));
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test169209() throws Throwable {
        Node node0 = new Node(90);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test170210() throws Throwable {
        Node node0 = new Node(91);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test171211() throws Throwable {
        Node node0 = new Node(92);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test172212() throws Throwable {
        Node node0 = new Node(93, 93, 93);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test173213() throws Throwable {
        Node node0 = new Node(94, 0, 94);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test174214() throws Throwable {
        Node node0 = new Node(95, 105, 105);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test175215() throws Throwable {
        Node node0 = new Node(96);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test176216() throws Throwable {
        Node node0 = new Node(97);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test177217() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    }

    @Test(timeout = 4000)
    public void test178218() throws Throwable {
        Node node0 = new Node(99, 99, 99);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test179219() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    }

    @Test(timeout = 4000)
    public void test180220() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    }

    @Test(timeout = 4000)
    public void test181221() throws Throwable {
        Node node0 = new Node(102, 50, 50);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test182222() throws Throwable {
        Node node0 = new Node(103);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test183223() throws Throwable {
        Node node0 = new Node(104);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test184224() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    }

    @Test(timeout = 4000)
    public void test185225() throws Throwable {
        Node node0 = new Node(106);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test186226() throws Throwable {
        Node node0 = new Node(107, 107, 107);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test187227() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    }

    @Test(timeout = 4000)
    public void test188228() throws Throwable {
        Node node0 = new Node(109);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test189229() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    }

    @Test(timeout = 4000)
    public void test190230() throws Throwable {
        Node node0 = new Node(111);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test191231() throws Throwable {
        Node node0 = new Node(112);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test192232() throws Throwable {
        Node node0 = new Node(113);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test193233() throws Throwable {
        Node node0 = new Node(114);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test194234() throws Throwable {
        Node node0 = new Node(116);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test195235() throws Throwable {
        Node node0 = new Node(117);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test196236() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    }

    @Test(timeout = 4000)
    public void test197237() throws Throwable {
        Node node0 = new Node(119);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test198238() throws Throwable {
        Node node0 = new Node(120);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test199239() throws Throwable {
        Node node0 = new Node(121, 121, 103);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test200240() throws Throwable {
        Node node0 = new Node(37);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test201241() throws Throwable {
        Node node0 = Node.newString("|3]sVV}!c{7eE|V");
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test202242() throws Throwable {
        Node node0 = new Node(41);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test203243() throws Throwable {
        Node node0 = new Node(42);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test204244() throws Throwable {
        Node node0 = new Node(43);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test205245() throws Throwable {
        Node node0 = new Node(44);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test206246() throws Throwable {
        Node node0 = new Node(47);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test207247() throws Throwable {
        Node node0 = new Node(49, 49, 49);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test208248() throws Throwable {
        Node node0 = new Node(50);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test209249() throws Throwable {
        Node node0 = new Node(51);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test210250() throws Throwable {
        Node node0 = new Node(63);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test211251() throws Throwable {
        Node node0 = new Node(64, 64, 64);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test212252() throws Throwable {
        Node node0 = new Node(65);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test213253() throws Throwable {
        Node node0 = new Node(77);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test214254() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[0];
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test215255() throws Throwable {
        Node node0 = new Node(98);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test216256() throws Throwable {
        Node node0 = new Node(100, 100, 100);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test217257() throws Throwable {
        Node node0 = new Node(101);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test218258() throws Throwable {
        Node node0 = new Node(110);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test219259() throws Throwable {
        Node node0 = Node.newString("undefined");
        Node node1 = NodeUtil.newVarNode("undefined", node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test219260() throws Throwable {
        Node node0 = Node.newString("undefined");
        Node node1 = NodeUtil.newVarNode("undefined", node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test219261() throws Throwable {
        Node node0 = Node.newString("undefined");
        Node node1 = NodeUtil.newVarNode("undefined", node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test220262() throws Throwable {
        Node node0 = new Node(123);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test221263() throws Throwable {
        Node node0 = new Node(124);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test222264() throws Throwable {
        Node node0 = new Node(125);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test223265() throws Throwable {
        Node node0 = new Node(126);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test224266() throws Throwable {
        Node node0 = new Node(127);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test225267() throws Throwable {
        Node node0 = new Node(128);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test226268() throws Throwable {
        Node node0 = new Node(129);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test227269() throws Throwable {
        Node node0 = new Node(30);
        boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    }

    @Test(timeout = 4000)
    public void test228270() throws Throwable {
        Node node0 = new Node(30);
        node0.setIsNoSideEffectsCall();
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test229271() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(30, node0, node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test230272() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = NodeUtil.newName("<<", node0);
        node0.addChildrenToFront(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test230273() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = NodeUtil.newName("<<", node0);
        node0.addChildrenToFront(node1);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test231274() throws Throwable {
        Node node0 = new Node(37);
        node0.setIsNoSideEffectsCall();
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test232275() throws Throwable {
        Node node0 = new Node((-430), (-430), (-430));
        Node node1 = new Node(86, node0, node0, node0, node0, 13, 17);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test233276() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(45);
        Node node1 = new Node(86, node0, node0, node0, node0, 6, 24);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test234277() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test234278() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test234279() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
        node1.getLineno();
    }

    @Test(timeout = 4000)
    public void test235280() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        NodeUtil.constructorCallHasSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test236281() throws Throwable {
        Node node0 = new Node(90, 90, 90);
        Node node1 = new Node(30, node0, node0, node0, 22, 4);
        boolean boolean0 = NodeUtil.constructorCallHasSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test237282() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = NodeUtil.newName("<<", node0);
        node0.addChildrenToFront(node1);
        node1.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test237283() throws Throwable {
        Node node0 = new Node(30);
        Node node1 = NodeUtil.newName("<<", node0);
        node0.addChildrenToFront(node1);
        boolean boolean0 = NodeUtil.constructorCallHasSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test238284() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.functionCallHasSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test239285() throws Throwable {
        Node node0 = new Node(37);
        node0.setIsNoSideEffectsCall();
        boolean boolean0 = NodeUtil.functionCallHasSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test240286() throws Throwable {
        Node node0 = new Node(37);
        node0.addChildToBack(node0);
        boolean boolean0 = NodeUtil.functionCallHasSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test241287() throws Throwable {
        Node node0 = new Node(102);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test242288() throws Throwable {
        Node node0 = new Node(89);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test243289() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = new Node(30, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    }

    @Test(timeout = 4000)
    public void test244290() throws Throwable {
        Node node0 = new Node(31, 31, 46);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test245291() throws Throwable {
        Node node0 = new Node(37, 37, 37);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test246292() throws Throwable {
        Node node0 = new Node(38);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test247293() throws Throwable {
        Node node0 = new Node(49);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test248294() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test249295() throws Throwable {
        Node node0 = new Node(111, 111, 111);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test250296() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(30, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    }

    @Test(timeout = 4000)
    public void test251297() throws Throwable {
        Node node0 = new Node(31);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test252298() throws Throwable {
        Node node0 = new Node(32);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test253299() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test253300() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test253301() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test253302() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test253303() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
        node0.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test254304() throws Throwable {
        Node node0 = new Node(34);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test255305() throws Throwable {
        Node node0 = Node.newString("aWMik=<dkqjz9:j", 35, 83);
        Node node1 = new Node(35, node0, node0, node0, node0, 28, 2);
        boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    }

    @Test(timeout = 4000)
    public void test256306() throws Throwable {
        Node node0 = Node.newString(36, "[Ywl>&B");
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test257307() throws Throwable {
        Node node0 = new Node(37);
        boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    }

    @Test(timeout = 4000)
    public void test258308() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("@lNH", 3363, 3363);
        Node node1 = new Node(3363, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    }

    @Test(timeout = 4000)
    public void test258309() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("@lNH", 3363, 3363);
        Node node1 = new Node(3363, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.canBeSideEffected(node1);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test258310() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("@lNH", 3363, 3363);
        Node node1 = new Node(3363, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.canBeSideEffected(node1);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test259311() throws Throwable {
        int int0 = NodeUtil.precedence(4);
    }

    @Test(timeout = 4000)
    public void test260312() throws Throwable {
        NodeUtil.precedence(70);
    }

    @Test(timeout = 4000)
    public void test261313() throws Throwable {
        NodeUtil.precedence(5);
    }

    @Test(timeout = 4000)
    public void test262314() throws Throwable {
        NodeUtil.precedence(6);
    }

    @Test(timeout = 4000)
    public void test263315() throws Throwable {
        NodeUtil.precedence(7);
    }

    @Test(timeout = 4000)
    public void test264316() throws Throwable {
        NodeUtil.precedence(8);
    }

    @Test(timeout = 4000)
    public void test265317() throws Throwable {
        int int0 = NodeUtil.precedence(9);
    }

    @Test(timeout = 4000)
    public void test266318() throws Throwable {
        int int0 = NodeUtil.precedence(10);
    }

    @Test(timeout = 4000)
    public void test267319() throws Throwable {
        int int0 = NodeUtil.precedence(11);
    }

    @Test(timeout = 4000)
    public void test268320() throws Throwable {
        int int0 = NodeUtil.precedence(12);
    }

    @Test(timeout = 4000)
    public void test269321() throws Throwable {
        int int0 = NodeUtil.precedence(13);
    }

    @Test(timeout = 4000)
    public void test270322() throws Throwable {
        int int0 = NodeUtil.precedence(14);
    }

    @Test(timeout = 4000)
    public void test271323() throws Throwable {
        int int0 = NodeUtil.precedence(15);
    }

    @Test(timeout = 4000)
    public void test272324() throws Throwable {
        int int0 = NodeUtil.precedence(16);
    }

    @Test(timeout = 4000)
    public void test273325() throws Throwable {
        int int0 = NodeUtil.precedence(17);
    }

    @Test(timeout = 4000)
    public void test274326() throws Throwable {
        int int0 = NodeUtil.precedence(18);
    }

    @Test(timeout = 4000)
    public void test275327() throws Throwable {
        int int0 = NodeUtil.precedence(19);
    }

    @Test(timeout = 4000)
    public void test276328() throws Throwable {
        int int0 = NodeUtil.precedence(20);
    }

    @Test(timeout = 4000)
    public void test277329() throws Throwable {
        int int0 = NodeUtil.precedence(21);
    }

    @Test(timeout = 4000)
    public void test278330() throws Throwable {
        int int0 = NodeUtil.precedence(22);
    }

    @Test(timeout = 4000)
    public void test279331() throws Throwable {
        int int0 = NodeUtil.precedence(23);
    }

    @Test(timeout = 4000)
    public void test280332() throws Throwable {
        int int0 = NodeUtil.precedence(24);
    }

    @Test(timeout = 4000)
    public void test281333() throws Throwable {
        int int0 = NodeUtil.precedence(25);
    }

    @Test(timeout = 4000)
    public void test282334() throws Throwable {
        int int0 = NodeUtil.precedence(26);
    }

    @Test(timeout = 4000)
    public void test283335() throws Throwable {
        int int0 = NodeUtil.precedence(27);
    }

    @Test(timeout = 4000)
    public void test284336() throws Throwable {
        int int0 = NodeUtil.precedence(28);
    }

    @Test(timeout = 4000)
    public void test285337() throws Throwable {
        int int0 = NodeUtil.precedence(29);
    }

    @Test(timeout = 4000)
    public void test286338() throws Throwable {
        int int0 = NodeUtil.precedence(30);
    }

    @Test(timeout = 4000)
    public void test287339() throws Throwable {
        int int0 = NodeUtil.precedence(31);
    }

    @Test(timeout = 4000)
    public void test288340() throws Throwable {
        int int0 = NodeUtil.precedence(32);
    }

    @Test(timeout = 4000)
    public void test289341() throws Throwable {
        int int0 = NodeUtil.precedence(33);
    }

    @Test(timeout = 4000)
    public void test290342() throws Throwable {
        NodeUtil.precedence(34);
    }

    @Test(timeout = 4000)
    public void test291343() throws Throwable {
        int int0 = NodeUtil.precedence(35);
    }

    @Test(timeout = 4000)
    public void test292344() throws Throwable {
        NodeUtil.precedence(36);
    }

    @Test(timeout = 4000)
    public void test293345() throws Throwable {
        int int0 = NodeUtil.precedence(37);
    }

    @Test(timeout = 4000)
    public void test294346() throws Throwable {
        int int0 = NodeUtil.precedence(38);
    }

    @Test(timeout = 4000)
    public void test295347() throws Throwable {
        int int0 = NodeUtil.precedence(39);
    }

    @Test(timeout = 4000)
    public void test296348() throws Throwable {
        int int0 = NodeUtil.precedence(40);
    }

    @Test(timeout = 4000)
    public void test297349() throws Throwable {
        int int0 = NodeUtil.precedence(41);
    }

    @Test(timeout = 4000)
    public void test298350() throws Throwable {
        int int0 = NodeUtil.precedence(42);
    }

    @Test(timeout = 4000)
    public void test299351() throws Throwable {
        int int0 = NodeUtil.precedence(43);
    }

    @Test(timeout = 4000)
    public void test300352() throws Throwable {
        int int0 = NodeUtil.precedence(44);
    }

    @Test(timeout = 4000)
    public void test301353() throws Throwable {
        int int0 = NodeUtil.precedence(45);
    }

    @Test(timeout = 4000)
    public void test302354() throws Throwable {
        int int0 = NodeUtil.precedence(46);
    }

    @Test(timeout = 4000)
    public void test303355() throws Throwable {
        int int0 = NodeUtil.precedence(47);
    }

    @Test(timeout = 4000)
    public void test304356() throws Throwable {
        NodeUtil.precedence(48);
    }

    @Test(timeout = 4000)
    public void test305357() throws Throwable {
        NodeUtil.precedence(49);
    }

    @Test(timeout = 4000)
    public void test306358() throws Throwable {
        NodeUtil.precedence(50);
    }

    @Test(timeout = 4000)
    public void test307359() throws Throwable {
        int int0 = NodeUtil.precedence(51);
    }

    @Test(timeout = 4000)
    public void test308360() throws Throwable {
        int int0 = NodeUtil.precedence(52);
    }

    @Test(timeout = 4000)
    public void test309361() throws Throwable {
        NodeUtil.precedence(53);
    }

    @Test(timeout = 4000)
    public void test310362() throws Throwable {
        NodeUtil.precedence(54);
    }

    @Test(timeout = 4000)
    public void test311363() throws Throwable {
        NodeUtil.precedence(55);
    }

    @Test(timeout = 4000)
    public void test312364() throws Throwable {
        NodeUtil.precedence(56);
    }

    @Test(timeout = 4000)
    public void test313365() throws Throwable {
        NodeUtil.precedence(57);
    }

    @Test(timeout = 4000)
    public void test314366() throws Throwable {
        NodeUtil.precedence(58);
    }

    @Test(timeout = 4000)
    public void test315367() throws Throwable {
        NodeUtil.precedence(59);
    }

    @Test(timeout = 4000)
    public void test316368() throws Throwable {
        NodeUtil.precedence(60);
    }

    @Test(timeout = 4000)
    public void test317369() throws Throwable {
        NodeUtil.precedence(62);
    }

    @Test(timeout = 4000)
    public void test318370() throws Throwable {
        int int0 = NodeUtil.precedence(63);
    }

    @Test(timeout = 4000)
    public void test319371() throws Throwable {
        int int0 = NodeUtil.precedence(64);
    }

    @Test(timeout = 4000)
    public void test320372() throws Throwable {
        int int0 = NodeUtil.precedence(65);
    }

    @Test(timeout = 4000)
    public void test321373() throws Throwable {
        NodeUtil.precedence(66);
    }

    @Test(timeout = 4000)
    public void test322374() throws Throwable {
        NodeUtil.precedence(67);
    }

    @Test(timeout = 4000)
    public void test323375() throws Throwable {
        NodeUtil.precedence(68);
    }

    @Test(timeout = 4000)
    public void test324376() throws Throwable {
        NodeUtil.precedence(69);
    }

    @Test(timeout = 4000)
    public void test325377() throws Throwable {
        NodeUtil.precedence(71);
    }

    @Test(timeout = 4000)
    public void test326378() throws Throwable {
        NodeUtil.precedence(72);
    }

    @Test(timeout = 4000)
    public void test327379() throws Throwable {
        NodeUtil.precedence(73);
    }

    @Test(timeout = 4000)
    public void test328380() throws Throwable {
        NodeUtil.precedence(74);
    }

    @Test(timeout = 4000)
    public void test329381() throws Throwable {
        NodeUtil.precedence(75);
    }

    @Test(timeout = 4000)
    public void test330382() throws Throwable {
        NodeUtil.precedence(76);
    }

    @Test(timeout = 4000)
    public void test331383() throws Throwable {
        NodeUtil.precedence(77);
    }

    @Test(timeout = 4000)
    public void test332384() throws Throwable {
        NodeUtil.precedence(78);
    }

    @Test(timeout = 4000)
    public void test333385() throws Throwable {
        NodeUtil.precedence(79);
    }

    @Test(timeout = 4000)
    public void test334386() throws Throwable {
        NodeUtil.precedence(80);
    }

    @Test(timeout = 4000)
    public void test335387() throws Throwable {
        NodeUtil.precedence(81);
    }

    @Test(timeout = 4000)
    public void test336388() throws Throwable {
        NodeUtil.precedence(82);
    }

    @Test(timeout = 4000)
    public void test337389() throws Throwable {
        int int0 = NodeUtil.precedence(83);
    }

    @Test(timeout = 4000)
    public void test338390() throws Throwable {
        NodeUtil.precedence(84);
    }

    @Test(timeout = 4000)
    public void test339391() throws Throwable {
        int int0 = NodeUtil.precedence(85);
    }

    @Test(timeout = 4000)
    public void test340392() throws Throwable {
        int int0 = NodeUtil.precedence(86);
    }

    @Test(timeout = 4000)
    public void test341393() throws Throwable {
        int int0 = NodeUtil.precedence(87);
    }

    @Test(timeout = 4000)
    public void test342394() throws Throwable {
        int int0 = NodeUtil.precedence(88);
    }

    @Test(timeout = 4000)
    public void test343395() throws Throwable {
        int int0 = NodeUtil.precedence(89);
    }

    @Test(timeout = 4000)
    public void test344396() throws Throwable {
        int int0 = NodeUtil.precedence(90);
    }

    @Test(timeout = 4000)
    public void test345397() throws Throwable {
        int int0 = NodeUtil.precedence(91);
    }

    @Test(timeout = 4000)
    public void test346398() throws Throwable {
        int int0 = NodeUtil.precedence(92);
    }

    @Test(timeout = 4000)
    public void test347399() throws Throwable {
        int int0 = NodeUtil.precedence(93);
    }

    @Test(timeout = 4000)
    public void test348400() throws Throwable {
        int int0 = NodeUtil.precedence(94);
    }

    @Test(timeout = 4000)
    public void test349401() throws Throwable {
        int int0 = NodeUtil.precedence(95);
    }

    @Test(timeout = 4000)
    public void test350402() throws Throwable {
        int int0 = NodeUtil.precedence(96);
    }

    @Test(timeout = 4000)
    public void test351403() throws Throwable {
        int int0 = NodeUtil.precedence(97);
    }

    @Test(timeout = 4000)
    public void test352404() throws Throwable {
        int int0 = NodeUtil.precedence(98);
    }

    @Test(timeout = 4000)
    public void test353405() throws Throwable {
        NodeUtil.precedence(99);
    }

    @Test(timeout = 4000)
    public void test354406() throws Throwable {
        int int0 = NodeUtil.precedence(100);
    }

    @Test(timeout = 4000)
    public void test355407() throws Throwable {
        int int0 = NodeUtil.precedence(101);
    }

    @Test(timeout = 4000)
    public void test356408() throws Throwable {
        int int0 = NodeUtil.precedence(102);
    }

    @Test(timeout = 4000)
    public void test357409() throws Throwable {
        int int0 = NodeUtil.precedence(103);
    }

    @Test(timeout = 4000)
    public void test358410() throws Throwable {
        NodeUtil.precedence(104);
    }

    @Test(timeout = 4000)
    public void test359411() throws Throwable {
        int int0 = NodeUtil.precedence(105);
    }

    @Test(timeout = 4000)
    public void test360412() throws Throwable {
        NodeUtil.precedence(106);
    }

    @Test(timeout = 4000)
    public void test361413() throws Throwable {
        NodeUtil.precedence(107);
    }

    @Test(timeout = 4000)
    public void test362414() throws Throwable {
        int int0 = NodeUtil.precedence(108);
    }

    @Test(timeout = 4000)
    public void test363415() throws Throwable {
        NodeUtil.precedence(109);
    }

    @Test(timeout = 4000)
    public void test364416() throws Throwable {
        NodeUtil.precedence(110);
    }

    @Test(timeout = 4000)
    public void test365417() throws Throwable {
        NodeUtil.precedence(111);
    }

    @Test(timeout = 4000)
    public void test366418() throws Throwable {
        NodeUtil.precedence(112);
    }

    @Test(timeout = 4000)
    public void test367419() throws Throwable {
        NodeUtil.precedence(113);
    }

    @Test(timeout = 4000)
    public void test368420() throws Throwable {
        NodeUtil.precedence(114);
    }

    @Test(timeout = 4000)
    public void test369421() throws Throwable {
        NodeUtil.precedence(115);
    }

    @Test(timeout = 4000)
    public void test370422() throws Throwable {
        NodeUtil.precedence(116);
    }

    @Test(timeout = 4000)
    public void test371423() throws Throwable {
        NodeUtil.precedence(117);
    }

    @Test(timeout = 4000)
    public void test372424() throws Throwable {
        NodeUtil.precedence(118);
    }

    @Test(timeout = 4000)
    public void test373425() throws Throwable {
        NodeUtil.precedence(119);
    }

    @Test(timeout = 4000)
    public void test374426() throws Throwable {
        NodeUtil.precedence(120);
    }

    @Test(timeout = 4000)
    public void test375427() throws Throwable {
        NodeUtil.precedence(121);
    }

    @Test(timeout = 4000)
    public void test376428() throws Throwable {
        int int0 = NodeUtil.precedence(122);
    }

    @Test(timeout = 4000)
    public void test377429() throws Throwable {
        NodeUtil.precedence(123);
    }

    @Test(timeout = 4000)
    public void test378430() throws Throwable {
        int int0 = NodeUtil.precedence(124);
    }

    @Test(timeout = 4000)
    public void test379431() throws Throwable {
        NodeUtil.precedence((-1598));
    }

    @Test(timeout = 4000)
    public void test380432() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(9);
    }

    @Test(timeout = 4000)
    public void test381433() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(11);
    }

    @Test(timeout = 4000)
    public void test382434() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(23);
    }

    @Test(timeout = 4000)
    public void test383435() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(100);
    }

    @Test(timeout = 4000)
    public void test384436() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(101);
    }

    @Test(timeout = 4000)
    public void test385437() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(74);
    }

    @Test(timeout = 4000)
    public void test386438() throws Throwable {
        Node node0 = new Node(87);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test387439() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test388440() throws Throwable {
        Node node0 = Node.newString(88, "c&!P-Tk &=cE", 15, (-1149));
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test389441() throws Throwable {
        Node node0 = new Node(90);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test390442() throws Throwable {
        Node node0 = new Node(91);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test391443() throws Throwable {
        Node node0 = new Node(92);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test392444() throws Throwable {
        Node node0 = new Node(93, 93, 93);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test393445() throws Throwable {
        Node node0 = new Node(94);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test394446() throws Throwable {
        Node node0 = Node.newString(95, "UI.kOp|#]", 95, (-2767));
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test395447() throws Throwable {
        Node node0 = new Node(96);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test396448() throws Throwable {
        Node node0 = new Node(97);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test397449() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.getOpFromAssignmentOp(node0);
    }

    @Test(timeout = 4000)
    public void test398450() throws Throwable {
        Node node0 = Node.newString(88, "c&!P-Tk &=cE", 15, (-1149));
        boolean boolean0 = NodeUtil.isExpressionNode(node0);
    }

    @Test(timeout = 4000)
    public void test399451() throws Throwable {
        Node node0 = Node.newString(130, "2#Y|Ii#eoH", 116, 130);
        boolean boolean0 = NodeUtil.isExpressionNode(node0);
    }

    @Test(timeout = 4000)
    public void test400452() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("`;n]Su.LSkB6'P^l<1", 50, 50);
        boolean boolean0 = NodeUtil.isGet(node0);
        node0.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test400453() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("`;n]Su.LSkB6'P^l<1", 50, 50);
        boolean boolean0 = NodeUtil.isGet(node0);
    }

    @Test(timeout = 4000)
    public void test400454() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("`;n]Su.LSkB6'P^l<1", 50, 50);
        boolean boolean0 = NodeUtil.isGet(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test400455() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("`;n]Su.LSkB6'P^l<1", 50, 50);
        boolean boolean0 = NodeUtil.isGet(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test401456() throws Throwable {
        Node node0 = new Node(37);
        node0.addChildToFront(node0);
        boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
    }

    @Test(timeout = 4000)
    public void test402457() throws Throwable {
        Node node0 = Node.newString("N$UtaN", 15, 11);
        Node node1 = new Node(35, node0, node0);
        boolean boolean0 = NodeUtil.isGet(node1);
    }

    @Test(timeout = 4000)
    public void test403458() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = NodeUtil.getPrototypeClassName(node0);
    }

    @Test(timeout = 4000)
    public void test404459() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        Node node1 = NodeUtil.getPrototypeClassName(node0);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test404460() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        Node node1 = NodeUtil.getPrototypeClassName(node0);
    }

    @Test(timeout = 4000)
    public void test404461() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        Node node1 = NodeUtil.getPrototypeClassName(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test404462() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        Node node1 = NodeUtil.getPrototypeClassName(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test404463() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        Node node1 = NodeUtil.getPrototypeClassName(node0);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test405464() throws Throwable {
        Node node0 = new Node(115);
        boolean boolean0 = NodeUtil.isNew(node0);
    }

    @Test(timeout = 4000)
    public void test406465() throws Throwable {
        Node node0 = new Node(30, 30, 30);
        boolean boolean0 = NodeUtil.isNew(node0);
    }

    @Test(timeout = 4000)
    public void test407466() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        Node node2 = NodeUtil.getAssignedValue(node0);
    }

    @Test(timeout = 4000)
    public void test407467() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        Node node2 = NodeUtil.getAssignedValue(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test407468() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        Node node2 = NodeUtil.getAssignedValue(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test408469() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.isQualifiedName();
    }

    @Test(timeout = 4000)
    public void test408470() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test408471() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test408472() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test408473() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("com.google.javascript.jscomp.NodeUtil$1", 2221, 2221);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test409474() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test409475() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test409476() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test409477() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G4]Z*R9q|W%n&NO", 136, 136);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test410478() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 373, 1905);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test410479() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 373, 1905);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test410480() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 373, 1905);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isVarDeclaration(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test411481() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("SD+MCONST", (-1575), (-1575));
        NodeUtil.newExpr(node0);
        Node node1 = NodeUtil.getAssignedValue(node0);
    }

    @Test(timeout = 4000)
    public void test412482() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isString(node0);
    }

    @Test(timeout = 4000)
    public void test413483() throws Throwable {
        Node node0 = Node.newString("~Y%;w`");
        boolean boolean0 = NodeUtil.isString(node0);
    }

    @Test(timeout = 4000)
    public void test414484() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        boolean boolean0 = NodeUtil.isExprAssign(node0);
    }

    @Test(timeout = 4000)
    public void test415485() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    }

    @Test(timeout = 4000)
    public void test415486() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test416487() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        node0.setType(86);
        boolean boolean0 = NodeUtil.isAssign(node0);
    }

    @Test(timeout = 4000)
    public void test417488() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isExprCall(node0);
    }

    @Test(timeout = 4000)
    public void test418489() throws Throwable {
        Node node0 = new Node(54, 54, 54);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isExprCall(node1);
    }

    @Test(timeout = 4000)
    public void test418490() throws Throwable {
        Node node0 = new Node(54, 54, 54);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isExprCall(node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test418491() throws Throwable {
        Node node0 = new Node(54, 54, 54);
        Node node1 = NodeUtil.newExpr(node0);
        boolean boolean0 = NodeUtil.isExprCall(node1);
        node1.getLineno();
    }

    @Test(timeout = 4000)
    public void test419492() throws Throwable {
        Node node0 = new Node(54, 54, 54);
        Node node1 = new Node(37, node0, node0, node0, node0);
        Node node2 = NodeUtil.newExpr(node1);
        boolean boolean0 = NodeUtil.isExprCall(node2);
    }

    @Test(timeout = 4000)
    public void test420493() throws Throwable {
        Node node0 = Node.newNumber((double) 77);
        boolean boolean0 = NodeUtil.isForIn(node0);
    }

    @Test(timeout = 4000)
    public void test421494() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        boolean boolean0 = NodeUtil.isForIn(node0);
    }

    @Test(timeout = 4000)
    public void test422495() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node1);
        Node node2 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node2);
        node2.getLineno();
    }

    @Test(timeout = 4000)
    public void test422496() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node1);
        Node node2 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node2);
        node2.getCharno();
    }

    @Test(timeout = 4000)
    public void test422497() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        Node node1 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node1);
        Node node2 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node2);
        node0.addChildrenToFront(node0);
        boolean boolean0 = NodeUtil.isForIn(node0);
    }

    @Test(timeout = 4000)
    public void test423498() throws Throwable {
        Node node0 = new Node(113);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
    }

    @Test(timeout = 4000)
    public void test424499() throws Throwable {
        Node node0 = new Node(115);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
    }

    @Test(timeout = 4000)
    public void test425500() throws Throwable {
        Node node0 = new Node(114);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
    }

    @Test(timeout = 4000)
    public void test426501() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 358, 358);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
    }

    @Test(timeout = 4000)
    public void test426502() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 358, 358);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test426503() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 358, 358);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test427504() throws Throwable {
        Node node0 = Node.newString(113, "^q{", (-1188), 113);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test428505() throws Throwable {
        Node node0 = new Node(106);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test429506() throws Throwable {
        Node node0 = new Node(114);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test430507() throws Throwable {
        Node node0 = new Node(115);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test431508() throws Throwable {
        Node node0 = new Node(77);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test432509() throws Throwable {
        Node node0 = Node.newString(112, "MsGem0]?q-wMfk[.", (-962), (-962));
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test433510() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test434511() throws Throwable {
        Node node0 = new Node(110);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test435512() throws Throwable {
        Node node0 = new Node(111, (-1556), 111);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test436513() throws Throwable {
        Node node0 = new Node(113);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test437514() throws Throwable {
        Node node0 = Node.newString(">MEQ9O/d)9(e", 43, 114);
        Node node1 = new Node(114, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.isControlStructure(node1);
    }

    @Test(timeout = 4000)
    public void test438515() throws Throwable {
        Node node0 = new Node(115);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test439516() throws Throwable {
        Node node0 = new Node(119);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test440517() throws Throwable {
        Node node0 = new Node(120, (-1556), 120);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test441518() throws Throwable {
        Node node0 = new Node(126);
        boolean boolean0 = NodeUtil.isControlStructure(node0);
    }

    @Test(timeout = 4000)
    public void test442519() throws Throwable {
        Node node0 = Node.newNumber((-1750.2606849));
        NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test443520() throws Throwable {
        Node node0 = new Node(77);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test444521() throws Throwable {
        Node node0 = new Node(108);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test445522() throws Throwable {
        Node node0 = new Node(111);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test446523() throws Throwable {
        Node node0 = new Node(112);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test447524() throws Throwable {
        Node node0 = new Node(113, 113, 113);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test448525() throws Throwable {
        Node node0 = new Node(114);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    }

    @Test(timeout = 4000)
    public void test449526() throws Throwable {
        Node node0 = new Node(115);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test450527() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(119, node0, 119, 28);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    }

    @Test(timeout = 4000)
    public void test451528() throws Throwable {
        Node node0 = new Node(120);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    }

    @Test(timeout = 4000)
    public void test452529() throws Throwable {
        Node node0 = new Node(126);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test453530() throws Throwable {
        Node node0 = new Node(114, 114, 114);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test454531() throws Throwable {
        Node node0 = new Node(108);
        node0.addChildToBack(node0);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test455532() throws Throwable {
        Node node0 = new Node(77);
        node0.addChildrenToFront(node0);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test456533() throws Throwable {
        Node node0 = new Node(120, 120, 120);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    }

    @Test(timeout = 4000)
    public void test457534() throws Throwable {
        Node node0 = new Node(110);
        Node node1 = new Node(110, node0, node0, node0, node0);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    }

    @Test(timeout = 4000)
    public void test458535() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        Node node1 = NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test459536() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test460537() throws Throwable {
        Node node0 = new Node(109);
        NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test461538() throws Throwable {
        Node node0 = new Node(110);
        NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test462539() throws Throwable {
        Node node0 = new Node(111, 111, 111);
        Node node1 = NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test463540() throws Throwable {
        Node node0 = new Node(112);
        NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test464541() throws Throwable {
        Node node0 = new Node(113);
        Node node1 = NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test465542() throws Throwable {
        Node node0 = new Node(114);
        Node node1 = NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test466543() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test467544() throws Throwable {
        Node node0 = new Node(115, 115, 115);
        node0.addChildToFront(node0);
        Node node1 = NodeUtil.newUndefinedNode();
        node0.addChildrenToFront(node1);
        Node node2 = NodeUtil.newQualifiedNameNode("jscm'p", 1, 20);
        node0.addChildToFront(node2);
        Node node3 = NodeUtil.getConditionExpression(node0);
    }

    @Test(timeout = 4000)
    public void test468545() throws Throwable {
        Node node0 = new Node(132);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test469546() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        node0.addChildToFront(node0);
        NodeUtil.tryMergeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test470547() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.mayHaveSideEffects(node0);
    }

    @Test(timeout = 4000)
    public void test471548() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = new Node(125, node0);
        boolean boolean0 = NodeUtil.isStatement(node0);
    }

    @Test(timeout = 4000)
    public void test472549() throws Throwable {
        Node node0 = new Node(126);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        FunctionNode functionNode0 = NodeUtil.newFunctionNode("void", linkedList0, node0, 20, 193);
        node0.addChildrenToBack(functionNode0);
        boolean boolean0 = NodeUtil.isFunctionDeclaration(functionNode0);
        functionNode0.getFunctionName();
    }

    @Test(timeout = 4000)
    public void test472550() throws Throwable {
        Node node0 = new Node(126);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        FunctionNode functionNode0 = NodeUtil.newFunctionNode("void", linkedList0, node0, 20, 193);
        node0.addChildrenToBack(functionNode0);
        boolean boolean0 = NodeUtil.isFunctionDeclaration(functionNode0);
    }

    @Test(timeout = 4000)
    public void test472551() throws Throwable {
        Node node0 = new Node(126);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        FunctionNode functionNode0 = NodeUtil.newFunctionNode("void", linkedList0, node0, 20, 193);
        node0.addChildrenToBack(functionNode0);
        boolean boolean0 = NodeUtil.isFunctionDeclaration(functionNode0);
        functionNode0.getCharno();
    }

    @Test(timeout = 4000)
    public void test472552() throws Throwable {
        Node node0 = new Node(126);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        FunctionNode functionNode0 = NodeUtil.newFunctionNode("void", linkedList0, node0, 20, 193);
        node0.addChildrenToBack(functionNode0);
        boolean boolean0 = NodeUtil.isFunctionDeclaration(functionNode0);
        functionNode0.getLineno();
    }

    @Test(timeout = 4000)
    public void test473553() throws Throwable {
        Node node0 = new Node(132, 132, 132);
        Node node1 = new Node(132, node0);
        boolean boolean0 = NodeUtil.isStatement(node0);
    }

    @Test(timeout = 4000)
    public void test474554() throws Throwable {
        Node node0 = new Node(111, 111, 111);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test475555() throws Throwable {
        Node node0 = new Node(112);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test476556() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isReferenceName(node0);
    }

    @Test(timeout = 4000)
    public void test477557() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("", 542, (-1576));
        boolean boolean0 = NodeUtil.isReferenceName(node0);
    }

    @Test(timeout = 4000)
    public void test477558() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("", 542, (-1576));
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test478559() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(117);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
        node1.getLineno();
    }

    @Test(timeout = 4000)
    public void test478560() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(117);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test478561() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(117);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
    }

    @Test(timeout = 4000)
    public void test479562() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isReferenceName(node0);
    }

    @Test(timeout = 4000)
    public void test479563() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test479564() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test480565() throws Throwable {
        boolean boolean0 = NodeUtil.isLabelName((Node) null);
    }

    @Test(timeout = 4000)
    public void test481566() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isLabelName(node0);
    }

    @Test(timeout = 4000)
    public void test482567() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(116);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
    }

    @Test(timeout = 4000)
    public void test482568() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(116);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
        node1.getLineno();
    }

    @Test(timeout = 4000)
    public void test482569() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = NodeUtil.newQualifiedNameNode("OBJECT_PROTOTYPE", 39, 1);
        node0.setType(116);
        node0.addChildToFront(node1);
        boolean boolean0 = NodeUtil.isReferenceName(node1);
        node1.getCharno();
    }

    @Test(timeout = 4000)
    public void test483570() throws Throwable {
        Node node0 = new Node(77);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test484571() throws Throwable {
        Node node0 = new Node(44);
        Node node1 = NodeUtil.newVarNode("'i{;*i6#M", node0);
        NodeUtil.removeChild(node1, node0);
    }

    @Test(timeout = 4000)
    public void test485572() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = new Node(13);
        NodeUtil.removeChild(node1, node0);
        node0.wasEmptyNode();
    }

    @Test(timeout = 4000)
    public void test486573() throws Throwable {
        Node node0 = new Node(126);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test487574() throws Throwable {
        Node node0 = new Node(115);
        NodeUtil.removeChild(node0, node0);
    }

    @Test(timeout = 4000)
    public void test488575() throws Throwable {
        Node node0 = new Node(132, 132, 132);
        NodeUtil.tryMergeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test489576() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        Node node1 = new Node(2, node0, node0);
        boolean boolean0 = NodeUtil.tryMergeBlock(node0);
    }

    @Test(timeout = 4000)
    public void test490577() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isCall(node0);
    }

    @Test(timeout = 4000)
    public void test491578() throws Throwable {
        Node node0 = new Node(37, 37, 37);
        boolean boolean0 = NodeUtil.isCall(node0);
    }

    @Test(timeout = 4000)
    public void test492579() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isThis(node0);
    }

    @Test(timeout = 4000)
    public void test493580() throws Throwable {
        Node node0 = new Node(42);
        boolean boolean0 = NodeUtil.isThis(node0);
    }

    @Test(timeout = 4000)
    public void test494581() throws Throwable {
        Node node0 = new Node(126);
        boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test495582() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(4095, node0, 42, 2);
        boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    }

    @Test(timeout = 4000)
    public void test496583() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isAnonymousFunction(node0);
    }

    @Test(timeout = 4000)
    public void test497584() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.isAnonymousFunction(node0);
    }

    @Test(timeout = 4000)
    public void test498585() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(4095, node0, 42, 2);
        boolean boolean0 = NodeUtil.isAnonymousFunction(node0);
    }

    @Test(timeout = 4000)
    public void test499586() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    }

    @Test(timeout = 4000)
    public void test500587() throws Throwable {
        Node node0 = new Node(118, 118, 118);
        boolean boolean0 = NodeUtil.isLhs(node0, node0);
    }

    @Test(timeout = 4000)
    public void test501588() throws Throwable {
        Node node0 = new Node(86);
        boolean boolean0 = NodeUtil.isLhs(node0, node0);
    }

    @Test(timeout = 4000)
    public void test502589() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(86, node0, node0, node0, node0, 13, 4095);
        boolean boolean0 = NodeUtil.isLhs(node0, node1);
    }

    @Test(timeout = 4000)
    public void test503590() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    }

    @Test(timeout = 4000)
    public void test504591() throws Throwable {
        Node node0 = Node.newString("O`");
        boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    }

    @Test(timeout = 4000)
    public void test505592() throws Throwable {
        String string0 = NodeUtil.opToStr(9);
    }

    @Test(timeout = 4000)
    public void test506594() throws Throwable {
        String string0 = NodeUtil.opToStr(96);
    }

    @Test(timeout = 4000)
    public void test507596() throws Throwable {
        String string0 = NodeUtil.opToStr(10);
    }

    @Test(timeout = 4000)
    public void test508598() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(11);
    }

    @Test(timeout = 4000)
    public void test509599() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(12);
    }

    @Test(timeout = 4000)
    public void test510600() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(13);
    }

    @Test(timeout = 4000)
    public void test511601() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(14);
    }

    @Test(timeout = 4000)
    public void test512602() throws Throwable {
        String string0 = NodeUtil.opToStr(15);
    }

    @Test(timeout = 4000)
    public void test513603() throws Throwable {
        String string0 = NodeUtil.opToStr(16);
    }

    @Test(timeout = 4000)
    public void test514604() throws Throwable {
        String string0 = NodeUtil.opToStr(17);
    }

    @Test(timeout = 4000)
    public void test515605() throws Throwable {
        String string0 = NodeUtil.opToStr(18);
    }

    @Test(timeout = 4000)
    public void test516606() throws Throwable {
        String string0 = NodeUtil.opToStr(19);
    }

    @Test(timeout = 4000)
    public void test517607() throws Throwable {
        String string0 = NodeUtil.opToStr(20);
    }

    @Test(timeout = 4000)
    public void test518608() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(21);
    }

    @Test(timeout = 4000)
    public void test519609() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(22);
    }

    @Test(timeout = 4000)
    public void test520610() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(23);
    }

    @Test(timeout = 4000)
    public void test521611() throws Throwable {
        String string0 = NodeUtil.opToStr(24);
    }

    @Test(timeout = 4000)
    public void test522612() throws Throwable {
        String string0 = NodeUtil.opToStr(25);
    }

    @Test(timeout = 4000)
    public void test523613() throws Throwable {
        String string0 = NodeUtil.opToStr(26);
    }

    @Test(timeout = 4000)
    public void test524614() throws Throwable {
        String string0 = NodeUtil.opToStr(27);
    }

    @Test(timeout = 4000)
    public void test525615() throws Throwable {
        String string0 = NodeUtil.opToStr(28);
    }

    @Test(timeout = 4000)
    public void test526616() throws Throwable {
        String string0 = NodeUtil.opToStr(29);
    }

    @Test(timeout = 4000)
    public void test527618() throws Throwable {
        String string0 = NodeUtil.opToStr(30);
    }

    @Test(timeout = 4000)
    public void test528619() throws Throwable {
        String string0 = NodeUtil.opToStr(31);
    }

    @Test(timeout = 4000)
    public void test529620() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(32);
    }

    @Test(timeout = 4000)
    public void test530621() throws Throwable {
        String string0 = NodeUtil.opToStr(33);
    }

    @Test(timeout = 4000)
    public void test531622() throws Throwable {
        String string0 = NodeUtil.opToStr(34);
    }

    @Test(timeout = 4000)
    public void test532623() throws Throwable {
        String string0 = NodeUtil.opToStr(35);
    }

    @Test(timeout = 4000)
    public void test533624() throws Throwable {
        NodeUtil.opToStrNoFail(36);
    }

    @Test(timeout = 4000)
    public void test534625() throws Throwable {
        String string0 = NodeUtil.opToStr(37);
    }

    @Test(timeout = 4000)
    public void test535626() throws Throwable {
        String string0 = NodeUtil.opToStr(38);
    }

    @Test(timeout = 4000)
    public void test536627() throws Throwable {
        NodeUtil.opToStrNoFail(39);
    }

    @Test(timeout = 4000)
    public void test537628() throws Throwable {
        String string0 = NodeUtil.opToStr(40);
    }

    @Test(timeout = 4000)
    public void test538629() throws Throwable {
        NodeUtil.opToStrNoFail(41);
    }

    @Test(timeout = 4000)
    public void test539630() throws Throwable {
        NodeUtil.opToStrNoFail(42);
    }

    @Test(timeout = 4000)
    public void test540631() throws Throwable {
        String string0 = NodeUtil.opToStr(43);
    }

    @Test(timeout = 4000)
    public void test541632() throws Throwable {
        NodeUtil.opToStrNoFail(44);
    }

    @Test(timeout = 4000)
    public void test542633() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(45);
    }

    @Test(timeout = 4000)
    public void test543634() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(46);
    }

    @Test(timeout = 4000)
    public void test544635() throws Throwable {
        NodeUtil.opToStrNoFail(47);
    }

    @Test(timeout = 4000)
    public void test545636() throws Throwable {
        String string0 = NodeUtil.opToStr(48);
    }

    @Test(timeout = 4000)
    public void test546637() throws Throwable {
        String string0 = NodeUtil.opToStr(49);
    }

    @Test(timeout = 4000)
    public void test547638() throws Throwable {
        String string0 = NodeUtil.opToStr(50);
    }

    @Test(timeout = 4000)
    public void test548639() throws Throwable {
        String string0 = NodeUtil.opToStr(51);
    }

    @Test(timeout = 4000)
    public void test549640() throws Throwable {
        String string0 = NodeUtil.opToStr(52);
    }

    @Test(timeout = 4000)
    public void test550641() throws Throwable {
        NodeUtil.opToStrNoFail(53);
    }

    @Test(timeout = 4000)
    public void test551642() throws Throwable {
        String string0 = NodeUtil.opToStr(54);
    }

    @Test(timeout = 4000)
    public void test552643() throws Throwable {
        String string0 = NodeUtil.opToStr(55);
    }

    @Test(timeout = 4000)
    public void test553644() throws Throwable {
        NodeUtil.opToStrNoFail(56);
    }

    @Test(timeout = 4000)
    public void test554645() throws Throwable {
        String string0 = NodeUtil.opToStr((byte) 57);
    }

    @Test(timeout = 4000)
    public void test555646() throws Throwable {
        NodeUtil.opToStrNoFail(58);
    }

    @Test(timeout = 4000)
    public void test556647() throws Throwable {
        NodeUtil.opToStrNoFail(59);
    }

    @Test(timeout = 4000)
    public void test557648() throws Throwable {
        NodeUtil.opToStrNoFail(60);
    }

    @Test(timeout = 4000)
    public void test558649() throws Throwable {
        String string0 = NodeUtil.opToStr(61);
    }

    @Test(timeout = 4000)
    public void test559650() throws Throwable {
        String string0 = NodeUtil.opToStr(62);
    }

    @Test(timeout = 4000)
    public void test560651() throws Throwable {
        String string0 = NodeUtil.opToStr(63);
    }

    @Test(timeout = 4000)
    public void test561652() throws Throwable {
        String string0 = NodeUtil.opToStr(64);
    }

    @Test(timeout = 4000)
    public void test562653() throws Throwable {
        NodeUtil.opToStrNoFail(65);
    }

    @Test(timeout = 4000)
    public void test563654() throws Throwable {
        NodeUtil.opToStrNoFail(66);
    }

    @Test(timeout = 4000)
    public void test564655() throws Throwable {
        String string0 = NodeUtil.opToStr(67);
    }

    @Test(timeout = 4000)
    public void test565656() throws Throwable {
        String string0 = NodeUtil.opToStr(68);
    }

    @Test(timeout = 4000)
    public void test566657() throws Throwable {
        NodeUtil.opToStrNoFail(69);
    }

    @Test(timeout = 4000)
    public void test567658() throws Throwable {
        String string0 = NodeUtil.opToStr((byte) 70);
    }

    @Test(timeout = 4000)
    public void test568659() throws Throwable {
        NodeUtil.opToStrNoFail(71);
    }

    @Test(timeout = 4000)
    public void test569660() throws Throwable {
        NodeUtil.opToStrNoFail(72);
    }

    @Test(timeout = 4000)
    public void test570661() throws Throwable {
        String string0 = NodeUtil.opToStr(73);
    }

    @Test(timeout = 4000)
    public void test571662() throws Throwable {
        String string0 = NodeUtil.opToStr(74);
    }

    @Test(timeout = 4000)
    public void test572663() throws Throwable {
        NodeUtil.opToStrNoFail(75);
    }

    @Test(timeout = 4000)
    public void test573664() throws Throwable {
        NodeUtil.opToStrNoFail(76);
    }

    @Test(timeout = 4000)
    public void test574665() throws Throwable {
        String string0 = NodeUtil.opToStr(77);
    }

    @Test(timeout = 4000)
    public void test575666() throws Throwable {
        String string0 = NodeUtil.opToStr(78);
    }

    @Test(timeout = 4000)
    public void test576667() throws Throwable {
        NodeUtil.opToStrNoFail(79);
    }

    @Test(timeout = 4000)
    public void test577668() throws Throwable {
        NodeUtil.opToStrNoFail(80);
    }

    @Test(timeout = 4000)
    public void test578669() throws Throwable {
        String string0 = NodeUtil.opToStr(81);
    }

    @Test(timeout = 4000)
    public void test579670() throws Throwable {
        String string0 = NodeUtil.opToStr(82);
    }

    @Test(timeout = 4000)
    public void test580671() throws Throwable {
        String string0 = NodeUtil.opToStr(83);
    }

    @Test(timeout = 4000)
    public void test581672() throws Throwable {
        String string0 = NodeUtil.opToStr(84);
    }

    @Test(timeout = 4000)
    public void test582673() throws Throwable {
        NodeUtil.opToStrNoFail(85);
    }

    @Test(timeout = 4000)
    public void test583674() throws Throwable {
        String string0 = NodeUtil.opToStr(86);
    }

    @Test(timeout = 4000)
    public void test584675() throws Throwable {
        String string0 = NodeUtil.opToStr(87);
    }

    @Test(timeout = 4000)
    public void test585676() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(88);
    }

    @Test(timeout = 4000)
    public void test586677() throws Throwable {
        String string0 = NodeUtil.opToStr(89);
    }

    @Test(timeout = 4000)
    public void test587678() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(90);
    }

    @Test(timeout = 4000)
    public void test588679() throws Throwable {
        String string0 = NodeUtil.opToStr(91);
    }

    @Test(timeout = 4000)
    public void test589680() throws Throwable {
        String string0 = NodeUtil.opToStr((byte) 92);
    }

    @Test(timeout = 4000)
    public void test590681() throws Throwable {
        String string0 = NodeUtil.opToStr(93);
    }

    @Test(timeout = 4000)
    public void test591682() throws Throwable {
        String string0 = NodeUtil.opToStr(94);
    }

    @Test(timeout = 4000)
    public void test592683() throws Throwable {
        String string0 = NodeUtil.opToStr(95);
    }

    @Test(timeout = 4000)
    public void test593684() throws Throwable {
        String string0 = NodeUtil.opToStr(97);
    }

    @Test(timeout = 4000)
    public void test594685() throws Throwable {
        String string0 = NodeUtil.opToStr(98);
    }

    @Test(timeout = 4000)
    public void test595686() throws Throwable {
        NodeUtil.opToStrNoFail(99);
    }

    @Test(timeout = 4000)
    public void test596687() throws Throwable {
        String string0 = NodeUtil.opToStr(100);
    }

    @Test(timeout = 4000)
    public void test597688() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(101);
    }

    @Test(timeout = 4000)
    public void test598689() throws Throwable {
        String string0 = NodeUtil.opToStr(102);
    }

    @Test(timeout = 4000)
    public void test599690() throws Throwable {
        String string0 = NodeUtil.opToStr(103);
    }

    @Test(timeout = 4000)
    public void test600691() throws Throwable {
        String string0 = NodeUtil.opToStr(104);
    }

    @Test(timeout = 4000)
    public void test601692() throws Throwable {
        NodeUtil.opToStrNoFail(105);
    }

    @Test(timeout = 4000)
    public void test602693() throws Throwable {
        String string0 = NodeUtil.opToStr(106);
    }

    @Test(timeout = 4000)
    public void test603694() throws Throwable {
        NodeUtil.opToStrNoFail(107);
    }

    @Test(timeout = 4000)
    public void test604695() throws Throwable {
        String string0 = NodeUtil.opToStr(108);
    }

    @Test(timeout = 4000)
    public void test605696() throws Throwable {
        NodeUtil.opToStrNoFail(109);
    }

    @Test(timeout = 4000)
    public void test606697() throws Throwable {
        String string0 = NodeUtil.opToStr(110);
    }

    @Test(timeout = 4000)
    public void test607698() throws Throwable {
        NodeUtil.opToStrNoFail(111);
    }

    @Test(timeout = 4000)
    public void test608699() throws Throwable {
        NodeUtil.opToStrNoFail(112);
    }

    @Test(timeout = 4000)
    public void test609700() throws Throwable {
        String string0 = NodeUtil.opToStr(113);
    }

    @Test(timeout = 4000)
    public void test610701() throws Throwable {
        String string0 = NodeUtil.opToStr(114);
    }

    @Test(timeout = 4000)
    public void test611702() throws Throwable {
        String string0 = NodeUtil.opToStr(115);
    }

    @Test(timeout = 4000)
    public void test612703() throws Throwable {
        String string0 = NodeUtil.opToStr(116);
    }

    @Test(timeout = 4000)
    public void test613704() throws Throwable {
        String string0 = NodeUtil.opToStr(117);
    }

    @Test(timeout = 4000)
    public void test614705() throws Throwable {
        String string0 = NodeUtil.opToStr(118);
    }

    @Test(timeout = 4000)
    public void test615706() throws Throwable {
        String string0 = NodeUtil.opToStr(119);
    }

    @Test(timeout = 4000)
    public void test616707() throws Throwable {
        String string0 = NodeUtil.opToStr(120);
    }

    @Test(timeout = 4000)
    public void test617708() throws Throwable {
        NodeUtil.opToStrNoFail(121);
    }

    @Test(timeout = 4000)
    public void test618709() throws Throwable {
        String string0 = NodeUtil.opToStr((byte) 122);
    }

    @Test(timeout = 4000)
    public void test619710() throws Throwable {
        NodeUtil.opToStrNoFail((-1102));
    }

    @Test(timeout = 4000)
    public void test620711() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("\"NaN", 359, 359);
        Node node1 = new Node(118, node0, node0, node0);
        NodeUtil.redeclareVarsInsideBranch(node0);
    }

    @Test(timeout = 4000)
    public void test621712() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.copyNameAnnotations(node0, node0);
    }

    @Test(timeout = 4000)
    public void test622713() throws Throwable {
        Node node0 = Node.newString(105, "a8t4CgeR\"[|.X|9dE", 105, 105);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        linkedList0.add(node0);
        NodeUtil.newFunctionNode("o.FC-HG.|S", linkedList0, node0, 27, 34);
    }

    @Test(timeout = 4000)
    public void test623714() throws Throwable {
        boolean boolean0 = NodeUtil.isLatin("\t\n\u000B\f\r \u0085\u1680\u2028\u2029\u205F\u3000\u00A0\u180E\u202F");
    }

    @Test(timeout = 4000)
    public void test624715() throws Throwable {
        boolean boolean0 = NodeUtil.isValidPropertyName("$m*;CR*(S\"_87r`");
    }

    @Test(timeout = 4000)
    public void test625716() throws Throwable {
        boolean boolean0 = NodeUtil.isValidPropertyName("Math");
    }

    @Test(timeout = 4000)
    public void test626717() throws Throwable {
        boolean boolean0 = NodeUtil.isValidPropertyName("typeof");
    }

    @Test(timeout = 4000)
    public void test627718() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[2];
        Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
        NodeUtil.redeclareVarsInsideBranch(node0);
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test628719() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("G7`B/ovoP", 358, 358);
        Node node1 = new Node(118, node0, node0, node0);
        node0.addChildrenToFront(node1);
        // Undeclared exception!
        NodeUtil.redeclareVarsInsideBranch(node1);
    }

    @Test(timeout = 4000)
    public void test629720() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test629721() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test629722() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test629723() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode(".prototype.", 38, 38);
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    }

    @Test(timeout = 4000)
    public void test630724() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    }

    @Test(timeout = 4000)
    public void test631725() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("%-h\"RWM/(5*VDr$m", (-1734), (-1734));
        boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    }

    @Test(timeout = 4000)
    public void test632726() throws Throwable {
        Node node0 = new Node(110);
        Node node1 = NodeUtil.newVarNode("Infinity", node0);
        int int0 = NodeUtil.getNameReferenceCount(node1, "undefined");
    }

    @Test(timeout = 4000)
    public void test632727() throws Throwable {
        Node node0 = new Node(110);
        Node node1 = NodeUtil.newVarNode("Infinity", node0);
        int int0 = NodeUtil.getNameReferenceCount(node1, "undefined");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test632728() throws Throwable {
        Node node0 = new Node(110);
        Node node1 = NodeUtil.newVarNode("Infinity", node0);
        int int0 = NodeUtil.getNameReferenceCount(node1, "undefined");
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test633729() throws Throwable {
        Node node0 = new Node(126);
        LinkedList<Node> linkedList0 = new LinkedList<Node>();
        FunctionNode functionNode0 = NodeUtil.newFunctionNode("void", linkedList0, node0, 20, 193);
        node0.addChildrenToBack(functionNode0);
        NodeUtil.redeclareVarsInsideBranch(node0);
    }

    @Test(timeout = 4000)
    public void test634730() throws Throwable {
        Node node0 = Node.newString("d(");
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(17);
        boolean boolean0 = NodeUtil.has(node0, nodeUtil_MatchNodeType0, nodeUtil_MatchNodeType0);
    }

    @Test(timeout = 4000)
    public void test635731() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        boolean boolean0 = NodeUtil.containsTypeInOuterScope(node0, 39);
    }

    @Test(timeout = 4000)
    public void test636732() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("OYE_NcUvx9\"HX?v,", 110, 110);
        int int0 = NodeUtil.getNameReferenceCount(node0, "OYE_NcUvx9\"HX?v,");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test636733() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("OYE_NcUvx9\"HX?v,", 110, 110);
        int int0 = NodeUtil.getNameReferenceCount(node0, "OYE_NcUvx9\"HX?v,");
    }

    @Test(timeout = 4000)
    public void test636734() throws Throwable {
        Node node0 = NodeUtil.newQualifiedNameNode("OYE_NcUvx9\"HX?v,", 110, 110);
        int int0 = NodeUtil.getNameReferenceCount(node0, "OYE_NcUvx9\"HX?v,");
        node0.getLineno();
    }

    @Test(timeout = 4000)
    public void test637735() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(7);
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchNodeType0);
    }

    @Test(timeout = 4000)
    public void test638736() throws Throwable {
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(133);
        Node node0 = new Node(133, 133, 133);
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchNodeType0);
    }

    @Test(timeout = 4000)
    public void test639737() throws Throwable {
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(133);
        Node node0 = new Node(133, 133, 133);
        node0.addChildToBack(node0);
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchNodeType0);
    }

    @Test(timeout = 4000)
    public void test640738() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.hasFinally(node0);
    }

    @Test(timeout = 4000)
    public void test641739() throws Throwable {
        Node node0 = new Node(77);
        boolean boolean0 = NodeUtil.hasFinally(node0);
    }

    @Test(timeout = 4000)
    public void test642740() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.getCatchBlock(node0);
    }

    @Test(timeout = 4000)
    public void test643741() throws Throwable {
        Node node0 = new Node(77);
        NodeUtil.getCatchBlock(node0);
    }

    @Test(timeout = 4000)
    public void test644742() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.hasCatchHandler(node0);
    }

    @Test(timeout = 4000)
    public void test645743() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(125, node0);
        boolean boolean0 = NodeUtil.hasCatchHandler(node1);
    }

    @Test(timeout = 4000)
    public void test646744() throws Throwable {
        Node node0 = new Node(125, 125, 125);
        boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    }

    @Test(timeout = 4000)
    public void test647745() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        NodeUtil.getFnParameters(node0);
    }

    @Test(timeout = 4000)
    public void test648746() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.getFnParameters(node0);
    }

    @Test(timeout = 4000)
    public void test649747() throws Throwable {
        JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    }

    @Test(timeout = 4000)
    public void test650748() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    }

    @Test(timeout = 4000)
    public void test651749() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.setJSDocInfo(jSDocInfo0);
        JSDocInfo jSDocInfo1 = NodeUtil.getInfoForNameNode(node0);
        jSDocInfo1.isExport();
    }

    @Test(timeout = 4000)
    public void test652750() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(105, node0, 7, 23);
        JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    }

    @Test(timeout = 4000)
    public void test653751() throws Throwable {
        Node node0 = new Node(118);
        Node node1 = new Node(118, node0, 49, 12);
        JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    }

    @Test(timeout = 4000)
    public void test654752() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        Node node1 = new Node(6, node0, 2, 47);
        JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    }

    @Test(timeout = 4000)
    public void test655753() throws Throwable {
        Node node0 = NodeUtil.newUndefinedNode();
        String string0 = NodeUtil.getSourceName(node0);
    }
}
