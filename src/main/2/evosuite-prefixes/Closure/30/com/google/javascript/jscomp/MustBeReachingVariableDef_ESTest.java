/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 01:18:36 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.MustBeReachingVariableDef;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.ObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MustBeReachingVariableDef_ESTest extends MustBeReachingVariableDef_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arguments");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        scope0.declare("Unknown class name", node0, (JSType) null, (CompilerInput) null);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.join(mustBeReachingVariableDef_MustDef0, mustBeReachingVariableDef_MustDef0);
        mustBeReachingVariableDef_MustDef1.equals((Object) mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        Object object0 = new Object();
        boolean boolean0 = mustBeReachingVariableDef_MustDef0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arH=ets");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, compiler0);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        scope0.declare("arH=ets", node0, (JSType) null, (CompilerInput) null);
        mustBeReachingVariableDef0.analyze();
        boolean boolean0 = mustBeReachingVariableDef0.dependsOnOuterScopeVars("arH=ets", node0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Node node0 = Node.newNumber((-1.0));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        scope0.declare("Named type with empty name component", node0, (JSType) null, (CompilerInput) null);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef2 = mustBeReachingVariableDef0.join(mustBeReachingVariableDef_MustDef0, mustBeReachingVariableDef_MustDef1);
        mustBeReachingVariableDef_MustDef2.equals((Object) mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("P8W\"paxr#\"ac-ys");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        scope0.declare("Not declared as a type name", node0, (JSType) null, (CompilerInput) null);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef2 = mustBeReachingVariableDef0.join(mustBeReachingVariableDef_MustDef1, mustBeReachingVariableDef_MustDef0);
        mustBeReachingVariableDef_MustDef2.equals((Object) mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(98, node0, 1, 36);
        mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Node node0 = Node.newNumber((-1.0));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(99, node0, 4, 48);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(100, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Node node0 = Node.newNumber((-19.957752573250055));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(101, node0, 51, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(102, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Node node0 = Node.newNumber((-29.13));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(103, node0, 0, 8);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Node node0 = Node.newNumber((-24.27462518767905));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(104, node0, 48, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("r", "r");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(105, node0, 36, 2);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(106, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Node node0 = Node.newNumber((-2511.0));
        Compiler compiler0 = new Compiler();
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(107, node0, 2502, 32);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Node node0 = Node.newNumber(44.07372891186091);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(108, node0, 2, 35);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(109, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arguments");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(110, node0, 504, 52);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(111, node0, 46, 15);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Node node0 = Node.newNumber(44.07372891186091);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        Node node1 = new Node(112, node0, 47, 48);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(113, node0, 0, 1067);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Node node0 = Node.newNumber((-19.957752573250055));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(114, node0, 51, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(115, node0, 1, 36);
        mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Node node0 = Node.newNumber((-24.27462518767905));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(116, node0, 51, 15);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(117, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Node node0 = Node.newNumber(44.07372891186091);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        Node node1 = new Node(118, node0, 47, 48);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(119, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(120, node0, 54, 38);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(121, node0, 1, 36);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(122, node0, 4095, 52);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createInitialEstimateLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(123, node0, 36, 54);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        Node node1 = new Node(124, node0, 4, 8);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(125, node0, 37, 1);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        Node node0 = Node.newNumber(44.07372891186091);
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = new MustBeReachingVariableDef.MustDef();
        Node node1 = new Node(36, node0, node0, 42, 47);
        Node node2 = new Node(118, node1, 47, 48);
        mustBeReachingVariableDef0.flowThrough(node2, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        Node node0 = Node.newNumber((-29.125623824181243));
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        Compiler compiler0 = new Compiler();
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef0 = mustBeReachingVariableDef0.createEntryLattice();
        Node node1 = new Node(90, node0, 12, 15);
        MustBeReachingVariableDef.MustDef mustBeReachingVariableDef_MustDef1 = mustBeReachingVariableDef0.flowThrough(node1, mustBeReachingVariableDef_MustDef0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arguments");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        scope0.declare("argumeEts", node0, (JSType) null, (CompilerInput) null);
        Node node1 = new Node(48, node0, 15, 44);
        mustBeReachingVariableDef0.analyze();
        Node node2 = mustBeReachingVariableDef0.getDef("argumeEts", node0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("arguments");
        ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
        Scope scope0 = new Scope(node0, (ObjectType) null);
        MustBeReachingVariableDef mustBeReachingVariableDef0 = new MustBeReachingVariableDef(controlFlowGraph0, scope0, compiler0);
        mustBeReachingVariableDef0.analyze();
        Node node1 = mustBeReachingVariableDef0.getDef("arguments", node0);
    }
}
