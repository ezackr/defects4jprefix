/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 08:55:46 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.DefaultCodingConvention;
import com.google.javascript.jscomp.GoogleCodingConvention;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TypedScopeCreator_ESTest extends TypedScopeCreator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.TypedScopeCreator$DiscoverEnums");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("(Proxy)");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = compiler0.parseSyntheticCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
        scope1.getVarCount();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("J=Ivq");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isGlobal();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("TN,wB/l0Y");
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, googleCodingConvention0);
        Node node1 = Node.newString(118, "TN,wB/l0Y");
        Node node2 = Node.newString("TN,wB/l0Y", 50, 1);
        node1.addChildrenToFront(node0);
        node1.addChildrenToFront(node2);
        typedScopeCreator0.createScope(node1, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("TN,wB/l0R");
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, googleCodingConvention0);
        Node node1 = Node.newString(118, "TN,wB/l0R");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node1.setJSDocInfo(jSDocInfo0);
        node1.addChildrenToFront(node0);
        typedScopeCreator0.createScope(node1, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("TN,wB0R");
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, googleCodingConvention0);
        Node node0 = Node.newString(118, "TN,wB0R");
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("TN,wB/l0Y");
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, googleCodingConvention0);
        Node node1 = Node.newString(118, "TN,wB/l0Y");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node1.setJSDocInfo(jSDocInfo0);
        Node node2 = Node.newString("TN,wB/l0Y", 50, 1);
        node1.addChildrenToFront(node0);
        node1.addChildrenToFront(node2);
        typedScopeCreator0.createScope(node1, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("M3C)%K#Uz<<F(m/W");
        Node node0 = Node.newString(19, "M3C)%K#Uz<<F(m/W", 15, 20);
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Vector<JSType> vector0 = new Vector<JSType>();
        Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node1);
        Node node2 = new Node(12, node0, node1, node0, node1, 2, 2);
        typedScopeCreator0.createScope(node2, scope0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = compiler0.parseSyntheticCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        node1.addChildToFront(node0);
        typedScopeCreator0.createScope(node1, (Scope) null);
        compiler0.getWarningCount();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("M3C)%K#Uxz<<F(m/W");
        Node node1 = Node.newString(37, "M3C)%K#Uxz<<F(m/W");
        node1.addChildrenToFront(node0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("goog.typedef");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, defaultCodingConvention0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isLocal();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("4|(VW");
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Stack<JSType> stack0 = new Stack<JSType>();
        Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Node node2 = new Node(43, node0, node0, node1, 45, 41);
        Node node3 = new Node(30, node2, 37, 12);
        Scope scope1 = typedScopeCreator0.createScope(node3, scope0);
        scope1.isGlobal();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseSyntheticCode("Fa[led to create VMBri_ge instance", "Fa[led to create VMBri_ge instance");
        Stack<JSType> stack0 = new Stack<JSType>();
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = Node.newString(40, "");
        Node node2 = new Node(17, node1, node1, node1, node0, 0, 1);
        Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
        Scope scope1 = typedScopeCreator0.createScope(node2, scope0);
        scope1.getVarCount();
    }
}
