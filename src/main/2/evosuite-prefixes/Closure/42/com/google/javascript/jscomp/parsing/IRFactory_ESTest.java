/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 01:59:09 GMT 2024
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.ArrayComprehensionLoop;
import com.google.javascript.rhino.head.ast.ArrayLiteral;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.Block;
import com.google.javascript.rhino.head.ast.BreakStatement;
import com.google.javascript.rhino.head.ast.CatchClause;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ConditionalExpression;
import com.google.javascript.rhino.head.ast.ContinueStatement;
import com.google.javascript.rhino.head.ast.DoLoop;
import com.google.javascript.rhino.head.ast.ElementGet;
import com.google.javascript.rhino.head.ast.EmptyExpression;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.ast.ExpressionStatement;
import com.google.javascript.rhino.head.ast.ForLoop;
import com.google.javascript.rhino.head.ast.FunctionCall;
import com.google.javascript.rhino.head.ast.FunctionNode;
import com.google.javascript.rhino.head.ast.IfStatement;
import com.google.javascript.rhino.head.ast.Label;
import com.google.javascript.rhino.head.ast.LabeledStatement;
import com.google.javascript.rhino.head.ast.Name;
import com.google.javascript.rhino.head.ast.NewExpression;
import com.google.javascript.rhino.head.ast.NumberLiteral;
import com.google.javascript.rhino.head.ast.ObjectLiteral;
import com.google.javascript.rhino.head.ast.ObjectProperty;
import com.google.javascript.rhino.head.ast.ParenthesizedExpression;
import com.google.javascript.rhino.head.ast.PropertyGet;
import com.google.javascript.rhino.head.ast.RegExpLiteral;
import com.google.javascript.rhino.head.ast.ReturnStatement;
import com.google.javascript.rhino.head.ast.Scope;
import com.google.javascript.rhino.head.ast.StringLiteral;
import com.google.javascript.rhino.head.ast.SwitchCase;
import com.google.javascript.rhino.head.ast.ThrowStatement;
import com.google.javascript.rhino.head.ast.VariableDeclaration;
import com.google.javascript.rhino.head.ast.VariableInitializer;
import com.google.javascript.rhino.head.ast.WhileLoop;
import com.google.javascript.rhino.head.ast.WithStatement;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class IRFactory_ESTest extends IRFactory_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ConditionalExpression conditionalExpression0 = new ConditionalExpression(44);
        astRoot0.addChild(conditionalExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, ";%", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(18);
        astRoot0.addChild(parenthesizedExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Qno next sibling.", false);
        DoLoop doLoop0 = new DoLoop(4, 8);
        astRoot0.addChild(doLoop0);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getModifies();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "Qno next sibling.", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        PropertyGet propertyGet0 = new PropertyGet();
        astRoot0.addChild(propertyGet0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "BE(&8B}I", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NO_SHADOW", false);
        EmptyExpression emptyExpression0 = new EmptyExpression(5049, 39);
        astRoot0.addChild(emptyExpression0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "NO_SHADOW", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NO_SHADOW", false);
        EmptyExpression emptyExpression0 = new EmptyExpression(5049, 39);
        astRoot0.addChild(emptyExpression0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "NO_SHADOW", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NO_SHADOW", false);
        EmptyExpression emptyExpression0 = new EmptyExpression(5049, 39);
        astRoot0.addChild(emptyExpression0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "NO_SHADOW", config0, toolErrorReporter0);
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
        astRoot0.addChildrenToBack(arrayComprehensionLoop0);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "interface", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ElementGet elementGet0 = new ElementGet();
        astRoot0.addChild(elementGet0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "Ir]BK64C$es(", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectProperty objectProperty0 = new ObjectProperty(23, 16);
        astRoot0.addChildrenToBack(objectProperty0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("language version", true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "language version", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        WithStatement withStatement0 = new WithStatement();
        astRoot0.addChild(withStatement0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "#t", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        ForLoop forLoop0 = new ForLoop(8);
        astRoot0.addChildrenToBack(forLoop0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "<}\"4[jYh7Z", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("=Pi>_a(~P", false);
        LabeledStatement labeledStatement0 = new LabeledStatement();
        Label label0 = new Label(1, 1, "=Pi>_a(~P");
        labeledStatement0.addLabel(label0);
        astRoot0.addChild(labeledStatement0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "=Pi>_a(~P", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NewExpression newExpression0 = new NewExpression(0);
        astRoot0.addChild(newExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral();
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.rhino.Node$AncestorIterable", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral();
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.rhino.Node$AncestorIterable", config0, toolErrorReporter0);
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral();
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.rhino.Node$AncestorIterable", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("no next sibing.", true);
        ExpressionStatement expressionStatement0 = new ExpressionStatement(7, 10);
        astRoot0.addChild(expressionStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "no next sibing.", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        WhileLoop whileLoop0 = new WhileLoop(41);
        astRoot0.addChild(whileLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Block block0 = new Block();
        astRoot0.addChild(block0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1520() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Block block0 = new Block();
        astRoot0.addChild(block0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Name name0 = new Name();
        FunctionNode functionNode0 = new FunctionNode(25, name0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(functionNode0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SwitchCase switchCase0 = new SwitchCase(1, 5);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(1, 0, token_CommentType0, "0R)V,~56vmx");
        switchCase0.setExpression(comment0);
        astRoot0.addChildrenToBack(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "0R)V,~56vmx", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SwitchCase switchCase0 = new SwitchCase(1, 5);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(1, 0, token_CommentType0, "0R)V,~56vmx");
        switchCase0.setExpression(comment0);
        astRoot0.addChildrenToBack(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "0R)V,~56vmx", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ThrowStatement throwStatement0 = new ThrowStatement();
        astRoot0.addChild(throwStatement0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Ir]BK64C$es(", true);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "Ir]BK64C$es(", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(4, 2, token_CommentType0, "com.google.javascript.jscomp.parsing.IRFactory");
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.jscomp.parsing.IRFactory", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(4, 2, token_CommentType0, "com.google.javascript.jscomp.parsing.IRFactory");
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.jscomp.parsing.IRFactory", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Dg&#[k}4Ou^3Y", true);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(3, 4, token_CommentType0, "Dg&#[k}4Ou^3Y");
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "Dg&#[k}4Ou^3Y", config0, errorCollector0);
        node0.isFromExterns();
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Dg&#[k}4Ou^3Y", true);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(3, 4, token_CommentType0, "Dg&#[k}4Ou^3Y");
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "Dg&#[k}4Ou^3Y", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2029() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Dg&#[k}4Ou^3Y", true);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(3, 4, token_CommentType0, "Dg&#[k}4Ou^3Y");
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "Dg&#[k}4Ou^3Y", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(4, 2, token_CommentType0, "com.google.javascript.jscomp.parsing.IRFactory");
        astRoot0.setJsDocNode(comment0);
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.jscomp.parsing.IRFactory", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(4, 2, token_CommentType0, "com.google.javascript.jscomp.parsing.IRFactory");
        astRoot0.setJsDocNode(comment0);
        astRoot0.addComment(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.jscomp.parsing.IRFactory", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration(2, 4);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(variableDeclaration0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "\n * @", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration(2, 4);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(variableDeclaration0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "\n * @", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2334() throws Throwable {
        AstRoot astRoot0 = new AstRoot(1900);
        Scope scope0 = new Scope();
        scope0.addChildrenToBack(astRoot0);
        astRoot0.addChild(scope0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "invalid assignment target", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test2435() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectLiteral objectLiteral0 = new ObjectLiteral(1);
        ObjectProperty objectProperty0 = new ObjectProperty();
        objectLiteral0.addElement(objectProperty0);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "BE(&8B}I", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test2536() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral(2);
        arrayLiteral0.addElement(astRoot0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(arrayLiteral0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "_Ie", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test2637() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        FunctionNode functionNode0 = new FunctionNode(3);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
        astRoot0.addChild(functionNode0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2638() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        FunctionNode functionNode0 = new FunctionNode(3);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
        astRoot0.addChild(functionNode0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test2739() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        BreakStatement breakStatement0 = new BreakStatement();
        astRoot0.addChild(breakStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2740() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        BreakStatement breakStatement0 = new BreakStatement();
        astRoot0.addChild(breakStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2841() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        CatchClause catchClause0 = new CatchClause();
        Name name0 = new Name((-3473), 1690, "Non-JSDoc comment has annotations. Did you mean to start it with '/**'?");
        catchClause0.setVarName(name0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(catchClause0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Context.getCurrentContext();
    }

    @Test(timeout = 4000)
    public void test2942() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral(10);
        astRoot0.addChild(regExpLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        ContinueStatement continueStatement0 = new ContinueStatement(1);
        astRoot0.addChildBefore(continueStatement0, regExpLiteral0);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "argument", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test3043() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Name name0 = new Name(8, 19);
        ContinueStatement continueStatement0 = new ContinueStatement(name0);
        astRoot0.addChildrenToBack(continueStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("RG~[igKm}hAyi", false);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "RG~[igKm}hAyi", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test3144() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Name name0 = new Name(1);
        FunctionNode functionNode0 = new FunctionNode(25, name0);
        astRoot0.addChild(functionNode0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        name0.setType(5);
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "JavaAdapter", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test3245() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Name name0 = new Name(45, "interface");
        astRoot0.addChild(name0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test3346() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectLiteral objectLiteral0 = new ObjectLiteral(1);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "interface", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3347() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectLiteral objectLiteral0 = new ObjectLiteral(1);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "interface", config0, toolErrorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3448() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectLiteral objectLiteral0 = new ObjectLiteral(1);
        ObjectProperty objectProperty0 = new ObjectProperty();
        objectLiteral0.addElement(objectProperty0);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.getErrorReporter();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "OzwALZ-'[Vteh.ic,&", config0, errorReporter0);
    }

    @Test(timeout = 4000)
    public void test3549() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ReturnStatement returnStatement0 = new ReturnStatement(17);
        astRoot0.addChild(returnStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "const", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3550() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ReturnStatement returnStatement0 = new ReturnStatement(17);
        astRoot0.addChild(returnStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "const", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.forLanguageTag("-iUJ");
        FunctionCall functionCall0 = new FunctionCall(26, 2);
        ReturnStatement returnStatement0 = new ReturnStatement(1564, 1610612736, functionCall0);
        astRoot0.addChild(returnStatement0);
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test3752() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        StringLiteral stringLiteral0 = new StringLiteral();
        stringLiteral0.setValue("");
        astRoot0.addChild(stringLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3753() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        StringLiteral stringLiteral0 = new StringLiteral();
        stringLiteral0.setValue("");
        astRoot0.addChild(stringLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3854() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SwitchCase switchCase0 = new SwitchCase(22, 7);
        astRoot0.addChildrenToBack(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("error reporter", false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3855() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SwitchCase switchCase0 = new SwitchCase(22, 7);
        astRoot0.addChildrenToBack(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("error reporter", false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3956() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(variableDeclaration0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "'@/AAnS)s+cok!2QU", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3957() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(variableDeclaration0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "'@/AAnS)s+cok!2QU", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4058() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        VariableInitializer variableInitializer0 = new VariableInitializer();
        variableDeclaration0.addVariable(variableInitializer0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        astRoot0.addChild(variableDeclaration0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "interace", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test4159() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral(7);
        VariableInitializer variableInitializer0 = new VariableInitializer(2);
        variableInitializer0.setTarget(arrayLiteral0);
        astRoot0.addChildrenToBack(variableInitializer0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("language version", false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4160() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral(7);
        VariableInitializer variableInitializer0 = new VariableInitializer(2);
        variableInitializer0.setTarget(arrayLiteral0);
        astRoot0.addChildrenToBack(variableInitializer0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("language version", false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4261() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral(7);
        VariableInitializer variableInitializer0 = new VariableInitializer(2);
        variableInitializer0.setInitializer(arrayLiteral0);
        variableInitializer0.setTarget(arrayLiteral0);
        astRoot0.addChildrenToBack(variableInitializer0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config config0 = new Config(linkedHashSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "<k5", config0, toolErrorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test4262() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral(7);
        VariableInitializer variableInitializer0 = new VariableInitializer(2);
        variableInitializer0.setInitializer(arrayLiteral0);
        variableInitializer0.setTarget(arrayLiteral0);
        astRoot0.addChildrenToBack(variableInitializer0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config config0 = new Config(linkedHashSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "<k5", config0, toolErrorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4363() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("no next sibing.", true);
        IfStatement ifStatement0 = new IfStatement();
        ExpressionStatement expressionStatement0 = new ExpressionStatement(ifStatement0, true);
        astRoot0.addChild(expressionStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Locale locale0 = Locale.ITALIAN;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "no next sibing.", config0, errorCollector0);
    }
}
