/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 00:39:38 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.Node;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TypedScopeCreator_ESTest extends TypedScopeCreator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("msg.no.type.name");
        node0.setType(37);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("ImutaeleSetMultimap", "ImutaeleSetMultimap");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        node0.setType(120);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        typedScopeCreator0.patchGlobalScope(scope0, node0);
        typedScopeCreator0.patchGlobalScope(scope0, node0);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCumpiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstuMeFhod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        JSSourceFile jSSourceFile0 = JSSourceFile.fromCode("Eq~rSBx~SfV", "var JSCompiler_stubMap = [];function JCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCumpiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstuMeFhod_body;}");
        node0.setStaticSourceFile(jSSourceFile0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        typedScopeCreator0.patchGlobalScope(scope0, node0);
        compiler0.getWarningCount();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseTestCode("JSE_PZ=TIFLIZMRNOT_ENM");
        Node node0 = new Node(42, 31, 44);
        Node node1 = node0.cloneNode();
        node0.setType(118);
        node0.addChildToFront(node1);
        node0.addSuppression("JSE_PZ=TIFLIZMRNOT_ENM");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        Stack<JSSourceFile> stack0 = new Stack<JSSourceFile>();
        LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();
        CompilerOptions compilerOptions0 = compiler0.getOptions();
        compiler0.compileModules((List<JSSourceFile>) stack0, (List<JSModule>) linkedList0, compilerOptions0);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        typedScopeCreator0.patchGlobalScope(scope0, node0);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        node0.setType(54);
        Node node1 = compiler0.parseSyntheticCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}", "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        node0.addChildToFront(node1);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("v,H;E.W=4");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("YH;E.W=y");
        node0.setType(41);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isGlobal();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("JSC_ENM_PZ=TIFLIZER_NOT_ENUM");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        node0.setType(43);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isGlobal();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("JSC_ENUM_INITIALIZER_NOT_ENUM", "JSC_ENUM_INITIALIZER_NOT_ENUM");
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, closureCodingConvention0);
        node0.setType(44);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.isGlobal();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("gH;Eyn");
        node0.setType(47);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("sg.to.type.n ");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        node0.setType(122);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("gH;E.WCy");
        node0.setType(64);
        node0.addSuppression("gH;E.WCy");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = new Node(47, node0, 2, 4);
        typedScopeCreator0.createScope(node1, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("Y`$gH;E.yn");
        node0.setType(64);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Node node1 = new Node(45, node0, 1, 1);
        Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
        scope1.isGlobal();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("JSI_PZ=TIFLIZMRNOT_ENM");
        Node node1 = node0.cloneNode();
        node0.setType(118);
        node0.addChildToFront(node1);
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("JSI_PZ=TIFLIZM&NOT_ENM");
        Node node1 = node0.cloneNode();
        node0.setType(118);
        node0.addChildToFront(node1);
        node0.addSuppression("JSI_PZ=TIFLIZM&NOT_ENM");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node0, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("JSC_EN_PZ=TIFLIZMRNOT_ENUM");
        Node node1 = new Node(15, node0, node0, node0, 12, 4);
        Node node2 = node1.useSourceInfoFrom(node0);
        node1.setType(118);
        node2.addSuppression("JSC_EN_PZ=TIFLIZMRNOT_ENUM");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        typedScopeCreator0.createScope(node1, (Scope) null);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Node node1 = new Node(0, node0, 53, 54);
        Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
        scope1.getVarCount();
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  }}function JSCompiler_unstubMethod(    JSCompiler_unsubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiBer_stubMap[JSCompiler_unstubethod_id] =       JSCompiler_unstubMethod_body;}");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createInitialScope(node0);
        Node node1 = new Node(0, node0, 53, 54);
        Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
        compiler0.getWarningCount();
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("jQuery.prototype");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("jQuery.prototype");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = new Node(42, node0, 29, 29);
        Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
        Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
        scope1.getVarCount();
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("jQuery.prototype");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node1 = new Node(42, node0, 29, 29);
        Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
        Scope scope1 = typedScopeCreator0.createScope(node0, scope0);
        scope0.getVarCount();
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("msg.no.Xtpeame");
        Node node1 = compiler0.parseSyntheticCode("msg.no.Xtpeame", "msg.no.Xtpeame");
        TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
        Node node2 = new Node(0, node0, node1);
        Scope scope0 = typedScopeCreator0.createScope(node2, (Scope) null);
        scope0.getVarCount();
    }
}
