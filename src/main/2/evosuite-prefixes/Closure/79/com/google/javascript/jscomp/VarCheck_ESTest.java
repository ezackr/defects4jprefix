/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 04:29:58 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.VarCheck;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class VarCheck_ESTest extends VarCheck_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("qdQa-E:/~l", "qdQa-E:/~l");
        Node node1 = new Node(18, node0, node0, node0, 36, 8);
        VarCheck varCheck0 = new VarCheck(compiler0);
        varCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("t", "t");
        Node node1 = new Node(18, node0, node0, node0, 36, 8);
        VarCheck varCheck0 = new VarCheck(compiler0);
        varCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Compiler compiler0 = new Compiler();
        compiler0.parseSyntheticCode("comg*ole.avascipt.jscomp.mozilla.rhino.NativeContination", "comg*ole.avascipt.jscomp.mozilla.rhino.NativeContination");
        JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
        JSType[] jSTypeArray0 = new JSType[4];
        Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
        Node node1 = new Node(12, node0, node0, node0, 11, 23);
        VarCheck varCheck0 = new VarCheck(compiler0);
        varCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("JSDO", "JSDO");
        Node node1 = new Node(1, node0, node0, node0, 40, 1);
        VarCheck varCheck0 = new VarCheck(compiler0, true);
        varCheck0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode("com.google.javascript.jscomp.mozilla.rhino.NativeContination", "com.google.javascript.jscomp.mozilla.rhino.NativeContination");
        VarCheck varCheck0 = new VarCheck(compiler0);
        varCheck0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        VarCheck varCheck0 = new VarCheck(compiler0);
        varCheck0.process(node0, node0);
    }
}
