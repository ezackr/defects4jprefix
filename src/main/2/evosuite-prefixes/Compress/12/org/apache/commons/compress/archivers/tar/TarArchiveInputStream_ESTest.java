/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 13:04:17 GMT 2024
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.StringReader;
import java.util.Map;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TarArchiveInputStream_ESTest extends TarArchiveInputStream_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, 1143);
        boolean boolean0 = tarArchiveInputStream0.isAtEOF();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, 1143);
        tarArchiveInputStream0.reset();
        tarArchiveInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, 1636);
        int int0 = tarArchiveInputStream0.getRecordSize();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        tarArchiveInputStream0.close();
        tarArchiveInputStream0.getBytesRead();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("N=OQB_?PoUn");
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        tarArchiveInputStream0.setCurrentEntry(tarArchiveEntry0);
        tarArchiveEntry0.isExtended();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, 329);
        tarArchiveInputStream0.getNextEntry();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0);
        TarArchiveEntry tarArchiveEntry0 = tarArchiveInputStream0.getCurrentEntry();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        tarArchiveInputStream0.setAtEOF(false);
        tarArchiveInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0);
        int int0 = tarArchiveInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        long long0 = tarArchiveInputStream0.skip((-2793L));
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        long long0 = tarArchiveInputStream0.skip(1143);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        long long0 = tarArchiveInputStream0.skip(36864L);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(dataInputStream0);
        tarArchiveInputStream0.getNextTarEntry();
        tarArchiveInputStream0.getNextTarEntry();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[1] = (byte) (-21);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);
        tarArchiveInputStream0.getNextTarEntry();
        tarArchiveInputStream0.getNextTarEntry();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, 424935705, 424935705);
        TarArchiveInputStream tarArchiveInputStream1 = new TarArchiveInputStream(tarArchiveInputStream0, 424935705);
        TarArchiveEntry tarArchiveEntry0 = tarArchiveInputStream1.getNextTarEntry();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        StringReader stringReader0 = new StringReader("vWnnu*5Y>,7zKF}SmL");
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        Map<String, String> map0 = tarArchiveInputStream0.parsePaxHeaders(stringReader0);
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0, 1134, 1134);
        StringReader stringReader0 = new StringReader(" =PC6/*");
        tarArchiveInputStream0.parsePaxHeaders(stringReader0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        StringReader stringReader0 = new StringReader("JarMarker doesn't expect any data");
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0);
        Map<String, String> map0 = tarArchiveInputStream0.parsePaxHeaders(stringReader0);
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0);
        boolean boolean0 = tarArchiveInputStream0.canReadEntryData((ArchiveEntry) null);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("N=OQB_?PoUn");
        TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);
        boolean boolean0 = tarArchiveInputStream0.canReadEntryData(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        byte[] byteArray0 = new byte[0];
        TarArchiveInputStream.matches(byteArray0, 1143);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = TarArchiveInputStream.matches(byteArray0, 110);
    }
}
