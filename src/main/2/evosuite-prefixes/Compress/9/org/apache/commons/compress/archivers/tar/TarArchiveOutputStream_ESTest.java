/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:56:10 GMT 2024
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TarArchiveOutputStream_ESTest extends TarArchiveOutputStream_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.flush();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 10240);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        int int0 = tarArchiveOutputStream0.getRecordSize();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.close();
        tarArchiveOutputStream0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.finish();
        tarArchiveOutputStream0.finish();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        MockFile mockFile0 = new MockFile(" is not a concrete class", " is not a concrete class");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
        tarArchiveOutputStream0.close();
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        MockFile mockFile0 = new MockFile(" is not a!c5ns6et6 ?la{s", " is not a!c5ns6et6 ?la{s");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" is not a!c5ns6et6 ?la{s");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        MockFile mockFile0 = new MockFile(" is not a!c5ns6et6 ?la{s", " is not a!c5ns6et6 ?la{s");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" is not a!c5ns6et6 ?la{s");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
        tarArchiveOutputStream0.setLongFileMode(2);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.getCount();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        MockFile mockFile0 = new MockFile(" is not a!c5ns6et6 ?la{s", " is not a!c5ns6et6 ?la{s");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" is not a!c5ns6et6 ?la{s");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
        tarArchiveOutputStream0.setLongFileMode(1);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.getBytesWritten();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("./");
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("./");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.finish();
        tarArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.closeArchiveEntry();
        tarArchiveOutputStream0.getCount();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("");
        tarArchiveEntry0.setSize(1);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.close();
        byteArrayOutputStream0.writeTo(tarArchiveOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0, 5682, 5629);
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(" bytes)", (byte) (-81));
        tarArchiveEntry0.setSize(5682);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.write(5682);
        tarArchiveOutputStream0.write((byte[]) null, 1000, 5682);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0, 5715, 5715);
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry("RG,y4.fUDu@kIZ)J");
        tarArchiveEntry0.setSize(33188);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.write((byte[]) null, 33188, 33188);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        MockFile mockFile0 = new MockFile("", "");
        TarArchiveEntry tarArchiveEntry0 = (TarArchiveEntry) tarArchiveOutputStream0.createArchiveEntry(mockFile0, "");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.close();
        MockFile mockFile0 = new MockFile("q#Ry");
        tarArchiveOutputStream0.createArchiveEntry(mockFile0, "q#Ry");
    }
}
