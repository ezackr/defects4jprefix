/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 06:39:11 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment(";<I>-/U5'Z", (Element) null, "pre", (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("object", document0, "zjA,H=M}<c7j[W(&", parseErrorList0, parseSettings0);
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.nameAttr("object", attributes0);
        htmlTreeBuilder0.setFosterInserts(true);
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("<html>\n <head />\n <body>\n  MrlR:E\n </body>\n</html>", (Element) null, "<html>\n <head />\n <body>\n  MrlR:E\n </body>\n</html>", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("tr");
        htmlTreeBuilder0.parseFragment("&d^rp", element0, "tr", (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("summary");
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = new Document("select");
        htmlTreeBuilder0.parseFragment("source", document0, "select", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("select");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope((String[]) null);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<String> arrayList0 = new ArrayList<String>();
        htmlTreeBuilder0.setPendingTableCharacters(arrayList0);
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(true);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.push((Element) null);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isSpecial((Element) null);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope(";FR%EZ");
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("tfoot");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("3K8aI(ai88\"ixl^6h>B", element0, "3K8aI(ai88\"ixl^6h>B", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("tfoot");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("3K8aI(ai88\"ixl^6h>B", element0, "3K8aI(ai88\"ixl^6h>B", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        Element element0 = new Element("textarea");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("textarea", element0, "textarea", parseErrorList0, (ParseSettings) null);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("noembed");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("noembed", element0, "noembed", parseErrorList0, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("script");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("script", element0, "script", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("noscript");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("noscript", element0, "noscript", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("plaintext");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("plaintext", element0, "plaintext", (ParseErrorList) null, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        Tag tag0 = Tag.valueOf("Tj");
        TextNode textNode0 = TextNode.createFromEncoded("Tj", "Tj");
        Attributes attributes0 = textNode0.attributes();
        FormElement formElement0 = new FormElement(tag0, "Tj", attributes0);
        Element element0 = formElement0.prepend("CommentEnd");
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri(document0);
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("frameset");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(965);
        htmlTreeBuilder0.parseFragment("frameset", element0, "frameset", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("frameset");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(965);
        htmlTreeBuilder0.parseFragment("frameset", element0, "frameset", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("source", (Element) null, "source", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("source");
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("4", (Element) null, "4", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("4", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        Document document0 = Document.createShell("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("object", document0, "zjA,H=M}<c7j[W(&", parseErrorList0, parseSettings0);
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.nameAttr("object", attributes0);
        token_StartTag0.selfClosing = true;
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = new Document("zj+M$Z[=xuyMQ4");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("zj+M$Z[=xuyMQ4", document0, "zj+M$Z[=xuyMQ4", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        token_StartTag0.nameAttr("zj+M$Z[=xuyMQ4", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
        formElement0.isBlock();
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("script", (Element) null, "script", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertStartTag("script");
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = new Document("org.jsoup.select.Ealuator");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("org.jsoup.select.Ealuator", document0, "org.jsoup.select.Ealuator", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.processStartTag("style");
        CharacterReader characterReader0 = new CharacterReader("style");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token.Character token_Character0 = tokeniser0.charPending;
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("<?in{Ei", (Element) null, "<?in{Ei", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        Element element0 = new Element("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", element0, "object", parseErrorList0, (ParseSettings) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("object", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
        formElement0.baseUri();
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("scipt", element0, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", document0, "object", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insertStartTag("object");
        Element element0 = htmlTreeBuilder0.getFromStack("object");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("$%`E1aXY63", (Element) null, "$%`E1aXY63", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("$%`E1aXY63", (Element) null, "$%`E1aXY63", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        arrayList0.add((Element) null);
        htmlTreeBuilder0.stack = arrayList0;
        boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        Element element0 = new Element("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", element0, "object", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.popStackToClose("object");
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("script", (Element) null, "thead", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertStartTag("thead");
        htmlTreeBuilder0.popStackToClose("thead");
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("", document0, "", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("h1", (Element) null, "h1", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[3];
        stringArray0[0] = "h1";
        stringArray0[1] = "h1";
        stringArray0[2] = "html";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", document0, "object", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.popStackToBefore("object");
    }

    @Test(timeout = 4000)
    public void test4952() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("scipt", element0, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.processStartTag("scipt");
        htmlTreeBuilder0.popStackToBefore("scipt");
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("object", document0, "zjA,H=M}<c7j[W(&", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        arrayList0.add((Element) null);
        Document document0 = Document.createShell("zd <\"snFyX` &3<E^");
        arrayList0.add((Element) document0);
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.insertOnStackAfter((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test5558() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        arrayList0.add((Element) null);
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.insertOnStackAfter((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test5659() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test5760() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        arrayList0.add((Element) null);
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test5861() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test5962() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("caption", document0, "", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertStartTag("caption");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        Element element0 = new Element("select");
        Element element1 = element0.prepend("select");
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("td");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("", element0, "colgroup", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test6265() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("th");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1046));
        htmlTreeBuilder0.parseFragment("th", element0, "th", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test6366() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("tbody");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("tbody", element0, "tbody", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6367() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("tbody");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("tbody", element0, "tbody", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test6468() throws Throwable {
        Element element0 = new Element("thead");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("thead", element0, "thead", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test6469() throws Throwable {
        Element element0 = new Element("thead");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("thead", element0, "thead", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6570() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("colgroup");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("colgroup", element0, "colgroup", parseErrorList0, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6671() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", (ParseErrorList) null, (ParseSettings) null);
    }

    @Test(timeout = 4000)
    public void test6772() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = Document.createShell("org.jsoupUselect.StructuralEvaluator=ImmediatePreviousSibling");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = document0.head();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("org.jsoupUselect.StructuralEvaluator=ImmediatePreviousSibling", element0, "org.jsoupUselect.StructuralEvaluator=ImmediatePreviousSibling", (ParseErrorList) null, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6873() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test6974() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = new Document("KASTcVoL#");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("KASTcVoL#", document0, "KASTcVoL#", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("KASTcVoL#", element0, "KASTcVoL#", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test7075() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.inListItemScope("A1DsI");
    }

    @Test(timeout = 4000)
    public void test7176() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test7177() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inScope("N4mU1. .");
    }

    @Test(timeout = 4000)
    public void test7278() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test7279() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("N4mU1. .", (Element) null, "N4mU1. .", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("N4mU1. .");
    }

    @Test(timeout = 4000)
    public void test7380() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("scipt", element0, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "select";
        stringArray0[1] = "select";
        stringArray0[2] = "select";
        stringArray0[3] = "scipt";
        boolean boolean0 = htmlTreeBuilder0.inScope("select", stringArray0);
    }

    @Test(timeout = 4000)
    public void test7481() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = new ArrayList<Element>();
        htmlTreeBuilder0.stack = arrayList0;
        htmlTreeBuilder0.inSelectScope((String) null);
    }

    @Test(timeout = 4000)
    public void test7582() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = new Document("yT7:WEnu^");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("yT7:WEnu^", document0, "yT7:WEnu^", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("yT7:WEnu^");
    }

    @Test(timeout = 4000)
    public void test7683() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("body", (Element) null, "body", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test7684() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("body", (Element) null, "body", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("body");
    }

    @Test(timeout = 4000)
    public void test7785() throws Throwable {
        Document document0 = new Document("l[[A,!?f*<.ZC$");
        ParseErrorList parseErrorList0 = new ParseErrorList(3581, 3581);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("h5", document0, "l[[A,!?f*<.ZC$", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.generateImpliedEndTags("html");
    }

    @Test(timeout = 4000)
    public void test7886() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("3.k~'Tx", document0, "", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insertStartTag("rp");
        htmlTreeBuilder0.generateImpliedEndTags("thead");
    }

    @Test(timeout = 4000)
    public void test7987() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = Document.createShell("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling", document0, "org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test8088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("scipt", element0, "ZkAY^V", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test8189() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        document0.toggleClass("object");
        Document document1 = new Document("object");
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("object", document1, "kD6{?$J", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document1);
        document1.nodeName();
    }

    @Test(timeout = 4000)
    public void test8290() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = Document.createShell("zj+M$Z[=xuyMQ4");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("zj+M$Z[=xuyMQ4", document0, "zj+M$Z[=xuyMQ4", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        document0.nodeName();
    }

    @Test(timeout = 4000)
    public void test8391() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("scipt", element0, "scipt", parseErrorList0, parseSettings0);
        Element element1 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element1);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test8492() throws Throwable {
        Element element0 = new Element("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", element0, "object", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test8593() throws Throwable {
        Document document0 = Document.createShell("{[[A,!?f*<.ZC$");
        ParseErrorList parseErrorList0 = new ParseErrorList(3581, 3581);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("h5", document0, "{[[A,!?f*<.ZC$", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test8694() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-3106));
        htmlTreeBuilder0.parseFragment("5", (Element) null, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test8795() throws Throwable {
        Document document0 = new Document("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("object", document0, "object", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.processStartTag("object");
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test8896() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("scipt");
        htmlTreeBuilder0.parseFragment("qt", element0, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(element0);
    }

    @Test(timeout = 4000)
    public void test8997() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = new Document("org.jsoup.nodes.DocumentType");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("org.jsoup.nodes.DocumentType", document0, "org.jsoup.nodes.DocumentType", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.getActiveFormattingElement("org.jsoup.nodes.DocumentType");
    }

    @Test(timeout = 4000)
    public void test9098() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("scipt", (Element) null, "scipt", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.getActiveFormattingElement("L+9Mq");
    }

    @Test(timeout = 4000)
    public void test9199() throws Throwable {
        Element element0 = new Element("object");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("object", element0, "object", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.getActiveFormattingElement("object");
    }
}
