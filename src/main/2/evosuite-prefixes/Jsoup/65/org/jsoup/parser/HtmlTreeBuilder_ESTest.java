/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 06:56:10 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("iu?e", (Element) null, "iu?e", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.inTableScope("iu?e");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Element element0 = new Element("button");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceOnStack(element0, element0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("table", attributes0);
        htmlTreeBuilder0.insertForm(token_StartTag1, true);
        String[] stringArray0 = new String[9];
        stringArray0[0] = "|NE`tr4_U-K";
        stringArray0[1] = "SelfClosingStartTag";
        stringArray0[2] = "table";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Element element0 = new Element("title");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("title", element0, "title", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.processEndTag("title");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.state();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        htmlTreeBuilder0.setPendingTableCharacters(list0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(false);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.push((Element) null);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        Token.Comment token_Comment0 = new Token.Comment();
        boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("iu?e");
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Document document0 = Document.createShell("table");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(54);
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("w", document0, "w", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("ua{Zk>jPKvwZDKYdu", attributes0);
        token_StartTag1.selfClosing = true;
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.hasParent();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("iframe");
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("iframe", element0, "iframe", parseErrorList0, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Element element0 = new Element("script");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("script", element0, "title", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insert(element0);
        htmlTreeBuilder0.insert((Token.Character) null);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Element element0 = new Element("noscript");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("noscript", element0, "noscript", (ParseErrorList) null, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("plaintext");
        htmlTreeBuilder0.parseFragment("plaintext", element0, "plaintext", (ParseErrorList) null, (ParseSettings) null);
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("script");
        FormElement formElement0 = new FormElement(tag0, "table", (Attributes) null);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("table", formElement0, "script", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("button");
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        element0.hasParent();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("table");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3);
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("table");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3);
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("ua{Zk>jPKvwZDKYdu", attributes0);
        token_StartTag1.selfClosing = true;
        htmlTreeBuilder0.insert(token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("table", attributes0);
        token_StartTag1.selfClosing = true;
        Element element1 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
        element1.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("center");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.initialiseParse(stringReader0, "center", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        token_StartTag0.nameAttr("center", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        formElement0.isBlock();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("rt", (Element) null, "rt", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("rt", (Element) null, "rt", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Attributes attributes0 = new Attributes();
        StringReader stringReader0 = new StringReader("H`nP{5@wo");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.initialiseParse(stringReader0, "td", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.nameAttr("device", attributes0);
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        htmlTreeBuilder0.insert(element0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("button");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("button", element0, "button", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToClose("button");
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        Element element0 = new Element("title");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("title", element0, "title", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insert(element0);
        boolean boolean0 = htmlTreeBuilder0.processEndTag("title");
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        Document document0 = new Document("title");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("title", document0, "title", (ParseErrorList) null, parseSettings0);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "title";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("figcaption", (Element) null, "figcaption", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("body");
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("butBon");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("butBon", element0, "butBon", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("butBon");
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("ILXmhVh*B", (Element) null, "ILXmhVh*B", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("H`nP{5@wo", (Element) null, "H`nP{5@wo", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("button");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("button", element0, "button", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        htmlTreeBuilder0.aboveOnStack(element1);
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("u*YNKmD-{ =9K(");
        htmlTreeBuilder0.parseFragment("u*YNKmD-{ =9K(", element0, "u*YNKmD-{ =9K(", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insertOnStackAfter(element0, element0);
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        Element element0 = new Element("title");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("head", element0, "M[;WkoJS=*9ArM", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insert(element0);
        htmlTreeBuilder0.insertOnStackAfter(element0, element0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test4648() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("X_Hl`]E^An2?MFRr9zp");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.initialiseParse(stringReader0, "X_Hl`]E^An2?MFRr9zp", parseErrorList0, (ParseSettings) null);
        Element element0 = new Element("X_Hl`]E^An2?MFRr9zp");
        htmlTreeBuilder0.replaceActiveFormattingElement(element0, element0);
    }

    @Test(timeout = 4000)
    public void test4749() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.replaceActiveFormattingElement(element0, element0);
        element0.hasParent();
    }

    @Test(timeout = 4000)
    public void test4850() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("#document");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.initialiseParse(stringReader0, "#document", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test4951() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("th");
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("th", element0, "th", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test5052() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("select");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment(";aG", element0, "select", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test5153() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("td");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("td", element0, "th", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test5254() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("tr");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("tr", element0, "tr", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("tr");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("tr", element0, "tr", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("tbody");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("tbody", element0, "tbody", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("thead");
        htmlTreeBuilder0.parseFragment("thead", element0, "thead", parseErrorList0, (ParseSettings) null);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5458() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("thead");
        htmlTreeBuilder0.parseFragment("thead", element0, "thead", parseErrorList0, (ParseSettings) null);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test5559() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("tfoot");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("Ty[aI+]\"'8MMTat&o`", element0, "tfoot", (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test5660() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("caption");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("caption", element0, "caption", (ParseErrorList) null, (ParseSettings) null);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test5761() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("colgroup");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Avafp", element0, "tr", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test5762() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("colgroup");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Avafp", element0, "tr", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test5863() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("head");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("head", element0, "head", (ParseErrorList) null, parseSettings0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5964() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("H`nP{5@wo", (Element) null, "H`nP{5@wo", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test6065() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("frameset");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("frameset", element0, "frameset", parseErrorList0, (ParseSettings) null);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test6066() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("frameset");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("frameset", element0, "frameset", parseErrorList0, (ParseSettings) null);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6167() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("html");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("butBon", element0, "html", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test6268() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insertStartTag("basefont");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test6369() throws Throwable {
        Document document0 = Document.createShell("RawtextEndTagOpen");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("RawtextEndTagOpen", document0, "RawtextEndTagOpen", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("RawtextEndTagOpen");
        htmlTreeBuilder0.inListItemScope("RawtextEndTagOpen");
    }

    @Test(timeout = 4000)
    public void test6470() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("table");
    }

    @Test(timeout = 4000)
    public void test6571() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("button");
        htmlTreeBuilder0.parseFragment("button", element0, "button", (ParseErrorList) null, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        boolean boolean0 = htmlTreeBuilder0.inButtonScope(":has(");
    }

    @Test(timeout = 4000)
    public void test6672() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("H`nP{5@wo", (Element) null, "H`nP{5@wo", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test6673() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("H`nP{5@wo", (Element) null, "H`nP{5@wo", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("H`nP{5@wo");
    }

    @Test(timeout = 4000)
    public void test6774() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.popStackToBefore("table");
        htmlTreeBuilder0.inSelectScope("y>bf~)");
    }

    @Test(timeout = 4000)
    public void test6875() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6876() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("Ujable");
    }

    @Test(timeout = 4000)
    public void test6978() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("table");
    }

    @Test(timeout = 4000)
    public void test7079() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("\";1sIFl)");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(stringReader0, "center", (ParseErrorList) null, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("option", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
        htmlTreeBuilder0.inSelectScope("\";1sIFl)");
    }

    @Test(timeout = 4000)
    public void test7180() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("H`nP{5@wo", (Element) null, "H`nP{5@wo", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.generateImpliedEndTags("table");
    }

    @Test(timeout = 4000)
    public void test7281() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("center");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(stringReader0, "center", (ParseErrorList) null, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("option", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
        htmlTreeBuilder0.generateImpliedEndTags("3SG7s!Jl6\"`*lTnV");
    }

    @Test(timeout = 4000)
    public void test7382() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment(":last-of-type", (Element) null, ":last-of-type", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test7483() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("table", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, true);
        htmlTreeBuilder0.pushActiveFormattingElements(formElement0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test7584() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("th");
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("th", element0, "th", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test7685() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Document document0 = htmlTreeBuilder0.doc;
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test7786() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        element0.hasParent();
    }

    @Test(timeout = 4000)
    public void test7887() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("UjiA}ATYt<A>=2/O", (Element) null, "iE'[R}", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test7988() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("Pp?%.m$s M");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(80);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(stringReader0, "Pp?%.m$s M", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        Document document0 = htmlTreeBuilder0.getDocument();
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test8089() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("$nQ8rk\"pQq9Nq");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(36);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse(stringReader0, "base", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test8190() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("$nQ8rk\"pQq9Nq");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(36);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test8291() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("           ");
        htmlTreeBuilder0.initialiseParse(stringReader0, "y(7Yy|-@fBds]>P", (ParseErrorList) null, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test8392() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("table", element0, "#}vi~RtX", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("table");
        element1.isBlock();
    }

    @Test(timeout = 4000)
    public void test8493() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("hr");
        htmlTreeBuilder0.parseFragment("hr", element0, "hr", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("Ff@LLUI'4M");
    }

    @Test(timeout = 4000)
    public void test8594() throws Throwable {
        Element element0 = new Element("m[57");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("m[57", element0, "li", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("_x");
    }

    @Test(timeout = 4000)
    public void test8695() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insert(element0);
        element0.unwrap();
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.siblingIndex();
    }
}
