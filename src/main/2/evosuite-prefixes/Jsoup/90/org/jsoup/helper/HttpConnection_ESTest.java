/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 09:04:33 GMT 2024
 */
package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.Proxy;
import java.net.URL;
import java.net.UnknownServiceException;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.net.ssl.SSLSocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HttpConnection_ESTest extends HttpConnection_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.followRedirects(true);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.parse();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.sslSocketFactory((SSLSocketFactory) null);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
        httpConnection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
        httpConnection_Request0.followRedirects();
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
        httpConnection_Request0.ignoreHttpErrors();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
    }

    @Test(timeout = 4000)
    public void test038() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.ignoreContentType();
        httpConnection_Request0.postDataCharset();
    }

    @Test(timeout = 4000)
    public void test049() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.parser((Parser) null);
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.ignoreContentType(true);
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Proxy proxy0 = Proxy.NO_PROXY;
        Connection connection0 = httpConnection0.proxy(proxy0);
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
        httpConnection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test0713() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
        httpConnection_Request0.postDataCharset();
    }

    @Test(timeout = 4000)
    public void test0714() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
        httpConnection_Request0.ignoreContentType();
    }

    @Test(timeout = 4000)
    public void test0715() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test0716() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
    }

    @Test(timeout = 4000)
    public void test0717() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        boolean boolean0 = httpConnection_Request0.followRedirects();
        httpConnection_Request0.ignoreHttpErrors();
    }

    @Test(timeout = 4000)
    public void test0818() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.removeCookie("");
    }

    @Test(timeout = 4000)
    public void test0919() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Response connection_Response0 = httpConnection0.response();
        Connection connection0 = httpConnection0.response(connection_Response0);
    }

    @Test(timeout = 4000)
    public void test1020() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.cookie("Content-Encoding", "application/x-www-form-urlencoded");
    }

    @Test(timeout = 4000)
    public void test1121() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.get();
    }

    @Test(timeout = 4000)
    public void test1222() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.maxBodySize(2854);
    }

    @Test(timeout = 4000)
    public void test1323() throws Throwable {
        URL uRL0 = MockURL.getHttpExample();
        Connection connection0 = HttpConnection.connect(uRL0);
    }

    @Test(timeout = 4000)
    public void test1424() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.proxy("3iti0:!", 762);
    }

    @Test(timeout = 4000)
    public void test1525() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.userAgent("multipart/form-data");
    }

    @Test(timeout = 4000)
    public void test1626() throws Throwable {
        HttpConnection.connect("multipart/form-data");
    }

    @Test(timeout = 4000)
    public void test1727() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.ignoreHttpErrors(true);
    }

    @Test(timeout = 4000)
    public void test1828() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.requestBody("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
    }

    @Test(timeout = 4000)
    public void test1929() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.postDataCharset("Content-Encoding");
    }

    @Test(timeout = 4000)
    public void test2030() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.post();
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.timeout((-1788));
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.data("application/x-www-form-urlencoded", "multipart/form-data");
    }

    @Test(timeout = 4000)
    public void test2333() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Method connection_Method0 = Connection.Method.POST;
        Connection connection0 = httpConnection0.method(connection_Method0);
    }

    @Test(timeout = 4000)
    public void test2434() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.ignoreContentType();
    }

    @Test(timeout = 4000)
    public void test2435() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.postDataCharset();
    }

    @Test(timeout = 4000)
    public void test2436() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test2437() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.ignoreHttpErrors();
    }

    @Test(timeout = 4000)
    public void test2438() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test2439() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection.Request connection_Request0 = httpConnection0.request();
        httpConnection0.request(connection_Request0);
        connection_Request0.followRedirects();
    }

    @Test(timeout = 4000)
    public void test2540() throws Throwable {
        URL uRL0 = MockURL.getHttpExample();
        URL uRL1 = HttpConnection.encodeUrl(uRL0);
    }

    @Test(timeout = 4000)
    public void test2641() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.header("iq,;]MA\"}p5Oz\"S*", (String) null);
    }

    @Test(timeout = 4000)
    public void test2742() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.data("u.{QDV6g qUl2d", "3itq0:!", (InputStream) null, "3itq0:!");
    }

    @Test(timeout = 4000)
    public void test2843() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        HttpConnection.Response httpConnection_Response1 = httpConnection_Response0.charset("Content-Encoding");
        httpConnection_Response1.body();
    }

    @Test(timeout = 4000)
    public void test2944() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.bufferUp();
    }

    @Test(timeout = 4000)
    public void test3045() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.bodyStream();
    }

    @Test(timeout = 4000)
    public void test3146() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        String string0 = httpConnection_Response0.statusMessage();
    }

    @Test(timeout = 4000)
    public void test3247() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.bodyAsBytes();
    }

    @Test(timeout = 4000)
    public void test3348() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        String string0 = httpConnection_Response0.charset();
    }

    @Test(timeout = 4000)
    public void test3449() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        int int0 = httpConnection_Response0.statusCode();
    }

    @Test(timeout = 4000)
    public void test3550() throws Throwable {
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("kv%^C@fty^", "Content-Encoding", (InputStream) sequenceInputStream0);
        InputStream inputStream0 = httpConnection_KeyVal0.inputStream();
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("Content-Type", "Content-Encoding");
        httpConnection_KeyVal0.contentType();
        httpConnection_KeyVal0.value();
    }

    @Test(timeout = 4000)
    public void test3652() throws Throwable {
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("Content-Type", "Content-Encoding");
        httpConnection_KeyVal0.contentType();
        httpConnection_KeyVal0.key();
    }

    @Test(timeout = 4000)
    public void test3753() throws Throwable {
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("CyVw$>G*(ELs", "CyVw$>G*(ELs");
        String string0 = httpConnection_KeyVal0.toString();
    }

    @Test(timeout = 4000)
    public void test3854() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection_Response0.cookie("Content-Encoding", "application/x-www-form-urlencoded");
        Map<String, String> map0 = httpConnection_Response0.cookies;
        Connection connection0 = httpConnection0.data(map0);
    }

    @Test(timeout = 4000)
    public void test3955() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        String[] stringArray0 = new String[1];
        httpConnection0.data(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4056() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        String[] stringArray0 = new String[0];
        Connection connection0 = httpConnection0.data(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4157() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        String[] stringArray0 = new String[2];
        httpConnection0.data(stringArray0);
    }

    @Test(timeout = 4000)
    public void test4258() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
        Connection connection0 = httpConnection0.data((Collection<Connection.KeyVal>) linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test4359() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
        linkedHashSet0.add((Connection.KeyVal) null);
        httpConnection0.data((Collection<Connection.KeyVal>) linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test4460() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        PipedInputStream pipedInputStream0 = new PipedInputStream(28);
        httpConnection0.data("l#mC^?~.o:u", "l#mC^?~.o:u", (InputStream) pipedInputStream0);
        Connection.KeyVal connection_KeyVal0 = httpConnection0.data("3!");
    }

    @Test(timeout = 4000)
    public void test4561() throws Throwable {
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.data("Y{", "Y{", (InputStream) sequenceInputStream0);
        Connection.KeyVal connection_KeyVal0 = httpConnection0.data("Y{");
    }

    @Test(timeout = 4000)
    public void test4562() throws Throwable {
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.data("Y{", "Y{", (InputStream) sequenceInputStream0);
        Connection.KeyVal connection_KeyVal0 = httpConnection0.data("Y{");
        connection_KeyVal0.value();
    }

    @Test(timeout = 4000)
    public void test4663() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        hashMap0.put("zkk\"\"v!j.#09xhx<w", "Content-Encoding");
        Connection connection0 = httpConnection0.headers(hashMap0);
    }

    @Test(timeout = 4000)
    public void test4764() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        HashMap<String, String> hashMap0 = new HashMap<String, String>();
        hashMap0.put("Content-Type", "multipart/form-data");
        Connection connection0 = httpConnection0.cookies(hashMap0);
    }

    @Test(timeout = 4000)
    public void test4865() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
        LinkedList<String> linkedList0 = new LinkedList<String>();
        linkedList0.offerFirst("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
        linkedList0.add((String) null);
        hashMap0.put("set-cookie", linkedList0);
        httpConnection_Response0.processResponseHeaders(hashMap0);
        httpConnection_Response0.charset();
    }

    @Test(timeout = 4000)
    public void test4966() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.cookie("Content-Encoding", "Content-Type");
        HttpConnection.Response.execute(httpConnection_Request0, httpConnection_Response0);
    }

    @Test(timeout = 4000)
    public void test5067() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        httpConnection_Request0.timeout(3);
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test5168() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        httpConnection0.maxBodySize((-1601));
    }

    @Test(timeout = 4000)
    public void test5269() throws Throwable {
        HttpConnection httpConnection0 = new HttpConnection();
        Connection connection0 = httpConnection0.postDataCharset("ISO-8859-1");
    }

    @Test(timeout = 4000)
    public void test5370() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getFileExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
    }

    @Test(timeout = 4000)
    public void test5471() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("({,0", "({,0");
        httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        Connection.Method connection_Method0 = Connection.Method.PATCH;
        httpConnection_Request0.method(connection_Method0);
        HttpConnection.Response.execute(httpConnection_Request0);
    }

    @Test(timeout = 4000)
    public void test5572() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("Xj*URN3", "Xj*URN3", (InputStream) pushbackInputStream0);
        httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
        Connection.Method connection_Method0 = Connection.Method.PATCH;
        httpConnection_Request0.method(connection_Method0);
        Connection.Request connection_Request0 = httpConnection_Request0.requestBody("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        HttpConnection.Response.execute(connection_Request0, httpConnection_Response0);
    }

    @Test(timeout = 4000)
    public void test5673() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        Connection.Method connection_Method0 = Connection.Method.PUT;
        HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request) httpConnection_Request0.method(connection_Method0);
        HttpConnection.Response.execute(httpConnection_Request1);
    }

    @Test(timeout = 4000)
    public void test5774() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        Connection.Request connection_Request0 = httpConnection_Request0.ignoreHttpErrors(true);
        HttpConnection.Response.execute(connection_Request0);
    }

    @Test(timeout = 4000)
    public void test5875() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bM)A2s<f\"s KPx0g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        Connection.Method connection_Method0 = Connection.Method.HEAD;
        httpConnection_Request0.method = connection_Method0;
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test5876() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bM)A2s<f\"s KPx0g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        Connection.Method connection_Method0 = Connection.Method.HEAD;
        httpConnection_Request0.method = connection_Method0;
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Request0.postDataCharset();
    }

    @Test(timeout = 4000)
    public void test5877() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bM)A2s<f\"s KPx0g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        Connection.Method connection_Method0 = Connection.Method.HEAD;
        httpConnection_Request0.method = connection_Method0;
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Request0.ignoreContentType();
    }

    @Test(timeout = 4000)
    public void test5878() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bM)A2s<f\"s KPx0g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        Connection.Method connection_Method0 = Connection.Method.HEAD;
        httpConnection_Request0.method = connection_Method0;
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Request0.followRedirects();
    }

    @Test(timeout = 4000)
    public void test5879() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bM)A2s<f\"s KPx0g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        Connection.Method connection_Method0 = Connection.Method.HEAD;
        httpConnection_Request0.method = connection_Method0;
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test5980() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.parse();
        httpConnection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test5981() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.parse();
        httpConnection_Request0.postDataCharset();
    }

    @Test(timeout = 4000)
    public void test5982() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.parse();
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test6083() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.body();
        httpConnection_Request0.timeout();
    }

    @Test(timeout = 4000)
    public void test6084() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.body();
        httpConnection_Request0.ignoreHttpErrors();
    }

    @Test(timeout = 4000)
    public void test6085() throws Throwable {
        EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
        NetworkHandling.createRemoteTextFile(evoSuiteURL0, "]bA2s<VJf'\"K#Px0^g");
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute(httpConnection_Request0);
        httpConnection_Response0.body();
        httpConnection_Response0.body();
        httpConnection_Request0.maxBodySize();
    }

    @Test(timeout = 4000)
    public void test6186() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy("Content-Encoding", 109);
        HttpConnection.Response.execute(httpConnection_Request1);
    }

    @Test(timeout = 4000)
    public void test6287() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
        LinkedList<String> linkedList0 = new LinkedList<String>();
        hashMap0.put((String) null, linkedList0);
        httpConnection_Response0.processResponseHeaders(hashMap0);
        httpConnection_Response0.contentType();
    }

    @Test(timeout = 4000)
    public void test6388() throws Throwable {
        HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
        LinkedList<String> linkedList0 = new LinkedList<String>();
        hashMap0.put("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36", linkedList0);
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        httpConnection_Response0.processResponseHeaders(hashMap0);
        httpConnection_Response0.contentType();
    }

    @Test(timeout = 4000)
    public void test6489() throws Throwable {
        HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
        HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
        LinkedList<String> linkedList0 = new LinkedList<String>();
        linkedList0.add("");
        hashMap0.put("set-cookie", linkedList0);
        httpConnection_Response0.processResponseHeaders(hashMap0);
        hashMap0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test6590() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("Xj*URN3", "Xj*URN3", (InputStream) pushbackInputStream0);
        httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
        Connection.Method connection_Method0 = Connection.Method.PUT;
        httpConnection_Request0.method(connection_Method0);
        HttpConnection.Response.execute(httpConnection_Request0, (HttpConnection.Response) null);
    }

    @Test(timeout = 4000)
    public void test6691() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request) httpConnection_Request0.cookie("Content-Type", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
        httpConnection_Request1.cookie("[D>_", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
        HttpConnection.Response.execute(httpConnection_Request1);
    }

    @Test(timeout = 4000)
    public void test6792() throws Throwable {
        HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
        URL uRL0 = MockURL.getHttpExample();
        httpConnection_Request0.url = uRL0;
        HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("application/x-www-form-urlencoded", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36");
        HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
        httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
        HttpConnection.Response.execute(httpConnection_Request0);
    }
}
