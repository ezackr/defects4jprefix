/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:40:53 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put(" [}.+D[T", " [}.+D[T");
        attributes1.addAll(attributes0);
        attributes0.remove(" [}.+D[T");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.hashCode();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("$VuALUES", "$VuALUES");
        Attribute attribute0 = new Attribute("$VuALUES", "$VuALUES");
        attribute0.setKey("e410t");
        Attributes attributes2 = attributes1.put(attribute0);
        Attributes attributes3 = attributes0.clone();
        attributes0.put("org.jsoup.nodes.Nde", "$VuALUES");
        attributes3.addAll(attributes2);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("$VuALUES", "$VuALUES");
        Attribute attribute0 = new Attribute("$VuALUES", "$VuALUES");
        attribute0.setKey("e410t");
        Attributes attributes2 = attributes1.put(attribute0);
        Attributes attributes3 = attributes0.clone();
        attributes0.put("org.jsoup.nodes.Nde", "$VuALUES");
        attributes3.addAll(attributes2);
        attributes0.equals((Object) attributes3);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("nz", "nz");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("nz", "nz");
        attributes1.removeIgnoreCase("nz");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("$VuALUES", "$VuALUES");
        attributes1.put("},Z7zgyqBZ2UR^0'", true);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("u", "u");
        String string0 = attributes1.get("u");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test0711() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("u", "u");
        String string0 = attributes1.get("u");
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        String string0 = Attributes.checkNotNull((String) null);
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        Attributes attributes0 = new Attributes();
        String string0 = attributes0.get("sz21xin");
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("$VALUES", "$VALUES");
        attributes0.getIgnoreCase("$VALUES");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        Attributes attributes0 = new Attributes();
        String string0 = attributes0.getIgnoreCase("");
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("", "");
        attributes1.putIgnoreCase("", "");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("BaseURI must not be null", "BaseURI must not be null");
        attributes1.normalize();
        attributes1.put("BaseURI must not be null", true);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("", false);
        attributes1.size();
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.removeIgnoreCase("$VALUES");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.hasKey("7/ZF");
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("", true);
        boolean boolean0 = attributes1.hasKey("");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("", true);
        boolean boolean0 = attributes1.hasKey("");
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.hasKeyIgnoreCase("html");
    }

    @Test(timeout = 4000)
    public void test1924() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("1D,2$80wZmRb9", "1D,2$80wZmRb9");
        Attributes attributes1 = attributes0.put(attribute0);
        boolean boolean0 = attributes1.hasKeyIgnoreCase("1D,2$80wZmRb9");
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("1D,2$80wZmRb9", "1D,2$80wZmRb9");
        Attributes attributes1 = attributes0.put(attribute0);
        boolean boolean0 = attributes1.hasKeyIgnoreCase("1D,2$80wZmRb9");
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.addAll(attributes0);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put(":>G6>-8!&pDQ)/p9z-", true);
        attributes0.asList();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2228() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.putIgnoreCase("org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes");
        attributes0.asList();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2329() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("$VALUES", true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        CharsetEncoder charsetEncoder0 = document_OutputSettings0.prepareEncoder();
        OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charsetEncoder0);
        attributes0.html((Appendable) outputStreamWriter0, document_OutputSettings0);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2430() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("$VALUES", true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
        document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
        CharsetEncoder charsetEncoder0 = document_OutputSettings0.prepareEncoder();
        OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charsetEncoder0);
        attributes0.html((Appendable) outputStreamWriter0, document_OutputSettings0);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2531() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("$oshade", "$oshade");
        String string0 = attributes1.toString();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("$oshade", "$oshade");
        String string0 = attributes1.toString();
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("4:/@QWwA$}Nm9U`k0H", "video");
        String string0 = attributes1.html();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2634() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("4:/@QWwA$}Nm9U`k0H", "video");
        String string0 = attributes1.html();
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("noshade", "noshade");
        String string0 = attributes1.toString();
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test2736() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("noshade", "noshade");
        String string0 = attributes1.toString();
    }

    @Test(timeout = 4000)
    public void test2837() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.equals(attributes0);
    }

    @Test(timeout = 4000)
    public void test2938() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test3039() throws Throwable {
        Attributes attributes0 = new Attributes();
        Object object0 = new Object();
        boolean boolean0 = attributes0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test3140() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes0.putIgnoreCase("Ew7W&XNdxvo", "Ew7W&XNdxvo");
        boolean boolean0 = attributes0.equals(attributes1);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test3141() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes0.putIgnoreCase("Ew7W&XNdxvo", "Ew7W&XNdxvo");
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test3242() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("7/ZF", "7/ZF");
        Attributes attributes2 = attributes1.clone();
        boolean boolean0 = attributes0.equals(attributes2);
        attributes0.size();
    }

    @Test(timeout = 4000)
    public void test3243() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("7/ZF", "7/ZF");
        Attributes attributes2 = attributes1.clone();
        boolean boolean0 = attributes0.equals(attributes2);
    }
}
