/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 03:43:32 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.NoSuchElementException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.Tag;
import org.jsoup.select.NodeVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Element_ESTest extends Element_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Document.createShell("J@J");
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        Document document0 = new Document("s");
        document0.before((Node) null);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Document document0 = new Document("id");
        document0.toggleClass("id");
        document0.getElementById("id");
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        Document document0 = new Document("Act%H\"BQ");
        Element.preserveWhitespace(document0);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        Document document0 = new Document("id");
        LinkedHashSet<DocumentType> linkedHashSet0 = new LinkedHashSet<DocumentType>();
        document0.insertChildren(417, linkedHashSet0);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        Document document0 = new Document(" ");
        document0.getElementsByIndexGreaterThan((-2802));
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        Document document0 = new Document("id");
        document0.addClass("id");
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        Document document0 = new Document("id");
        document0.getElementsByAttributeValueMatching("id", "textarea");
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        Document document0 = new Document("id");
        document0.siblingElements();
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        Document document0 = new Document("id");
        document0.elementSiblingIndex();
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        Document document0 = new Document("k^dj*[_,@*Q");
        LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
        document0.insertChildren(0, linkedHashSet0);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        Document document0 = new Document("class");
        document0.getElementsByTag("class");
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.val("String input must not be null");
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        Document document0 = new Document("(a");
        Element element0 = document0.prependElement("(a");
        element0.getElementsByAttributeValueContaining("(a", "(a");
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        Document document0 = new Document("k@0#");
        document0.prepend("k@0#");
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        Document document0 = new Document("org.jsoup.nodes.Node$OuterHtmlVisitor");
        document0.wrap("org.jsoup.nodes.Node$OuterHtmlVisitor");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        Document document0 = new Document("i0w");
        Element element0 = document0.prependElement("i0w");
        element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.normalise();
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.getElementsByAttributeValueNot("2,cA2B9zjX0BUoiT", "2,cA2B9zjX0BUoiT");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        Document document0 = new Document("k8");
        Element element0 = document0.appendText("k8");
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        Document document0 = new Document("(a");
        document0.after((Node) document0);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        Document document0 = new Document("br");
        Element element0 = document0.tagName("br");
        document0.prependChild(element0);
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        Document document0 = new Document("nullCcaL");
        Document document1 = document0.clone();
        document1.getElementsContainingText("nullCcaL");
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        Document document0 = new Document("</");
        document0.getElementsByIndexLessThan(3055);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        Document document0 = new Document("xd");
        document0.prependChild(document0);
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        Document document0 = new Document("xd");
        document0.prependElement("xd");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        Document document0 = new Document("id");
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.getElementsMatchingOwnText("String input must not be null");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.data();
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        Document document0 = new Document("Act\"BQ");
        document0.val();
        document0.getElementsContainingText("Act\"BQ");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        Document document0 = new Document("id");
        document0.prependElement("id");
        document0.getElementsByAttributeValue("id", "id");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        Document document0 = new Document("q_Yvc'iz\"^jb[c/#\"");
        document0.getElementById("q_Yvc'iz\"^jb[c/#\"");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.getElementsByAttributeStarting("id");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        Document document0 = new Document("k@0#");
        document0.getElementsByAttributeValueEnding("k@0#", "k@0#");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.getElementsByClass("</");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        Document document0 = new Document("2,;A2B9zjX0BUoiT");
        Element element0 = document0.createElement("2,;A2B9zjX0BUoiT");
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        Tag tag0 = Tag.valueOf("h{.Z~U<UGFTVM xv");
        Element element0 = new Element(tag0, "h{.Z~U<UGFTVM xv");
        element0.text("h{.Z~U<UGFTVM xv");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        Document document0 = new Document("2,;A2B9zjX0BUoiT");
        document0.toString();
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        Document document0 = new Document("textaj&Bxrea");
        document0.prependElement("textaj&Bxrea");
        document0.data();
        document0.getElementsByAttribute("textaj&Bxrea");
        Element.preserveWhitespace(document0);
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        Document document0 = new Document("k^dj*[_,@*Q");
        LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
        document0.insertChildren((-22), linkedHashSet0);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        Document document0 = new Document("x e9i");
        LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
        document0.insertChildren((-1), linkedHashSet0);
        document0.getElementById("x e9i");
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.select("String input must not be null");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        Document document0 = new Document("/u>G,P-");
        document0.getElementsMatchingText("/u>G,P-");
        document0.getElementById("/u>G,P-");
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        Document document0 = new Document("id");
        document0.appendText("id");
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        Document document0 = new Document("id");
        document0.prependElement("id");
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        Document document0 = new Document("7");
        document0.previousElementSibling();
        document0.getElementById("7");
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        Document document0 = new Document("");
        document0.prependElement("A;5RAXQ:kwu6ymZE");
        document0.hasClass("");
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        Document document0 = new Document("");
        document0.toggleClass("");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        Document document0 = new Document("id");
        document0.getElementsContainingText("id");
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.getElementsByAttribute("2,cA2B9zjX0BUoiT");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        Document document0 = new Document("z}RMT6}MpX'");
        document0.removeClass("z}RMT6}MpX'");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.previousElementSibling();
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.tagName("s");
        Element element1 = document0.prependChild(element0);
        element1.getElementsByClass("s");
        // Undeclared exception!
        document0.toString();
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        Document document0 = new Document("id");
        document0.hasText();
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        Document document0 = new Document("Yk80");
        document0.dataset();
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        Document document0 = new Document("s");
        document0.before("s");
        document0.prependChild(document0);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        Document document0 = new Document("`gh2q|/\"D<,Dch");
        document0.prependText("br");
        document0.getElementById("`gh2q|/\"D<,Dch");
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        Document document0 = new Document("Ywah6\u0005miVQp=aY-");
        document0.getElementsByAttributeValueStarting("Ywah6\u0005miVQp=aY-", "Ywah6\u0005miVQp=aY-");
        document0.getElementsContainingText("Ywah6\u0005miVQp=aY-");
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.siblingElements();
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        Document document0 = new Document("xd");
        Element element0 = document0.appendText("xd");
        element0.children();
        document0.hasText();
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        String string0 = "+q\"?mK7&";
        Document document0 = new Document("+q\"?mK7&");
        document0.after("+q\"?mK7&");
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        Document document0 = new Document("Ywah6\u0005miVQp=aY-");
        document0.textNodes();
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        Document document0 = new Document("nullCcaL");
        Element element0 = document0.appendText("nullCcaL");
        element0.textNodes();
        element0.getElementsContainingText("nullCcaL");
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        Document document0 = new Document("i0w");
        Element element0 = document0.prependElement("i0w");
        document0.textNodes();
        Element.preserveWhitespace(element0);
        element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        Document document0 = new Document("String input must not be null");
        document0.dataNodes();
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        Document document0 = new Document("nullChar");
        Element element0 = document0.appendText("nullChar");
        element0.dataNodes();
        element0.getElementsContainingText("nullChar");
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        Document document0 = new Document("org.jsoup.nodes.lement$1");
        Element element0 = document0.appendText("org.jsoup.nodes.lement$1");
        element0.data();
        document0.getElementsContainingOwnText("org.jsoup.nodes.lement$1");
        element0.id();
        document0.getElementById("");
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        Document document0 = new Document("dat:f4is1");
        Tag.valueOf("dat:f4is1");
        TextNode textNode0 = new TextNode("h3", "h3");
        Attributes attributes0 = textNode0.attributes();
        Attributes attributes1 = attributes0.clone();
        attributes1.put("58Z/gY{cI%+c\"YR) j", "_A:6A$5}%sq");
        Document document1 = new Document("'R`s>h@");
        DataNode dataNode0 = DataNode.createFromEncoded("", "G");
        document1.appendChild(dataNode0);
        document0.data();
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document_OutputSettings0.clone();
        Document.OutputSettings document_OutputSettings1 = new Document.OutputSettings();
        document1.tagName("Pattern syntax error: ");
        document1.dataNodes();
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        Document document0 = new Document("id");
        document0.prependElement("id");
        document0.toString();
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        Document document0 = new Document("id");
        document0.appendText("id");
        document0.hasText();
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        Document document0 = new Document("id");
        document0.prependElement("id");
        document0.hasText();
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        Document document0 = new Document("org.jsoup.parser.Tokeniser");
        document0.val("org.jsoup.parser.Tokeniser");
        Tag.valueOf("org.jsoup.parser.Tokeniser");
        DataNode dataNode0 = DataNode.createFromEncoded("em", "em");
        document0.appendChild(dataNode0);
        document0.data();
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document_OutputSettings0.clone();
        document_OutputSettings0.outline(false);
        Document document1 = new Document("org.jsoup.parser.Tokeniser");
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        Document document0 = new Document("id");
        DataNode dataNode0 = DataNode.createFromEncoded("id", "");
        document0.appendChild(dataNode0);
        document0.prependElement("id");
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        Document document0 = new Document("InHeadNoscript");
        Element element0 = document0.prependElement("InHeadNoscript");
        Element.preserveWhitespace(element0);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        Document document0 = new Document("xd");
        document0.appendText("xd");
        document0.getElementsContainingText("xd");
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        Document document0 = new Document("class");
        document0.append("class");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        Document document0 = new Document("i0w");
        Element element0 = document0.prependElement("i0w");
        Element element1 = element0.append("i0w");
        Element.preserveWhitespace(element1);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        Document document0 = new Document("s");
        document0.html("s");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.prependChild(document0);
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        Element element0 = document0.createElement("2,cA2B9zjX0BUoiT");
        element0.prependChild(document0);
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        Document document0 = new Document("org.jsoup.nodes.Element");
        Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
        Element element0 = document0.appendChild(formElement0);
        formElement0.prepend("org.jsoup.nodes.Element");
        element0.hasText();
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        Document document0 = new Document("58z/gy{`i%+c\"yr) j");
        Element element0 = document0.createElement("58z/gy{`i%+c\"yr) j");
        document0.parentNode = (Node) element0;
        document0.equals(element0);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        Document document0 = new Document("i^");
        document0.getAllElements();
        document0.getElementsContainingText("i^");
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        Document document0 = new Document("class");
        document0.child(1867);
        document0.hashCode();
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.elementSiblingIndex();
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.getElementsByIndexEquals(594);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        element0.firstElementSibling();
        document0.getElementsContainingOwnText("id");
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        Element.preserveWhitespace((Node) null);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        Document document0 = new Document("2,cA2B9zjX0BUoiT");
        document0.previousSibling();
        document0.id();
        Element element0 = document0.createElement("2,cA2B9zjX0BUoiT");
        element0.setParentNode(document0);
        document0.hashCode();
        element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        Document document0 = new Document("tag name must not be empty.");
        document0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        TextNode textNode0 = new TextNode("form", "form");
        Element.preserveWhitespace(textNode0);
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.appendElement("s");
        Element element1 = document0.appendText("s");
        document0.appendChild(element1);
        element0.siblingElements();
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        Document document0 = new Document("class");
        Element element0 = document0.prependElement("class");
        element0.lastElementSibling();
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        Document document0 = new Document("org.jsoup.nodes.Element");
        Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
        Element element0 = document0.appendChild(formElement0);
        formElement0.before((Node) element0);
        formElement0.nextElementSibling();
        element0.hashCode();
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        Tag tag0 = Tag.valueOf("hidden");
        FormElement formElement0 = new FormElement(tag0, ".%s", attributes0);
        document0.appendChild(formElement0);
        document0.data();
        document0.getElementsByAttributeValueNot("6.^e~+cg3[c*:]fz", ".%s");
        element0.firstElementSibling();
        Element element1 = element0.val("m[)~yrdvvqm-%1o");
        element1.parentNode = (Node) document0;
        element1.parents();
        formElement0.lastElementSibling();
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        Document document0 = new Document("id");
        document0.prependElement("id");
        Tag tag0 = Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        document0.toString();
        Tag.valueOf("id");
        Attributes attributes1 = new Attributes();
        attributes1.get("<id></id>");
        FormElement formElement0 = new FormElement(tag0, "id", attributes0);
        FormElement formElement1 = formElement0.addElement(document0);
        formElement1.val();
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        Document document0 = new Document("id");
        Element element0 = document0.prependElement("id");
        Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        Tag tag0 = Tag.valueOf("hidden");
        FormElement formElement0 = new FormElement(tag0, ".%s", attributes0);
        Tag.valueOf("textarea");
        Element element1 = document0.appendChild(formElement0);
        document0.data();
        NodeVisitor nodeVisitor0 = mock(NodeVisitor.class, new ViolatedAssumptionAnswer());
        formElement0.traverse(nodeVisitor0);
        element1.toString();
        element0.firstElementSibling();
        formElement0.previousElementSibling();
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        Document document0 = new Document("kFJE_rCQ");
        Element element0 = document0.prependElement("kFJE_rCQ");
        Element.preserveWhitespace(element0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
        element0.outerHtmlTail((StringBuilder) null, 6412, document_OutputSettings1);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        Document document0 = new Document("dat:f4is1");
        Tag.valueOf("dat:f4is1");
        TextNode textNode0 = new TextNode("dat:f4is1", "dat:f4is1");
        Attributes attributes0 = textNode0.attributes();
        attributes0.put("58Z/gY{cI%+c\"YR) j", "dat:f4is1");
        Attributes attributes1 = new Attributes();
        Tag.valueOf("-jM%'");
        Tag.valueOf("58Z/gY{cI%+c\"YR) j");
        Comment comment0 = new Comment("hidden", "-jM%'");
        Element element0 = document0.appendChild(comment0);
        document0.data();
        document0.getElementsContainingOwnText("CY )AlG ^");
        document0.siblingElements();
        element0.hasText();
        element0.id();
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        Document document0 = new Document("br");
        document0.prependElement("br");
        document0.toString();
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        Document document0 = new Document("textarea");
        Element element0 = document0.prependElement("textarea");
        Element.preserveWhitespace(element0);
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        Document document0 = new Document("InHeadNoscript");
        Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
        Document document1 = document0.quirksMode(document_QuirksMode0);
        document1.appendText("");
        Document document2 = document1.clone();
        document2.getElementsContainingOwnText("InHeadNoscript");
        document1.hasText();
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        Document document0 = new Document("id");
        Comment comment0 = new Comment("id", "id");
        document0.appendChild(comment0);
        document0.getElementsContainingText("id");
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        String string0 = "nullChar";
        Document document0 = new Document("nullChar");
        document0.tagName("nullChar");
        Element element0 = document0.prependElement("nullChar");
        element0.append("nullChar");
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.prependElement("s");
        Element element1 = element0.prependChild(document0);
        element1.toString();
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.createElement("s");
        element0.prependChild(document0);
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        Document document0 = new Document("s");
        document0.prependElement("s");
        Document document1 = document0.clone();
        Element element0 = document1.prependChild(document0);
        element0.toString();
        Element.preserveWhitespace(element0);
        document0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        Document document0 = new Document("'Tr$,^?=2Ayx^:Av4+Z");
        Element element0 = document0.appendText("'Tr$,^?=2Ayx^:Av4+Z");
        element0.appendChild(document0);
        element0.getElementsContainingText("'Tr$,^?=2Ayx^:Av4+Z");
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        Tag tag0 = Tag.valueOf("textarea");
        Element element0 = new Element(tag0, "s");
        element0.val("textarea");
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        Document document0 = new Document("s");
        document0.appendElement("s");
        Element element0 = document0.appendText("s");
        document0.appendChild(element0);
        element0.getElementsContainingText("s");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.appendElement("s");
        Document document1 = (Document) document0.appendText("s");
        document1.appendChild(element0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
        Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.indentAmount(778);
        Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.clone();
        Document document2 = document1.outputSettings(document_OutputSettings3);
        document2.toString();
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        Document document0 = new Document("br");
        document0.prependElement("br");
        document0.getElementsContainingOwnText("br");
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        Document document0 = new Document("Y3SGn");
        Element element0 = document0.appendElement("br");
        document0.appendText("s+");
        Element element1 = document0.appendChild(element0);
        element1.getElementsContainingText("br");
        document0.getElementsContainingOwnText("br");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.prependElement("s");
        Document document1 = document0.clone();
        Document document2 = (Document) document1.prependChild(document0);
        Element element1 = element0.appendText("KRO^4$&");
        Document document3 = document2.clone();
        Pattern pattern0 = Pattern.compile("j?j4h;ke4%ib>'s6", 9375);
        document3.getElementsMatchingText(pattern0);
        element0.clone();
        document3.hasAttr("KRO^4$&");
        document3.toString();
        StringBuilder stringBuilder0 = new StringBuilder();
        stringBuilder0.append((CharSequence) "<#root>\n <s>KRO^4$&amp;</s>\n</#root>\n<s></s>");
        element1.appendText("<#root>\n <s>KRO^4$&amp;</s>\n</#root>\n<s></s>");
        document0.appendChild(document1);
        document2.appendChild(document1);
        document1.getElementsContainingText("ScriptDataEscaped");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        Document document0 = new Document("br");
        document0.prependElement("br");
        Element element0 = document0.tagName("br");
        document0.prependChild(element0);
        element0.getElementsContainingOwnText("br");
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.createElement("s");
        Document document1 = document0.clone();
        Element element1 = document1.prependChild(document0);
        document1.toString();
        StringBuilder stringBuilder0 = new StringBuilder("<#root></#root>");
        element0.outerHtml(stringBuilder0);
        Document document2 = new Document("<#root></#root>");
        element1.hashCode();
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.tagName("s");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        element0.hashCode();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(1353);
        Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(true);
        Document.OutputSettings document_OutputSettings3 = document_OutputSettings2.outline(true);
        Document.OutputSettings document_OutputSettings4 = document_OutputSettings3.clone();
        document0.outputSettings(document_OutputSettings4);
        document0.prependChild(element0);
        element0.toString();
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.createElement("s");
        Element element1 = element0.prependChild(document0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document_OutputSettings0.outline(true);
        element1.outerHtmlTail((StringBuilder) null, 9481, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        Document document0 = new Document("s");
        Element element0 = document0.createElement("s");
        Element element1 = element0.prependChild(document0);
        element0.text("s");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document_OutputSettings0.outline(true);
        element0.outerHtmlTail((StringBuilder) null, (-4), document_OutputSettings0);
        Element.preserveWhitespace(element1);
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        String string0 = "s";
        Document document0 = new Document("s");
        Element element0 = document0.createElement("s");
        element0.prependChild(document0);
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document0.after("6@n(`");
        document_OutputSettings0.outline(true);
        element0.outerHtmlTail((StringBuilder) null, (-4), document_OutputSettings0);
        document0.getElementsContainingOwnText(string0);
    }
}
