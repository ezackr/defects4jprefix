/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 06:11:17 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Map;
import java.util.Spliterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Attributes attributes0 = new Attributes();
        String string0 = attributes0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        String string0 = attributes0.get("Po_fZ+9+%^o@");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("@t'Or?Dw(L63]BS=~|", "@t'Or?Dw(L63]BS=~|");
        String string0 = attributes0.getIgnoreCase("@t'Or?Dw(L63]BS=~|");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("VRz-3F;*h#,3)ecL#", "VRz-3F;*h#,3)ecL#");
        String string0 = attributes0.get("VRz-3F;*h#,3)ecL#");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Attributes attributes0 = new Attributes();
        String string0 = attributes0.get("PI7`xR<~c&n(;H4%");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("VRz-3F;*h#,3)ecL#", "VRz-3F;*h#,3)ecL#");
        String string0 = attributes0.getIgnoreCase("PI7YW<~c&n(;H4%");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Attributes attributes0 = new Attributes();
        String string0 = attributes0.getIgnoreCase("Po_fZ+9+%^o@");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("U(8*wN9L|", false);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put(";o=/!]h", true);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("+bd:/m.~c`wy*", "+bd:/m.~c`wy*");
        attributes0.put("+bd:/m.~c`wy*", "+bd:/m.~c`wy*");
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        attributes0.put("U(8*wN9L|", false);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("j(phv", "j(phv");
        attributes0.removeIgnoreCase("j(phv");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.removeIgnoreCase("ru86SS1=`2");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("zj'(phv", "zj'(phv");
        attributes0.removeIgnoreCase("ru86SS1=`2");
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.hasKey("BPR'If");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = Attribute.createFromEncoded("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        boolean boolean0 = attributes0.hasKey("iTU$S,&'");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        boolean boolean0 = attributes0.hasKey("BPR'If");
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("org.jsoup.nodes.TextNode", "org.jsoup.nodes.TextNode");
        boolean boolean0 = attributes0.hasKeyIgnoreCase("HX'jh4X~8CXE");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.hasKeyIgnoreCase("HX'jh4X~8CXE");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("p-", "p-");
        boolean boolean0 = attributes0.hasKeyIgnoreCase("p-");
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        attributes0.addAll(attributes0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.addAll(attributes0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        Attributes attributes1 = new Attributes();
        attributes1.addAll(attributes0);
        attributes1.equals((Object) attributes0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Attributes attributes0 = new Attributes();
        Spliterator<Attribute> spliterator0 = attributes0.spliterator();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = Attribute.createFromEncoded("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        Attributes attributes1 = attributes0.clone();
        attributes1.equals((Object) attributes0);
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = Attribute.createFromEncoded("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        Attributes attributes1 = attributes0.clone();
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        Attributes attributes1 = attributes0.clone();
        attributes1.equals((Object) attributes0);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        Attributes attributes1 = attributes0.clone();
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("axW,", "axW,");
        List<Attribute> list0 = attributes0.asList();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        Attributes attributes0 = new Attributes();
        List<Attribute> list0 = attributes0.asList();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.put("@t'Or?Dw(L63]BS=~|", "@t'Or?Dw(L63]BS=~|");
        String string0 = attributes0.toString();
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.equals("!|uW!");
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        Attributes attributes0 = new Attributes();
        boolean boolean0 = attributes0.equals(attributes0);
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes0.dataset();
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes1.dataset();
        attributes0.equals((Object) attributes1);
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes1.dataset();
        attributes0.dataset();
        boolean boolean0 = attributes0.equals(attributes1);
        attributes0.equals((Object) attributes1);
    }

    @Test(timeout = 4000)
    public void test3337() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.clone();
        attributes1.dataset();
        attributes0.dataset();
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test3438() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = new Attributes();
        attributes1.dataset();
        boolean boolean0 = attributes0.equals(attributes1);
    }

    @Test(timeout = 4000)
    public void test3539() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.hashCode();
    }

    @Test(timeout = 4000)
    public void test3640() throws Throwable {
        Attributes attributes0 = new Attributes();
        attributes0.dataset();
        attributes0.hashCode();
    }

    @Test(timeout = 4000)
    public void test3741() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = Attribute.createFromEncoded("iTU$S,&'", "iTU$S,&'");
        attributes0.put(attribute0);
        Map<String, String> map0 = attributes0.dataset();
        map0.isEmpty();
    }
}
