/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 04:32:29 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Element_ESTest extends Element_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Document document0 = new Document(":only-of-type");
        Elements elements0 = document0.getElementsMatchingText(":only-of-type");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Document document0 = new Document("2rhhvf=p9rrwqsa*");
        document0.child(62);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Document document0 = new Document("vDale");
        Element element0 = document0.addClass("vDale");
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Document document0 = new Document("i");
        document0.before((Node) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Document document0 = new Document("tfoot");
        document0.html("tfoot");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Document document0 = new Document("var");
        Elements elements0 = document0.getElementsByAttributeValue("var", "lg]}wt");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Document document0 = new Document("#comment");
        Elements elements0 = document0.getElementsByAttributeValueStarting("#comment", "#comment");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Document document0 = new Document("ln'r");
        Elements elements0 = document0.getElementsMatchingOwnText("ln'r");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Document document0 = new Document("3yr");
        Elements elements0 = document0.getElementsByIndexLessThan((-2285));
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Document document0 = new Document("var");
        Elements elements0 = document0.getElementsByAttributeStarting("var");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Document document0 = new Document("var");
        Elements elements0 = document0.getElementsByIndexEquals(1032);
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Document document0 = new Document("var");
        document0.wrap("var");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Document document0 = new Document("java.lang.string@0000000007");
        Element element0 = document0.appendElement("java.lang.string@0000000007");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Document document0 = new Document("]");
        Elements elements0 = document0.getElementsByAttributeValueMatching("]", "]");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Document document0 = new Document("var");
        Elements elements0 = document0.getElementsByAttributeValueEnding("var", "var");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Document document0 = new Document("':$]p'");
        Elements elements0 = document0.getElementsByClass("':$]p'");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Document document0 = new Document("v?r");
        Elements elements0 = document0.getElementsContainingText("v?r");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Document document0 = new Document("':$]p'");
        Elements elements0 = document0.getElementsByAttributeValueContaining("':$]p'", "':$]p'");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Document document0 = new Document("2a");
        document0.after((Node) document0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Document document0 = new Document("39n=?\"dz%uBDxs,r]9");
        Elements elements0 = document0.getElementsByAttributeValueNot("39n=?\"dz%uBDxs,r]9", "39n=?\"dz%uBDxs,r]9");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Document document0 = new Document("?D");
        String string0 = document0.toString();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Document document0 = new Document("#=<D-'=p0MJ#^");
        Elements elements0 = document0.getElementsByAttribute("#=<D-'=p0MJ#^");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Document document0 = new Document("value");
        document0.before("value");
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Document document0 = new Document("8o.[b.=t+");
        Element element0 = document0.removeClass("8o.[b.=t+");
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Document document0 = new Document("var");
        Elements elements0 = document0.getAllElements();
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Document document0 = new Document("var");
        document0.title("var");
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Document document0 = new Document("value");
        Elements elements0 = document0.getElementsByIndexGreaterThan((-1));
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Document document0 = new Document("var");
        document0.reparentChild(document0);
        document0.after("var");
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.tagName("var");
        document0.reparentChild(element0);
        document0.after("var");
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Document document0 = new Document("r");
        document0.prependText("r");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        Element element0 = document0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.prependText("var");
        List<TextNode> list0 = element0.textNodes();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Document document0 = new Document("var");
        document0.prependElement("var");
        List<TextNode> list0 = document0.textNodes();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        DataNode dataNode0 = new DataNode("W[W|NcF'I:L", "");
        document0.appendChild(dataNode0);
        dataNode0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        DataNode dataNode0 = new DataNode("W[W|NcF'I:L", "");
        document0.appendChild(dataNode0);
        List<DataNode> list0 = document0.dataNodes();
        list0.contains(dataNode0);
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        Document document0 = new Document(".");
        document0.prependElement(".");
        List<DataNode> list0 = document0.dataNodes();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        Document document0 = new Document("java.lang.string@0000000007");
        LinkedHashSet<DocumentType> linkedHashSet0 = new LinkedHashSet<DocumentType>();
        Element element0 = document0.insertChildren(0, linkedHashSet0);
        element0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        Document document0 = new Document("vDalue");
        LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
        document0.insertChildren((-78), linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        Document document0 = new Document("v");
        LinkedHashSet<DataNode> linkedHashSet0 = new LinkedHashSet<DataNode>();
        document0.insertChildren(316, linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        Document document0 = new Document(".");
        Element element0 = document0.toggleClass(".");
        String string0 = element0.cssSelector();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        Document document0 = new Document("<)r");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        String string0 = document0.cssSelector();
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("value", "value");
        Attributes attributes0 = textNode0.attributes();
        Tag tag0 = Tag.valueOf("value");
        FormElement formElement0 = new FormElement(tag0, "value", attributes0);
        FormElement formElement1 = new FormElement(tag0, "value", attributes0);
        formElement1.prependChild(formElement0);
        String string0 = formElement0.cssSelector();
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.prependElement("br");
        Elements elements0 = element0.siblingElements();
        element0.nodeName();
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.prependElement("br");
        Elements elements0 = element0.siblingElements();
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        Document document0 = new Document("#comment");
        Elements elements0 = document0.siblingElements();
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        Document document0 = new Document("entities-base.properties");
        document0.reparentChild(document0);
        document0.prependElement("entities-base.properties");
        Elements elements0 = document0.siblingElements();
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        Document document0 = new Document("type");
        Element element0 = document0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        Document document0 = new Document("r");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        Element element0 = document0.prependElement("br");
        Element element1 = element0.nextElementSibling();
        element0.nodeName();
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        Document document0 = new Document("r");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        Element element0 = document0.prependElement("br");
        Element element1 = element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        Document document0 = new Document("entities-base.properties");
        document0.reparentChild(document0);
        document0.previousElementSibling();
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.previousElementSibling();
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        Document document0 = new Document("entities-base.properties");
        Element element0 = document0.prependElement("entities-base.properties");
        Element element1 = element0.previousElementSibling();
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.appendChild(document0);
        element0.prependElement("var");
        Element element1 = document0.previousElementSibling();
        element1.isBlock();
    }

    @Test(timeout = 4000)
    public void test4952() throws Throwable {
        Document document0 = new Document("type");
        document0.reparentChild(document0);
        Element element0 = document0.firstElementSibling();
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        Document document0 = new Document("var");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        document0.prependElement("HDo)&C'-e~> ");
        Element element0 = document0.firstElementSibling();
        element0.tagName();
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        Element element0 = document0.prependElement("jf,g$?c2");
        Integer integer0 = element0.elementSiblingIndex();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        Document document0 = new Document("entities-base.properties");
        document0.reparentChild(document0);
        Element element0 = document0.lastElementSibling();
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        Document document0 = new Document("type");
        document0.appendChild(document0);
        document0.prependElement("#");
        Element element0 = document0.lastElementSibling();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("value", "value");
        Attributes attributes0 = textNode0.attributes();
        Tag tag0 = Tag.valueOf("value");
        FormElement formElement0 = new FormElement(tag0, "value", attributes0);
        Element element0 = formElement0.getElementById("value > value");
    }

    @Test(timeout = 4000)
    public void test5558() throws Throwable {
        Document document0 = new Document("id");
        Comment comment0 = new Comment("frame", "frame");
        document0.appendChild(comment0);
        String string0 = document0.text();
    }

    @Test(timeout = 4000)
    public void test5659() throws Throwable {
        Document document0 = new Document("N1``?2*tA");
        Element element0 = document0.prependText("N1``?2*tA");
        Node[] nodeArray0 = new Node[6];
        nodeArray0[0] = (Node) element0;
        nodeArray0[1] = (Node) element0;
        nodeArray0[2] = (Node) element0;
        nodeArray0[3] = (Node) element0;
        nodeArray0[4] = (Node) document0;
        nodeArray0[5] = (Node) document0;
        document0.addChildren(nodeArray0);
        document0.prependElement("frame");
        document0.text();
    }

    @Test(timeout = 4000)
    public void test5760() throws Throwable {
        Document document0 = new Document("Z");
        Element element0 = document0.prependText("Z");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) element0;
        document0.addChildren(nodeArray0);
        element0.tagName("br");
        document0.prependElement("br");
        document0.text();
    }

    @Test(timeout = 4000)
    public void test5861() throws Throwable {
        Document document0 = new Document("2rhhvf=p9rrwqsa*");
        Element element0 = document0.prependText("2rhhvf=p9rrwqsa*");
        Elements elements0 = element0.getElementsContainingOwnText("2rhhvf=p9rrwqsa*");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test5962() throws Throwable {
        Document document0 = new Document(":only-child");
        document0.prependElement("br");
        Elements elements0 = document0.getElementsContainingOwnText(":only-child");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        Document document0 = new Document(":only-child");
        Element element0 = document0.prependElement("br");
        Comment comment0 = new Comment(":only-child", "br");
        element0.replaceWith(comment0);
        Elements elements0 = document0.getElementsContainingOwnText(":only-child");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        Document document0 = new Document("_h ");
        document0.prependElement("_h ");
        Elements elements0 = document0.getElementsContainingOwnText("_h ");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test6265() throws Throwable {
        boolean boolean0 = Element.preserveWhitespace((Node) null);
    }

    @Test(timeout = 4000)
    public void test6366() throws Throwable {
        DataNode dataNode0 = DataNode.createFromEncoded("R!hKH;", "w[h.8k|p-3x?");
        boolean boolean0 = Element.preserveWhitespace(dataNode0);
    }

    @Test(timeout = 4000)
    public void test6467() throws Throwable {
        Tag tag0 = Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "<)r", attributes0);
        boolean boolean0 = Element.preserveWhitespace(formElement0);
    }

    @Test(timeout = 4000)
    public void test6568() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        document0.prependElement("jf,g$?c2");
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test6669() throws Throwable {
        Document document0 = new Document("var");
        document0.prependText((String) null);
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test6771() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        DataNode dataNode0 = new DataNode("W[W|NcF'I:L", "");
        document0.appendChild(dataNode0);
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test6872() throws Throwable {
        Document document0 = new Document("jf,g$?c2");
        Element element0 = document0.prependElement("jf,g$?c2");
        element0.appendText("jf,g$?c2");
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test6973() throws Throwable {
        Document document0 = new Document("<)r");
        document0.prependText("<)r");
        String string0 = document0.data();
    }

    @Test(timeout = 4000)
    public void test7074() throws Throwable {
        Document document0 = new Document("<)r");
        DataNode dataNode0 = DataNode.createFromEncoded("<)r", "type");
        document0.prependChild(dataNode0);
        String string0 = document0.data();
    }

    @Test(timeout = 4000)
    public void test7175() throws Throwable {
        Document document0 = new Document("<)r");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        document0.data();
    }

    @Test(timeout = 4000)
    public void test7276() throws Throwable {
        Document document0 = new Document("]");
        Element element0 = document0.toggleClass("]");
        boolean boolean0 = element0.hasClass("5Z?6 B&g8n.R=hN|=S");
    }

    @Test(timeout = 4000)
    public void test7377() throws Throwable {
        Document document0 = new Document("entities-bse.properties");
        document0.toggleClass("java.lang.string@0000000020");
        boolean boolean0 = document0.hasClass("attributeSingleValueCharsSorted");
    }

    @Test(timeout = 4000)
    public void test7478() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.prependText("java.lang.string@0000000008");
        document0.tagName("bn]n");
        document0.dataset();
        element0.toggleClass("bn]n");
        boolean boolean0 = document0.hasClass("java.lang.string@0000000008");
        document0.tagName();
    }

    @Test(timeout = 4000)
    public void test7479() throws Throwable {
        Document document0 = new Document("var");
        Element element0 = document0.prependText("java.lang.string@0000000008");
        document0.tagName("bn]n");
        document0.dataset();
        element0.toggleClass("bn]n");
        boolean boolean0 = document0.hasClass("java.lang.string@0000000008");
    }

    @Test(timeout = 4000)
    public void test7580() throws Throwable {
        Document document0 = new Document("hevj1pjvou:m6v:`");
        String string0 = document0.val();
    }

    @Test(timeout = 4000)
    public void test7681() throws Throwable {
        Tag tag0 = Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "N1``?2*tA", attributes0);
        String string0 = formElement0.val();
    }

    @Test(timeout = 4000)
    public void test7782() throws Throwable {
        Tag tag0 = Tag.valueOf("textarea");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "<)r", attributes0);
        formElement0.val("rtE");
        formElement0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test7883() throws Throwable {
        Document document0 = new Document("org.jsoup.select.Evaluator$AttributeWithValueStarting");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
        document0.outputSettings(document_OutputSettings1);
        StringBuilder stringBuilder0 = new StringBuilder();
        StringBuilder stringBuilder1 = stringBuilder0.append(19710);
        document0.outerHtml(stringBuilder1);
        stringBuilder1.toString();
    }

    @Test(timeout = 4000)
    public void test7884() throws Throwable {
        Document document0 = new Document("org.jsoup.select.Evaluator$AttributeWithValueStarting");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
        document0.outputSettings(document_OutputSettings1);
        StringBuilder stringBuilder0 = new StringBuilder();
        StringBuilder stringBuilder1 = stringBuilder0.append(19710);
        document0.outerHtml(stringBuilder1);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test7985() throws Throwable {
        Document document0 = new Document("Z");
        Node[] nodeArray0 = new Node[1];
        nodeArray0[0] = (Node) document0;
        document0.addChildren(nodeArray0);
        document0.prependElement("br");
        // Undeclared exception!
        document0.outerHtml();
    }

    @Test(timeout = 4000)
    public void test8086() throws Throwable {
        TextNode textNode0 = new TextNode("i", "i");
        Attributes attributes0 = textNode0.attributes();
        Tag tag0 = Tag.valueOf("i");
        FormElement formElement0 = new FormElement(tag0, "i", attributes0);
        FormElement formElement1 = new FormElement(tag0, "i", attributes0);
        formElement0.prependChild(formElement1);
        formElement0.outerHtml();
    }

    @Test(timeout = 4000)
    public void test8187() throws Throwable {
        Tag tag0 = Tag.valueOf("Q");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "Q", attributes0);
        StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Q");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
        formElement0.outerHtmlHead(stringBuilder0, 160, document_OutputSettings1);
    }

    @Test(timeout = 4000)
    public void test8288() throws Throwable {
        Document document0 = new Document("Z");
        document0.prependElement("br");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
        Document document1 = document0.outputSettings(document_OutputSettings1);
        document1.outerHtml();
    }

    @Test(timeout = 4000)
    public void test8389() throws Throwable {
        Document document0 = new Document("var");
        document0.prependElement("var");
        StringBuilder stringBuilder0 = new StringBuilder();
        document0.outerHtml(stringBuilder0);
    }

    @Test(timeout = 4000)
    public void test8490() throws Throwable {
        Tag tag0 = Tag.valueOf("Q");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "Q", attributes0);
        StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Q");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        document_OutputSettings0.outline(true);
        formElement0.appendChild(formElement0);
        formElement0.outerHtmlTail(stringBuilder0, 160, document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test8591() throws Throwable {
        Tag tag0 = Tag.valueOf("Q");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "Q", attributes0);
        StringBuilder stringBuilder0 = new StringBuilder("Q");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
        Element element0 = formElement0.appendText("Q");
        element0.prepend("Q");
        formElement0.outerHtmlTail(stringBuilder0, (-24), document_OutputSettings1);
    }

    @Test(timeout = 4000)
    public void test8692() throws Throwable {
        Tag tag0 = Tag.valueOf("Q");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "Q", attributes0);
        StringBuilder stringBuilder0 = new StringBuilder("Q");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
        formElement0.appendText("Q");
        formElement0.outerHtmlTail(stringBuilder0, (-24), document_OutputSettings1);
    }

    @Test(timeout = 4000)
    public void test8793() throws Throwable {
        Document document0 = new Document("]");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
        document0.outputSettings(document_OutputSettings1);
        document0.outerHtml();
    }

    @Test(timeout = 4000)
    public void test8894() throws Throwable {
        Document document0 = new Document("value");
        document0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test8995() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("value", "value");
        Attributes attributes0 = textNode0.attributes();
        Tag tag0 = Tag.valueOf("value");
        FormElement formElement0 = new FormElement(tag0, "value", attributes0);
        FormElement formElement1 = new FormElement(tag0, "value", attributes0);
        formElement0.equals(formElement1);
    }

    @Test(timeout = 4000)
    public void test9096() throws Throwable {
        Document document0 = new Document("entities-bse.properties");
        Document document1 = document0.clone();
        document1.val("!?");
        document1.equals(document0);
    }

    @Test(timeout = 4000)
    public void test9197() throws Throwable {
        Document document0 = new Document(":nth-child(%d)");
        document0.hashCode();
    }
}
