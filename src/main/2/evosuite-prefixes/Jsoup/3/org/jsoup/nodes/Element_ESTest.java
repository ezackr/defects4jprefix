/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 01:02:58 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Element_ESTest extends Element_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Document document0 = new Document("textarea");
        String string0 = document0.val();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Document document0 = new Document("mM0V7i]N");
        document0.html("mM0V7i]N");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Document document0 = new Document("Dq>se,A");
        Elements elements0 = document0.getElementsByAttributeValueEnding("Dq>se,A", "Dq>se,A");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Document document0 = new Document("K%I}>gZ4I)A");
        Elements elements0 = document0.getElementsByClass("K%I}>gZ4I)A");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Document document0 = new Document("Avs<LKyzxFx+[s-");
        document0.child((-1952257860));
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Document document0 = new Document("[");
        Elements elements0 = document0.getElementsByAttributeValueContaining("[", "[");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Document document0 = new Document("textarea");
        Element element0 = document0.prependElement("textarea");
        Element element1 = element0.val("textarea");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Document document0 = new Document("mM0V7i]N");
        Elements elements0 = document0.getElementsByAttributeValueNot("mM0V7i]N", "mM0V7i]N");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Document document0 = new Document("4p");
        String string0 = document0.toString();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Document document0 = new Document("-#kMwJ;TB<x;W");
        Elements elements0 = document0.getElementsByAttribute("-#kMwJ;TB<x;W");
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        String string0 = "\\u00";
        Document document0 = new Document(string0);
        Element element0 = document0.addClass(string0);
        boolean boolean0 = element0.hasClass(string0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Document document0 = new Document("4p");
        Elements elements0 = document0.getElementsByAttributeValue("4p", "4p");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Document document0 = new Document(" />");
        document0.siblingElements();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Document document0 = new Document("id");
        Elements elements0 = document0.getElementsByAttributeValueStarting("id", "id");
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Tag tag0 = Tag.valueOf("4p");
        Element element0 = new Element(tag0, "4p");
        String string0 = element0.nodeName();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Document document0 = new Document("4p");
        Element element0 = document0.removeClass("4p");
        element0.tagName();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Document document0 = new Document("W");
        document0.normalise();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Document document0 = new Document("L");
        Elements elements0 = document0.getAllElements();
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Document document0 = new Document("?");
        Elements elements0 = document0.getElementsByIndexLessThan(3706);
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Document document0 = new Document("value");
        Elements elements0 = document0.getElementsByIndexGreaterThan((-2));
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Document document0 = new Document("$");
        Elements elements0 = document0.getElementsByIndexEquals(612);
        elements0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Tag tag0 = Tag.valueOf("4p");
        Element element0 = new Element(tag0, "4p");
        Element element1 = element0.prependElement("4p");
        Elements elements0 = element1.parents();
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Document document0 = new Document("982");
        Element element0 = document0.prependElement("982");
        Elements elements0 = element0.parents();
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Document document0 = new Document("-#kMwJl[;B<xW");
        document0.prependText("-#kMwJl[;B<xW");
        Element element0 = document0.getElementById("-#kMwJl[;B<xW");
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Document document0 = new Document("rZ0i%F3BM");
        Element element0 = document0.prependElement("rZ0i%F3BM");
        Element element1 = element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Document document0 = new Document("8o.A");
        document0.appendChild(document0);
        Element element0 = document0.prependElement("8o.A");
        Element element1 = element0.nextElementSibling();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Document document0 = new Document("$");
        Element element0 = document0.prependElement("$");
        Element element1 = element0.previousElementSibling();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Document document0 = new Document("\"hhbpvpmxs~&vec6");
        Element element0 = document0.prependChild(document0);
        document0.prependElement("\"hhbpvpmxs~&vec6");
        Element element1 = element0.previousElementSibling();
        element1.tagName();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Document document0 = new Document("982");
        Element element0 = document0.prependElement("982");
        Element element1 = element0.firstElementSibling();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Tag tag0 = Tag.valueOf("4p");
        Element element0 = new Element(tag0, "4p");
        Element element1 = element0.appendChild(element0);
        Element element2 = element1.appendElement("4p");
        Element element3 = element2.firstElementSibling();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        Document document0 = new Document("L");
        Element element0 = document0.prependElement("L");
        Integer integer0 = element0.elementSiblingIndex();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        Document document0 = new Document("$");
        Element element0 = document0.prependElement("$");
        Element element1 = element0.lastElementSibling();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        Document document0 = new Document("\"hhbpvpmxs~&vec6");
        document0.prependChild(document0);
        document0.prependElement("\"hhbpvpmxs~&vec6");
        Element element0 = document0.lastElementSibling();
        element0.tagName();
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        Document document0 = new Document("script");
        Element element0 = document0.prependElement("script");
        element0.appendChild(document0);
        Element element1 = document0.prependText("script");
        element1.text();
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        Document document0 = new Document("script");
        document0.prependElement("script");
        Element element0 = document0.prependText("script");
        element0.appendText("script");
        String string0 = element0.text();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        Document document0 = new Document("#dcunt");
        DataNode dataNode0 = DataNode.createFromEncoded("#dcunt", "#dcunt");
        document0.appendChild(dataNode0);
        String string0 = document0.text();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        Document document0 = new Document("textarea");
        document0.prependElement("textarea");
        String string0 = document0.text();
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        Document document0 = new Document("script");
        document0.prependElement("script");
        document0.prependText(" ");
        String string0 = document0.text();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        Document document0 = new Document("L");
        Element element0 = document0.prependElement("L");
        boolean boolean0 = element0.preserveWhitespace();
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        Document document0 = new Document("#comment");
        DataNode dataNode0 = new DataNode("#comment", "#comment");
        Element element0 = document0.prependChild(dataNode0);
        boolean boolean0 = element0.hasText();
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        Document document0 = new Document("O)@ofCBU");
        Element element0 = document0.prependElement("O)@ofCBU");
        element0.text("O)@ofCBU");
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test4142() throws Throwable {
        Document document0 = new Document("");
        document0.appendText("");
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test4243() throws Throwable {
        Document document0 = new Document("O)@ofCBU");
        document0.prependElement("O)@ofCBU");
        boolean boolean0 = document0.hasText();
    }

    @Test(timeout = 4000)
    public void test4344() throws Throwable {
        Document document0 = new Document("gyq8@~ithvx;");
        DataNode dataNode0 = new DataNode("gyq8@~ithvx;", "gyq8@~ithvx;");
        document0.addChild(dataNode0);
        String string0 = document0.data();
    }

    @Test(timeout = 4000)
    public void test4445() throws Throwable {
        Document document0 = new Document("$>");
        document0.prependElement("$>");
        String string0 = document0.data();
    }

    @Test(timeout = 4000)
    public void test4546() throws Throwable {
        Document document0 = new Document("W");
        Element element0 = document0.appendText("W");
        String string0 = element0.data();
    }

    @Test(timeout = 4000)
    public void test4647() throws Throwable {
        Document document0 = new Document("$W");
        document0.toggleClass("$W");
        String string0 = document0.className();
    }

    @Test(timeout = 4000)
    public void test4748() throws Throwable {
        Document document0 = new Document("");
        Element element0 = document0.toggleClass("");
        element0.tagName();
    }

    @Test(timeout = 4000)
    public void test4849() throws Throwable {
        Document document0 = new Document("textarea");
        Element element0 = document0.prependElement("textarea");
        String string0 = element0.val();
    }

    @Test(timeout = 4000)
    public void test4950() throws Throwable {
        Document document0 = new Document("W");
        Element element0 = document0.val("W");
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test5051() throws Throwable {
        Document document0 = new Document("`<M?qK%e4");
        Element element0 = document0.createElement("COL");
        Element element1 = element0.text("`<M?qK%e4");
        Element element2 = element1.prependChild(document0);
        StringBuilder stringBuilder0 = new StringBuilder();
        element2.outerHtml(stringBuilder0);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test5152() throws Throwable {
        Document document0 = new Document("?");
        StringBuilder stringBuilder0 = new StringBuilder("?");
        document0.outerHtml(stringBuilder0);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test5253() throws Throwable {
        Document document0 = new Document("e[");
        document0.prependElement("e[");
        Element element0 = document0.prependText("e[");
        String string0 = element0.outerHtml();
    }

    @Test(timeout = 4000)
    public void test5354() throws Throwable {
        Document document0 = new Document("INPUT");
        Element element0 = document0.prependElement("INPUT");
        String string0 = element0.outerHtml();
    }

    @Test(timeout = 4000)
    public void test5455() throws Throwable {
        Document document0 = new Document("#comment");
        boolean boolean0 = document0.equals("#comment");
    }
}
