/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 06:11:49 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.XmlTreeBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Parser_ESTest extends Parser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Parser parser0 = Parser.xmlParser();
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        Parser parser0 = Parser.xmlParser();
        parser0.setTrackErrors(4157);
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        String string0 = Parser.unescapeEntities("meta[name=charset]", true);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Parser parser0 = new Parser(xmlTreeBuilder0);
        Parser parser1 = parser0.setTreeBuilder(xmlTreeBuilder0);
        parser1.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Parser parser0 = new Parser(xmlTreeBuilder0);
        ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
        Parser parser1 = parser0.settings(parseSettings0);
        parser1.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        List<Node> list0 = Parser.parseXmlFragment("", "");
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.getErrors();
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Document document0 = Parser.parseBodyFragmentRelaxed(".-*x{SqA", ".-*x{SqA");
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.getTreeBuilder();
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.settings();
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.parseInput("*zNV", "*zNV");
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        Parser parser0 = Parser.htmlParser();
        parser0.setTrackErrors(56);
        parser0.parseInput("V'RNc95j|2", "V'RNc95j|2");
        parser0.isTrackErrors();
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        Document document0 = Parser.parseBodyFragment("r3?x<?kM_1P<", "");
        document0.location();
    }
}
