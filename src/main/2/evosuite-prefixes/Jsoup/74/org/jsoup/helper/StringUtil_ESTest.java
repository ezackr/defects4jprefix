/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:35:04 GMT 2024
 */
package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.jsoup.helper.StringUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StringUtil_ESTest extends StringUtil_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        String[] stringArray0 = new String[1];
        StringUtil.join(stringArray0, stringArray0[0]);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        StringUtil stringUtil0 = new StringUtil();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        String string0 = StringUtil.resolve("f}9zY,3kH", "f}9zY,3kH");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        String string0 = StringUtil.join((Collection) linkedList0, "?                   ");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.offerLast("?                   ");
        linkedList0.add((Object) "?                   ");
        String string0 = StringUtil.join((Collection) linkedList0, "?                   ");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) "?                   ");
        String string0 = StringUtil.join((Collection) linkedList0, "?                   ");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        String string0 = StringUtil.padding(29);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        StringUtil.padding((-14));
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        String string0 = StringUtil.padding(3);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        boolean boolean0 = StringUtil.isBlank((String) null);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        boolean boolean0 = StringUtil.isBlank(" ");
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        boolean boolean0 = StringUtil.isBlank("");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        boolean boolean0 = StringUtil.isBlank("q");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        boolean boolean0 = StringUtil.isNumeric((String) null);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        boolean boolean0 = StringUtil.isNumeric("9");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        boolean boolean0 = StringUtil.isNumeric("");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        boolean boolean0 = StringUtil.isNumeric("5gy'|gJN?VHD[?Vnd");
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        boolean boolean0 = StringUtil.isWhitespace(9);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        boolean boolean0 = StringUtil.isWhitespace(10);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        boolean boolean0 = StringUtil.isWhitespace(12);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        boolean boolean0 = StringUtil.isWhitespace(13);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        boolean boolean0 = StringUtil.isActuallyWhitespace(10);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        boolean boolean0 = StringUtil.isActuallyWhitespace(9);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        StringBuilder stringBuilder0 = StringUtil.stringBuilder();
        StringUtil.appendNormalisedWhitespace(stringBuilder0, "width must be > 0", true);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        boolean boolean0 = StringUtil.isActuallyWhitespace(12);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        boolean boolean0 = StringUtil.isActuallyWhitespace(13);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        boolean boolean0 = StringUtil.isActuallyWhitespace(160);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        String string0 = StringUtil.normaliseWhitespace("                ");
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        StringBuilder stringBuilder0 = new StringBuilder();
        StringUtil.appendNormalisedWhitespace(stringBuilder0, "         ", true);
        stringBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        String[] stringArray0 = new String[0];
        boolean boolean0 = StringUtil.in("l|", stringArray0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        String[] stringArray0 = new String[6];
        stringArray0[0] = "j&59|to$pWu`0q3";
        StringUtil.in("_WlA_<r,-T59|", stringArray0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        String[] stringArray0 = new String[5];
        stringArray0[0] = "";
        boolean boolean0 = StringUtil.in("", stringArray0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        String[] stringArray0 = new String[0];
        boolean boolean0 = StringUtil.inSorted((String) null, stringArray0);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        String[] stringArray0 = new String[1];
        stringArray0[0] = "";
        boolean boolean0 = StringUtil.inSorted("", stringArray0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
        URL uRL0 = MockURL.URL("#", "#", 4259, "#", uRLStreamHandler0);
        StringUtil.resolve(uRL0, ".ZC$S#0A<}B!");
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        URL uRL0 = MockURL.getFileExample();
        URL uRL1 = StringUtil.resolve(uRL0, "?                   ");
        uRL1.getQuery();
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        URL uRL0 = MockURL.getFileExample();
        URL uRL1 = StringUtil.resolve(uRL0, ".r%Wq+3.oq");
        uRL1.getAuthority();
    }
}
