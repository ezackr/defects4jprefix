/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:57:39 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.XmlDeclaration;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class LeafNode_ESTest extends LeafNode_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        DocumentType documentType0 = new DocumentType("J", "J", "J");
        documentType0.hasParent();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        CDataNode cDataNode0 = new CDataNode("J");
        String string0 = cDataNode0.toString();
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        CDataNode cDataNode0 = new CDataNode(":containsOwn(%s)");
        Node node0 = cDataNode0.removeAttr(":containsOwn(%s)");
        node0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        CDataNode cDataNode0 = new CDataNode("J");
        cDataNode0.ensureChildNodes();
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Comment comment0 = new Comment("Leaf Nodes do not have child nodes.", "r55=Tq>J<Z)HU");
        String string0 = comment0.absUrl("s");
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        DataNode dataNode0 = DataNode.createFromEncoded("FYGb0TDj", "LOu<");
        DataNode dataNode1 = dataNode0.setWholeData("FYGb0TDj");
        dataNode1.nodeName();
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("oFk_`e`B'cqq", false);
        xmlDeclaration0.doSetBaseUri("oFk_`e`B'cqq");
        xmlDeclaration0.nodeName();
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        DataNode dataNode0 = DataNode.createFromEncoded("FYGb0TDj", "LOu<");
        String string0 = dataNode0.attr("FYGb0TDj");
    }

    @Test(timeout = 4000)
    public void test88() throws Throwable {
        CDataNode cDataNode0 = new CDataNode("J");
        String string0 = cDataNode0.baseUri();
    }

    @Test(timeout = 4000)
    public void test99() throws Throwable {
        CDataNode cDataNode0 = new CDataNode("J");
        Document document0 = Document.createShell("^]vWyxe#5#!");
        cDataNode0.parentNode = (Node) document0;
        String string0 = cDataNode0.baseUri();
    }
}
