/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:15:41 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.Connection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class FormElement_ESTest extends FormElement_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Tag tag0 = Tag.valueOf("select");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "select", attributes0);
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("1w*Zk1f :", parseSettings0);
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "1w*Zk1f :", attributes0);
        Elements elements0 = formElement0.elements();
        elements0.size();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Tag tag0 = Tag.valueOf("VD*UDSt");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "VD*UDSt", attributes0);
        formElement0.submit();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Tag tag0 = Tag.valueOf("*uYR+r)Aw");
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("action", "*uYR+r)Aw", attributes0);
        attributes0.put(attribute0);
        FormElement formElement0 = new FormElement(tag0, "*uYR+r)Aw", attributes0);
        formElement0.submit();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("METHOD", parseSettings0);
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "METHOD", attributes0);
        attributes0.put("METHOD", "POST");
        formElement0.submit();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Tag tag0 = Tag.valueOf("sNlec#");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "sNlec#", attributes0);
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Tag tag0 = Tag.valueOf("select");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "select", attributes0);
        attributes0.put("disabled", "disabled");
        FormElement formElement1 = formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement1.formData();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Tag tag0 = Tag.valueOf("select");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "select", attributes0);
        attributes0.put("name", "select");
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Tag tag0 = Tag.valueOf("input");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "input", attributes0);
        attributes0.put("name", "name");
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Tag tag0 = Tag.valueOf("input");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "input", attributes0);
        attributes0.putIgnoreCase("name", "name");
        attributes0.putIgnoreCase("type", "checkbox");
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Tag tag0 = Tag.valueOf("input");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "input", attributes0);
        Attributes attributes1 = attributes0.put("name", "name");
        attributes1.putIgnoreCase("type", "radio");
        formElement0.addElement(formElement0);
        List<Connection.KeyVal> list0 = formElement0.formData();
        list0.size();
    }
}
