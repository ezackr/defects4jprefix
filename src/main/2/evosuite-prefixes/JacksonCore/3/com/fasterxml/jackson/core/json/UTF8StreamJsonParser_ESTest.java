/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 16:31:00 GMT 2024
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.core.util.TextBuffer;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UTF8StreamJsonParser_ESTest extends UTF8StreamJsonParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(objectCodec0).readValue(any(com.fasterxml.jackson.core.JsonParser.class), any(java.lang.Class.class));
        doReturn((String) null).when(objectCodec0).toString();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2066, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, (byte[]) null, 2066, 69, true);
        Class<Object> class0 = Object.class;
        Object object0 = uTF8StreamJsonParser0.readValueAs(class0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 123, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 135, 426, true);
        ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        uTF8StreamJsonParser0.setCodec(objectCodec1);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-945), (-648));
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-648), byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 69, 69, true);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getCharOffset();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2000);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) (-127);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-283), pipedInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 10, true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());
        doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 128, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (-514), (byte) (-7), true);
        Object object0 = uTF8StreamJsonParser0.getInputSource();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[1] = (byte) 103;
        byteArray0[2] = (byte) (-47);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 19, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 1, 1000, false);
        uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, " +%?1{N(R1EI", true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 34);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2000);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-11);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 0, (byte) 97, true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1867), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 39, true);
        MockFile mockFile0 = new MockFile("wiA-=BU5|q|H(a");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1867), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 39, true);
        MockFile mockFile0 = new MockFile("wiA-=BU5|q|H(a");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2066, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, (byte[]) null, 2066, 69, true);
        MockFile mockFile0 = new MockFile("r>mtU[b+jhMcKRXB");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 89;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 515, sequenceInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 89, (byte) 1, true);
        uTF8StreamJsonParser0.nextIntValue((byte) 89);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1694), pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 123, (-1694), true);
        int[] intArray0 = new int[0];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, (-1698), 6, 129, (-1698));
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-396), byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 515, (-2671), false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(404);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-396), byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 515, (-2671), false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(404);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1438), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1438), (-1662), false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(12);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-694), (-1694));
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1166), 404, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-694));
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2000, 2000);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 3, 2849, true);
        uTF8StreamJsonParser0._loadToHaveAtLeast(2849);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.DEFAULT_WRITE_CONCAT_BUFFER_LEN, false);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 89, 2883);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 117, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 925, (byte) 1, true);
        uTF8StreamJsonParser0.nextIntValue(44);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 18, sequenceInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 180, (-1306), false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parseNumber((byte) 18);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1993, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 32, 2000, true);
        String string0 = uTF8StreamJsonParser0.getText();
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-1), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 92, 16, false);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("");
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-540), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2000, (-2226), true);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 430, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1122), 207, false);
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, " +%?1{N(R1EI", true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 34);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 97, pipedInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (-288), (byte) 97, true);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 3071);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 897, bufferedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 900, 3071, true);
        JsonToken jsonToken0 = JsonToken.END_ARRAY;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-127), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2011, (byte) (-120), true);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 53, (byte) (-47), false);
        int int0 = uTF8StreamJsonParser0.getTextLength();
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1698), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) (-7), 2000, true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-2208), 1027, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        uTF8StreamJsonParser0.readBinaryValue((OutputStream) byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 116, (byte) (-60));
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-60), (byte) 35, false);
        SerializedString serializedString0 = new SerializedString("2dqFH1M3uiGW");
        uTF8StreamJsonParser0.nextFieldName(serializedString0);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-7), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 32, (byte) (-7), false);
        uTF8StreamJsonParser0.nextTextValue();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 515, 92);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 262144, dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 1, (byte) 1, false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((byte) 1);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test3033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 515, 92);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 262144, dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 1, (byte) 1, false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((byte) 1);
    }

    @Test(timeout = 4000)
    public void test3134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 430, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1122), 207, false);
        uTF8StreamJsonParser0._parseNumber(207);
    }

    @Test(timeout = 4000)
    public void test3235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-514), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 38, false);
        uTF8StreamJsonParser0._parseNumber(38);
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-540), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2000, (-2226), true);
        uTF8StreamJsonParser0._parseNumber(12);
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 89;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-540), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2000, (-2226), true);
        uTF8StreamJsonParser0._parseNumber(12);
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 123, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 135, 426, true);
        uTF8StreamJsonParser0._parseName(123);
    }

    @Test(timeout = 4000)
    public void test3639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) 6, false);
        uTF8StreamJsonParser0.parseLongName((-2247));
    }

    @Test(timeout = 4000)
    public void test3740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        uTF8StreamJsonParser0.parseLongName(645);
    }

    @Test(timeout = 4000)
    public void test3841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1993, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 32, 2000, true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        int[] intArray0 = new int[6];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, 2000, 769, 6, 16);
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 47, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 31, (byte) 31, true);
        int[] intArray0 = new int[0];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, (-2741), (byte) 31, 101, 6);
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 89;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-127), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2011, (byte) (-120), true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1355), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 99, (byte) (-7), true);
        uTF8StreamJsonParser0.parseEscapedName((int[]) null, 3488, 6, 99, (-61));
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1355), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 99, (byte) (-7), true);
        uTF8StreamJsonParser0._parseName(12);
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-994), byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-514), (-1), true);
        uTF8StreamJsonParser0._parseName((byte) 119);
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2131), (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 2565, 92, true);
        uTF8StreamJsonParser0._parseName(192);
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2792), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (-1961), (byte) 0, true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 1418, (byte) 7, false);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test4952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 410, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 1105, 8, true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 89;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4048, dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) (-120), (byte) (-120), true);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-514), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 38, false);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 89;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 314, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 43, (-1322), true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        uTF8StreamJsonParser0._handleUnexpectedValue(91);
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 79, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 550, 550, false);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test5558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 8, (byte) 8, true);
        uTF8StreamJsonParser0._handleInvalidNumberStart((byte) (-16), true);
    }

    @Test(timeout = 4000)
    public void test5659() throws Throwable {
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());
        doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 128, (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (-514), (byte) (-7), true);
        uTF8StreamJsonParser0._matchToken("MIME-NO-LINEFEEDS", (byte) (-7));
    }

    @Test(timeout = 4000)
    public void test5760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 650, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-7), (byte) (-7), true);
        uTF8StreamJsonParser0._matchToken("", (-2154));
    }

    @Test(timeout = 4000)
    public void test5861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-7), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        uTF8StreamJsonParser0._matchToken("", (-3));
    }

    @Test(timeout = 4000)
    public void test5962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "|8EET1.K7YMPRyVPq", false);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, 3, false);
        uTF8StreamJsonParser0.nextLongValue(671L);
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, (byte) 1);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 65536, dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 97, (byte) (-127), true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 7, (byte) 7, false);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test6265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1306), (InputStream) null, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 91, (byte) (-7), true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test6366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, " +%?1{N(R1EI", true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 34);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2000);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-11);
        byteArray0[1] = (byte) (-127);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 0, (byte) 97, true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test6467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, 515);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
        DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-734), dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 1, 2000, true);
        uTF8StreamJsonParser0._skipCR();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test6568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 53, (byte) (-47), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test6669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 70, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 550, 5, false);
        uTF8StreamJsonParser0._reportInvalidToken(" in field name");
    }

    @Test(timeout = 4000)
    public void test6770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[3] = (byte) 38;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 70, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 550, 5, false);
        uTF8StreamJsonParser0._reportInvalidToken(" in field name");
    }
}
