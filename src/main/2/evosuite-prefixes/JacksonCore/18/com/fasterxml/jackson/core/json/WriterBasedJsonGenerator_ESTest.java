/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 17:28:00 GMT 2024
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.Base64Variant;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.base.GeneratorBase;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class WriterBasedJsonGenerator_ESTest extends WriterBasedJsonGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 84, (ObjectCodec) null, stringWriter0);
        Object object0 = writerBasedJsonGenerator0.getOutputTarget();
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        writerBasedJsonGenerator0.writeUTF8String(byteArray0, (byte) 0, 0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1043), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRawUTF8String((byte[]) null, 0, 7);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBooleanField("", true);
        writerBasedJsonGenerator0.writeFieldName("SYmd n\u0003;3!:B");
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ": expected close marer for ", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("*CG\"9");
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("nLCi6uD,vU#Vq9&Cl(");
        SerializedString serializedString0 = new SerializedString("@");
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[4];
        writerBasedJsonGenerator0.writeString(charArray0, 1, (-64));
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter((SerializableString) null);
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        byte[] byteArray0 = new byte[3];
        writerBasedJsonGenerator0.writeBinaryField("nLmCivu,vL#Vq9&Cl(", byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Q4t^1:", false);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2516), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartArray();
        SerializedString serializedString0 = new SerializedString("X9v~8");
        writerBasedJsonGenerator0._writeFieldName(serializedString0, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2516), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString("t4Jt/%'<#3~YaKD6K");
        int[] intArray0 = new int[0];
        writerBasedJsonGenerator0.writeArray(intArray0, 3, 2);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber("F~z<%Bl|[c6cOZhV");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Q4t^1:", false);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2516), (ObjectCodec) null, stringWriter0);
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeStartObject();
        jsonGenerator0.writeEndObject();
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString("t4Jt/%'+#p~YaKD6K");
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        BigInteger bigInteger0 = BigInteger.ZERO;
        IOContext iOContext0 = new IOContext(bufferRecycler0, bigInteger0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeRaw("t4Jt%'+#p~YaKD6K");
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeEndObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeRaw("t4Jt%'+#p~YaKD6K");
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 91, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._writePPFieldName(") not numeric, can not use numeric value accessors", true);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Q4t^1:", false);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2516), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0._writeFieldName("", false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber("F~z<%Bl|[c6cOZhV");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString("b");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber("F~z<%Bl|[c6cOZhV");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString("b");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString("t4Jt/%'<#3~YaKD6K");
        char[] charArray0 = iOContext0.allocNameCopyBuffer((-678));
        writerBasedJsonGenerator0.writeString(charArray0, 1910, 2);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeNumber(8);
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 13, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        char[] charArray0 = new char[4];
        writerBasedJsonGenerator0.writeString(charArray0, 1, (-64));
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRawValue((String) null, 1, 1);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeRaw("n89#1\"^hDjCR<{HrN{", 0, 4000);
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(1);
        IOContext iOContext0 = new IOContext(bufferRecycler0, stringWriter0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        writerBasedJsonGenerator0.writeRaw(charArray0, 3, 1029);
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeRaw('M');
        writerBasedJsonGenerator0.writeRaw('C');
        writerBasedJsonGenerator1._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, true);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinaryField("ND", byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString("t4Jt/%'<#3~YaKDzK");
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        writerBasedJsonGenerator0.writeBinary((Base64Variant) null, (InputStream) mockFileInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 1916);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        writerBasedJsonGenerator0.writeBinary((InputStream) sequenceInputStream0, (-3579));
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) sequenceInputStream0, (-4296));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        writerBasedJsonGenerator0.writeBinary((InputStream) sequenceInputStream0, (-3579));
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) sequenceInputStream0, (-4296));
    }

    @Test(timeout = 4000)
    public void test3639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((short) (-167));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2516), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((short) 783);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((short) (-885));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("yNF\"CH7", 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 58, 3318);
        writerBasedJsonGenerator0.writeString(charArray0, (int) (byte) 24, 3);
        writerBasedJsonGenerator0.writeNumber(3576);
        writerBasedJsonGenerator0.writeFieldName("Current token (%s) not of boolean type");
        writerBasedJsonGenerator0.writeNumber(0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(243L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(6523L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(243L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 58, 3318);
        writerBasedJsonGenerator0.writeString(charArray0, (int) (byte) 24, 3);
        writerBasedJsonGenerator0.writeNumber((float) 3318);
        writerBasedJsonGenerator0.writeFieldName("o/B4KD*kq3p^a2Km");
        BigInteger bigInteger0 = BigInteger.TEN;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.writeNumber(6523L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3992, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, " (KhCDg/0/]", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3993, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, " (KhCDg/0/]", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 84, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 0);
        writerBasedJsonGenerator0._verifyPrettyValueWrite("w[BseVW6vvWwP3+q4");
    }

    @Test(timeout = 4000)
    public void test5053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nYzs##Qt^i:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3010, (ObjectCodec) null, stringWriter0);
        BigDecimal bigDecimal0 = new BigDecimal(0.0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigDecimal) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        BigInteger bigInteger0 = BigInteger.valueOf(2);
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2067), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "FsQt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2518), (ObjectCodec) null, stringWriter0);
        BigDecimal bigDecimal0 = new BigDecimal(2);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigDecimal bigDecimal0 = new BigDecimal((long) 57343);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nF(#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(57343);
        StringWriter stringWriter0 = new StringWriter(3098);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3618, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 123, 1329);
        SerializedString serializedString0 = new SerializedString("nF(#Qt^1:");
        writerBasedJsonGenerator0.writeRaw((SerializableString) serializedString0);
        writerBasedJsonGenerator0._writeFieldName("nF(#Qt^1:", false);
        writerBasedJsonGenerator0.writeNumber("BheC(DipIB$ A");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 0, 3318);
        writerBasedJsonGenerator0.writeString(charArray0, (int) (byte) 1, 3);
        writerBasedJsonGenerator0.writeNumber((float) 3318);
        writerBasedJsonGenerator0.writeFieldName("oP/B4KD*kq3,p^aIKm");
        writerBasedJsonGenerator0._writeFieldName("oP/B4KD*kq3,p^aIKm", false);
        writerBasedJsonGenerator0.writeNumber("0]unb4");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 1;
        writerBasedJsonGenerator0.writeBooleanField("", true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1`:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBooleanField("write a string", false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test5962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeNumber(1424.5348F);
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber(1424.5348F);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString("t4Jt%'+#p~YaKD6K");
        writerBasedJsonGenerator0.writeRaw("t4Jt%'+#p~YaKD6K");
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test6265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0._verifyPrettyValueWrite("");
    }

    @Test(timeout = 4000)
    public void test6366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 84, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray(2479);
        writerBasedJsonGenerator0.writeNumber((float) 0);
        writerBasedJsonGenerator0._verifyPrettyValueWrite("w[BseVW6vvWwP3+q4");
    }

    @Test(timeout = 4000)
    public void test6467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._verifyPrettyValueWrite((String) null);
    }

    @Test(timeout = 4000)
    public void test6568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test6669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test6770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 56319, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test6871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test6972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 84, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test7073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ": expected close marker for ", true);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test7174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test7275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test7376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString("b");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test7477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ": expected close marer for ", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[10];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeNumber((double) 0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test7578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("\"iH;JzL$RPnNjp");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test7579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("\"iH;JzL$RPnNjp");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test7680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._maximumNonEscapedChar = 3;
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString("t4Jt/%'<#3~YaKDzK");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test7781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0._writeFieldName("#1T&^qv", false);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test7882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 1;
        writerBasedJsonGenerator0.writeFieldName("SYmd n\u0003;3!:B");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test7983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ": expected close marer for ", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("*CG\"9");
        int[] intArray0 = new int[10];
        serializedString0.appendQuoted(charArray0, 3);
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString(charArray0, 3, 58);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 1;
        char[] charArray0 = iOContext0.allocNameCopyBuffer((-2235));
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ": expected close marer for ", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 58, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("*CG\"9");
        serializedString0.appendQuoted(charArray0, 3);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 58);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._maximumNonEscapedChar = 61;
        writerBasedJsonGenerator0.writeFieldName("/Xa?:g");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1456, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._writeFieldName("B9&l|i\"w7HzX~(+", false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-614), (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0._writeFieldName("r2>'tP(y}bD^R3Si*", false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(#LQt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._maximumNonEscapedChar = 2;
        char[] charArray0 = new char[22];
        charArray0[0] = '';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nYzs##Qt^i:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3044, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputBuffer = charArray0;
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3044);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3992, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        charArray0[2] = 'l';
        writerBasedJsonGenerator0.writeString(charArray0, 1, 2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinaryField("nLmCivu,vL#Vq9&Cl(", byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test8993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        byte[] byteArray0 = new byte[1];
        writerBasedJsonGenerator0.writeBinaryField("", byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test9094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nYzs##Qt^i:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[2];
        writerBasedJsonGenerator0.writeBinaryField("nYzs##Qt^i:", byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test9195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) null, 0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test9196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) null, 0);
    }

    @Test(timeout = 4000)
    public void test9297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = new byte[4];
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 0, 3318);
        writerBasedJsonGenerator0._writeFieldName("=!Cq7`x<WL')V4", true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        writerBasedJsonGenerator0.writeObjectField("=!Cq7`x<WL')V4", (Object) null);
        writerBasedJsonGenerator0._writeFieldName("Current context not an ARRAY but ", true);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test9298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(2);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = new byte[4];
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 564, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 0, 3318);
        writerBasedJsonGenerator0._writeFieldName("=!Cq7`x<WL')V4", true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        writerBasedJsonGenerator0.writeObjectField("=!Cq7`x<WL')V4", (Object) null);
        writerBasedJsonGenerator0._writeFieldName("Current context not an ARRAY but ", true);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test9399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/FAIL_ON_SYMBOL_HASH_OVERFLOW0");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "nFs#Qt^1:");
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        mockFileInputStream0.skip(2);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 1916);
    }

    @Test(timeout = 4000)
    public void test94100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "com.fasterxml.jackson.core.Version", true);
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/FAIL_ON_SYMBOL_HASH_OVERFLOW0");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.fasterxml.jackson.core.Version");
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3887, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, (-463));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test94101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "com.fasterxml.jackson.core.Version", true);
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/FAIL_ON_SYMBOL_HASH_OVERFLOW0");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.fasterxml.jackson.core.Version");
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3887, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, (-463));
    }

    @Test(timeout = 4000)
    public void test95102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "com.fasterxml.jackson.core.Version", true);
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/FAIL_ON_SYMBOL_HASH_OVERFLOW0");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.fasterxml.jackson.core.Version");
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "y");
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3887, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, (-463));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test95103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "com.fasterxml.jackson.core.Version", true);
        EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/FAIL_ON_SYMBOL_HASH_OVERFLOW0");
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "com.fasterxml.jackson.core.Version");
        File file0 = MockFile.createTempFile("FAIL_ON_SYMBOL_HASH_OVERFLOW", "");
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
        FileSystemHandling.appendLineToFile(evoSuiteFile0, "y");
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3887, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, (-463));
    }

    @Test(timeout = 4000)
    public void test96104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeString((String) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test97105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "ntF(#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        writerBasedJsonGenerator0._entityBuffer = charArray0;
        writerBasedJsonGenerator0.writeFieldName("\"iH;JzL$RPnNjp");
        writerBasedJsonGenerator0.getOutputBuffered();
    }
}
