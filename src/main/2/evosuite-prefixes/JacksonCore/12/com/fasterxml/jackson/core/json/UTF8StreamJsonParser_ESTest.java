/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 17:04:07 GMT 2024
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonEncoding;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.core.util.BufferRecycler;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UTF8StreamJsonParser_ESTest extends UTF8StreamJsonParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pushbackInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 0, true);
        uTF8StreamJsonParser0.nextIntValue((byte) 91);
        uTF8StreamJsonParser0.parseLongName((byte) 91, 5575, 7);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[11];
        byteArray0[1] = (byte) (-76);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-32768), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 98, false);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-602), true);
        uTF8StreamJsonParser0.parseMediumName2(1, 69);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), 1, false);
        uTF8StreamJsonParser0.readValueAs((TypeReference<?>) null);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 3, 0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        SerializedString serializedString0 = new SerializedString(" bytes");
        byte[] byteArray1 = serializedString0.asUnquotedUTF8();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 115, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, (byte) 3, 32767, false);
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        byte[] byteArray0 = new byte[18];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 101);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 586, pushbackInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 246, 329, false);
        uTF8StreamJsonParser0.setCodec((ObjectCodec) null);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 119, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1669, false);
        ByteArrayInputStream byteArrayInputStream1 = (ByteArrayInputStream) uTF8StreamJsonParser0.getInputSource();
        byteArrayInputStream1.available();
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        byte[] byteArray0 = new byte[8];
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 589, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        uTF8StreamJsonParser0.releaseBuffered((OutputStream) byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, false);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1337, (byte) 0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) 47;
        byteArray0[4] = (byte) 92;
        byteArray0[5] = (byte) 47;
        byteArray0[6] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 47, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 2, true);
        uTF8StreamJsonParser0.nextIntValue((-302));
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_WRITE_ENCODING_BUFFER, false);
        byte[] byteArray0 = new byte[0];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1992, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1023, 2, false);
        uTF8StreamJsonParser0.nextFieldName();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 119, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1669, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(128);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test01112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 119, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1669, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(128);
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 8, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, (byte) (-114), true);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(123);
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3456, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 16, 0, true);
        uTF8StreamJsonParser0._loadToHaveAtLeast(3);
    }

    @Test(timeout = 4000)
    public void test01415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        byte[] byteArray0 = new byte[9];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 48, true);
        uTF8StreamJsonParser0._loadToHaveAtLeast(1655);
    }

    @Test(timeout = 4000)
    public void test01516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3456, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 16, (-1), true);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-206));
    }

    @Test(timeout = 4000)
    public void test01617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString(" bytes");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2, (-19));
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1759, 1124, false);
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test01718() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        byte[] byteArray0 = new byte[4];
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 73, 1, true);
        String string0 = uTF8StreamJsonParser0.getText();
    }

    @Test(timeout = 4000)
    public void test01819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 32, false);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
    }

    @Test(timeout = 4000)
    public void test01920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_READ_IO_BUFFER, false);
        byte[] byteArray0 = new byte[0];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1992, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1023, 2, false);
        String string0 = uTF8StreamJsonParser0.getValueAsString((String) null);
    }

    @Test(timeout = 4000)
    public void test02021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, false);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString("`kC[2ENWYUTO&MT:");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, 1, false);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
    }

    @Test(timeout = 4000)
    public void test02122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 397, false);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(65536);
    }

    @Test(timeout = 4000)
    public void test02223() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 7, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 31, (byte) (-52), true);
        JsonToken jsonToken0 = JsonToken.VALUE_NULL;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3929, (byte) 109, true);
        JsonToken jsonToken0 = JsonToken.FIELD_NAME;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
        byte[] byteArray0 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 248, dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 248, (byte) 9, true);
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 3);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2922, 2922, false);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 3, true);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, dataInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, 3, true);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
    }

    @Test(timeout = 4000)
    public void test02829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3377), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
    }

    @Test(timeout = 4000)
    public void test02930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-3284), 1114111, true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
    }

    @Test(timeout = 4000)
    public void test03031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 52, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1423, 0, false);
        uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getTextOffset();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test03032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 52, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1423, 0, false);
        uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test03133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_WRITE_ENCODING_BUFFER, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 123, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, 57, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
        uTF8StreamJsonParser0.readBinaryValue((OutputStream) pipedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 56319, false);
        uTF8StreamJsonParser0._tokenIncomplete = true;
        uTF8StreamJsonParser0.nextIntValue(45);
    }

    @Test(timeout = 4000)
    public void test03335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 125;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 358, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test03436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 48;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, false);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 221, (byte) 0, false);
        uTF8StreamJsonParser0.nextIntValue(838);
    }

    @Test(timeout = 4000)
    public void test03537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, false);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString("`kC[2ENWYUTO&MT:");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 961, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 2125, true);
        uTF8StreamJsonParser0.nextTextValue();
        uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test03638() throws Throwable {
        byte[] byteArray0 = new byte[18];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pushbackInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 0, true);
        pushbackInputStream0.unread((-2204));
        uTF8StreamJsonParser0.nextIntValue((byte) 0);
    }

    @Test(timeout = 4000)
    public void test03739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_WRITE_CONCAT_BUFFER, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 125;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1370), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 15, 3, true);
        SerializedString serializedString0 = new SerializedString("8DFN9+oIJCK~QO`");
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test03840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 125;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 775, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 125, 1, false);
        uTF8StreamJsonParser0.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test03941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 34, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 91, 39, false);
        uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test04042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[7];
        byteArray0[3] = (byte) 54;
        byteArray0[4] = (byte) 49;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 397, false);
        uTF8StreamJsonParser0.nextToken();
    }

    @Test(timeout = 4000)
    public void test04143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3881), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (byte) 47, true);
        uTF8StreamJsonParser0.nextFieldName();
        uTF8StreamJsonParser0._parsePosNumber(3);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test04144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3881), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (byte) 47, true);
        uTF8StreamJsonParser0.nextFieldName();
        uTF8StreamJsonParser0._parsePosNumber(3);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test04145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3881), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (byte) 47, true);
        uTF8StreamJsonParser0.nextFieldName();
        uTF8StreamJsonParser0._parsePosNumber(3);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test04246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 93, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 454, (-1), true);
        uTF8StreamJsonParser0._decodeEscaped();
        uTF8StreamJsonParser0._parseNegNumber();
    }

    @Test(timeout = 4000)
    public void test04347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 0, false);
        uTF8StreamJsonParser0._parseNegNumber();
    }

    @Test(timeout = 4000)
    public void test04448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[11];
        byteArray0[0] = (byte) 123;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 0, false);
        uTF8StreamJsonParser0._parseNegNumber();
    }

    @Test(timeout = 4000)
    public void test04549() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        byte[] byteArray0 = new byte[4];
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 73, 1, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(48);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test04650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 52;
        byteArray0[1] = (byte) 52;
        byteArray0[2] = (byte) (-60);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3377), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        uTF8StreamJsonParser0.nextTextValue();
    }

    @Test(timeout = 4000)
    public void test04751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[2];
        byteArray1[0] = (byte) 75;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 75, true);
        uTF8StreamJsonParser0._parsePosNumber(48);
    }

    @Test(timeout = 4000)
    public void test04852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString("9OE/");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 1);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, 16, false);
        uTF8StreamJsonParser0._parsePosNumber(110);
    }

    @Test(timeout = 4000)
    public void test04953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 9;
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_BE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1448, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 56319, 1495, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(3);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test04954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 9;
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_BE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1448, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 56319, 1495, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(3);
    }

    @Test(timeout = 4000)
    public void test05055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[7];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 3, 0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        SerializedString serializedString0 = new SerializedString(" bytes");
        byte[] byteArray1 = serializedString0.asUnquotedUTF8();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, 1, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber((byte) 3);
    }

    @Test(timeout = 4000)
    public void test05156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[32];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[7];
        byteArray1[3] = (byte) 91;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 71, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 3, (-896), false);
        uTF8StreamJsonParser0.parseMediumName(71);
    }

    @Test(timeout = 4000)
    public void test05257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[32];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[7];
        byteArray1[3] = (byte) 91;
        byteArray1[4] = (byte) 91;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 71, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 3, (-896), false);
        uTF8StreamJsonParser0.parseMediumName(71);
    }

    @Test(timeout = 4000)
    public void test05358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 80;
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-602), true);
        uTF8StreamJsonParser0.parseMediumName2(1, 69);
    }

    @Test(timeout = 4000)
    public void test05459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 80;
        byteArray0[1] = (byte) 80;
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-602), true);
        uTF8StreamJsonParser0.parseMediumName2(1, 69);
    }

    @Test(timeout = 4000)
    public void test05560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (byte) 47, true);
        uTF8StreamJsonParser0._decodeEscaped();
        uTF8StreamJsonParser0.parseMediumName2(61, 192);
    }

    @Test(timeout = 4000)
    public void test05661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString("`kC[2ENWYUTO&MT:");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, 98, true);
        uTF8StreamJsonParser0.parseMediumName(252);
    }

    @Test(timeout = 4000)
    public void test05762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 2, false);
        uTF8StreamJsonParser0.parseLongName(1, 98, 2);
    }

    @Test(timeout = 4000)
    public void test05863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) 98;
        byteArray0[1] = (byte) 98;
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 592, false);
        uTF8StreamJsonParser0.parseLongName((-2719), (byte) 98, (byte) 98);
    }

    @Test(timeout = 4000)
    public void test05964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) 98;
        byteArray0[1] = (byte) 98;
        byteArray0[2] = (byte) 98;
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 589, false);
        uTF8StreamJsonParser0.parseLongName((-2719), (byte) 98, 18);
    }

    @Test(timeout = 4000)
    public void test06065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 76, false);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test06166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        byte[] byteArray0 = new byte[7];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 98, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 98, (-1184), false);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test06267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) (-9), true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test06368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) 47;
        byteArray0[4] = (byte) 92;
        byteArray0[5] = (byte) 47;
        byteArray0[6] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (byte) 47, true);
        uTF8StreamJsonParser0._decodeEscaped();
        uTF8StreamJsonParser0.parseMediumName((byte) 47);
    }

    @Test(timeout = 4000)
    public void test06469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 12, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 21, 0, false);
        int[] intArray0 = new int[2];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, 1746, 12, (byte) 34, (-849));
    }

    @Test(timeout = 4000)
    public void test06570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-976), 240, true);
        int[] intArray0 = new int[2];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, 2087, 98, 240, 98);
    }

    @Test(timeout = 4000)
    public void test06671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-651), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-651), false);
        uTF8StreamJsonParser0.parseMediumName(2);
    }

    @Test(timeout = 4000)
    public void test06772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((byte) 112);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 112, dataInputStream0, objectCodec0, byteQuadsCanonicalizer1, byteArray0, (byte) 34, (byte) 112, true);
        int[] intArray0 = new int[2];
        uTF8StreamJsonParser0.parseEscapedName(intArray0, 3, (byte) 112, (byte) 34, (byte) 34);
    }

    @Test(timeout = 4000)
    public void test06873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (-895), true);
        uTF8StreamJsonParser0._parseName(39);
    }

    @Test(timeout = 4000)
    public void test06974() throws Throwable {
        byte[] byteArray0 = new byte[18];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 91, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-72), false);
        uTF8StreamJsonParser0._parseName(3);
    }

    @Test(timeout = 4000)
    public void test07075() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 91;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 14, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, (-2260), true);
        uTF8StreamJsonParser0.nextFieldName((SerializableString) null);
        uTF8StreamJsonParser0._parseName(117);
    }

    @Test(timeout = 4000)
    public void test07176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        SerializedString serializedString0 = new SerializedString("9OE/");
        byte[] byteArray0 = serializedString0.asUnquotedUTF8();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 127, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (-766), false);
        uTF8StreamJsonParser0._parseName(64);
    }

    @Test(timeout = 4000)
    public void test07277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 3, 0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        SerializedString serializedString0 = new SerializedString(" bytes");
        byte[] byteArray1 = serializedString0.asUnquotedUTF8();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1544, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, (byte) 3, 32767, false);
        uTF8StreamJsonParser0._parseName(115);
    }

    @Test(timeout = 4000)
    public void test07378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 10, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer1, byteArray0, 0, (-1043), false);
        uTF8StreamJsonParser0._parseName(230);
    }

    @Test(timeout = 4000)
    public void test07479() throws Throwable {
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_BE;
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-3377), 0, false);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test07580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test07681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-79);
        byteArray0[1] = (byte) 116;
        byteArray0[2] = (byte) 39;
        pipedOutputStream0.write(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 39, 2, true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test07782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        byte[] byteArray0 = iOContext0.allocBase64Buffer();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 177, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 2, true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test07883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) 47;
        byteArray0[4] = (byte) 47;
        byteArray0[5] = (byte) 47;
        byteArray0[6] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (-440), false);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test07984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        byte[] byteArray0 = iOContext0.allocBase64Buffer();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 177, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 2, true);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test08085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) 47;
        byteArray0[4] = (byte) 92;
        byteArray0[5] = (byte) 47;
        byteArray0[6] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-1226), false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test08186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 52;
        byteArray0[1] = (byte) 52;
        byteArray0[2] = (byte) (-60);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3377), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test08287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_BASE64_CODEC_BUFFER, true);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 125;
        byteArray0[1] = (byte) 125;
        byteArray0[2] = (byte) (-29);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 1, true);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test08388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 71;
        byteArray0[1] = (byte) 71;
        byteArray0[2] = (byte) 71;
        byteArray0[3] = (byte) 71;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 117, 2, false);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test08489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-55);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1023, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 128, 69, true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test08590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[2] = (byte) (-11);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1023, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, 69, true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test08691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, false);
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) (-68);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1840, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, (-69), false);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test08792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) 43;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 30, 3, false);
        uTF8StreamJsonParser0.nextIntValue(2);
    }

    @Test(timeout = 4000)
    public void test08893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2571, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 91, 15, true);
        uTF8StreamJsonParser0._handleUnexpectedValue(93);
    }

    @Test(timeout = 4000)
    public void test08994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.BYTE_WRITE_ENCODING_BUFFER, true);
        byte[] byteArray0 = new byte[3];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        PipedInputStream pipedInputStream0 = new PipedInputStream(3831);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 125, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, 2, true);
        uTF8StreamJsonParser0._handleUnexpectedValue((byte) 125);
    }

    @Test(timeout = 4000)
    public void test09095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 9;
        byteArray0[1] = (byte) 9;
        byteArray0[2] = (byte) (-96);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 50);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 101, byteArrayInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 101, (-1832), true);
        uTF8StreamJsonParser0.nextLongValue(3225L);
    }

    @Test(timeout = 4000)
    public void test09196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 52;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3377), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test09297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        byte[] byteArray0 = new byte[7];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 56, 2122, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test09398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, false);
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 39;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-896), (-1722), true);
        byteArrayInputStream0.read();
        JsonToken jsonToken0 = uTF8StreamJsonParser0._handleApos();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test09499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) 52;
        byteArray0[2] = (byte) (-60);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 52, false);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test095100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-10);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1196, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 45, 0, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test096101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) (-85);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (byte) (-85), true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test097102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 3, 0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-2), 3, true);
        uTF8StreamJsonParser0._matchToken("O#1TN", 2655);
    }

    @Test(timeout = 4000)
    public void test098103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        byte[] byteArray0 = new byte[7];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, fileDescriptor0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-5888), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1653, (-547), false);
        byteArrayInputStream0.read(byteArray0);
        uTF8StreamJsonParser0._matchToken("h*<q>x.", (-2203));
    }

    @Test(timeout = 4000)
    public void test099104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1994, 1, true);
        uTF8StreamJsonParser0._matchToken("O#1TN", 0);
    }

    @Test(timeout = 4000)
    public void test100105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        byte[] byteArray1 = new byte[6];
        byteArray1[0] = (byte) 32;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 118, false);
        uTF8StreamJsonParser0.nextIntValue(3);
    }

    @Test(timeout = 4000)
    public void test101106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 10;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 10, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 458, 43, false);
        uTF8StreamJsonParser0.nextIntValue(43);
    }

    @Test(timeout = 4000)
    public void test102107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[2];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 104, 3, true);
        uTF8StreamJsonParser0.nextLongValue(0L);
    }

    @Test(timeout = 4000)
    public void test103108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 10;
        byteArray0[1] = (byte) 10;
        byteArray0[2] = (byte) 10;
        byteArray0[3] = (byte) 10;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 10, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 458, 43, false);
        int int0 = uTF8StreamJsonParser0.nextIntValue(43);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test103109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 10;
        byteArray0[1] = (byte) 10;
        byteArray0[2] = (byte) 10;
        byteArray0[3] = (byte) 10;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 10, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 458, 43, false);
        int int0 = uTF8StreamJsonParser0.nextIntValue(43);
    }

    @Test(timeout = 4000)
    public void test104110() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[0] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pushbackInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 0, true);
        uTF8StreamJsonParser0.nextIntValue(115);
    }

    @Test(timeout = 4000)
    public void test105111() throws Throwable {
        byte[] byteArray0 = new byte[18];
        byteArray0[2] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 47, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 3, true);
        uTF8StreamJsonParser0.nextIntValue((byte) 47);
    }

    @Test(timeout = 4000)
    public void test106112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 47, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 102, (byte) 47, true);
        uTF8StreamJsonParser0.nextIntValue(3);
    }

    @Test(timeout = 4000)
    public void test107113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 47;
        byteArray0[1] = (byte) 47;
        byteArray0[2] = (byte) 47;
        byteArray0[3] = (byte) (-51);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 47, sequenceInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, (-436), (-436), true);
        SerializedString serializedString0 = new SerializedString("");
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test108114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1860), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 0, true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test109115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) 98;
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 4, (byte) 98, false);
        char char0 = uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test110116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) (-55);
        byteArray0[1] = (byte) (-11);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 115, 102, true);
        uTF8StreamJsonParser0.nextIntValue(0);
    }

    @Test(timeout = 4000)
    public void test111117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-896), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-896), true);
        uTF8StreamJsonParser0._parseName((-576));
    }

    @Test(timeout = 4000)
    public void test112118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[18];
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 114, sequenceInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, true);
        uTF8StreamJsonParser0._parseName(236);
    }

    @Test(timeout = 4000)
    public void test113119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) (-128);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 93, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 454, (-1), true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test114120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-64);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-16), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 128, 0, true);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test115121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) (-51);
        byteArray0[1] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-390), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1144, 3, false);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test116122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        byteArray0[2] = (byte) (-16);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 110, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, 3, false);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test117123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3377), byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 1, true);
        uTF8StreamJsonParser0._skipCR();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test118124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 25, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test119125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonEncoding0, true);
        byte[] byteArray0 = new byte[18];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 47, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 47, (-830), false);
        uTF8StreamJsonParser0._skipCR();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test120126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[1] = (byte) 30;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1994, 1, true);
        uTF8StreamJsonParser0._matchToken("O#1TN", 0);
    }

    @Test(timeout = 4000)
    public void test121127() throws Throwable {
        int[] intArray0 = UTF8StreamJsonParser.growArrayBy((int[]) null, 2113);
    }

    @Test(timeout = 4000)
    public void test122128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 50);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 101, byteArrayInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 101, (-1832), true);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getCharOffset();
    }

    @Test(timeout = 4000)
    public void test122129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 50);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 101, byteArrayInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 101, (-1832), true);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getLineNr();
    }
}
