/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 17:35:44 GMT 2024
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.Base64Variant;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UTF8StreamJsonParser_ESTest extends UTF8StreamJsonParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4117, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 3, false);
        uTF8StreamJsonParser0.parseMediumName(57);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1091, (byte) 115, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 16, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 101, false);
        uTF8StreamJsonParser0.parseMediumName2(1, 101);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        doReturn(pushbackInputStream0).when(objectCodec0).readValue(any(com.fasterxml.jackson.core.JsonParser.class), any(java.lang.Class.class));
        doReturn((String) null).when(objectCodec0).toString();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        Class<Object> class0 = Object.class;
        Object object0 = uTF8StreamJsonParser0.readValueAs(class0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        byte[] byteArray0 = new byte[4];
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 50, true);
        uTF8StreamJsonParser0._matchToken("49u&;9|_mN", 3);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1113, bufferedInputStream0, (ObjectCodec) null, (ByteQuadsCanonicalizer) null, byteArray0, (-1364), (-653), true);
        uTF8StreamJsonParser0.setCodec((ObjectCodec) null);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(1);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 13, 2, false);
        Object object0 = uTF8StreamJsonParser0.getInputSource();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.releaseBuffered((OutputStream) pipedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        int int0 = uTF8StreamJsonParser0.releaseBuffered((OutputStream) byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.nextTextValue();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[0];
        SerializedString serializedString0 = new SerializedString("");
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (-2280), false);
        boolean boolean0 = uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        byte[] byteArray0 = new byte[0];
        SerializedString serializedString0 = new SerializedString("");
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, (-2280), false);
        boolean boolean0 = uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2846), mockFileInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (-2636), true);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-2061));
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(39);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[14];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-642), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 53, true);
        uTF8StreamJsonParser0._loadToHaveAtLeast(2);
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 6, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-922), 57, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((byte) 0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 6, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-922), 57, false);
        boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((byte) 0);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-968), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3923), 2, false);
        uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.parseLongName((-2302), (byte) 0, (-1841));
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test1637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test1638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
    }

    @Test(timeout = 4000)
    public void test1648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test1649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test1650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test1651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test1652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test1653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test1654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test1655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test1656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test1657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test1658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test1659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test1660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
    }

    @Test(timeout = 4000)
    public void test1670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test1671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test1672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test1673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test1674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test1675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test1676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test1677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test1678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test1679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test1680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test1681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test1682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test1683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test1684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test1685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test1686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test1687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test1688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test1689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test1690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test1692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test1693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test1694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test1695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test1696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test1697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test1698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.nextLongValue(1);
    }

    @Test(timeout = 4000)
    public void test17108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test17109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test17110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test17111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test17120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test17121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test17122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test17123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test17124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test17125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test17126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test17127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test17128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test17129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test17130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test17131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test17132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test17133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
    }

    @Test(timeout = 4000)
    public void test17142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test17143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test17144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test17145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test17146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test17147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test17148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test17149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test17150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test17151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test17152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test17153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test17154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test17155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test17156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test17157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test17158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test17159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test17160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test17161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test17162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test17163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test17164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test17165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test17166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test17167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test17168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test17169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test17170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test17171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
    }

    @Test(timeout = 4000)
    public void test17179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test17180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test17181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test17182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test17183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test17184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test17185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test17186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test17187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test17188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test17189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test17190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test17191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test17192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test17193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test17194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test17195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test17196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test17197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test17198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test17199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test17200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test17201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test17202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test17203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test17204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test17205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test17206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test17207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2277, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, (byte[]) null, (-2983), 3, true);
        uTF8StreamJsonParser0._releaseBuffers();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test18228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test18229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test18230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test18231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test18232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test18233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test18234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test18235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test18236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test18237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test18238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
    }

    @Test(timeout = 4000)
    public void test18249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test18250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test18251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test18252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test18253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test18254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test18255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test18256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test18257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test18258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test18259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test18260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test18261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test18262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test18263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test18264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test18265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test18266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test18267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test18268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test18269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test18270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test18271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test18272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test18273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test18274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test18275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test18276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test18277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
    }

    @Test(timeout = 4000)
    public void test18288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test18289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test18290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test18291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test18292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test18293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test18294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test18295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test18296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test18297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test18298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test18299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test18300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test18301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test18302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test18303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test18304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test18305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test18306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test18307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test18308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test18309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test18310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test18311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test18312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test18313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test18314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test18315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        String string0 = uTF8StreamJsonParser0.getText();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test19396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
    }

    @Test(timeout = 4000)
    public void test19406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test19407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test19408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test19409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test19410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test19411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test19412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test19413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test19414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test19415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test19416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test19417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test19418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test19419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test19420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test19421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test19422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test19423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test19424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test19425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test19426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test19427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test19428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test19429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test19430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test19431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test19432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test19433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test20464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
    }

    @Test(timeout = 4000)
    public void test20475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test20476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test20477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test20478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test20479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test20480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test20481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test20482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test20483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test20484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test20485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test20486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test20487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test20488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test20489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test20490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test20491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test20492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test20493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test20494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test20495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test20496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test20497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test20498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test20499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test20500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test20501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test20502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test20503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
    }

    @Test(timeout = 4000)
    public void test20515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test20516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test20517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test20518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test20519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test20520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test20521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test20522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test20523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test20524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test20525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test20526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test20527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test20528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test20529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test20530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test20531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test20532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test20533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test20534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test20535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test20536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test20537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test20538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test20539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test20540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test20541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test20542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        String string0 = uTF8StreamJsonParser0.getValueAsString("C?ZM5E4M@!");
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test21563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test21566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test21567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test21568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test21569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test21570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test21571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test21572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test21573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test21574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test21575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test21576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test21577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
    }

    @Test(timeout = 4000)
    public void test21588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test21589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test21590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test21591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test21592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test21593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test21594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test21595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test21596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test21597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test21598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test21599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test21600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test21601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test21602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test21603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test21604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test21605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test21606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test21607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test21608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test21609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test21610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test21611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test21612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test21613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test21614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test21615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test21616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test21617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
    }

    @Test(timeout = 4000)
    public void test21628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test21629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test21630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test21631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test21632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test21633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test21634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test21635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test21636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test21637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test21638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test21639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test21640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test21641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test21642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test21643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test21644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test21645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test21646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test21647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test21648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test21649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test21650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test21651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test21652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test21653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test21654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test21655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test21656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 224, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test22677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    }

    @Test(timeout = 4000)
    public void test22678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test22679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test22680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test22681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test22682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test22683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test22684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test22685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test22686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test22687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test22688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test22689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test22690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
    }

    @Test(timeout = 4000)
    public void test22701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test22702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test22703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test22704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test22705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test22706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test22707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test22708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test22709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test22710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test22711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test22712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test22713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test22714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test22715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test22716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test22717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test22718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test22719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test22720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test22721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test22722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test22723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test22724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test22725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test22726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test22727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test22728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test22729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test22730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
    }

    @Test(timeout = 4000)
    public void test22741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test22742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test22743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test22744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test22745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test22746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test22747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test22748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test22749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test22750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test22751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test22752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test22753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test22754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test22755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test22756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test22757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test22758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test22759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test22760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test22761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test22762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test22763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test22764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test22765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test22766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test22767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test22768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test22769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 76, 3609, true);
        int int0 = uTF8StreamJsonParser0.getValueAsInt(3609);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test23779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test23788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test23789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test23790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test23793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test23794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test23795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test23796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test23797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test23798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test23799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test23800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test23801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test23802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test23803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test23804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
    }

    @Test(timeout = 4000)
    public void test23815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test23816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test23817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test23818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test23819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test23820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test23821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test23822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test23823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test23824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test23825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test23826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test23827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test23828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test23829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test23830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test23831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test23832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test23833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test23834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test23835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test23836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test23837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test23838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test23839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test23840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test23841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test23842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test23843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test23844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test23856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test23857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test23858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test23859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test23860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test23861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test23862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test23863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test23864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test23865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test23866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test23867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test23868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test23869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test23870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test23871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test23872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test23873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test23874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test23875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test23876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test23877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test23878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test23879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test23880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test23881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test23882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test23883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test23884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonToken jsonToken0 = JsonToken.VALUE_TRUE;
        String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test24915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
    }

    @Test(timeout = 4000)
    public void test24926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test24927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test24928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test24929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test24930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test24931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test24932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test24933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test24934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test24935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test24936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test24937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test24938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test24939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test24940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test24941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test24942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test24943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test24944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test24945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test24946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test24947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test24948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test24949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test24950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test24951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test24952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test24953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test24954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
    }

    @Test(timeout = 4000)
    public void test24965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test24966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test24967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test24968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test24969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test24970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test24971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test24972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test24973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test24974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test24975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test24976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test24977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test24978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test24979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test24980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test24981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test24982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test24983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test24984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test24985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test24986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test24987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test24988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test24989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test24990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test24991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test24992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test251005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test251006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test251007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test251016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test251017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test251018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test251019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test251020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test251021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test251022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test251023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test251024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test251025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test251026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test251027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test251028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test251029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
    }

    @Test(timeout = 4000)
    public void test251040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test251041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test251042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test251043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test251044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test251045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test251046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test251047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test251048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test251049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test251050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test251051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test251052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test251053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test251054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test251055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test251056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test251057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test251058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test251059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test251060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test251061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test251062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test251063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test251064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test251065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test251066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test251067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test251068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test251069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
    }

    @Test(timeout = 4000)
    public void test251080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test251081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test251082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test251083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test251084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test251085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test251086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test251087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test251088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test251089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test251090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test251091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test251092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test251093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test251094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test251095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test251096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test251097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test251098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test251099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test251100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test251101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test251102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test251103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test251104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test251105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test251106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test251107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test251108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 16, 3, true);
        int int0 = uTF8StreamJsonParser0.getTextLength();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test261178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
    }

    @Test(timeout = 4000)
    public void test261189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test261190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test261191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test261192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test261193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test261194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test261195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test261196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test261197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test261198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test261199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test261200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test261201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test261202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test261203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test261204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test261205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test261206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test261207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test261208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test261209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test261210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test261211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test261212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test261213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test261214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test261215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test261216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 93, (-220), true);
        int int0 = uTF8StreamJsonParser0.getTextOffset();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test271247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test271250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test271251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test271252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
    }

    @Test(timeout = 4000)
    public void test271265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteArray0.equals((Object) byteArray1);
    }

    @Test(timeout = 4000)
    public void test271266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test271267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test271268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test271269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test271270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test271271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test271272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test271273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test271274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test271275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test271276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test271277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test271278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test271279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test271280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test271281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test271282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test271283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test271284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test271285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test271286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test271287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test271288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test271289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test271290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test271291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test271292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test271293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test271294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test271295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test271296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byte[] byteArray1 = new byte[7];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 46, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 0, (byte) 0, true);
        uTF8StreamJsonParser0.getBinaryValue((Base64Variant) null);
    }

    @Test(timeout = 4000)
    public void test281317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test281320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test281321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test281322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test281323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test281324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test281325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test281326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test281327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test281328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test281329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test281330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test281331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
    }

    @Test(timeout = 4000)
    public void test281342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test281343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test281344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test281345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test281346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test281347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test281348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test281349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test281350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test281351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test281352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test281353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test281354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test281355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test281356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test281357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test281358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test281359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test281360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test281361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test281362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test281363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test281364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test281365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test281366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test281367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test281368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test281369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test281370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test281371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        SerializedString serializedString0 = new SerializedString("YaOwYg3'qp~Rjb>g8f");
    }

    @Test(timeout = 4000)
    public void test281372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        SerializedString serializedString0 = new SerializedString("YaOwYg3'qp~Rjb>g8f");
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test281373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        SerializedString serializedString0 = new SerializedString("YaOwYg3'qp~Rjb>g8f");
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test281374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        SerializedString serializedString0 = new SerializedString("YaOwYg3'qp~Rjb>g8f");
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test281375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 37, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 117, 3, true);
        SerializedString serializedString0 = new SerializedString("YaOwYg3'qp~Rjb>g8f");
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test291385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test291386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test291387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test291388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test291389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test291390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test291391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test291392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test291393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test291394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test291395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
    }

    @Test(timeout = 4000)
    public void test291404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test291405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test291406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test291407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test291408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test291409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test291410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test291411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test291412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test291413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test291414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test291415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
    }

    @Test(timeout = 4000)
    public void test291426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test291427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test291428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test291429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test291430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test291431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test291432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test291433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test291434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test291435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test291436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test291437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test291438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test291439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test291440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test291441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test291442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test291443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test291444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test291445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test291446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test291447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test291448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test291449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test291450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test291451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test291452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test291453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test291454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[0];
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteQuadsCanonicalizer0, true);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 422, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1371, 2057, true);
        uTF8StreamJsonParser0.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test301455() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test301456() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test301457() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test301458() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    }

    @Test(timeout = 4000)
    public void test301459() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
    }

    @Test(timeout = 4000)
    public void test301460() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test301461() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test301462() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test301463() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test301464() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test301465() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test301466() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test301467() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test301468() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test301469() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test301470() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
    }

    @Test(timeout = 4000)
    public void test301473() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test301474() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test301475() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test301476() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test301477() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test301478() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test301479() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test301480() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test301481() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test301482() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test301483() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test301484() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test301485() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test301486() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test301487() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test301488() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test301489() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test301490() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test301491() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test301492() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test301493() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test301494() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test301495() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test301496() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test301497() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test301498() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test301499() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test301500() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test301501() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
    }

    @Test(timeout = 4000)
    public void test301504() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test301505() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test301506() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test301507() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test301508() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test301509() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test301510() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test301511() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test301512() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test301513() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test301514() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test301515() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test301516() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test301517() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test301518() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test301519() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test301520() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test301521() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test301522() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test301523() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test301524() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test301525() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test301526() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test301527() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test301528() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test301529() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test301530() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test301531() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false, false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1369), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 42, (-1369), false);
        int int0 = uTF8StreamJsonParser0.nextIntValue((-1369));
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test311552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
    }

    @Test(timeout = 4000)
    public void test311562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test311563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test311564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test311565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test311566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test311567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test311568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test311569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test311570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test311571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test311572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test311573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test311574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
    }

    @Test(timeout = 4000)
    public void test311584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test311585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test311586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test311587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test311588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test311589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test311590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test311591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test311592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test311593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test311594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test311595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test311596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test311597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test311598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test311599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test311600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test311601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test311602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test311603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test311604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test311605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test311606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test311607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test311608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test311609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test311610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test311611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test311612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
    }

    @Test(timeout = 4000)
    public void test311622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test311623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test311624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test311625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test311626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test311627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test311628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test311629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test311630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test311631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test311632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test311633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test311634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test311635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test311636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test311637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test311638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test311639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test311640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test311641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test311642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test311643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test311644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test311645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test311646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test311647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test311648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test311649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, false);
        long long0 = uTF8StreamJsonParser0.nextLongValue(1);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test321659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test321668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test321669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test321670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
    }

    @Test(timeout = 4000)
    public void test321671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test321672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test321673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test321674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test321675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test321676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test321677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test321678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test321679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test321680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test321681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test321682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
    }

    @Test(timeout = 4000)
    public void test321693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test321694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test321695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test321696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test321697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test321698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test321699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test321700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test321701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test321702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test321703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test321704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test321705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test321706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test321707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test321708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test321709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test321710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test321711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test321712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test321713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test321714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test321715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test321716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test321717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test321718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test321719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test321720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test321721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test321722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test321733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test321734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test321735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test321736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test321737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test321738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test321739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test321740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test321741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test321742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test321743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test321744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test321745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test321746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test321747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test321748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test321749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test321750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test321751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test321752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test321753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test321754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test321755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test321756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test321757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test321758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test321759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test321760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test321761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        Boolean boolean0 = uTF8StreamJsonParser0.nextBooleanValue();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test331796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
    }

    @Test(timeout = 4000)
    public void test331807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test331808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test331809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test331810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test331811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test331812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test331813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test331814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test331815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test331816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test331817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test331818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test331819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test331820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test331821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test331822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test331823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test331824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test331825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test331826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test331827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test331828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test331829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test331830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test331831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test331832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test331833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test331834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test331835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test331836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0._parsePosNumber((-1241));
    }

    @Test(timeout = 4000)
    public void test341846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
    }

    @Test(timeout = 4000)
    public void test341855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test341856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test341857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test341858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test341859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test341860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test341861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test341862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test341863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test341864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test341865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test341866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test341867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
    }

    @Test(timeout = 4000)
    public void test341878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test341879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test341880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test341881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test341882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test341883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test341884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test341885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test341886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test341887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test341888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test341889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test341890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test341891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test341892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test341893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test341894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test341895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test341896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test341897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test341898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test341899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test341900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test341901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test341902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test341903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test341904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test341905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test341906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "expected digit (0-9) to follow minus sign, for valid numeric value", true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 57, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-55), (byte) 73, true);
        uTF8StreamJsonParser0._parseNegNumber();
    }

    @Test(timeout = 4000)
    public void test351976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
    }

    @Test(timeout = 4000)
    public void test351987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test351988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test351989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test351990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test351991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test351992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test351993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test351994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test351995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test351996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test351997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test351998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test351999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test352000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test352001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test352002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test352003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test352004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test352005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test352006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test352007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test352008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test352009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test352010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test352011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test352012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test352013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test352014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test352015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test352016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test352017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test352018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test352019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test352020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test352021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        JsonToken jsonToken0 = uTF8StreamJsonParser0._parsePosNumber(2183);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test362042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test362045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test362046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test362047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test362048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test362049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test362050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test362051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test362052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test362053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test362054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test362055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test362056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
    }

    @Test(timeout = 4000)
    public void test362067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test362068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test362069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test362070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test362071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test362072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test362073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test362074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test362075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test362076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test362077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test362078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test362079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test362080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test362081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test362082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test362083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test362084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test362085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test362086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test362087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test362088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test362089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test362090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test362091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test362092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test362093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test362094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test362095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test362096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0._parsePosNumber((-1241));
    }

    @Test(timeout = 4000)
    public void test372127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
    }

    @Test(timeout = 4000)
    public void test372138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test372139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test372140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test372141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test372142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test372143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test372144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test372145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test372146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test372147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test372148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test372149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test372150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test372151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test372152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test372153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test372154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test372155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test372156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test372157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test372158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test372159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test372160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test372161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test372162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test372163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test372164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test372165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test372166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.parseMediumName(0);
    }

    @Test(timeout = 4000)
    public void test382236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-55);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0.parseMediumName2(448, (-319));
    }

    @Test(timeout = 4000)
    public void test392271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
    }

    @Test(timeout = 4000)
    public void test392282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test392283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test392284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test392285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test392286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test392287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test392288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test392289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test392290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test392291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test392292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test392293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test392294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test392295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test392296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test392297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test392298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test392299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test392300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test392301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test392302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test392303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test392304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test392305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test392306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test392307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test392308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test392309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test392310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test392311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
    }

    @Test(timeout = 4000)
    public void test392322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test392323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test392324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test392325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test392326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test392327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test392328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test392329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test392330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test392331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test392332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test392333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test392334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test392335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test392336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test392337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test392338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test392339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test392340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test392341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test392342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test392343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test392344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test392345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test392346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test392347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test392348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test392349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test392350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test392351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.parseLongName((byte) 67, 3431, (byte) 67);
    }

    @Test(timeout = 4000)
    public void test402372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test402375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test402376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test402377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test402378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test402379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test402380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test402381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test402382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test402383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test402384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test402385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test402386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
    }

    @Test(timeout = 4000)
    public void test402397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test402398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test402399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test402400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test402401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test402402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test402403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test402404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test402405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test402406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test402407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test402408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test402409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test402410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test402411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test402412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test402413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test402414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test402415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test402416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test402417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test402418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test402419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test402420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test402421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test402422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test402423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test402424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test402425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test402426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
    }

    @Test(timeout = 4000)
    public void test402437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test402438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test402439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test402440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test402441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test402442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test402443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test402444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test402445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test402446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test402447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test402448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test402449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test402450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test402451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test402452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test402453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test402454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test402455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test402456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test402457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test402458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test402459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test402460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test402461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test402462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test402463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test402464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test402465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test402466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        byteArray0[1] = (byte) 67;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        boolean boolean0 = uTF8StreamJsonParser0.loadMore();
        uTF8StreamJsonParser0.parseLongName((byte) 67, 3431, (byte) 67);
    }

    @Test(timeout = 4000)
    public void test412499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
    }

    @Test(timeout = 4000)
    public void test412510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test412511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test412512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test412513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test412514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test412515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test412516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test412517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test412518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test412519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test412520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test412521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test412522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test412523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test412524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test412525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test412526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test412527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test412528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test412529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test412530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test412531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test412532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test412533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test412534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test412535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test412536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test412537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test412538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test412539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test422620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, (byte) 0, true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test432641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test432651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test432652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test432653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test432663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test432664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test432665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test432666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test432667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test432668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test432669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test432670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test432671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test432672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test432673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test432674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test432675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test432676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
    }

    @Test(timeout = 4000)
    public void test432686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test432687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test432688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test432689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test432690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test432691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test432692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test432693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test432694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test432695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test432696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test432697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test432698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test432699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test432700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test432701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test432702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test432703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test432704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test432705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test432706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test432707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test432708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test432709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test432710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test432711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test432712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test432713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test432714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test432715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-744), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 69, 0, true);
        uTF8StreamJsonParser0.slowParseName();
    }

    @Test(timeout = 4000)
    public void test442736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test442737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test442738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test442739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test442740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test442741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test442742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test442743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test442744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test442745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test442746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test442749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test442750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
    }

    @Test(timeout = 4000)
    public void test442761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test442762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test442763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test442764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test442765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test442766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test442767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test442768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test442769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test442770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test442771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test442772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test442773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test442774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test442775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test442776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test442777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test442778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test442779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test442780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test442781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test442782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test442783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test442784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test442785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test442786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test442787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test442788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test442789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test442790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 61, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 61, 9, true);
        uTF8StreamJsonParser0.parseLongName(108, 1, (byte) 61);
    }

    @Test(timeout = 4000)
    public void test452813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test452814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test452815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test452816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test452817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test452818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test452819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test452820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test452821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test452822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test452823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
    }

    @Test(timeout = 4000)
    public void test452834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test452835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test452836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test452837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test452838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test452839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test452840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test452841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test452842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test452843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test452844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test452845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test452846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test452847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test452848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test452849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test452850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test452851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test452852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test452853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test452854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test452855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test452856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test452857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test452858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test452859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test452860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test452861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test452862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test452863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 112, (-127), true);
        uTF8StreamJsonParser0._handleOddName(1738);
    }

    @Test(timeout = 4000)
    public void test462933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-55), (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 3, true);
        uTF8StreamJsonParser0._handleOddName(48);
    }

    @Test(timeout = 4000)
    public void test472957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test472958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test472959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test472960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test472961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test472962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test472963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test472964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test472965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test472966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test472967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
    }

    @Test(timeout = 4000)
    public void test472978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test472979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test472980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test472981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test472982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test472983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test472984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test472985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test472986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test472987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test472988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test472989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test472990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test472991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test472992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test472993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test472994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test472995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test472996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test472997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test472998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test472999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test473000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test473001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test473002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test473003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test473004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test473005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test473006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test473007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 6, 48, false);
        uTF8StreamJsonParser0._handleOddName(2);
    }

    @Test(timeout = 4000)
    public void test483063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
    }

    @Test(timeout = 4000)
    public void test483073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test483074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test483075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test483076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test483077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test483078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test483079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test483080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test483081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test483082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test483083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test483084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test483085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test483086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test483087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test483088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test483089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test483090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test483091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test483092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test483093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test483094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test483095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test483096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test483097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test483098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test483099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test483100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test483101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test483102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 585, byteArrayInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 125, (-89), true);
        uTF8StreamJsonParser0._handleOddName(69);
    }

    @Test(timeout = 4000)
    public void test493124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test493125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test493126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test493127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test493128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test493129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test493130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test493131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test493132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test493133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test493134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test493135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test493136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
    }

    @Test(timeout = 4000)
    public void test493147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test493148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test493149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test493150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test493151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test493152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test493153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test493154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test493155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test493156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test493157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test493158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test493159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test493160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test493161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test493162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test493163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test493164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test493165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test493166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test493167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test493168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test493169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test493170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test493171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test493172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test493173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test493174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test493175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test493176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 108, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 35, 108, true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test503207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
    }

    @Test(timeout = 4000)
    public void test503218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test503219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test503220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test503221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test503222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test503223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test503224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test503225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test503226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test503227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test503228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test503229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test503230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test503231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test503232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test503233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test503234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test503235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test503236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test503237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test503238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test503239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test503240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test503241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test503242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test503243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test503244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test503245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test503246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-65), (-93), true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test513256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test513257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
    }

    @Test(timeout = 4000)
    public void test513266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test513267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test513268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test513269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test513270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test513271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test513272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test513273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test513274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test513275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test513276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test513277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test513278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test513281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test513282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
    }

    @Test(timeout = 4000)
    public void test513293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test513294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test513295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test513296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test513297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test513298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test513299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test513300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test513301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test513302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test513303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test513304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test513305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test513306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test513307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test513308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test513309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test513310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test513311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test513312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test513313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test513314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test513315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test513316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test513317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test513318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test513319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test513320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test513321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test513322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 61;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-32), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-1), (-694), true);
        uTF8StreamJsonParser0._parseAposName();
    }

    @Test(timeout = 4000)
    public void test523347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test523348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test523349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test523350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test523351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test523352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test523353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test523354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test523355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test523356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test523357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
    }

    @Test(timeout = 4000)
    public void test523368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test523369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test523370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test523371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test523372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test523373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test523374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test523375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test523376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test523377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test523378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test523379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test523380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test523381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test523382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test523383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test523384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test523385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test523386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test523387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test523388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test523389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test523390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test523391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test523392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test523393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test523394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test523395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test523396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test523397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
    }

    @Test(timeout = 4000)
    public void test523407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test523408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test523409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test523410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test523411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test523412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test523413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test523414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test523415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test523416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test523417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test523418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test523419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test523420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test523421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test523422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test523423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test523424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test523425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test523426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test523427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test523428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test523429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test523430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test523431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test523432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test523433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test523434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test523435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test523436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test533440() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    }

    @Test(timeout = 4000)
    public void test533441() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test533442() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test533443() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test533444() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test533445() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test533446() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test533447() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test533448() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test533449() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test533450() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test533451() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
    }

    @Test(timeout = 4000)
    public void test533454() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test533455() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test533456() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test533457() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test533458() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test533459() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test533460() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test533461() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test533462() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test533463() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test533464() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test533465() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test533466() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test533467() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test533468() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test533469() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test533470() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test533471() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test533472() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test533473() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test533474() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test533475() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test533476() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test533477() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test533478() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test533479() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test533480() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test533481() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test533482() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);
        Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1520), sequenceInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 123, (-1369), true);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test543519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
    }

    @Test(timeout = 4000)
    public void test543530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test543531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test543532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test543533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test543534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test543535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test543536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test543537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test543538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test543539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test543540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test543541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test543542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test543543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test543544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test543545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test543546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test543547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test543548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test543549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test543550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test543551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test543552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test543553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test543554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test543555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test543556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test543557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test543558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test543559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 119;
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1516), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1, 1860, true);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test553596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
    }

    @Test(timeout = 4000)
    public void test553607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test553608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test553609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test553610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test553611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test553612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test553613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test553614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test553615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test553616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test553617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test553618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test553619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test553620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test553621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test553622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test553623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test553624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test553625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test553626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test553627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test553628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test553629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test553630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test553631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test553632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test553633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test553634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test553635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test553636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (byte) 0, (byte) 16, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test563646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test563655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test563656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test563657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test563660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test563661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test563662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test563663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test563664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test563665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test563666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test563667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test563668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test563669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test563670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test563671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test563672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
    }

    @Test(timeout = 4000)
    public void test563685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray0.equals((Object) byteArray1);
    }

    @Test(timeout = 4000)
    public void test563686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test563687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test563688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test563689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test563690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test563691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test563692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test563693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test563694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test563695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test563696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test563697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test563698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test563699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test563700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test563701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test563702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test563703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test563704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test563705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test563706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test563707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test563708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test563709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test563710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test563711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test563712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test563713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test563714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test563715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test563716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) 115;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test573737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test573740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test573741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test573742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test573743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test573744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test573745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test573746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test573747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test573748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test573749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test573750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test573751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test573752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
    }

    @Test(timeout = 4000)
    public void test573765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray0.equals((Object) byteArray1);
    }

    @Test(timeout = 4000)
    public void test573766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test573767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test573768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test573769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test573770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test573771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test573772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test573773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test573774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test573775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test573776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test573777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test573778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test573779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test573780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test573781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test573782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test573783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test573784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test573785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test573786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test573787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test573788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test573789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test573790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test573791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test573792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test573793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test573794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test573795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test573796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) 104;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test583828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test583831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test583832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
    }

    @Test(timeout = 4000)
    public void test583843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test583844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test583845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test583846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test583847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test583848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test583849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test583850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test583851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test583852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test583853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test583854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test583855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test583856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test583857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test583858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test583859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test583860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test583861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test583862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test583863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test583864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test583865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test583866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test583867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test583868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test583869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test583870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test583871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test583872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Object object0 = new Object();
        IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-18), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 1, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test593897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test593898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test593899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test593900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test593901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test593902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test593903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test593904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test593905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test593906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test593907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
    }

    @Test(timeout = 4000)
    public void test593918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test593919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test593920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test593921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test593922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test593923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test593924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test593925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test593926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test593927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test593928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test593929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test593930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test593931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test593932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test593933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test593934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test593935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test593936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test593937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test593938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test593939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test593940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test593941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test593942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test593943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test593944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test593945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test593946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test593947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 116, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1588, (-1520), false);
        uTF8StreamJsonParser0._finishString();
    }

    @Test(timeout = 4000)
    public void test603984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
    }

    @Test(timeout = 4000)
    public void test603985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test603986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
    }

    @Test(timeout = 4000)
    public void test603997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test603998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test603999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test604000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test604001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test604002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test604003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test604004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test604005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test604006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test604007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test604008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test604009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test604010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test604011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test604012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test604013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test604014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test604015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test604016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test604017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test604018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test604019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test604020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test604021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test604022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test604023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test604024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test604025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test604026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2974), dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 1694, (-3133), true);
        uTF8StreamJsonParser0._skipString();
    }

    @Test(timeout = 4000)
    public void test614059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
    }

    @Test(timeout = 4000)
    public void test614070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test614071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test614072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test614073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test614074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test614075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test614076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test614077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test614078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test614079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test614080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test614081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test614082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test614083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test614084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test614085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test614086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test614087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test614088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test614089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test614090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test614091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test614092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test614093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test614094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test614095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test614096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test614097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test614098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test614099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
    }

    @Test(timeout = 4000)
    public void test614110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test614111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test614112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test614113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test614114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test614115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test614116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test614117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test614118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test614119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test614120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test614121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test614122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test614123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test614124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test614125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test614126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test614127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test614128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test614129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test614130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test614131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test614132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test614133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test614134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test614135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test614136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test614137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test614138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test614139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test614140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test614141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test614142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test614143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test614144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test614145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test614146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 112;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test624179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
    }

    @Test(timeout = 4000)
    public void test624190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test624191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test624192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test624193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test624194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test624195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test624196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test624197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test624198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test624199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test624200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test624201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test624202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test624203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test624204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test624205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test624206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test624207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test624208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test624209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test624210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test624211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test624212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test624213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test624214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test624215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test624216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test624217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test624218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test624219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
    }

    @Test(timeout = 4000)
    public void test624230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test624231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test624232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test624233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test624234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test624235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test624236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test624237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test624238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test624239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test624240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test624241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test624242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test624243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test624244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test624245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test624246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test624247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test624248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test624249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test624250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test624251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test624252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test624253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test624254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test624255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test624256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test624257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test624258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test624259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test624260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test624261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test624262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test624263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test624264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test624265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test624266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 34;
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 159, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 34, true);
        JsonToken jsonToken0 = uTF8StreamJsonParser0.nextValue();
        uTF8StreamJsonParser0.nextBooleanValue();
    }

    @Test(timeout = 4000)
    public void test634287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test634288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test634289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test634290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test634291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test634292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test634293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test634294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test634295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test634296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test634297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
    }

    @Test(timeout = 4000)
    public void test634308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test634309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test634310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test634311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test634312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test634313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test634314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test634315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test634316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test634317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test634318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test634319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test634320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test634321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test634322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test634323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test634324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test634325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test634326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test634327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test634328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test634329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test634330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test634331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test634332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test634333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test634334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test634335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test634336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), (InputStream) null, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 1942, true);
        uTF8StreamJsonParser0._handleUnexpectedValue((-60));
    }

    @Test(timeout = 4000)
    public void test644357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
    }

    @Test(timeout = 4000)
    public void test644367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test644368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test644369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test644379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test644380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test644381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test644382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test644383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test644384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test644385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test644386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test644387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test644388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test644389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test644390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test644391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test644392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
    }

    @Test(timeout = 4000)
    public void test644402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test644403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test644404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test644405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test644406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test644407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test644408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test644409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test644410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test644411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test644412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test644413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test644414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test644415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test644416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test644417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test644418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test644419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test644420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test644421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test644422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test644423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test644424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test644425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test644426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test644427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test644428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test644429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test644430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test644431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(3);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 16, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 37, 2, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test654506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 63;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 256, 0, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test664527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test664530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test664531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test664532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test664533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test664534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test664535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test664536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test664537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test664538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test664539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test664540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test664541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
    }

    @Test(timeout = 4000)
    public void test664552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test664553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test664554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test664555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test664556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test664557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test664558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test664559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test664560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test664561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test664562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test664563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test664564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test664565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test664566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test664567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test664568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test664569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test664570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test664571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test664572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test664573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test664574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test664575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test664576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test664577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test664578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test664579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test664580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test664581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[3] = (byte) (-17);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-17), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 8, true);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test674616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
    }

    @Test(timeout = 4000)
    public void test674627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test674628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test674629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test674630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test674631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test674632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test674633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test674634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test674635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test674636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test674637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test674638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test674639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test674640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test674641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test674642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test674643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test674644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test674645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test674646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test674647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test674648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test674649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test674650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test674651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test674652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test674653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test674654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test674655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test674656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[0] = (byte) (-93);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (byte) (-17), false);
        uTF8StreamJsonParser0._handleApos();
    }

    @Test(timeout = 4000)
    public void test684678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test684679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test684680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test684681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test684682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test684683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test684684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test684685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test684686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test684687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test684688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test684689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test684690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
    }

    @Test(timeout = 4000)
    public void test684701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test684702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test684703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test684704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test684705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test684706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test684707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test684708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test684709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test684710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test684711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test684712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test684713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test684714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test684715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test684716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test684717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test684718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test684719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test684720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test684721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test684722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test684723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test684724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test684725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test684726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test684727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test684728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test684729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test684730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 53, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 57, (-642), true);
        uTF8StreamJsonParser0._handleInvalidNumberStart(885, true);
    }

    @Test(timeout = 4000)
    public void test694761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
    }

    @Test(timeout = 4000)
    public void test694772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test694773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test694774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test694775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test694776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test694777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test694778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test694779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test694780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test694781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test694782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test694783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test694784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test694785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test694786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test694787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test694788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test694789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test694790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test694791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test694792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test694793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test694794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test694795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test694796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test694797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test694798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test694799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test694800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 98, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 98, 3, false);
        uTF8StreamJsonParser0._matchToken("com.fasterxml.jackson.core.JsonProcessingException", 3);
    }

    @Test(timeout = 4000)
    public void test704824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test704825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test704826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test704827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test704828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test704829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test704830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test704831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test704832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test704833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test704834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
    }

    @Test(timeout = 4000)
    public void test704845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test704846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test704847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test704848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test704849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test704850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test704851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test704852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test704853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test704854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test704855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test704856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test704857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test704858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test704859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test704860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test704861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test704862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test704863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test704864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test704865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test704866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test704867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test704868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test704869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test704870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test704871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test704872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test704873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test704874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[8];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-959), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 8, (byte) 15, true);
        uTF8StreamJsonParser0._matchToken("Failed to decode VALUE_STRING as base64 (", 375);
    }

    @Test(timeout = 4000)
    public void test714908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
    }

    @Test(timeout = 4000)
    public void test714919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test714920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test714921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test714922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test714923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test714924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test714925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test714926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test714927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test714928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test714929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test714930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test714931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test714932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test714933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test714934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test714935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test714936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test714937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test714938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test714939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test714940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test714941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test714942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test714943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test714944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test714945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test714946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test714947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test714948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3238), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (-3764), 2565, true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test724969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
    }

    @Test(timeout = 4000)
    public void test724979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test724980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test724981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test724991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test724992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test724993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test724994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test724995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test724996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test724997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test724998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test724999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test725000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test725001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test725002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test725003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test725004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
    }

    @Test(timeout = 4000)
    public void test725014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test725015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test725016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test725017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test725018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test725019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test725020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test725021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test725022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test725023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test725024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test725025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test725026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test725027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test725028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test725029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test725030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test725031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test725032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test725033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test725034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test725035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test725036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test725037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test725038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test725039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test725040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test725041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test725042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test725043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer((-14));
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 4, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3089, (-127), true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test735074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
    }

    @Test(timeout = 4000)
    public void test735085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test735086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test735087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test735088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test735089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test735090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test735091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test735092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test735093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test735094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test735095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test735096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test735097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test735098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test735099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test735100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test735101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test735102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test735103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test735104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test735105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test735106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test735107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test735108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test735109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test735110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test735111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test735112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test735113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[9];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-60), (-270), true);
        uTF8StreamJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test745134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test745135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test745136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test745137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test745138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test745139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test745140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test745141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test745142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test745143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test745144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test745147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test745148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test745151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test745152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
    }

    @Test(timeout = 4000)
    public void test745163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test745164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test745165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test745166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test745167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test745168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test745169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test745170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test745171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test745172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test745173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test745174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test745175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test745176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test745177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test745178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test745179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test745180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test745181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test745182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test745183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test745184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test745185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test745186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test745187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test745188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test745189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test745190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test745191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test745192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 117;
        byteArray0[1] = (byte) (-32);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pushbackInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2, (-3356), false);
        uTF8StreamJsonParser0.nextIntValue(1822);
    }

    @Test(timeout = 4000)
    public void test755262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._decodeCharForError((-10));
    }

    @Test(timeout = 4000)
    public void test765283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
    }

    @Test(timeout = 4000)
    public void test765284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test765285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test765286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test765287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test765288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test765289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test765290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test765291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test765292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test765293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test765294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test765295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
    }

    @Test(timeout = 4000)
    public void test765306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test765307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test765308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test765309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test765310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test765311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test765312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test765313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test765314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test765315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test765316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test765317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test765318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test765319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test765320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test765321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test765322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test765323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test765324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test765325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test765326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test765327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test765328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test765329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test765330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test765331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test765332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test765333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test765334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test765335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[1];
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1536), pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 64, 0, false);
        uTF8StreamJsonParser0._parseName((byte) (-68));
    }

    @Test(timeout = 4000)
    public void test775356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test775359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test775360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test775361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test775362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test775363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test775364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test775365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test775366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test775367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test775368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test775369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test775370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test775371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
    }

    @Test(timeout = 4000)
    public void test775384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray0.equals((Object) byteArray1);
    }

    @Test(timeout = 4000)
    public void test775385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test775386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test775387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test775388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test775389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test775390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test775391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test775392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test775393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test775394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test775395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test775396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test775397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test775398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test775399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test775400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test775401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test775402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test775403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test775404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test775405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test775406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test775407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test775408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test775409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test775410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test775411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test775412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test775413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test775414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test775415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        byte[] byteArray0 = new byte[9];
        byteArray0[4] = (byte) (-13);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray1 = new byte[1];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 32, byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray1, 1091, (byte) 115, false);
        uTF8StreamJsonParser0._finishAndReturnString();
    }

    @Test(timeout = 4000)
    public void test785452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
    }

    @Test(timeout = 4000)
    public void test785463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test785464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test785465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test785466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test785467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test785468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test785469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test785470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test785471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test785472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test785473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test785474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test785475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test785476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test785477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test785478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test785479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test785480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test785481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test785482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test785483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test785484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test785485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test785486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test785487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test785488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test785489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test785490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test785491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test785492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
    }

    @Test(timeout = 4000)
    public void test785502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test785503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test785504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test785505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test785506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test785507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test785508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test785509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test785510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test785511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test785512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test785513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test785514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test785515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test785516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test785517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test785518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test785519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test785520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test785521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test785522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test785523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test785524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test785525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test785526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test785527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test785528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test785529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test785530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 3);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 2, 10, true);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test795600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
    }

    @Test(timeout = 4000)
    public void test795610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test795611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test795612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test795613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test795614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test795615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test795616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test795617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test795618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test795619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test795620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test795621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test795622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test795623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test795624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test795625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test795626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test795627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test795628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test795629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test795630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test795631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test795632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test795633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test795634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test795635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test795636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test795637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[2];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 39, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) 0, 0, false);
        uTF8StreamJsonParser0._skipCR();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test805658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
    }

    @Test(timeout = 4000)
    public void test805659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test805660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test805661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test805662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test805663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test805664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test805665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test805666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test805667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test805668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test805669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test805670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
    }

    @Test(timeout = 4000)
    public void test805671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test805672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test805673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test805674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
    }

    @Test(timeout = 4000)
    public void test805685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test805686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test805687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        pipedInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test805688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test805689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test805690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test805691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test805692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test805693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test805694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test805695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test805696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test805697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test805698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test805699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test805700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test805701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test805702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test805703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test805704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test805705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test805706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test805707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test805708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test805709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test805710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test805711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test805712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test805713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test805714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream(2);
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 112;
        byteArray0[2] = (byte) 124;
        SerializedString serializedString0 = new SerializedString("was expecting either '*' or '/' for a comment");
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 473, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1, (byte) 34, true);
        uTF8StreamJsonParser0.nextFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test815789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
    }

    @Test(timeout = 4000)
    public void test815800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test815801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test815802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test815803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test815804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test815805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test815806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test815807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test815808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test815809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test815810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test815811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test815812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test815813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test815814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test815815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test815816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test815817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test815818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test815819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test815820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test815821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test815822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test815823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test815824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test815825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test815826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test815827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test815828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        uTF8StreamJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test815829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getByteOffset();
    }

    @Test(timeout = 4000)
    public void test815830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getColumnNr();
    }

    @Test(timeout = 4000)
    public void test815831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getCharOffset();
    }

    @Test(timeout = 4000)
    public void test815832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[9];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1841), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 280, (-2784), false);
        JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();
        jsonLocation0.getLineNr();
    }
}
