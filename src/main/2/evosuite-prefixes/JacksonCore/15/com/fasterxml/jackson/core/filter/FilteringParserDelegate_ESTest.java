/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 17:09:35 GMT 2024
 */
package com.fasterxml.jackson.core.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonStreamContext;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.filter.TokenFilterContext;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class FilteringParserDelegate_ESTest extends FilteringParserDelegate_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getNumberValue();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getValueAsString();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getFloatValue();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getValueAsString("");
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getDoubleValue();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getByteValue();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getEmbeddedObject();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonStreamContext jsonStreamContext0 = filteringParserDelegate0.getParsingContext();
        jsonStreamContext0.getTypeDesc();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getValueAsLong();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getText();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-3578), 1, true);
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(uTF8StreamJsonParser0, tokenFilter0, true, true);
        boolean boolean0 = filteringParserDelegate0.getValueAsBoolean(true);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getIntValue();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.overrideCurrentName("was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getTextOffset();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getValueAsInt(2795);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        int int0 = filteringParserDelegate0.getMatchCount();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getBooleanValue();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getBigIntegerValue();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getTokenLocation();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getValueAsDouble();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getNumberType();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = new TokenFilterContext(1255, (TokenFilterContext) null, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, (TokenFilter) null, true, false);
        filteringParserDelegate1._nextToken2();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getTextCharacters();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byte[] byteArray0 = new byte[0];
        UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, (-3578), 1, true);
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(uTF8StreamJsonParser0, tokenFilter0, true, true);
        TokenFilter tokenFilter1 = filteringParserDelegate0.getFilter();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getValueAsBoolean();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getLongValue();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.readBinaryValue((OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getTextLength();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getShortValue();
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getBinaryValue();
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getValueAsInt();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        filteringParserDelegate0.getValueAsLong(0L);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.getValueAsDouble(0.0);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, true, false);
        JsonToken jsonToken0 = JsonToken.END_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        int int0 = filteringParserDelegate0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);
        int int0 = filteringParserDelegate0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        boolean boolean0 = filteringParserDelegate0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        boolean boolean0 = filteringParserDelegate0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        boolean boolean0 = filteringParserDelegate0.hasTokenId(18);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        boolean boolean0 = filteringParserDelegate0.hasTokenId(0);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        boolean boolean0 = filteringParserDelegate0.hasTokenId(248);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        filteringParserDelegate0._currToken = jsonToken0;
        boolean boolean0 = filteringParserDelegate0.hasTokenId(1);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        JsonToken jsonToken0 = JsonToken.END_OBJECT;
        boolean boolean0 = filteringParserDelegate0.hasToken(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        boolean boolean0 = filteringParserDelegate0.hasToken(jsonToken0);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        boolean boolean0 = filteringParserDelegate0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        boolean boolean0 = filteringParserDelegate0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        boolean boolean0 = filteringParserDelegate0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        char[] charArray0 = new char[4];
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 776, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1515, (-2601), true);
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        filteringParserDelegate0._nextToken2();
        boolean boolean0 = filteringParserDelegate0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        char[] charArray0 = new char[4];
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 776, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1515, (-2601), true);
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        filteringParserDelegate0._nextToken2();
        String string0 = filteringParserDelegate0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        String string0 = filteringParserDelegate0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        filteringParserDelegate0.clearCurrentToken();
        filteringParserDelegate0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        filteringParserDelegate0._currToken = jsonToken0;
        filteringParserDelegate0.clearCurrentToken();
        filteringParserDelegate0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("[5mL,y_<}).Vd_i]");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0._nextToken2();
        filteringParserDelegate0.skipChildren();
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("[5mL,y_<}).Vd_i]");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0.nextValue();
        filteringParserDelegate0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, true, true);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test5959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("\"^b+7'B9_4)zU1BINp-g");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, false, false);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test6060() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = new TokenFilterContext(1247, (TokenFilterContext) null, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1.nextValue();
        filteringParserDelegate0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test6061() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = new TokenFilterContext(1247, (TokenFilterContext) null, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1.nextValue();
        filteringParserDelegate1.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test6162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("[5mA,@<}-).__]");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, true, true);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test6263() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        tokenFilterContext0._startHandled = false;
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1.nextValue();
    }

    @Test(timeout = 4000)
    public void test6364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        JsonToken jsonToken0 = filteringParserDelegate0.nextValue();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test6465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test6566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test6667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        JsonToken jsonToken0 = filteringParserDelegate0.nextValue();
    }

    @Test(timeout = 4000)
    public void test6768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        JsonToken jsonToken0 = filteringParserDelegate0.nextValue();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test6869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0._nextToken2();
    }

    @Test(timeout = 4000)
    public void test6970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        JsonToken jsonToken0 = filteringParserDelegate0._nextToken2();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test7071() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        tokenFilterContext0._startHandled = false;
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1._nextToken2();
        filteringParserDelegate1.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test7172() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        tokenFilterContext0._startHandled = false;
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1._nextToken2();
    }

    @Test(timeout = 4000)
    public void test7273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, true, true);
        filteringParserDelegate0._nextToken2();
    }

    @Test(timeout = 4000)
    public void test7374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        filteringParserDelegate0._nextToken2();
    }

    @Test(timeout = 4000)
    public void test7475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0._nextToken2();
    }

    @Test(timeout = 4000)
    public void test7576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("\"^b+7'B9_4)zU1BINp-g");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, false, false);
        filteringParserDelegate0._nextToken2();
    }

    @Test(timeout = 4000)
    public void test7677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        JsonToken jsonToken0 = filteringParserDelegate0._nextToken2();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test7778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        filteringParserDelegate0._nextTokenWithBuffering((TokenFilterContext) null);
    }

    @Test(timeout = 4000)
    public void test7879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, true, true);
        filteringParserDelegate0._nextTokenWithBuffering((TokenFilterContext) null);
    }

    @Test(timeout = 4000)
    public void test7980() throws Throwable {
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = new TokenFilterContext(1247, (TokenFilterContext) null, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1._nextTokenWithBuffering(filteringParserDelegate0._exposedContext);
    }

    @Test(timeout = 4000)
    public void test8081() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        TokenFilterContext tokenFilterContext0 = new TokenFilterContext(1249, (TokenFilterContext) null, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        FilteringParserDelegate filteringParserDelegate1 = new FilteringParserDelegate(filteringParserDelegate0, tokenFilter0, false, false);
        filteringParserDelegate1._nextTokenWithBuffering(tokenFilterContext0);
    }

    @Test(timeout = 4000)
    public void test8182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        TokenFilterContext tokenFilterContext0 = TokenFilterContext.createRootContext(tokenFilter0);
        JsonToken jsonToken0 = filteringParserDelegate0._nextTokenWithBuffering(tokenFilterContext0);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test8283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        filteringParserDelegate0._nextTokenWithBuffering(tokenFilterContext0);
    }

    @Test(timeout = 4000)
    public void test8384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        TokenFilterContext tokenFilterContext0 = TokenFilterContext.createRootContext(tokenFilter0);
        filteringParserDelegate0._nextTokenWithBuffering(tokenFilterContext0);
    }

    @Test(timeout = 4000)
    public void test8485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, false, false);
        TokenFilterContext tokenFilterContext0 = TokenFilterContext.createRootContext(tokenFilter0);
        filteringParserDelegate0._nextTokenWithBuffering(tokenFilterContext0);
    }

    @Test(timeout = 4000)
    public void test8586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("\"^b+7B9_4)zU1BINp-g");
        TokenFilter tokenFilter0 = new TokenFilter();
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        filteringParserDelegate0._nextTokenWithBuffering(tokenFilterContext0);
    }

    @Test(timeout = 4000)
    public void test8687() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        filteringParserDelegate0._currToken = jsonToken0;
        filteringParserDelegate0.skipChildren();
    }

    @Test(timeout = 4000)
    public void test8788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringReader stringReader0 = new StringReader("{");
        CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
        char[] charArray0 = new char[4];
        ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 776, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1515, (-2601), true);
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);
        JsonParser jsonParser0 = filteringParserDelegate0.skipChildren();
        jsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test8889() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        TokenFilterContext tokenFilterContext1 = new TokenFilterContext((-1), tokenFilterContext0, tokenFilter0, false);
        filteringParserDelegate0._exposedContext = tokenFilterContext1;
        filteringParserDelegate0._currToken = jsonToken0;
        filteringParserDelegate0.skipChildren();
    }

    @Test(timeout = 4000)
    public void test8990() throws Throwable {
        TokenFilter tokenFilter0 = new TokenFilter();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);
        TokenFilterContext tokenFilterContext0 = filteringParserDelegate0._headContext;
        filteringParserDelegate0._exposedContext = tokenFilterContext0;
        String string0 = filteringParserDelegate0.getCurrentName();
    }
}
