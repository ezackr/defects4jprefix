/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 15:38:44 GMT 2024
 */
package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.internal.ConstructorConstructor;
import com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory;
import com.google.gson.internal.bind.SqlDateTypeAdapter;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsonAdapterAnnotationTypeAdapterFactory_ESTest extends JsonAdapterAnnotationTypeAdapterFactory_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Gson gson0 = new Gson();
        Class<SqlDateTypeAdapter> class0 = SqlDateTypeAdapter.class;
        TypeToken<SqlDateTypeAdapter> typeToken0 = TypeToken.get(class0);
        JsonAdapter jsonAdapter0 = mock(JsonAdapter.class, new ViolatedAssumptionAnswer());
        doReturn(class0).when(jsonAdapter0).value();
        JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((ConstructorConstructor) null, gson0, typeToken0, jsonAdapter0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        JsonAdapterAnnotationTypeAdapterFactory jsonAdapterAnnotationTypeAdapterFactory0 = new JsonAdapterAnnotationTypeAdapterFactory((ConstructorConstructor) null);
        Gson gson0 = new Gson();
        Class<Type> class0 = Type.class;
        TypeToken<Type> typeToken0 = TypeToken.get(class0);
        TypeAdapter<Type> typeAdapter0 = jsonAdapterAnnotationTypeAdapterFactory0.create(gson0, typeToken0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Class<Integer> class0 = Integer.class;
        TypeToken<?> typeToken0 = TypeToken.get((Type) class0);
        JsonAdapter jsonAdapter0 = mock(JsonAdapter.class, new ViolatedAssumptionAnswer());
        doReturn(class0).when(jsonAdapter0).value();
        Gson gson0 = new Gson();
        JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((ConstructorConstructor) null, gson0, typeToken0, jsonAdapter0);
    }
}
