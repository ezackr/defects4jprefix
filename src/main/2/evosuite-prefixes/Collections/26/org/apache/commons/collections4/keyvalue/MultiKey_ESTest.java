/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:27:58 GMT 2024
 */
package org.apache.commons.collections4.keyvalue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MultiKey_ESTest extends MultiKey_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Object object0 = new Object();
        MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, object0, object0);
        Object object1 = multiKey0.getKey(0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        MultiKey<String> multiKey0 = null;
        multiKey0 = new MultiKey<String>((String[]) null);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        MultiKey<MultiKey<Object>> multiKey0 = new MultiKey<MultiKey<Object>>((MultiKey<Object>) null, (MultiKey<Object>) null);
        MultiKey<Object>[] multiKeyArray0 = multiKey0.getKeys();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        String[] stringArray0 = new String[7];
        MultiKey<String> multiKey0 = new MultiKey<String>(stringArray0);
        String string0 = multiKey0.toString();
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        Object object0 = new Object();
        Integer integer0 = new Integer(2);
        MultiKey<Object> multiKey0 = new MultiKey<Object>(object0, object0, integer0);
        MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKey0, multiKey0, multiKey0, multiKey0);
        multiKey1.hashCode();
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        MultiKey<Integer> multiKey0 = new MultiKey<Integer>((Integer) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
        boolean boolean0 = multiKey0.equals("MultiKey[null, null, null, null, null, null, null]");
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        MultiKey<Object> multiKey0 = new MultiKey<Object>((Object) null, (Object) null, (Object) null, (Object) null, (Object) null);
        int int0 = multiKey0.size();
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        String[] stringArray0 = new String[7];
        MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 3);
        MultiKey<Object> multiKey0 = new MultiKey<Object>(stringArray0);
        multiKeyArray0[1] = multiKey0;
        MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKeyArray0, false);
        MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
        boolean boolean0 = multiKey1.equals(multiKey2);
        multiKey2.equals((Object) multiKey0);
    }

    @Test(timeout = 4000)
    public void test78() throws Throwable {
        String[] stringArray0 = new String[7];
        MultiKey<Object>[] multiKeyArray0 = (MultiKey<Object>[]) Array.newInstance(MultiKey.class, 3);
        MultiKey<Object> multiKey0 = new MultiKey<Object>(stringArray0);
        multiKeyArray0[1] = multiKey0;
        MultiKey<MultiKey<Object>> multiKey1 = new MultiKey<MultiKey<Object>>(multiKeyArray0, false);
        MultiKey<Object> multiKey2 = new MultiKey<Object>((Object[]) multiKeyArray0, true);
        boolean boolean0 = multiKey1.equals(multiKey2);
    }
}
