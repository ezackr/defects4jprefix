/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 05:48:07 GMT 2024
 */
package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.Months;
import org.joda.time.MutablePeriod;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePeriod;
import org.joda.time.Seconds;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
import org.joda.time.format.PeriodParser;
import org.joda.time.format.PeriodPrinter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PeriodFormatterBuilder_ESTest extends PeriodFormatterBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("~./,H");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix0.calculatePrintedLength(1286);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("pl%*te", "pl%*te");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "pl%*te");
        periodFormatterBuilder_CompositeAffix0.printTo(stringBuffer0, 0);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("No field to apply suffix to", "No field to apply suffix to");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        StringWriter stringWriter0 = new StringWriter(1050);
        periodFormatterBuilder_CompositeAffix0.printTo((Writer) stringWriter0, 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendHours();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod("+-AX\"T/6cQ_pGcS8<^$");
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyLast();
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithOptionalMillis();
        periodFormatterBuilder0.appendSuffix("mp;q0.>l;j?~", "mp;q0.>l;j?~");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        periodFormatter0.parsePeriod("-0c");
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.rejectSignedValues(true);
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("-4<");
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroIfSupported();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.isPrinter();
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroIfSupported();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroIfSupported();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test00810() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSuffix("ConverterManager.alterInstantConverters");
        periodFormatterBuilder2.appendSuffix("ConverterManager.alterInstantConverters");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod("ConverterManager.alterInstantConverters");
    }

    @Test(timeout = 4000)
    public void test00911() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendYears();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparatorIfFieldsBefore("No formatter supplied");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test00912() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendYears();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparatorIfFieldsBefore("No formatter supplied");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        periodFormatterBuilder0.appendSeparator("CQ7L", "CQ7L");
        periodFormatterBuilder1.appendPrefix("CQ7L", "p3mtas'uxuo.zxzf[u");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSecondsWithMillis();
        periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.maximumParsedDigits((-344));
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroNever();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        periodFormatter0.isPrinter();
    }

    @Test(timeout = 4000)
    public void test01216() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroNever();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test01217() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroNever();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test01318() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMinutes();
    }

    @Test(timeout = 4000)
    public void test01419() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendDays();
    }

    @Test(timeout = 4000)
    public void test01520() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsBefore("d4z'1c3uz}AwX!");
    }

    @Test(timeout = 4000)
    public void test01621() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMonths();
        periodFormatterBuilder1.appendSeparator("org.joda.time.base.AbstractPeriod");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = new Period();
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test01722() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendWeeks();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSuffix("org.joda.time.format.PeriodFormatterBuilder$SimpleAffix", "No printer or parser supplied");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        periodFormatter0.parsePeriod("No printer or parser supplied");
    }

    @Test(timeout = 4000)
    public void test01823() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.minimumPrintedDigits((-2449));
    }

    @Test(timeout = 4000)
    public void test01924() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = (PeriodFormatterBuilder.Composite) periodFormatterBuilder0.toPrinter();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        periodFormatterBuilder1.append((PeriodPrinter) periodFormatterBuilder_Literal0, (PeriodParser) periodFormatterBuilder_Composite0);
        periodFormatterBuilder1.appendSuffix("Literal must not be null", "h");
    }

    @Test(timeout = 4000)
    public void test02025() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparator("Time", "',z%5ue V", stringArray0);
    }

    @Test(timeout = 4000)
    public void test02126() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test02127() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test02228() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("Z,bp`5qmi7QdF");
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test02229() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("Z,bp`5qmi7QdF");
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test02330() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("00 ");
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test02331() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("00 ");
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test02432() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodPrinter periodPrinter0 = periodFormatterBuilder0.toPrinter();
    }

    @Test(timeout = 4000)
    public void test02533() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) null, (PeriodParser) periodFormatterBuilder_Literal0);
        PeriodPrinter periodPrinter0 = periodFormatterBuilder1.toPrinter();
    }

    @Test(timeout = 4000)
    public void test02634() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Literal0, (PeriodParser) null);
        PeriodParser periodParser0 = periodFormatterBuilder1.toParser();
    }

    @Test(timeout = 4000)
    public void test02735() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.clear();
    }

    @Test(timeout = 4000)
    public void test02836() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("K=S=gbo");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator((String) null, (String) null, stringArray0, (PeriodPrinter) null, periodFormatterBuilder_Literal0, true, true);
        PeriodFormatter periodFormatter0 = new PeriodFormatter((PeriodPrinter) null, periodFormatterBuilder_Separator0);
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append(periodFormatter0);
        PeriodFormatter periodFormatter1 = periodFormatterBuilder1.toFormatter();
        periodFormatter1.isPrinter();
    }

    @Test(timeout = 4000)
    public void test02837() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("K=S=gbo");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator((String) null, (String) null, stringArray0, (PeriodPrinter) null, periodFormatterBuilder_Literal0, true, true);
        PeriodFormatter periodFormatter0 = new PeriodFormatter((PeriodPrinter) null, periodFormatterBuilder_Separator0);
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append(periodFormatter0);
        PeriodFormatter periodFormatter1 = periodFormatterBuilder1.toFormatter();
        periodFormatter1.isParser();
    }

    @Test(timeout = 4000)
    public void test02938() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.append((PeriodFormatter) null);
    }

    @Test(timeout = 4000)
    public void test03039() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.append((PeriodPrinter) null, (PeriodParser) null);
    }

    @Test(timeout = 4000)
    public void test03140() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendLiteral((String) null);
    }

    @Test(timeout = 4000)
    public void test03241() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix((String) null);
    }

    @Test(timeout = 4000)
    public void test03342() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test03443() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("prg.joda.time.localdatetime", "");
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod(",31PA(CS'uXU.ZZf[w");
    }

    @Test(timeout = 4000)
    public void test03544() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendPrefix("/t;2", (String) null);
    }

    @Test(timeout = 4000)
    public void test03645() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("Ip>O:l=6+&ky(j", "Ip>O:l=6+&ky(j");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendPrefix("Ip>O:l=6+&ky(j");
    }

    @Test(timeout = 4000)
    public void test03746() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix((String) null);
    }

    @Test(timeout = 4000)
    public void test03847() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix((String) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test03948() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix("org.joda.time.format.PeriodFormatterBuilder$SimpleAffix", "No printer or parser supplied");
    }

    @Test(timeout = 4000)
    public void test04049() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSuffix("pt", (String) null);
    }

    @Test(timeout = 4000)
    public void test04150() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Literal0, (PeriodParser) null);
        periodFormatterBuilder0.appendSuffix("org.joda.time.DurationFieldType");
    }

    @Test(timeout = 4000)
    public void test04251() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendLiteral("");
        periodFormatterBuilder1.appendSuffix("", "");
    }

    @Test(timeout = 4000)
    public void test04352() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter((String) null);
    }

    @Test(timeout = 4000)
    public void test04453() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparator("ph$7.,_", (String) null);
    }

    @Test(timeout = 4000)
    public void test04554() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter("org.joda.time.DateTimeFieldType$StandardDateTimeFieldType");
        periodFormatterBuilder1.appendSeparator("org.joda.time.DateTimeFieldType$StandardDateTimeFieldType", "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType");
    }

    @Test(timeout = 4000)
    public void test04655() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter("org.joda.time.DateTimeFieldType$StandardDateTimeFieldType");
        periodFormatterBuilder0.appendSeconds();
        periodFormatterBuilder1.appendSeparator("org.joda.time.DateTimeFieldType$StandardDateTimeFieldType", "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test04756() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix(" q-Q5", " q-Q5");
        periodFormatterBuilder1.appendSeparatorIfFieldsBefore(" q-Q5");
    }

    @Test(timeout = 4000)
    public void test04857() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatter periodFormatter0 = new PeriodFormatter((PeriodPrinter) null, (PeriodParser) null);
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append(periodFormatter0);
        periodFormatterBuilder1.toFormatter();
    }

    @Test(timeout = 4000)
    public void test04958() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Literal0, (PeriodParser) null);
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test05059() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("P+(M(}8 ");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        periodFormatter0.parsePeriod(",1 bM#^R|f3OaZc[8ZY");
    }

    @Test(timeout = 4000)
    public void test05160() throws Throwable {
        Days.parseDays("pt0h8!1fo");
    }

    @Test(timeout = 4000)
    public void test05261() throws Throwable {
        Days.parseDays("p2");
    }

    @Test(timeout = 4000)
    public void test05362() throws Throwable {
        Days.parseDays("p+w");
    }

    @Test(timeout = 4000)
    public void test05463() throws Throwable {
        Days.parseDays("p7.,_");
    }

    @Test(timeout = 4000)
    public void test05564() throws Throwable {
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("ryk@5E/I((iIoo");
        int int0 = periodFormatterBuilder_SimpleAffix0.scan("ryk@5E/I((iIoo", 6);
    }

    @Test(timeout = 4000)
    public void test05665() throws Throwable {
        Days.parseDays("pt16sct?(~uzz_");
    }

    @Test(timeout = 4000)
    public void test05766() throws Throwable {
        Days.parseDays("p4L");
    }

    @Test(timeout = 4000)
    public void test05867() throws Throwable {
        Days.parseDays("p5msp_@|`wmg#");
    }

    @Test(timeout = 4000)
    public void test05968() throws Throwable {
        Days.parseDays("p97t");
    }

    @Test(timeout = 4000)
    public void test06069() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("g", "0^");
        int int0 = periodFormatterBuilder_PluralAffix0.calculatePrintedLength(1);
    }

    @Test(timeout = 4000)
    public void test06170() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("Corrupt zone info map", "org.joda.time.field.ScaledDurationField");
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Corrupt zone info map");
        periodFormatterBuilder_PluralAffix0.printTo(stringBuffer0, 1);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test06171() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("Corrupt zone info map", "org.joda.time.field.ScaledDurationField");
        StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Corrupt zone info map");
        periodFormatterBuilder_PluralAffix0.printTo(stringBuffer0, 1);
        stringBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test06272() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("No field to apply suffix to", "No field to apply suffix to");
        StringWriter stringWriter0 = new StringWriter(1050);
        periodFormatterBuilder_PluralAffix0.printTo((Writer) stringWriter0, (-2687));
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test06373() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendPrefix("hh&WA4g", "hh&WA4g");
        periodFormatterBuilder1.appendMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("hh&WA4g");
    }

    @Test(timeout = 4000)
    public void test06474() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("qWZlHE%|K+1^+L-dQ", "qWZlHE%|K+1^+L-dQ");
        int int0 = periodFormatterBuilder_PluralAffix0.scan("qWZlHE%|K+1^+L-dQ", (-1060));
    }

    @Test(timeout = 4000)
    public void test06575() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("qWZlHE%|K+1^+L-dQ", "l}t");
        int int0 = periodFormatterBuilder_PluralAffix0.scan("qWZlHE%|K+1^+L-dQ", 268);
    }

    @Test(timeout = 4000)
    public void test06676() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("pl%*te", "pl%*te");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix1 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_CompositeAffix0, periodFormatterBuilder_PluralAffix0);
        int int0 = periodFormatterBuilder_CompositeAffix1.parse("pl%*te", (-65015560));
    }

    @Test(timeout = 4000)
    public void test06777() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSuffix("F65%8B?3^tjR&I");
        periodFormatterBuilder2.appendSuffix("F65%8B?3^tjR&I");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("-0#jc");
    }

    @Test(timeout = 4000)
    public void test06878() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[6];
        PeriodFormatterBuilder.SimpleAffix periodFormatterBuilder_SimpleAffix0 = new PeriodFormatterBuilder.SimpleAffix("rc\"CY\"1z(");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(0, 0, 0, true, (-2996), periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_SimpleAffix0, periodFormatterBuilder_SimpleAffix0);
        Locale locale0 = Locale.US;
        int int0 = periodFormatterBuilder_FieldFormatter0.countFieldsToPrint((ReadablePeriod) null, 0, locale0);
    }

    @Test(timeout = 4000)
    public void test06979() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeconds();
        periodFormatterBuilder0.appendSeparator("org.joda.time.DateTimeFieldType$StandardDateTimeFieldType", "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType");
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test07080() throws Throwable {
        MutablePeriod mutablePeriod0 = new MutablePeriod((-11), 4, 4, 4, 4, 4, 4, (-11));
        Days.standardDaysIn(mutablePeriod0);
    }

    @Test(timeout = 4000)
    public void test07181() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test07182() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test07283() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        MutablePeriod mutablePeriod0 = new MutablePeriod(5243L, (Chronology) null);
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) mutablePeriod0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test07284() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        MutablePeriod mutablePeriod0 = new MutablePeriod(5243L, (Chronology) null);
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) mutablePeriod0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test07385() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendMillis();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSuffix("1O6cU+%K.ux0Nao(WE");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test07386() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendMillis();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSuffix("1O6cU+%K.ux0Nao(WE");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test07487() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        periodFormatterBuilder1.printZeroAlways();
        periodFormatterBuilder1.appendMonths();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod("-0");
    }

    @Test(timeout = 4000)
    public void test07588() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendPrefix("P+(M(}8 ");
        PeriodFormatterBuilder periodFormatterBuilder3 = periodFormatterBuilder2.appendMillis3Digit();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder3.toFormatter();
        periodFormatter0.parsePeriod(",1 bM#^R|f3OaZc[8ZY");
    }

    @Test(timeout = 4000)
    public void test07689() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        PeriodType periodType0 = PeriodType.days();
        PeriodFormatter periodFormatter1 = periodFormatter0.withParseType(periodType0);
        periodFormatter1.parsePeriod("x");
    }

    @Test(timeout = 4000)
    public void test07790() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("-AX,T/6cQ_pGcS8<^$");
    }

    @Test(timeout = 4000)
    public void test07891() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("+0EE1kA^,e=IvXJU|=a");
    }

    @Test(timeout = 4000)
    public void test07992() throws Throwable {
        Days.parseDays("p7.mk,_");
    }

    @Test(timeout = 4000)
    public void test08093() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod(",1 bM#^R|f3OaZc[8ZY");
    }

    @Test(timeout = 4000)
    public void test08194() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod(".,00");
    }

    @Test(timeout = 4000)
    public void test08295() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod("0.#c");
    }

    @Test(timeout = 4000)
    public void test08396() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("0.0006>\"f<~t*_");
    }

    @Test(timeout = 4000)
    public void test08497() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        periodFormatter0.parsePeriod("9223372036854775808");
    }

    @Test(timeout = 4000)
    public void test08598() throws Throwable {
        Days days0 = Days.parseDays("p");
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("p", "p");
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(4, 4, 4, true, 10, periodFormatterBuilder_FieldFormatterArray0, (PeriodFormatterBuilder.PeriodFieldAffix) null, periodFormatterBuilder_PluralAffix0);
        long long0 = periodFormatterBuilder_FieldFormatter0.getFieldValue(days0);
    }

    @Test(timeout = 4000)
    public void test08699() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix(".t", ".t");
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[7];
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter(50, 50, 50, true, 4, periodFormatterBuilder_FieldFormatterArray0, periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        Hours hours0 = Hours.ZERO;
        long long0 = periodFormatterBuilder_FieldFormatter0.getFieldValue(hours0);
    }

    @Test(timeout = 4000)
    public void test087100() throws Throwable {
        MutablePeriod mutablePeriod0 = new MutablePeriod(0, 4, 4, 4, 4, 4, 4, 0);
        Days.standardDaysIn(mutablePeriod0);
    }

    @Test(timeout = 4000)
    public void test088101() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test088102() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test089103() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMonths();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Months months0 = Months.ZERO;
        String string0 = periodFormatter0.print(months0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test089104() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMonths();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Months months0 = Months.ZERO;
        String string0 = periodFormatter0.print(months0);
    }

    @Test(timeout = 4000)
    public void test090105() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.days(43);
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test091106() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSecondsWithMillis();
        periodFormatterBuilder2.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test091107() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSecondsWithMillis();
        periodFormatterBuilder2.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test092108() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        Seconds seconds0 = period0.toStandardSeconds();
        String string0 = periodFormatter0.print(seconds0);
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test092109() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroRarelyFirst();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Period period0 = Period.ZERO;
        Seconds seconds0 = period0.toStandardSeconds();
        String string0 = periodFormatter0.print(seconds0);
    }

    @Test(timeout = 4000)
    public void test093110() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendHours();
        periodFormatterBuilder1.printZeroRarelyFirst();
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test094111() throws Throwable {
        PeriodFormatterBuilder.FieldFormatter[] periodFormatterBuilder_FieldFormatterArray0 = new PeriodFormatterBuilder.FieldFormatter[0];
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-2147483647), (-2147483647), (-2147483647), true, (-2147483647), periodFormatterBuilder_FieldFormatterArray0, (PeriodFormatterBuilder.PeriodFieldAffix) null, (PeriodFormatterBuilder.PeriodFieldAffix) null);
        Months months0 = Months.TWELVE;
        long long0 = periodFormatterBuilder_FieldFormatter0.getFieldValue(months0);
    }

    @Test(timeout = 4000)
    public void test095112() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        PeriodType periodType0 = PeriodType.millis();
        PeriodFormatter periodFormatter1 = periodFormatter0.withParseType(periodType0);
        periodFormatter1.parsePeriod(".32c:pg/5&,oh%nacenH separaVors");
    }

    @Test(timeout = 4000)
    public void test096113() throws Throwable {
        Days.parseDays("p3ytas'uxuo.xzf[u");
    }

    @Test(timeout = 4000)
    public void test097114() throws Throwable {
        Days.parseDays("p3dths'uxuo.zxzf[u");
    }

    @Test(timeout = 4000)
    public void test098115() throws Throwable {
        Days.parseDays("pt0m8!1fo");
    }

    @Test(timeout = 4000)
    public void test099116() throws Throwable {
        PeriodFormatterBuilder.PluralAffix periodFormatterBuilder_PluralAffix0 = new PeriodFormatterBuilder.PluralAffix("Builder has created neither a printer nor a parser", "org.joda.time.format.PeriodFormatterBuilder$SimpleAffix");
        PeriodFormatterBuilder.CompositeAffix periodFormatterBuilder_CompositeAffix0 = new PeriodFormatterBuilder.CompositeAffix(periodFormatterBuilder_PluralAffix0, periodFormatterBuilder_PluralAffix0);
        PeriodFormatterBuilder.FieldFormatter periodFormatterBuilder_FieldFormatter0 = new PeriodFormatterBuilder.FieldFormatter((-5759), (-5759), (-5759), true, (-5759), (PeriodFormatterBuilder.FieldFormatter[]) null, periodFormatterBuilder_CompositeAffix0, periodFormatterBuilder_CompositeAffix0);
        MutablePeriod mutablePeriod0 = new MutablePeriod((-5759), 918518400000L);
        periodFormatterBuilder_FieldFormatter0.setFieldValue(mutablePeriod0, (-5759), (-5759));
        mutablePeriod0.size();
    }

    @Test(timeout = 4000)
    public void test100117() throws Throwable {
        Days.parseDays("");
    }

    @Test(timeout = 4000)
    public void test101118() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("Fw9=9BbSgTA", "Z|bCR %Q+");
    }

    @Test(timeout = 4000)
    public void test102119() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
        String[] stringArray0 = new String[1];
        periodFormatterBuilder1.appendSeparator("org.joda.time.DateTimeZone", "org.joda.time.DateTimeZone", stringArray0);
    }

    @Test(timeout = 4000)
    public void test103120() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("Time", "',z%5ue V", stringArray0);
    }

    @Test(timeout = 4000)
    public void test104121() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter("<{C6OtCE:0qhe$r");
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparatorIfFieldsBefore("prg.joda.time.format.periodformatterbuilder$separator");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test105122() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.printZeroRarelyFirst();
        periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        periodFormatterBuilder0.appendSeparator("CQ7L", "CQ7L");
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        String string0 = periodFormatter0.print(period0);
    }

    @Test(timeout = 4000)
    public void test106123() throws Throwable {
        String[] stringArray0 = new String[1];
        stringArray0[0] = "k";
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("k", "Z}Ai", stringArray0, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, false, false);
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator1 = periodFormatterBuilder_Separator0.finish(periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0);
        Days days0 = Days.SEVEN;
        PeriodType periodType0 = days0.getPeriodType();
        MutablePeriod mutablePeriod0 = new MutablePeriod((-3549L), periodType0);
        Locale locale0 = Locale.CANADA;
        int int0 = periodFormatterBuilder_Separator1.calculatePrintedLength(mutablePeriod0, locale0);
    }

    @Test(timeout = 4000)
    public void test107124() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter("7i3i{:");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder1.toFormatter();
        Hours hours0 = Hours.FOUR;
        String string0 = periodFormatter0.print(hours0);
    }

    @Test(timeout = 4000)
    public void test108125() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("Bs8Xd6a<S[EZ\"*i6L|g");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("s5", "s5", (String[]) null, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, false, false);
        StringBuffer stringBuffer0 = new StringBuffer(57);
        PeriodType periodType0 = PeriodType.dayTime();
        Period period0 = new Period(2L, 2147483647L, periodType0);
        Locale locale0 = new Locale("Bs8Xd6a<S[EZ\"*i6L|g", "org.joda.time.format.PeriodFormatterBuilder$SimpleAffix");
        periodFormatterBuilder_Separator0.printTo(stringBuffer0, (ReadablePeriod) period0, locale0);
    }

    @Test(timeout = 4000)
    public void test109126() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter(")WGB]@+K);TB");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test109127() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter(")WGB]@+K);TB");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test110128() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("1v}yx~}S1]J");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test110129() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator("1v}yx~}S1]J");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test111130() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSeparator(".K", ".K");
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test111131() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder0.appendSeparator(".K", ".K");
        periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test112132() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator(" + ", " + ");
        periodFormatterBuilder2.appendHours();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test112133() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator(" + ", " + ");
        periodFormatterBuilder2.appendHours();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test113134() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator(" + ", " + ");
        periodFormatterBuilder2.appendHours();
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test113135() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.printZeroAlways();
        periodFormatterBuilder1.appendMillis3Digit();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSeparator(" + ", " + ");
        periodFormatterBuilder2.appendHours();
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        Period period0 = Period.ZERO;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test114136() throws Throwable {
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = PeriodFormatterBuilder.Literal.EMPTY;
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator("3vwSi0,9eq3],c}Z", "3vwSi0,9eq3],c}Z", (String[]) null, periodFormatterBuilder_Literal0, periodFormatterBuilder_Literal0, false, false);
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        Hours hours0 = Hours.FOUR;
        periodFormatterBuilder_Separator0.printTo((Writer) charArrayWriter0, (ReadablePeriod) hours0, locale0);
    }

    @Test(timeout = 4000)
    public void test115137() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter(")WGB]@+K);TB");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.size();
    }

    @Test(timeout = 4000)
    public void test115138() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter(")WGB]@+K);TB");
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder2.toFormatter();
        Period period0 = new Period();
        CharArrayWriter charArrayWriter0 = new CharArrayWriter();
        periodFormatter0.printTo((Writer) charArrayWriter0, (ReadablePeriod) period0);
        charArrayWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test116139() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendSeparatorIfFieldsAfter("7i3iw:");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("7i3iw:");
    }

    @Test(timeout = 4000)
    public void test117140() throws Throwable {
        String[] stringArray0 = new String[0];
        PeriodFormatterBuilder.Literal periodFormatterBuilder_Literal0 = new PeriodFormatterBuilder.Literal("K=S=gbo");
        PeriodFormatterBuilder.Separator periodFormatterBuilder_Separator0 = new PeriodFormatterBuilder.Separator((String) null, (String) null, stringArray0, (PeriodPrinter) null, periodFormatterBuilder_Literal0, true, true);
        PeriodFormatter periodFormatter0 = new PeriodFormatter((PeriodPrinter) null, periodFormatterBuilder_Separator0);
        periodFormatter0.parsePeriod("K=S=gbo");
    }

    @Test(timeout = 4000)
    public void test118141() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeconds();
        periodFormatterBuilder1.appendSeparatorIfFieldsAfter("");
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("-0#jc");
    }

    @Test(timeout = 4000)
    public void test119142() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        periodFormatterBuilder0.appendMillis3Digit();
        periodFormatterBuilder0.appendSeparator(" + ", " + ");
        periodFormatterBuilder0.appendSecondsWithMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("7-0c");
    }

    @Test(timeout = 4000)
    public void test120143() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSeparatorIfFieldsAfter("7i3iw:");
        periodFormatterBuilder1.appendWeeks();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        periodFormatter0.parsePeriod("7i3iw:");
    }

    @Test(timeout = 4000)
    public void test121144() throws Throwable {
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        PeriodFormatter periodFormatter0 = new PeriodFormatter(periodFormatterBuilder_Composite0, periodFormatterBuilder_Composite0);
        periodFormatter0.parsePeriod("`b0:");
    }

    @Test(timeout = 4000)
    public void test122145() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.appendSecondsWithOptionalMillis();
        PeriodFormatter periodFormatter0 = periodFormatterBuilder0.toFormatter();
        PeriodFormatterBuilder periodFormatterBuilder2 = periodFormatterBuilder1.append(periodFormatter0);
        periodFormatterBuilder2.toFormatter();
        periodFormatter0.isParser();
    }

    @Test(timeout = 4000)
    public void test123146() throws Throwable {
        PeriodFormatterBuilder periodFormatterBuilder0 = new PeriodFormatterBuilder();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        PeriodFormatterBuilder.Composite periodFormatterBuilder_Composite0 = new PeriodFormatterBuilder.Composite(linkedList0);
        PeriodFormatterBuilder periodFormatterBuilder1 = periodFormatterBuilder0.append((PeriodPrinter) periodFormatterBuilder_Composite0, (PeriodParser) periodFormatterBuilder_Composite0);
        PeriodParser periodParser0 = periodFormatterBuilder1.toParser();
        periodParser0.equals((Object) periodFormatterBuilder_Composite0);
    }
}
