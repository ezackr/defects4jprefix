/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 03:42:13 GMT 2024
 */
package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.field.DelegatedDurationField;
import org.joda.time.field.UnsupportedDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UnsupportedDurationField_ESTest extends UnsupportedDurationField_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        int int0 = unsupportedDurationField0.compareTo((DurationField) unsupportedDurationField0);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getMillis(751, (long) 751);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.subtract((-3855L), (-3855L));
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.add(0L, 0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weeks();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getDifferenceAsLong(872L, 872L);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getValue((-1664L));
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getValueAsLong((-3855L));
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getMillis((-675L), (-675L));
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.minutes();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        long long0 = unsupportedDurationField0.getUnitMillis();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getDifference(1513L, 1513L);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
        delegatedDurationField0.getName();
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.months();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getValue((-834L), (-834L));
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.isPrecise();
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.hours();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getMillis((-675L));
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.months();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getMillis((-1));
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.getValueAsLong((-3855L), (-3855L));
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        String string0 = unsupportedDurationField0.toString();
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        UnsupportedDurationField unsupportedDurationField1 = UnsupportedDurationField.getInstance(durationFieldType0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
        DurationField durationField0 = buddhistChronology0.millis();
        int int0 = unsupportedDurationField0.compareTo(durationField0);
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
        DurationField durationField0 = buddhistChronology0.millis();
        int int0 = unsupportedDurationField0.compareTo(durationField0);
        unsupportedDurationField0.isSupported();
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        DurationFieldType durationFieldType1 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType1);
        UnsupportedDurationField unsupportedDurationField1 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField1.equals(unsupportedDurationField0);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.equals(unsupportedDurationField0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.seconds();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.equals(durationFieldType0);
    }
}
