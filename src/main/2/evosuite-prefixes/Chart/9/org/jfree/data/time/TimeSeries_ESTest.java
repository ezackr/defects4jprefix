/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:02:38 GMT 2024
 */
package org.jfree.data.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Panel;
import java.math.BigInteger;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TimeSeries_ESTest extends TimeSeries_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (double) 41684L);
        timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) day0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        TimeSeries timeSeries0 = new TimeSeries(integer0);
        timeSeries0.update(1302, (Number) integer0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, 717.23);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getItems();
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getItems();
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getItems();
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getItems();
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getNextTimePeriod();
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) null);
        timeSeries0.getValue((RegularTimePeriod) day0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        timeSeries0.add((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.setRangeDescription("xrTP^]Fr5'K|q}IgriH");
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.setMaximumItemCount((-2445));
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.setMaximumItemCount(0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.setMaximumItemAge((-777L));
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
        boolean boolean0 = timeSeries0.equals(timeSeriesDataItem0);
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
        boolean boolean0 = timeSeries0.equals(timeSeriesDataItem0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
        boolean boolean0 = timeSeries0.equals(timeSeriesDataItem0);
    }

    @Test(timeout = 4000)
    public void test1118() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
        boolean boolean0 = timeSeries0.equals(timeSeriesDataItem0);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1119() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.getDataItem((RegularTimePeriod) day0);
        boolean boolean0 = timeSeries0.equals(timeSeriesDataItem0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1220() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-686.0));
        timeSeries0.getDataItem((RegularTimePeriod) day0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1321() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 1894.2517, true);
        timeSeries0.getTimePeriods();
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1422() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) bigInteger0);
        timeSeries0.getTimePeriodsUniqueToOtherSeries(timeSeries0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1523() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) bigInteger0);
        timeSeries1.getTimePeriodsUniqueToOtherSeries(timeSeries0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1524() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) bigInteger0);
        timeSeries1.getTimePeriodsUniqueToOtherSeries(timeSeries0);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1625() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getIndex((RegularTimePeriod) null);
    }

    @Test(timeout = 4000)
    public void test1726() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getValue((RegularTimePeriod) day0);
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1727() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getValue((RegularTimePeriod) day0);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1728() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getValue((RegularTimePeriod) day0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test1729() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getValue((RegularTimePeriod) day0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1830() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((TimeSeriesDataItem) null, false);
    }

    @Test(timeout = 4000)
    public void test1931() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Week week0 = new Week();
        timeSeries0.add((RegularTimePeriod) week0, (double) 1);
    }

    @Test(timeout = 4000)
    public void test2032() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (double) 0L);
        timeSeries0.add((RegularTimePeriod) day0, (double) 0L);
    }

    @Test(timeout = 4000)
    public void test2133() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.add(regularTimePeriod0, (-931.256833353));
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2234() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2235() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.setMaximumItemCount(0);
        timeSeries0.add((RegularTimePeriod) day0, (double) 0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2336() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 1894.2517, false);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2437() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        BigInteger bigInteger0 = BigInteger.TEN;
        timeSeries0.update((RegularTimePeriod) day0, (Number) bigInteger0);
    }

    @Test(timeout = 4000)
    public void test2538() throws Throwable {
        Day day0 = new Day();
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2539() throws Throwable {
        Day day0 = new Day();
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
        timeSeries0.update((RegularTimePeriod) fixedMillisecond0, (Number) integer0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test2640() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
    }

    @Test(timeout = 4000)
    public void test2641() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2642() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
        timeSeries1.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2643() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test2644() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test2645() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test2646() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = timeSeries0.addAndOrUpdate(timeSeries0);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test2747() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Short short0 = Short.valueOf((short) 999);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) short0);
        Class<String> class0 = String.class;
        TimeSeries timeSeries1 = new TimeSeries(day0, class0);
        timeSeries1.addAndOrUpdate(timeSeries0);
        timeSeries1.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2848() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        timeSeries0.addOrUpdate((RegularTimePeriod) null, (Number) integer0);
    }

    @Test(timeout = 4000)
    public void test2949() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.setMaximumItemCount(0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test3050() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(regularTimePeriod0);
        timeSeries0.setMaximumItemAge(0L);
        timeSeries0.add(regularTimePeriod0, (double) 0L);
        timeSeries0.add((RegularTimePeriod) day0, (double) 0L);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3151() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(regularTimePeriod0);
        Integer integer0 = JLayeredPane.POPUP_LAYER;
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.addOrUpdate(regularTimePeriod0, (Number) integer0);
        timeSeries0.setMaximumItemAge(0L);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3252() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test3253() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test3254() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test3255() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.removeAgedItems((-3912L), false);
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test3356() throws Throwable {
        Day day0 = new Day();
        Short short0 = new Short((short) (-1070));
        Class<Week> class0 = Week.class;
        TimeSeries timeSeries0 = new TimeSeries(day0, ", but the TimeSeries is expecting an instance of ", ", but the TimeSeries is expecting an instance of ", class0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) short0);
        timeSeries0.removeAgedItems((long) (short) (-1070), false);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3457() throws Throwable {
        Day day0 = new Day();
        Short short0 = new Short((short) (-1070));
        Class<Week> class0 = Week.class;
        TimeSeries timeSeries0 = new TimeSeries(day0, ", but the TimeSeries is expecting an instance of ", ", but the TimeSeries is expecting an instance of ", class0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) short0);
        timeSeries0.setMaximumItemAge(475L);
        timeSeries0.removeAgedItems((long) (short) (-1070), false);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test3558() throws Throwable {
        Day day0 = new Day();
        Short short0 = new Short((short) 29);
        Class<Week> class0 = Week.class;
        TimeSeries timeSeries0 = new TimeSeries(day0, ", but the TimeSeries is expecting an instance of ", ", but the TimeSeries is expecting an instance of ", class0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) short0);
        timeSeries0.setMaximumItemAge(475L);
        timeSeries0.removeAgedItems((long) (short) 29, true);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test3659() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.clear();
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test3660() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.clear();
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test3661() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.clear();
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test3662() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.clear();
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test3763() throws Throwable {
        Day day0 = new Day();
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.clear();
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test3864() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.delete((RegularTimePeriod) day0);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test3865() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.delete((RegularTimePeriod) day0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test3866() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.delete((RegularTimePeriod) day0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test3867() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.delete((RegularTimePeriod) day0);
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test3968() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-524.5638828746754));
        timeSeries0.delete((RegularTimePeriod) day0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test4069() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.delete(2352, (-422));
    }

    @Test(timeout = 4000)
    public void test4170() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.createCopy((-2935), (-2935));
    }

    @Test(timeout = 4000)
    public void test4271() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.createCopy(2, (-4250));
    }

    @Test(timeout = 4000)
    public void test4372() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy(3, 3);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test4373() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy(3, 3);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test4374() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy(3, 3);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test4375() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy(3, 3);
    }

    @Test(timeout = 4000)
    public void test4376() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy(3, 3);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test4477() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.createCopy((RegularTimePeriod) null, (RegularTimePeriod) day0);
    }

    @Test(timeout = 4000)
    public void test4578() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) null);
    }

    @Test(timeout = 4000)
    public void test4679() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        timeSeries0.createCopy((RegularTimePeriod) day0, regularTimePeriod0);
    }

    @Test(timeout = 4000)
    public void test4780() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) day0);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test4781() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) day0);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test4782() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) day0);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test4783() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = timeSeries0.createCopy((RegularTimePeriod) day0, (RegularTimePeriod) day0);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test4884() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        timeSeries0.add((RegularTimePeriod) day0, (double) 41684L);
        timeSeries0.createCopy(regularTimePeriod0, (RegularTimePeriod) day0);
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test4985() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        boolean boolean0 = timeSeries0.equals(timeSeries0);
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test4986() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        boolean boolean0 = timeSeries0.equals(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test4987() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        boolean boolean0 = timeSeries0.equals(timeSeries0);
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test4988() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        boolean boolean0 = timeSeries0.equals(timeSeries0);
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test4989() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        boolean boolean0 = timeSeries0.equals(timeSeries0);
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test5090() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(regularTimePeriod0);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test5091() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(regularTimePeriod0);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test5092() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(regularTimePeriod0);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test5093() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(regularTimePeriod0);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test5094() throws Throwable {
        Day day0 = new Day();
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(regularTimePeriod0);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test5195() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setDomainDescription("");
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test5196() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setDomainDescription("");
        boolean boolean0 = timeSeries1.equals(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test5297() throws Throwable {
        Class<Panel> class0 = Panel.class;
        TimeSeries timeSeries0 = new TimeSeries("Time", "Time", "Time", class0);
        TimeSeries timeSeries1 = new TimeSeries("Time");
        boolean boolean0 = timeSeries0.equals(timeSeries1);
    }

    @Test(timeout = 4000)
    public void test5298() throws Throwable {
        Class<Panel> class0 = Panel.class;
        TimeSeries timeSeries0 = new TimeSeries("Time", "Time", "Time", class0);
        TimeSeries timeSeries1 = new TimeSeries("Time");
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test5299() throws Throwable {
        Class<Panel> class0 = Panel.class;
        TimeSeries timeSeries0 = new TimeSeries("Time", "Time", "Time", class0);
        TimeSeries timeSeries1 = new TimeSeries("Time");
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test52100() throws Throwable {
        Class<Panel> class0 = Panel.class;
        TimeSeries timeSeries0 = new TimeSeries("Time", "Time", "Time", class0);
        TimeSeries timeSeries1 = new TimeSeries("Time");
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test53101() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setMaximumItemAge(2527L);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test53102() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setMaximumItemAge(2527L);
        boolean boolean0 = timeSeries1.equals(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test54103() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setMaximumItemCount(382);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test54104() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.setMaximumItemCount(382);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
    }

    @Test(timeout = 4000)
    public void test55105() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Object object0 = timeSeries0.clone();
        object0.equals((Object) timeSeries0);
    }

    @Test(timeout = 4000)
    public void test55106() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Object object0 = timeSeries0.clone();
        timeSeries0.add((RegularTimePeriod) day0, 969.389);
        boolean boolean0 = object0.equals(timeSeries0);
    }

    @Test(timeout = 4000)
    public void test56107() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test56108() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test56109() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test56110() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test56111() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.equals((Object) timeSeries0);
    }

    @Test(timeout = 4000)
    public void test56112() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, 0.0);
        TimeSeries timeSeries1 = new TimeSeries(day0);
        timeSeries1.add((RegularTimePeriod) day0, 1090.5338654);
        boolean boolean0 = timeSeries0.equals(timeSeries1);
    }

    @Test(timeout = 4000)
    public void test57114() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = (TimeSeries) timeSeries0.clone();
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test57115() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = (TimeSeries) timeSeries0.clone();
        boolean boolean0 = timeSeries0.equals(timeSeries1);
    }

    @Test(timeout = 4000)
    public void test57116() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = (TimeSeries) timeSeries0.clone();
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test57118() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = (TimeSeries) timeSeries0.clone();
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test57119() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        TimeSeries timeSeries1 = (TimeSeries) timeSeries0.clone();
        boolean boolean0 = timeSeries0.equals(timeSeries1);
        timeSeries1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test58120() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0, (String) null, (String) null, (Class) null);
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test58121() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0, (String) null, (String) null, (Class) null);
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test59122() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.hashCode();
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test59123() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test59124() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.hashCode();
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test59125() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test60126() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-931.256833353));
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemAge();
    }

    @Test(timeout = 4000)
    public void test60127() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-931.256833353));
        timeSeries0.hashCode();
        timeSeries0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test60128() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-931.256833353));
        timeSeries0.hashCode();
        timeSeries0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test60129() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        timeSeries0.add((RegularTimePeriod) day0, (-931.256833353));
        timeSeries0.hashCode();
        timeSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test61130() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        timeSeries0.add(regularTimePeriod0, (-931.256833353));
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        timeSeries0.hashCode();
        timeSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test62131() throws Throwable {
        Day day0 = new Day();
        TimeSeries timeSeries0 = new TimeSeries(day0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        RegularTimePeriod regularTimePeriod0 = day0.previous();
        Day day1 = new Day();
        timeSeries0.add(regularTimePeriod0, (-931.256833353));
        timeSeries0.addOrUpdate((RegularTimePeriod) day0, (Number) integer0);
        RegularTimePeriod regularTimePeriod1 = day1.next();
        timeSeries0.addOrUpdate(regularTimePeriod1, (Number) integer0);
        timeSeries0.hashCode();
        timeSeries0.getItemCount();
    }
}
