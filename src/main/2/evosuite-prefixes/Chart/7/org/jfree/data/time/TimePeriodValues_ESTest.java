/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 20:57:06 GMT 2024
 */
package org.jfree.data.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.Second;
import org.jfree.data.time.SimpleTimePeriod;
import org.jfree.data.time.TimePeriod;
import org.jfree.data.time.TimePeriodValue;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TimePeriodValues_ESTest extends TimePeriodValues_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMaxMiddleIndex();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test018() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test019() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0110() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0111() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0112() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0113() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0114() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0115() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        timePeriodValues0.setDomainDescription("");
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0216() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        timePeriodValues0.add((TimePeriod) year0, (-1747.68682));
        Object object0 = timePeriodValues0.clone();
        boolean boolean0 = object0.equals(timePeriodValues0);
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0217() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        timePeriodValues0.add((TimePeriod) year0, (-1747.68682));
        Object object0 = timePeriodValues0.clone();
        boolean boolean0 = object0.equals(timePeriodValues0);
    }

    @Test(timeout = 4000)
    public void test0318() throws Throwable {
        MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
        Month month0 = new Month(mockDate0);
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
        timePeriodValues0.getValue(0);
    }

    @Test(timeout = 4000)
    public void test0419() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0420() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0421() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0422() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0423() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0424() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test0425() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0426() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", "");
        int int0 = timePeriodValues0.getMinEndIndex();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0527() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0528() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0529() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0530() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test0531() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0532() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0533() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0534() throws Throwable {
        Day day0 = new Day();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, "", "");
        int int0 = timePeriodValues0.getMaxStartIndex();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0635() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0636() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0637() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0638() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0639() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0640() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test0641() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0642() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinStartIndex();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0743() throws Throwable {
        MockDate mockDate0 = new MockDate((-1359L));
        Year year0 = new Year(mockDate0);
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0);
        timePeriodValues0.getTimePeriod(2252);
    }

    @Test(timeout = 4000)
    public void test0844() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0845() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test0846() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0847() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0848() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test0849() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0850() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0851() throws Throwable {
        Month month0 = new Month();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0, "", ", but the TimeSeries is expecting an instance of ");
        int int0 = timePeriodValues0.getMaxEndIndex();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0952() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0953() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test0954() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test0955() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test0956() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test0957() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test0958() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test0959() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        int int0 = timePeriodValues0.getMinMiddleIndex();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1060() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        timePeriodValues0.add((TimePeriodValue) null);
    }

    @Test(timeout = 4000)
    public void test1161() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Time", "Time");
        timePeriodValues0.add((TimePeriod) year0, 0.0);
        SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(249L, 3194L);
        BigInteger bigInteger0 = BigInteger.TEN;
        timePeriodValues0.add((TimePeriod) simpleTimePeriod0, (Number) bigInteger0);
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1262() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond((-1743L));
        TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) fixedMillisecond0, (-1564.23683));
        timePeriodValues0.add(timePeriodValue0);
        timePeriodValues0.add((TimePeriod) year0, (-1564.23683));
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test1363() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        timePeriodValues0.add((TimePeriod) year0, (Number) integer0);
        timePeriodValues0.delete(1859, (-1817));
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test1464() throws Throwable {
        Second second0 = new Second();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
        timePeriodValues0.delete(59, 274);
    }

    @Test(timeout = 4000)
    public void test1565() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1566() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1567() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test1568() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1569() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1570() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    }

    @Test(timeout = 4000)
    public void test1571() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test1572() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test1573() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test1674() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test1675() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test1676() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1677() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
    }

    @Test(timeout = 4000)
    public void test1678() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1679() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test1680() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test1681() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1682() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        boolean boolean0 = timePeriodValues0.equals("");
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1783() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test1784() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1785() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    }

    @Test(timeout = 4000)
    public void test1786() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1787() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test1788() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test1789() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test1790() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test1791() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1792() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1793() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues("y");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1894() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test1895() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test1896() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test1897() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    }

    @Test(timeout = 4000)
    public void test1898() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test1899() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test18100() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test18101() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test18102() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test18103() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test18104() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Null 'range' argument.", "Null 'range' argument.");
        TimePeriodValues timePeriodValues1 = new TimePeriodValues(year0);
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test19105() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        timePeriodValues1.setRangeDescription("e[");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
        timePeriodValues1.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test19106() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "y", "y");
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        timePeriodValues1.setRangeDescription("e[");
        boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    }

    @Test(timeout = 4000)
    public void test20107() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Time", "Time");
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(249L, 3194L);
        BigInteger bigInteger0 = BigInteger.TEN;
        timePeriodValues1.add((TimePeriod) simpleTimePeriod0, (Number) bigInteger0);
        boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
        timePeriodValues1.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test20108() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "Time", "Time");
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        SimpleTimePeriod simpleTimePeriod0 = new SimpleTimePeriod(249L, 3194L);
        BigInteger bigInteger0 = BigInteger.TEN;
        timePeriodValues1.add((TimePeriod) simpleTimePeriod0, (Number) bigInteger0);
        boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    }

    @Test(timeout = 4000)
    public void test21109() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        timePeriodValues0.add((TimePeriod) year0, (-1747.68682));
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        timePeriodValues1.update(0, (Number) null);
        boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test21110() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, "", "");
        timePeriodValues0.add((TimePeriod) year0, (-1747.68682));
        TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
        timePeriodValues1.update(0, (Number) null);
        boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    }

    @Test(timeout = 4000)
    public void test22111() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, (String) null, "org.jfree.data.ComparableObjectItem");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test22112() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, (String) null, "org.jfree.data.ComparableObjectItem");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test22113() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, (String) null, "org.jfree.data.ComparableObjectItem");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test22114() throws Throwable {
        Year year0 = new Year();
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(year0, (String) null, "org.jfree.data.ComparableObjectItem");
        timePeriodValues0.hashCode();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test23115() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getRangeDescription();
    }

    @Test(timeout = 4000)
    public void test23116() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test23117() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test23118() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxStartIndex();
    }

    @Test(timeout = 4000)
    public void test23119() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxEndIndex();
    }

    @Test(timeout = 4000)
    public void test23120() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test23121() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test23122() throws Throwable {
        TimePeriodValues timePeriodValues0 = new TimePeriodValues("org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues", "org.jfree.data.time.TimePriodValues");
        timePeriodValues0.hashCode();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test24123() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test24124() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinStartIndex();
    }

    @Test(timeout = 4000)
    public void test24125() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinMiddleIndex();
    }

    @Test(timeout = 4000)
    public void test24126() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getDomainDescription();
    }

    @Test(timeout = 4000)
    public void test24127() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getMinEndIndex();
    }

    @Test(timeout = 4000)
    public void test24128() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        TimePeriodValues timePeriodValues0 = new TimePeriodValues(bigInteger0, "83OYa4>?*hGzK7[KR;", (String) null);
        timePeriodValues0.hashCode();
        timePeriodValues0.getMaxEndIndex();
    }
}
