/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:08:24 GMT 2024
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MultiplePiePlot_ESTest extends MultiplePiePlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
        String string0 = multiplePiePlot0.getPlotType();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
        String string0 = multiplePiePlot0.getPlotType();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Number[][] numberArray0 = new Number[3][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        Comparable comparable0 = multiplePiePlot0.getAggregatedItemsKey();
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        Number[][] numberArray0 = new Number[3][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        Comparable comparable0 = multiplePiePlot0.getAggregatedItemsKey();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("1m", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setLimit(10);
        multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        double double0 = multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.getDataExtractOrder();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) multiplePiePlot0.getAggregatedItemsPaint();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0610() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        Color color0 = (Color) multiplePiePlot0.getAggregatedItemsPaint();
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test0711() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setDataset((CategoryDataset) null);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
        multiplePiePlot0.setDataset(defaultKeyedValues2DDataset0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        multiplePiePlot0.setPieChart(jFreeChart0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setPieChart((JFreeChart) null);
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
        multiplePiePlot0.setPieChart(jFreeChart0);
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setDataExtractOrder((TableOrder) null);
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setAggregatedItemsKey((Comparable) null);
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        multiplePiePlot0.setAggregatedItemsPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        double[] doubleArray1 = new double[5];
        doubleArray1[3] = 45.0;
        doubleArray0[0] = doubleArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        multiplePiePlot0.setLimit(45.0);
        Font font0 = SpiderWebPlot.DEFAULT_LABEL_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("1m", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        Font font0 = AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.labels.AbstractPieItemLabelGenerator", font0, multiplePiePlot0, false);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 250, 1431.698123874, 45.0, chartRenderingInfo0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        double[][] doubleArray0 = new double[1][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        Font font0 = PeriodAxisLabelInfo.DEFAULT_FONT;
        JFreeChart jFreeChart0 = new JFreeChart("", font0, multiplePiePlot0, false);
        jFreeChart0.createBufferedImage(10, 10);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test2129() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test2230() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test2231() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2332() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        boolean boolean0 = multiplePiePlot0.equals(legendItemCollection0);
    }

    @Test(timeout = 4000)
    public void test2333() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        LegendItemCollection legendItemCollection0 = multiplePiePlot0.getLegendItems();
        boolean boolean0 = multiplePiePlot0.equals(legendItemCollection0);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2434() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot1.equals(multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test2435() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultBoxAndWhiskerCategoryDataset0);
        TableOrder tableOrder0 = TableOrder.BY_ROW;
        multiplePiePlot0.setDataExtractOrder(tableOrder0);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot1.equals(multiplePiePlot0);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test2536() throws Throwable {
        Number[][] numberArray0 = new Number[3][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        multiplePiePlot0.setLimit(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot0.getLimit();
    }

    @Test(timeout = 4000)
    public void test2537() throws Throwable {
        Number[][] numberArray0 = new Number[3][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        multiplePiePlot0.setLimit(10);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test2638() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.equals((Object) multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test2639() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setAggregatedItemsKey(1.0F);
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.equals((Object) multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test2640() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setAggregatedItemsKey(1.0F);
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test2742() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setAggregatedItemsPaint(multiplePiePlot0.DEFAULT_OUTLINE_PAINT);
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.equals((Object) multiplePiePlot0);
    }

    @Test(timeout = 4000)
    public void test2743() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setAggregatedItemsPaint(multiplePiePlot0.DEFAULT_OUTLINE_PAINT);
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test2844() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        jFreeChart0.setBorderStroke(multiplePiePlot0.DEFAULT_OUTLINE_STROKE);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
    }

    @Test(timeout = 4000)
    public void test2845() throws Throwable {
        double[][] doubleArray0 = new double[5][6];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        jFreeChart0.setBorderStroke(multiplePiePlot0.DEFAULT_OUTLINE_STROKE);
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        boolean boolean0 = multiplePiePlot0.equals(multiplePiePlot1);
        multiplePiePlot1.getLimit();
    }

    @Test(timeout = 4000)
    public void test2947() throws Throwable {
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        MultiplePiePlot multiplePiePlot1 = new MultiplePiePlot();
        multiplePiePlot1.setBackgroundAlpha(10);
        boolean boolean0 = multiplePiePlot1.equals(multiplePiePlot0);
    }
}
