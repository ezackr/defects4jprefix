/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 20:53:40 GMT 2024
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Area;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.annotations.XYShapeAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYDotRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.chart.renderer.xy.XYStepAreaRenderer;
import org.jfree.chart.urls.StandardXYZURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        GeneralPath generalPath0 = new GeneralPath();
        Rectangle rectangle0 = generalPath0.getBounds();
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
        JFreeChart jFreeChart0 = new JFreeChart("L`e[/<(", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, multiplePiePlot0, true);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, true, true);
        xYPlot0.select((double) 1969, (double) 10, (Rectangle2D) rectangle0, (RenderingSource) chartPanel0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Stroke stroke0 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Stroke stroke0 = combinedRangeXYPlot0.getDomainMinorGridlineStroke();
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
        Collection collection0 = combinedRangeXYPlot0.getRangeMarkers(10, layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
        Collection collection0 = combinedRangeXYPlot0.getRangeMarkers(10, layer0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, 1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
        Collection collection0 = combinedRangeXYPlot0.getRangeMarkers(10, layer0);
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        boolean boolean0 = combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYShapeAnnotation xYShapeAnnotation0 = new XYShapeAnnotation(combinedRangeXYPlot0.DEFAULT_LEGEND_ITEM_BOX, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
        boolean boolean0 = combinedRangeXYPlot0.removeAnnotation((XYAnnotation) xYShapeAnnotation0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0048() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        Color color0 = (Color) xYPlot0.getDomainZeroBaselinePaint();
        ValueMarker valueMarker0 = new ValueMarker(4, color0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
        xYPlot0.removeDomainMarker(4, (Marker) valueMarker0, (Layer) null, true);
        color0.getGreen();
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        Color color0 = (Color) xYPlot0.getDomainZeroBaselinePaint();
        ValueMarker valueMarker0 = new ValueMarker(4, color0, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE);
        xYPlot0.removeDomainMarker(4, (Marker) valueMarker0, (Layer) null, true);
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test00510() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.canSelectByRegion();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00611() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(4239.719503, 1.0F, xYPlot0.DEFAULT_GRIDLINE_PAINT);
        boolean boolean0 = xYPlot0.removeDomainMarker((Marker) intervalMarker0);
    }

    @Test(timeout = 4000)
    public void test00612() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(4239.719503, 1.0F, xYPlot0.DEFAULT_GRIDLINE_PAINT);
        boolean boolean0 = xYPlot0.removeDomainMarker((Marker) intervalMarker0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00713() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test00814() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test00815() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00916() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.canSelectByPoint();
    }

    @Test(timeout = 4000)
    public void test01017() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01018() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01019() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01020() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Color color0 = (Color) combinedDomainXYPlot0.getRangeZeroBaselinePaint();
        color0.getRed();
    }

    @Test(timeout = 4000)
    public void test01121() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDataset((XYDataset) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01122() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDataset((XYDataset) null);
        combinedRangeXYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test01223() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.clearAnnotations();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01324() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeCrosshairPaint();
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test01325() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeCrosshairPaint();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01326() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getRangeCrosshairPaint();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01427() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        HistogramDataset histogramDataset0 = new HistogramDataset();
        XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
        XYPlot xYPlot0 = new XYPlot(histogramDataset0, numberAxis3D0, numberAxis3D0, xYSplineRenderer0);
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.equals((Object) xYPlot0);
    }

    @Test(timeout = 4000)
    public void test01428() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        HistogramDataset histogramDataset0 = new HistogramDataset();
        XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
        XYPlot xYPlot0 = new XYPlot(histogramDataset0, numberAxis3D0, numberAxis3D0, xYSplineRenderer0);
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01529() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        xYPlot0.handleClick(0, 0, plotRenderingInfo0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01530() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        xYPlot0.handleClick(0, 0, plotRenderingInfo0);
        chartPanel0.isDomainZoomable();
    }

    @Test(timeout = 4000)
    public void test01531() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        xYPlot0.handleClick(0, 0, plotRenderingInfo0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01632() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeCrosshairStroke();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01633() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeCrosshairStroke();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01734() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(Double.POSITIVE_INFINITY, 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0);
        combinedRangeXYPlot0.clearRangeMarkers();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01735() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(Double.POSITIVE_INFINITY, 10, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        combinedRangeXYPlot0.addRangeMarker((Marker) intervalMarker0);
        combinedRangeXYPlot0.clearRangeMarkers();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01836() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedDomainXYPlot0.zoomDomainAxes(0.75, plotRenderingInfo0, (Point2D) point0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test01837() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedDomainXYPlot0.zoomDomainAxes(0.75, plotRenderingInfo0, (Point2D) point0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01938() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Point2D.Double point2D_Double0 = (Point2D.Double) xYPlot0.getQuadrantOrigin();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01939() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Point2D.Double point2D_Double0 = (Point2D.Double) xYPlot0.getQuadrantOrigin();
    }

    @Test(timeout = 4000)
    public void test02041() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.removeRangeMarker((Marker) null);
    }

    @Test(timeout = 4000)
    public void test02142() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getPlotType();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02243() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setFixedRangeAxisSpace((AxisSpace) null);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02344() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeTickBandPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02345() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeTickBandPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02346() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeTickBandPaint(combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02447() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point2D.Double point2D_Double0 = new Point2D.Double();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedRangeXYPlot0.zoomRangeAxes(0.15, plotRenderingInfo0, (Point2D) point2D_Double0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02548() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        rectangleInsets0.getRight();
    }

    @Test(timeout = 4000)
    public void test02549() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        rectangleInsets0.getBottom();
    }

    @Test(timeout = 4000)
    public void test02550() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        rectangleInsets0.getTop();
    }

    @Test(timeout = 4000)
    public void test02551() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02552() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02553() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RectangleInsets rectangleInsets0 = combinedRangeXYPlot0.getAxisOffset();
        rectangleInsets0.getLeft();
    }

    @Test(timeout = 4000)
    public void test02654() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
        combinedRangeXYPlot0.setRangeAxisLocation(68, axisLocation0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02755() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselineVisible(false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02756() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselineVisible(false);
        combinedRangeXYPlot0.isRangeZeroBaselineVisible();
    }

    @Test(timeout = 4000)
    public void test02857() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getRangeZeroBaselineStroke();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02958() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getSeriesRenderingOrder();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02959() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getSeriesRenderingOrder();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02960() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getSeriesRenderingOrder();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03061() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation((-702));
    }

    @Test(timeout = 4000)
    public void test03062() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation((-702));
        combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03163() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setFixedDomainAxisSpace((AxisSpace) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03264() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test03265() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03366() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
        combinedRangeXYPlot0.setDomainAxisLocation(16, axisLocation0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03367() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
        combinedRangeXYPlot0.setDomainAxisLocation(16, axisLocation0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03368() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = combinedRangeXYPlot0.getDomainAxisLocation();
        combinedRangeXYPlot0.setDomainAxisLocation(16, axisLocation0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test03469() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYShapeRenderer0);
        AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(500);
    }

    @Test(timeout = 4000)
    public void test03470() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYShapeRenderer0);
        AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(500);
        xYPlot0.setRangeAxisLocation(axisLocation0, true);
        JFreeChart jFreeChart0 = new JFreeChart("G\"m^iuFv<+Q", xYShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
        jFreeChart0.createBufferedImage(118, 118, (ChartRenderingInfo) null);
        xYPlot0.isDomainGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test03471() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYShapeRenderer0);
        AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation(500);
        xYPlot0.setRangeAxisLocation(axisLocation0, true);
        JFreeChart jFreeChart0 = new JFreeChart("G\"m^iuFv<+Q", xYShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
        jFreeChart0.createBufferedImage(118, 118, (ChartRenderingInfo) null);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03572() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeMarkers((Layer) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test03573() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeMarkers((Layer) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03674() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getAnnotations();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03675() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getAnnotations();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03776() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainZeroBaselineVisible(true);
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        combinedRangeXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D_Float0);
    }

    @Test(timeout = 4000)
    public void test03877() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairValue(0.9);
        combinedRangeXYPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test03978() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeMinorGridlineStroke();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test03979() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeMinorGridlineStroke();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03980() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getRangeMinorGridlineStroke();
        basicStroke0.getEndCap();
    }

    @Test(timeout = 4000)
    public void test04081() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getDomainZeroBaselineStroke();
        basicStroke0.getLineJoin();
    }

    @Test(timeout = 4000)
    public void test04082() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getDomainZeroBaselineStroke();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04083() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeXYPlot0.getDomainZeroBaselineStroke();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04184() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedRangeXYPlot0.panDomainAxes(2.0F, plotRenderingInfo0, (Point2D) null);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04185() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedRangeXYPlot0.panDomainAxes(2.0F, plotRenderingInfo0, (Point2D) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04286() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainPannable(true);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedRangeXYPlot0.panDomainAxes(2.0F, plotRenderingInfo0, (Point2D) null);
        combinedRangeXYPlot0.isDomainPannable();
    }

    @Test(timeout = 4000)
    public void test04387() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.getDomainMarkers(layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04388() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.getDomainMarkers(layer0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04489() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getDomainCrosshairPaint();
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test04490() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getDomainCrosshairPaint();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04591() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getDomainMinorGridlinePaint();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04592() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getDomainMinorGridlinePaint();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04593() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) combinedRangeXYPlot0.getDomainMinorGridlinePaint();
        color0.getRGB();
    }

    @Test(timeout = 4000)
    public void test04694() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeMinorGridlinePaint();
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04695() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeMinorGridlinePaint();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04696() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeMinorGridlinePaint();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04697() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        Color color0 = (Color) xYPlot0.getRangeMinorGridlinePaint();
        color0.getGreen();
    }

    @Test(timeout = 4000)
    public void test04798() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getSeriesCount();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test04799() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getSeriesCount();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test047100() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getSeriesCount();
    }

    @Test(timeout = 4000)
    public void test048101() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test048102() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test049103() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getWeight();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test049104() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test049105() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.getWeight();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test050106() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangePannable(true);
        combinedRangeXYPlot0.isRangePannable();
    }

    @Test(timeout = 4000)
    public void test051107() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getFixedDomainAxisSpace();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test051108() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getFixedDomainAxisSpace();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test052109() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
        combinedRangeXYPlot0.setDomainAxisLocation(axisLocation0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test053110() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0.05);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation((-1.0), (-3593.5374403), 1.0F, 1278.8);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, true);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test053111() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0.05);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation((-1.0), (-3593.5374403), 1.0F, 1278.8);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, true);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test054112() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test055113() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getFixedRangeAxisSpace();
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test056114() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SystemColor systemColor0 = SystemColor.window;
        combinedRangeXYPlot0.setDomainTickBandPaint(systemColor0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test056115() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SystemColor systemColor0 = SystemColor.window;
        combinedRangeXYPlot0.setDomainTickBandPaint(systemColor0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test057116() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.getDomainCrosshairStroke();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test058117() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        combinedRangeXYPlot0.setOrientation(plotOrientation0);
        combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test059118() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setOrientation((PlotOrientation) null);
    }

    @Test(timeout = 4000)
    public void test060119() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        combinedRangeXYPlot0.setOrientation(plotOrientation0);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        combinedRangeXYPlot0.drawVerticalLine((Graphics2D) null, rectangle2D_Double0, 1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT);
    }

    @Test(timeout = 4000)
    public void test061120() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test061121() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setAxisOffset(combinedRangeXYPlot0.DEFAULT_INSETS);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test062122() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setAxisOffset((RectangleInsets) null);
    }

    @Test(timeout = 4000)
    public void test063123() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
        combinedDomainXYPlot0.add((XYPlot) combinedRangeXYPlot0, 500);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test064124() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(560.0, 560.0);
        XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBarRenderer0);
        ValueAxis[] valueAxisArray0 = new ValueAxis[2];
        valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
        xYPlot0.setDomainAxes(valueAxisArray0);
        xYPlot0.setDataset(244, (XYDataset) null);
        xYPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test065125() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.clearDomainAxes();
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test065126() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.clearDomainAxes();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test066127() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearDomainAxes();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test066128() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearDomainAxes();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test067129() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainAxisEdge(244);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test068130() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainAxisLocation((AxisLocation) null, true);
    }

    @Test(timeout = 4000)
    public void test069131() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
        combinedRangeXYPlot0.setDomainAxisLocation(3450, axisLocation0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test070132() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot((ValueAxis) null);
        combinedRangeXYPlot0.add((XYPlot) combinedRangeXYPlot1, 1029);
        combinedRangeXYPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test071133() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
        combinedRangeXYPlot0.setRangeAxis(0, (ValueAxis) numberAxis3D0);
        combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test072134() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueAxis[] valueAxisArray0 = new ValueAxis[1];
        combinedRangeXYPlot0.setRangeAxes(valueAxisArray0);
        combinedRangeXYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test073135() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearRangeAxes();
        combinedRangeXYPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test074136() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
        combinedDomainXYPlot0.clearRangeAxes();
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test075137() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeAxisLocation((AxisLocation) null, true);
    }

    @Test(timeout = 4000)
    public void test076138() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
        combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test076139() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
        combinedRangeXYPlot0.setRangeAxisLocation(axisLocation0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test077140() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(560.0, 560.0);
        XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBarRenderer0);
        xYPlot0.setDataset(244, (XYDataset) null);
        xYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test078141() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.indexOf(defaultTableXYDataset0);
    }

    @Test(timeout = 4000)
    public void test078142() throws Throwable {
        DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        int int0 = combinedRangeXYPlot0.indexOf(defaultTableXYDataset0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test079143() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LinkedList<DefaultXYZDataset> linkedList0 = new LinkedList<DefaultXYZDataset>();
        combinedRangeXYPlot0.mapDatasetToDomainAxes((-5667), linkedList0);
    }

    @Test(timeout = 4000)
    public void test080144() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.mapDatasetToRangeAxis((-2020), 2284);
    }

    @Test(timeout = 4000)
    public void test081145() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.mapDatasetToRangeAxes(9999, (List) null);
    }

    @Test(timeout = 4000)
    public void test082146() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Vector<SystemColor> vector0 = new Vector<SystemColor>();
        combinedRangeXYPlot0.mapDatasetToDomainAxes(10, vector0);
    }

    @Test(timeout = 4000)
    public void test083147() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ArrayList<DefaultXYItemRenderer> arrayList0 = new ArrayList<DefaultXYItemRenderer>();
        DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
        arrayList0.add(defaultXYItemRenderer0);
        combinedRangeXYPlot0.mapDatasetToRangeAxes(3406, arrayList0);
    }

    @Test(timeout = 4000)
    public void test084148() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(1.0F, true);
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(clusteredXYBarRenderer0.ZERO);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.setRenderer((XYItemRenderer) clusteredXYBarRenderer0);
        xYPlot0.isSubplot();
    }

    @Test(timeout = 4000)
    public void test085149() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRenderer((XYItemRenderer) null);
        combinedRangeXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test086150() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYItemRenderer[] xYItemRendererArray0 = new XYItemRenderer[1];
        combinedRangeXYPlot0.setRenderers(xYItemRendererArray0);
        combinedRangeXYPlot0.isDomainMinorGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test087151() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
        combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test087152() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
        combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test088153() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
    }

    @Test(timeout = 4000)
    public void test089154() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SeriesRenderingOrder seriesRenderingOrder0 = SeriesRenderingOrder.REVERSE;
        combinedRangeXYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test090155() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setSeriesRenderingOrder((SeriesRenderingOrder) null);
    }

    @Test(timeout = 4000)
    public void test091156() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
        xYPlot0.getRendererForDataset(vectorSeriesCollection0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test091157() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
        xYPlot0.getRendererForDataset(vectorSeriesCollection0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test092158() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(true);
        XYPlot xYPlot0 = null;
        xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, numberAxis3D0, (XYItemRenderer) null);
    }

    @Test(timeout = 4000)
    public void test093159() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainGridlinesVisible(true);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test094160() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
        combinedDomainXYPlot0.setDomainGridlinesVisible(false);
        combinedDomainXYPlot0.isDomainGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test095161() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test095162() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test095163() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlinesVisible(false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test096164() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setDomainMinorGridlinesVisible(true);
        combinedDomainXYPlot0.isDomainMinorGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test097165() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        combinedRangeXYPlot0.setDomainGridlineStroke(basicStroke0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test097166() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        combinedRangeXYPlot0.setDomainGridlineStroke(basicStroke0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test098167() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test099168() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setDomainMinorGridlineStroke(basicStroke0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test099169() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) PolarPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setDomainMinorGridlineStroke(basicStroke0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test100170() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test101171() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
        combinedRangeXYPlot0.setDomainGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test101172() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
        combinedRangeXYPlot0.setDomainGridlinePaint(logarithmicAxis0.DEFAULT_AXIS_LINE_PAINT);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test102173() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test103174() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SystemColor systemColor0 = SystemColor.info;
        combinedRangeXYPlot0.setDomainMinorGridlinePaint(systemColor0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test104175() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainMinorGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test105176() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test105177() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test106178() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setRangeGridlinesVisible(false);
        combinedDomainXYPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test107179() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) Plot.DEFAULT_OUTLINE_STROKE;
        combinedRangeXYPlot0.setRangeGridlineStroke(basicStroke0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test108180() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test109181() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeGridlinePaint(combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
        combinedRangeXYPlot0.getBackgroundAlpha();
    }

    @Test(timeout = 4000)
    public void test110182() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test111183() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlinesVisible(false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test111184() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlinesVisible(false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test111185() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlinesVisible(false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test112186() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlinesVisible(true);
        combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test113187() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test113188() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setRangeMinorGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test114189() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test115190() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedRangeXYPlot0.setRangeMinorGridlinePaint(color0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test116191() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeMinorGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test117192() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(560.0, 560.0);
        XYBarRenderer xYBarRenderer0 = new XYBarRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, cyclicNumberAxis0, cyclicNumberAxis0, xYBarRenderer0);
        xYPlot0.setDomainZeroBaselineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test118193() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDomainZeroBaselineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test119194() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SystemColor systemColor0 = SystemColor.inactiveCaption;
        combinedRangeXYPlot0.setDomainZeroBaselinePaint(systemColor0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test119195() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SystemColor systemColor0 = SystemColor.inactiveCaption;
        combinedRangeXYPlot0.setDomainZeroBaselinePaint(systemColor0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test120196() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainZeroBaselinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test121197() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        BasicStroke basicStroke0 = (BasicStroke) Axis.DEFAULT_TICK_MARK_STROKE;
        combinedRangeXYPlot0.setRangeZeroBaselineStroke(basicStroke0);
    }

    @Test(timeout = 4000)
    public void test122198() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test123199() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.setRangeZeroBaselinePaint(numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test124200() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeZeroBaselinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test125201() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Point2D.Float point2D_Float0 = new Point2D.Float();
        combinedRangeXYPlot0.setQuadrantOrigin(point2D_Float0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test126202() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setQuadrantOrigin((Point2D) null);
    }

    @Test(timeout = 4000)
    public void test127203() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getQuadrantPaint((-1767));
    }

    @Test(timeout = 4000)
    public void test128204() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getQuadrantPaint(1);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test129205() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getQuadrantPaint(10);
    }

    @Test(timeout = 4000)
    public void test130206() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = (Color) Axis.DEFAULT_AXIS_LABEL_PAINT;
        combinedRangeXYPlot0.setQuadrantPaint((-5501), color0);
    }

    @Test(timeout = 4000)
    public void test131207() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setQuadrantPaint(0, (Paint) null);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test131208() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setQuadrantPaint(0, (Paint) null);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test132209() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(500);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.setQuadrantPaint(500, clusteredXYBarRenderer0.DEFAULT_PAINT);
    }

    @Test(timeout = 4000)
    public void test133210() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test133211() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test133212() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test134213() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addDomainMarker((-3908), (Marker) valueMarker0, layer0);
        combinedRangeXYPlot0.clearDomainMarkers();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test135214() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addDomainMarker(500, (Marker) null, layer0, true);
    }

    @Test(timeout = 4000)
    public void test136215() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
        combinedRangeXYPlot0.addDomainMarker(3, (Marker) categoryMarker0, (Layer) null, false);
    }

    @Test(timeout = 4000)
    public void test137216() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test137217() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test138218() throws Throwable {
        ValueMarker valueMarker0 = new ValueMarker(1.0);
        Layer layer0 = Layer.BACKGROUND;
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test138219() throws Throwable {
        ValueMarker valueMarker0 = new ValueMarker(1.0);
        Layer layer0 = Layer.BACKGROUND;
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.addDomainMarker(750, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test139220() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(10, 81.9296875, xYPlot0.DEFAULT_GRIDLINE_PAINT, xYPlot0.DEFAULT_OUTLINE_STROKE, xYPlot0.DEFAULT_OUTLINE_PAINT, xYPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
        Layer layer0 = Layer.FOREGROUND;
        xYPlot0.addRangeMarker(468, (Marker) intervalMarker0, layer0, true);
        xYPlot0.addRangeMarker(468, (Marker) intervalMarker0, layer0, true);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test140221() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
        combinedRangeXYPlot0.addRangeMarker((-1072), (Marker) categoryMarker0, (Layer) null);
    }

    @Test(timeout = 4000)
    public void test141222() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2720, (Marker) valueMarker0, layer0);
        combinedRangeXYPlot0.addRangeMarker(2720, (Marker) valueMarker0, layer0, true);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test142223() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker((-513), (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test142224() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeXYPlot0.addRangeMarker((-513), (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test143225() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test144226() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2053, (Marker) valueMarker0, layer0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(2053, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test144227() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2053, (Marker) valueMarker0, layer0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(2053, (Marker) valueMarker0, layer0, false);
    }

    @Test(timeout = 4000)
    public void test144228() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2053, (Marker) valueMarker0, layer0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(2053, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test145229() throws Throwable {
        Color color0 = Color.pink;
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
        Stroke stroke0 = piePlot0.getLabelOutlineStroke();
        ValueMarker valueMarker0 = new ValueMarker((-513.3098), color0, stroke0);
        Layer layer0 = Layer.BACKGROUND;
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
        IntervalMarker intervalMarker0 = new IntervalMarker(0.08, 1.0F, color0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(10, (Marker) intervalMarker0, layer0, true);
    }

    @Test(timeout = 4000)
    public void test146230() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2053, (Marker) valueMarker0, layer0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(2053, (Marker) valueMarker0, layer0, true);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test146231() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addRangeMarker(2053, (Marker) valueMarker0, layer0);
        boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker(2053, (Marker) valueMarker0, layer0, true);
    }

    @Test(timeout = 4000)
    public void test147232() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) null);
    }

    @Test(timeout = 4000)
    public void test148233() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(0.001, 1.0, 10, (-382.671164));
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test148234() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(0.001, 1.0, 10, (-382.671164));
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test148235() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(0.001, 1.0, 10, (-382.671164));
        combinedRangeXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0, false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test149236() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.removeAnnotation((XYAnnotation) null, false);
    }

    @Test(timeout = 4000)
    public void test150237() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 1.0F, 10, 2.0F);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, false);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test150238() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 1.0F, 10, 2.0F);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, false);
    }

    @Test(timeout = 4000)
    public void test150239() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 1.0F, 10, 2.0F);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYLineAnnotation0, false);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test151240() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Rectangle rectangle0 = new Rectangle();
        combinedRangeXYPlot0.calculateDomainAxisSpace((Graphics2D) null, rectangle0, (AxisSpace) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test152241() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
    }

    @Test(timeout = 4000)
    public void test152242() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        AxisSpace axisSpace0 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test153243() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test154244() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(468, 1, chartRenderingInfo0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test155245() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15, chartRenderingInfo0);
        bufferedImage0.hasTileWriters();
    }

    @Test(timeout = 4000)
    public void test156246() throws Throwable {
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D_Double0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test156247() throws Throwable {
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
        combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D_Double0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test157248() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainAxisForDataset((-1208));
    }

    @Test(timeout = 4000)
    public void test158249() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getDomainAxisForDataset(10);
    }

    @Test(timeout = 4000)
    public void test159250() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(10);
        combinedRangeXYPlot0.setDataset(10, (XYDataset) simpleHistogramDataset0);
        combinedRangeXYPlot0.getDomainAxisForDataset(10);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test160251() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeAxisForDataset((-19));
    }

    @Test(timeout = 4000)
    public void test161252() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.getRangeAxisForDataset(10);
    }

    @Test(timeout = 4000)
    public void test162253() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
        combinedRangeXYPlot0.setDataset(244, (XYDataset) timeTableXYDataset0);
        combinedRangeXYPlot0.getRangeAxisForDataset(2);
        combinedRangeXYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test163254() throws Throwable {
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Stack<DefaultOHLCDataset> stack0 = new Stack<DefaultOHLCDataset>();
        combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, rectangle2D_Float0, stack0);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test163255() throws Throwable {
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        Stack<DefaultOHLCDataset> stack0 = new Stack<DefaultOHLCDataset>();
        combinedDomainXYPlot0.drawDomainGridlines((Graphics2D) null, rectangle2D_Float0, stack0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test164256() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Rectangle rectangle0 = new Rectangle();
        combinedRangeXYPlot0.drawRangeGridlines((Graphics2D) null, rectangle0, (List) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test165257() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        BufferedImage bufferedImage0 = new BufferedImage(2831, 467, 1);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Area area0 = new Area();
        Rectangle2D rectangle2D0 = area0.getBounds2D();
        ArrayList<NumberTick> arrayList0 = new ArrayList<NumberTick>();
        xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, arrayList0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test165258() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        BufferedImage bufferedImage0 = new BufferedImage(2831, 467, 1);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Area area0 = new Area();
        Rectangle2D rectangle2D0 = area0.getBounds2D();
        ArrayList<NumberTick> arrayList0 = new ArrayList<NumberTick>();
        xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, arrayList0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test165259() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        BufferedImage bufferedImage0 = new BufferedImage(2831, 467, 1);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Area area0 = new Area();
        Rectangle2D rectangle2D0 = area0.getBounds2D();
        ArrayList<NumberTick> arrayList0 = new ArrayList<NumberTick>();
        xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, arrayList0);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test165260() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        BufferedImage bufferedImage0 = new BufferedImage(2831, 467, 1);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Area area0 = new Area();
        Rectangle2D rectangle2D0 = area0.getBounds2D();
        ArrayList<NumberTick> arrayList0 = new ArrayList<NumberTick>();
        xYPlot0.drawRangeGridlines(graphics2D0, rectangle2D0, arrayList0);
        xYPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test166261() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainMarkers(6, (Layer) null);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test166262() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.getDomainMarkers(6, (Layer) null);
        xYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test167263() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0E-8);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(500, (Marker) valueMarker0, layer0, true);
        Collection collection0 = combinedRangeXYPlot0.getDomainMarkers(500, layer0);
    }

    @Test(timeout = 4000)
    public void test167264() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0E-8);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(500, (Marker) valueMarker0, layer0, true);
        Collection collection0 = combinedRangeXYPlot0.getDomainMarkers(500, layer0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test167265() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(1.0E-8);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeXYPlot0.addDomainMarker(500, (Marker) valueMarker0, layer0, true);
        Collection collection0 = combinedRangeXYPlot0.getDomainMarkers(500, layer0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test168266() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        PiePlot piePlot0 = new PiePlot();
        Stroke stroke0 = piePlot0.getLabelLinkStroke();
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 1024.0, stroke0, piePlot0.DEFAULT_LABEL_PAINT);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test168267() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        PiePlot piePlot0 = new PiePlot();
        Stroke stroke0 = piePlot0.getLabelLinkStroke();
        combinedRangeXYPlot0.drawHorizontalLine((Graphics2D) null, defaultCaret0, 1024.0, stroke0, piePlot0.DEFAULT_LABEL_PAINT);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test169268() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        NumberAxis numberAxis0 = new NumberAxis();
        combinedDomainXYPlot0.setRangeAxis((ValueAxis) numberAxis0);
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        combinedDomainXYPlot0.drawHorizontalLine((Graphics2D) null, rectangle2D_Float0, 1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT);
    }

    @Test(timeout = 4000)
    public void test170269() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2769, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
        PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 2769, numberAxis0, clusteredXYBarRenderer0.DEFAULT_STROKE, clusteredXYBarRenderer0.DEFAULT_OUTLINE_PAINT);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test170270() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2769, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
        PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 2769, numberAxis0, clusteredXYBarRenderer0.DEFAULT_STROKE, clusteredXYBarRenderer0.DEFAULT_OUTLINE_PAINT);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test170271() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2769, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
        PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
        combinedRangeXYPlot0.drawDomainCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 2769, numberAxis0, clusteredXYBarRenderer0.DEFAULT_STROKE, clusteredXYBarRenderer0.DEFAULT_OUTLINE_PAINT);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test171272() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        XYPlot xYPlot0 = new XYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(valueAxis0);
        JFreeChart jFreeChart0 = axisChangeEvent0.getChart();
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1011248914, 1011248914, 357913942, 3, 2399, 973995316, true, true, true, false, true, false);
        PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
        combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 10, valueAxis0, xYPlot0.DEFAULT_OUTLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT);
    }

    @Test(timeout = 4000)
    public void test172273() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        XYPlot xYPlot0 = new XYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(valueAxis0);
        PolarPlot polarPlot0 = new PolarPlot();
        PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
        combinedRangeXYPlot0.drawDomainCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 10, valueAxis0, xYPlot0.DEFAULT_OUTLINE_STROKE, xYPlot0.DEFAULT_BACKGROUND_PAINT);
    }

    @Test(timeout = 4000)
    public void test173274() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
        XYPlot xYPlot0 = new XYPlot((XYDataset) null, numberAxis3D0, numberAxis3D0, xYShapeRenderer0);
        JFreeChart jFreeChart0 = new JFreeChart("G\"m^iuFv<+Q", xYShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(96, 96, (ChartRenderingInfo) null);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
        Stroke stroke0 = defaultDrawingSupplier0.getNextOutlineStroke();
        xYPlot0.drawVerticalLine(graphics2D0, (Rectangle2D) null, 2.0F, stroke0, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
        xYPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test174275() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        combinedRangeXYPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, (PlotOrientation) null, (-737.8857713560196), valueAxis0, valueAxis0.DEFAULT_AXIS_LINE_STROKE, valueAxis0.DEFAULT_TICK_MARK_PAINT);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test175276() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        combinedDomainXYPlot0.drawRangeCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 0.8200000000000001, valueAxis0, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
    }

    @Test(timeout = 4000)
    public void test176277() throws Throwable {
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        XYPlot xYPlot0 = new XYPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        xYPlot0.drawRangeCrosshair((Graphics2D) null, defaultCaret0, plotOrientation0, 0.8200000000000001, valueAxis0, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, valueAxis0.DEFAULT_AXIS_LABEL_PAINT);
    }

    @Test(timeout = 4000)
    public void test177278() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
        xYPlot0.setRangeAxis(83, (ValueAxis) cyclicNumberAxis0, true);
        xYPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test178279() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        XYPlot xYPlot0 = new XYPlot();
        combinedRangeXYPlot0.add(xYPlot0, 10);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test179280() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(0.05);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation((-1.0), (-3593.5374403), 1.0F, 1278.8);
        xYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
        xYPlot0.setDataset(500, (XYDataset) simpleHistogramDataset0);
        xYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test180281() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        XYPlot xYPlot0 = null;
        xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, (XYItemRenderer) null);
    }

    @Test(timeout = 4000)
    public void test181282() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test182283() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test182284() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0, true);
        combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test183285() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairVisible(false);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test183286() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairVisible(false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test184287() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
        combinedRangeXYPlot0.setDomainCrosshairVisible(true);
        combinedRangeXYPlot0.setDomainCrosshairValue((double) 0, true);
        combinedRangeXYPlot0.isDomainCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test185288() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairLockedOnData(true);
        combinedRangeXYPlot0.isOutlineVisible();
    }

    @Test(timeout = 4000)
    public void test186289() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test187290() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
        combinedRangeXYPlot0.setDomainCrosshairVisible(true);
        combinedRangeXYPlot0.setDomainCrosshairValue((double) 0.0F, false);
        combinedRangeXYPlot0.isDomainCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test188291() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
        Stroke stroke0 = defaultPolarItemRenderer0.getBaseOutlineStroke();
        combinedRangeXYPlot0.setDomainCrosshairStroke(stroke0);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test189292() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainCrosshairStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test190293() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Color color0 = Color.LIGHT_GRAY;
        combinedRangeXYPlot0.setDomainCrosshairPaint(color0);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test191294() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test192295() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairVisible(false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test193296() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairVisible(true);
        combinedRangeXYPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test194297() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test194298() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test195299() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test196300() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
        Paint paint0 = defaultDrawingSupplier0.getNextOutlinePaint();
        combinedRangeXYPlot0.setRangeCrosshairPaint(paint0);
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test196301() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
        Paint paint0 = defaultDrawingSupplier0.getNextOutlinePaint();
        combinedRangeXYPlot0.setRangeCrosshairPaint(paint0);
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test196302() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
        Paint paint0 = defaultDrawingSupplier0.getNextOutlinePaint();
        combinedRangeXYPlot0.setRangeCrosshairPaint(paint0);
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    }

    @Test(timeout = 4000)
    public void test197303() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setRangeCrosshairPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test198304() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        combinedDomainXYPlot0.setFixedDomainAxisSpace((AxisSpace) null, false);
        combinedDomainXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test199305() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test200306() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedDomainXYPlot0.panRangeAxes(0, plotRenderingInfo0, point0);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test200307() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedDomainXYPlot0.panRangeAxes(0, plotRenderingInfo0, point0);
        combinedDomainXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test201308() throws Throwable {
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
        Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 1.0F);
        combinedDomainXYPlot0.zoomDomainAxes((double) 10, plotRenderingInfo0, (Point2D) point2D_Double0, false);
        combinedDomainXYPlot0.isDomainPannable();
    }

    @Test(timeout = 4000)
    public void test202309() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedDomainXYPlot0.zoomDomainAxes((double) 0, plotRenderingInfo0, (Point2D) point0, true);
        combinedDomainXYPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test203310() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 560.0);
        xYPlot0.zoomDomainAxes((double) 0, (double) 768, plotRenderingInfo0, (Point2D) point2D_Double0);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test203311() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 560.0);
        xYPlot0.zoomDomainAxes((double) 0, (double) 768, plotRenderingInfo0, (Point2D) point2D_Double0);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test204312() throws Throwable {
        CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        combinedDomainXYPlot0.zoomDomainAxes((double) 10, (double) 10, plotRenderingInfo0, (Point2D) null);
        combinedDomainXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test205313() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point point0 = new Point();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
        combinedRangeXYPlot0.zoomRangeAxes((double) 0, plotRenderingInfo0, (Point2D) point0, false);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test206314() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        Point2D.Double point2D_Double0 = new Point2D.Double();
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedRangeXYPlot0.zoomRangeAxes(0.0, plotRenderingInfo0, (Point2D) point2D_Double0, true);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test207315() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.zoomRangeAxes((double) 15, (double) 15, (PlotRenderingInfo) null, (Point2D) null);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test208316() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedRangeXYPlot0.zoomRangeAxes(193.34, 193.34, plotRenderingInfo0, (Point2D) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test208317() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedRangeXYPlot0.zoomRangeAxes(193.34, 193.34, plotRenderingInfo0, (Point2D) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test209318() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, numberAxis0, numberAxis0, xYDotRenderer0);
        int int0 = xYPlot0.getSeriesCount();
    }

    @Test(timeout = 4000)
    public void test209319() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        XYDotRenderer xYDotRenderer0 = new XYDotRenderer();
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, numberAxis0, numberAxis0, xYDotRenderer0);
        int int0 = xYPlot0.getSeriesCount();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test210320() throws Throwable {
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(1.0F);
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer(10);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        LegendItemCollection legendItemCollection0 = new LegendItemCollection();
        xYPlot0.setFixedLegendItems(legendItemCollection0);
        xYPlot0.getLegendItems();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test211321() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        LegendItemCollection legendItemCollection0 = xYPlot0.getLegendItems();
        legendItemCollection0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test212322() throws Throwable {
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        XYPlot xYPlot0 = new XYPlot();
        xYPlot0.setDataset(500, (XYDataset) categoryTableXYDataset0);
        xYPlot0.getLegendItems();
        xYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test213323() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        boolean boolean0 = xYPlot0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test213324() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        boolean boolean0 = xYPlot0.equals((Object) null);
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test213325() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        boolean boolean0 = xYPlot0.equals((Object) null);
        xYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test214326() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0);
    }

    @Test(timeout = 4000)
    public void test214327() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        ValueMarker valueMarker0 = new ValueMarker(10, combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.addRangeMarker(10, (Marker) valueMarker0, layer0);
        combinedRangeXYPlot0.addDomainMarker(10, (Marker) valueMarker0, layer0, false);
        combinedRangeXYPlot1.clearRangeMarkers();
        combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test215328() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.5F);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        XYPlot xYPlot1 = new XYPlot(simpleHistogramDataset0, valueAxis0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
        xYPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test215329() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.5F);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
        ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
        XYPlot xYPlot1 = new XYPlot(simpleHistogramDataset0, valueAxis0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.setDataset(0, (XYDataset) simpleHistogramDataset0);
        xYPlot0.equals((Object) xYPlot1);
    }

    @Test(timeout = 4000)
    public void test216330() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.setRangeCrosshairLockedOnData(false);
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test216331() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.setRangeCrosshairLockedOnData(false);
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    }

    @Test(timeout = 4000)
    public void test217332() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.setDomainCrosshairValue((double) 1.0F);
        combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot0.getDomainCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test218333() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.equals((Object) combinedRangeXYPlot0);
    }

    @Test(timeout = 4000)
    public void test218334() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        combinedRangeXYPlot1.setRangeCrosshairValue(3021.12429, false);
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    }

    @Test(timeout = 4000)
    public void test219335() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        StandardXYZURLGenerator standardXYZURLGenerator0 = new StandardXYZURLGenerator();
        XYAreaRenderer2 xYAreaRenderer2_0 = new XYAreaRenderer2((XYToolTipGenerator) null, standardXYZURLGenerator0);
        combinedRangeXYPlot0.setRenderer(3, (XYItemRenderer) xYAreaRenderer2_0);
        combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot0.getRendererCount();
    }

    @Test(timeout = 4000)
    public void test220336() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        DateAxis dateAxis0 = new DateAxis();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot(dateAxis0);
        boolean boolean0 = combinedRangeXYPlot1.equals(combinedRangeXYPlot0);
    }

    @Test(timeout = 4000)
    public void test221337() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test221338() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
    }

    @Test(timeout = 4000)
    public void test221339() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test221340() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = new CombinedRangeXYPlot();
        boolean boolean0 = combinedRangeXYPlot0.equals(combinedRangeXYPlot1);
        combinedRangeXYPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test222341() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        CombinedRangeXYPlot combinedRangeXYPlot1 = (CombinedRangeXYPlot) combinedRangeXYPlot0.clone();
        combinedRangeXYPlot1.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test223342() throws Throwable {
        XYPlot xYPlot0 = new XYPlot();
        XYPlot xYPlot1 = (XYPlot) xYPlot0.clone();
        xYPlot1.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test224343() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        GeneralPath generalPath0 = new GeneralPath();
        combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) null);
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test224344() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        GeneralPath generalPath0 = new GeneralPath();
        combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) null);
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test224345() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        GeneralPath generalPath0 = new GeneralPath();
        combinedRangeXYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Float0, (RenderingSource) null);
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test225346() throws Throwable {
        XYStepAreaRenderer xYStepAreaRenderer0 = new XYStepAreaRenderer();
        DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
        XYPlot xYPlot0 = new XYPlot(defaultWindDataset0, (ValueAxis) null, (ValueAxis) null, xYStepAreaRenderer0);
        GeneralPath generalPath0 = new GeneralPath(xYStepAreaRenderer0.DEFAULT_SHAPE);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
        Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(1, 498);
        xYPlot0.select(generalPath0, rectangle2D0, (RenderingSource) chartPanel0);
    }

    @Test(timeout = 4000)
    public void test226347() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(false);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, true, true);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        GeneralPath generalPath0 = new GeneralPath(clusteredXYBarRenderer0.DEFAULT_SHAPE);
        generalPath0.curveTo((float) 500, 1.0F, 0.0F, 717.57F, (-2435.917F), 0.5F);
        xYPlot0.select(generalPath0, (Rectangle2D) rectangle2D_Double0, (RenderingSource) chartPanel0);
        chartPanel0.getZoomAroundAnchor();
    }

    @Test(timeout = 4000)
    public void test227348() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearSelection();
        combinedRangeXYPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test227349() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearSelection();
        combinedRangeXYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test227350() throws Throwable {
        CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
        combinedRangeXYPlot0.clearSelection();
        combinedRangeXYPlot0.isDomainCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test228351() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(1.0F, true);
        SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(clusteredXYBarRenderer0.ZERO);
        XYPlot xYPlot0 = new XYPlot(simpleHistogramDataset0, numberAxis3D0, numberAxis3D0, clusteredXYBarRenderer0);
        xYPlot0.clearSelection();
        xYPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test229352() throws Throwable {
        CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
        XYSplineRenderer xYSplineRenderer0 = new XYSplineRenderer();
        XYPlot xYPlot0 = new XYPlot(categoryTableXYDataset0, (ValueAxis) null, (ValueAxis) null, xYSplineRenderer0);
        xYPlot0.clearSelection();
        xYPlot0.isRangeZeroBaselineVisible();
    }
}
