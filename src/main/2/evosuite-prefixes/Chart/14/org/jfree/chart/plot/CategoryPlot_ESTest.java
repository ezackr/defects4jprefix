/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:14:21 GMT 2024
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
        combinedDomainCategoryPlot0.setRangeAxisLocation((-1150), axisLocation0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        combinedDomainCategoryPlot0.removeRangeMarker((Marker) categoryMarker0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 1.0F, false);
        combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
        combinedDomainCategoryPlot1.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 1.0F, false);
        combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
        combinedDomainCategoryPlot1.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
        combinedDomainCategoryPlot0.getIndexOf(statisticalLineAndShapeRenderer0);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
        combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
        combinedDomainCategoryPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        int int0 = combinedDomainCategoryPlot0.getDatasetCount();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        int int0 = combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[5][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis3D0, stackedBarRenderer0);
        categoryPlot0.setDrawSharedDomainAxis(true);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 500);
        numberAxis3D0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test0069() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[5][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis3D0, stackedBarRenderer0);
        categoryPlot0.setDrawSharedDomainAxis(true);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 500);
        stackedBarRenderer0.getRowCount();
    }

    @Test(timeout = 4000)
    public void test00710() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 500.0);
        combinedRangeCategoryPlot0.zoomDomainAxes((double) 2.0F, plotRenderingInfo0, (Point2D) point2D_Double0);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00711() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        Point2D.Double point2D_Double0 = new Point2D.Double(1.0F, 500.0);
        combinedRangeCategoryPlot0.zoomDomainAxes((double) 2.0F, plotRenderingInfo0, (Point2D) point2D_Double0);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test00812() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
        combinedRangeCategoryPlot0.setDomainAxisLocation((-663), axisLocation0);
    }

    @Test(timeout = 4000)
    public void test00913() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeCategoryPlot0.getRangeCrosshairStroke();
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test00914() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeCategoryPlot0.getRangeCrosshairStroke();
        basicStroke0.getLineJoin();
    }

    @Test(timeout = 4000)
    public void test01015() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.addRangeMarker((Marker) null);
    }

    @Test(timeout = 4000)
    public void test01116() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.getRangeAxisCount();
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test01217() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.removeDomainMarker((Marker) null);
    }

    @Test(timeout = 4000)
    public void test01318() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
        combinedRangeCategoryPlot0.getAnchorValue();
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01419() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
        combinedDomainCategoryPlot0.isDomainZoomable();
    }

    @Test(timeout = 4000)
    public void test01520() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
        rectangleInsets0.getTop();
    }

    @Test(timeout = 4000)
    public void test01521() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
        rectangleInsets0.getLeft();
    }

    @Test(timeout = 4000)
    public void test01522() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
        rectangleInsets0.getBottom();
    }

    @Test(timeout = 4000)
    public void test01523() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test01524() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
        rectangleInsets0.getRight();
    }

    @Test(timeout = 4000)
    public void test01625() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        boolean boolean0 = categoryPlot0.getDrawSharedDomainAxis();
    }

    @Test(timeout = 4000)
    public void test01626() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        boolean boolean0 = categoryPlot0.getDrawSharedDomainAxis();
        categoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test01727() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
        combinedDomainCategoryPlot0.isDomainZoomable();
    }

    @Test(timeout = 4000)
    public void test01828() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
        combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
        axisLocation0.toString();
    }

    @Test(timeout = 4000)
    public void test01829() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getDomainAxisLocation();
        combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test01930() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 10, (PlotRenderingInfo) null, (Point2D) null);
        combinedRangeCategoryPlot0.getBackgroundImageAlpha();
    }

    @Test(timeout = 4000)
    public void test02031() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setAnchorValue(2715.0);
        combinedDomainCategoryPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test02132() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0);
        combinedDomainCategoryPlot0.clearDomainMarkers();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02133() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0);
        combinedDomainCategoryPlot0.clearDomainMarkers();
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02234() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        Layer layer0 = Layer.BACKGROUND;
        Collection collection0 = combinedDomainCategoryPlot0.getRangeMarkers(layer0);
    }

    @Test(timeout = 4000)
    public void test02335() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getDomainAxisCount();
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02436() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisSpace axisSpace0 = combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
    }

    @Test(timeout = 4000)
    public void test02537() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test02538() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        JFreeChart jFreeChart0 = new JFreeChart("B[(C9!l{XU.936ixs", combinedRangeCategoryPlot0);
        jFreeChart0.createBufferedImage(10, 10);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02639() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        combinedRangeCategoryPlot0.setRenderer(10, (CategoryItemRenderer) minMaxCategoryRenderer0);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test02740() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        SortOrder sortOrder0 = combinedDomainCategoryPlot0.getRowRenderingOrder();
        combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02841() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, false, false);
        chartPanel0.zoomOutDomain(1814.938037068, 1.0F);
    }

    @Test(timeout = 4000)
    public void test02942() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        double double0 = combinedDomainCategoryPlot0.getRangeCrosshairValue();
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test02943() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        double double0 = combinedDomainCategoryPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test02944() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        double double0 = combinedDomainCategoryPlot0.getRangeCrosshairValue();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03045() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setDataset((CategoryDataset) null);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test03146() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Color color0 = (Color) combinedRangeCategoryPlot0.getRangeCrosshairPaint();
        color0.getGreen();
    }

    @Test(timeout = 4000)
    public void test03247() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeCrosshairValue((-1.0));
        combinedDomainCategoryPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test03348() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.getPlotType();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03449() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test03550() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        combinedRangeCategoryPlot0.zoomDomainAxes((double) 600, 0.0, plotRenderingInfo0, (Point2D) null);
        combinedRangeCategoryPlot0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test03651() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
        boolean boolean0 = combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03752() throws Throwable {
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1986.333596, (String) null);
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedBarRenderer3D0);
        List list0 = categoryPlot0.getCategories();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03853() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
        jFreeChart0.createBufferedImage(10, 10);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03954() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 1.0F, 10, 10, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) categoryLineAnnotation0);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test03955() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 1.0F, 10, 10, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) categoryLineAnnotation0);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test04056() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.clearAnnotations();
        combinedDomainCategoryPlot0.isSubplot();
    }

    @Test(timeout = 4000)
    public void test04157() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
        combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) categoryStepRenderer0, true);
        combinedRangeCategoryPlot0.getNoDataMessage();
    }

    @Test(timeout = 4000)
    public void test04258() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.getDomainGridlinePosition();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04359() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BasicStroke basicStroke0 = (BasicStroke) combinedRangeCategoryPlot0.getDomainGridlineStroke();
        basicStroke0.getDashPhase();
    }

    @Test(timeout = 4000)
    public void test04460() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 10, false, 1.0F, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        combinedRangeCategoryPlot0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) categoryLineAnnotation0, false);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test04461() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 10, false, 1.0F, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        combinedRangeCategoryPlot0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) categoryLineAnnotation0, false);
    }

    @Test(timeout = 4000)
    public void test04562() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
    }

    @Test(timeout = 4000)
    public void test04663() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
        combinedRangeCategoryPlot0.setAxisOffset(numberAxis0.DEFAULT_TICK_LABEL_INSETS);
    }

    @Test(timeout = 4000)
    public void test04764() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setAxisOffset((RectangleInsets) null);
    }

    @Test(timeout = 4000)
    public void test04865() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
        combinedDomainCategoryPlot0.getDomainAxis(10);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test04966() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
        combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
        combinedDomainCategoryPlot0.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test05067() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category 6");
        int int0 = combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
    }

    @Test(timeout = 4000)
    public void test05168() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
    }

    @Test(timeout = 4000)
    public void test05269() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        combinedDomainCategoryPlot0.setDomainAxis(10, (CategoryAxis) categoryAxis3D0, false);
        combinedDomainCategoryPlot0.drawAxes((Graphics2D) null, rectangle2D_Float0, rectangle2D_Float0, (PlotRenderingInfo) null);
    }

    @Test(timeout = 4000)
    public void test05370() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDomainAxisLocation((AxisLocation) null, true);
    }

    @Test(timeout = 4000)
    public void test05471() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.clearDomainAxes();
        combinedRangeCategoryPlot0.isDomainGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test05572() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.clearDomainAxes();
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test05573() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.clearDomainAxes();
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test05674() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        LogAxis logAxis0 = new LogAxis();
        combinedDomainCategoryPlot0.setRangeAxis(50, (ValueAxis) logAxis0);
        combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test05775() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        ValueAxis[] valueAxisArray0 = new ValueAxis[2];
        combinedRangeCategoryPlot0.setRangeAxes(valueAxisArray0);
        combinedRangeCategoryPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test05876() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getRangeAxisIndex((ValueAxis) null);
    }

    @Test(timeout = 4000)
    public void test05977() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
        int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex(numberAxis3D0);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test05978() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
        int int0 = combinedRangeCategoryPlot0.getRangeAxisIndex(numberAxis3D0);
    }

    @Test(timeout = 4000)
    public void test06079() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'position' argument.");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
        int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(numberAxis0);
        combinedDomainCategoryPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test06080() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'position' argument.");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
        int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(numberAxis0);
    }

    @Test(timeout = 4000)
    public void test06181() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[5][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis3D0, stackedBarRenderer0);
        categoryPlot0.setRangeAxis(500, (ValueAxis) numberAxis3D0);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 500);
        stackedBarRenderer0.getColumnCount();
    }

    @Test(timeout = 4000)
    public void test06182() throws Throwable {
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[5][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis3D0, stackedBarRenderer0);
        categoryPlot0.setRangeAxis(500, (ValueAxis) numberAxis3D0);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 500);
        numberAxis3D0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test06283() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeAxisLocation((AxisLocation) null);
    }

    @Test(timeout = 4000)
    public void test06384() throws Throwable {
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("^xdS[LLr{_{d");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
        combinedDomainCategoryPlot0.clearRangeAxes();
    }

    @Test(timeout = 4000)
    public void test06485() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.clearRangeAxes();
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test06486() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.clearRangeAxes();
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test06587() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        combinedDomainCategoryPlot0.setDataset(470, (CategoryDataset) defaultKeyedValues2DDataset0);
        combinedDomainCategoryPlot0.setDataset(470, (CategoryDataset) defaultKeyedValues2DDataset0);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test06688() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        boolean boolean0 = combinedRangeCategoryPlot0.render((Graphics2D) null, rectangle2D_Float0, 3257, (PlotRenderingInfo) null);
    }

    @Test(timeout = 4000)
    public void test06789() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        combinedRangeCategoryPlot0.setRenderer(10, (CategoryItemRenderer) stackedBarRenderer3D0, false);
        combinedRangeCategoryPlot0.setRenderer(10, (CategoryItemRenderer) stackedBarRenderer3D0, false);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test06890() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
        combinedRangeCategoryPlot0.setRenderers(categoryItemRendererArray0);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test06991() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        double[][] doubleArray0 = new double[9][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        combinedRangeCategoryPlot0.getRendererForDataset(defaultIntervalCategoryDataset0);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test07092() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
        combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test07093() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
        combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test07194() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
    }

    @Test(timeout = 4000)
    public void test07295() throws Throwable {
        CategoryAxis categoryAxis0 = new CategoryAxis("");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
        combinedDomainCategoryPlot0.setColumnRenderingOrder((SortOrder) null);
    }

    @Test(timeout = 4000)
    public void test07396() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRowRenderingOrder((SortOrder) null);
    }

    @Test(timeout = 4000)
    public void test07497() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDomainGridlinesVisible(false);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test07598() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
        combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
        combinedDomainCategoryPlot0.getRangeCrosshairValue();
    }

    @Test(timeout = 4000)
    public void test07699() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
    }

    @Test(timeout = 4000)
    public void test077100() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1240);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
        combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test077101() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1240);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
        combinedRangeCategoryPlot0.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test078102() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test079103() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test080104() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeGridlinesVisible(true);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test081105() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
        combinedDomainCategoryPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test082106() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
        Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
        combinedDomainCategoryPlot0.setRangeGridlineStroke(stroke0);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test082107() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
        Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
        combinedDomainCategoryPlot0.setRangeGridlineStroke(stroke0);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
        combinedDomainCategoryPlot1.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test083108() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeGridlineStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test084109() throws Throwable {
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1240);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
        combinedRangeCategoryPlot0.setRangeGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test085110() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeGridlinePaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test086111() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[1][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis0, stackedBarRenderer0);
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
        LegendItemCollection legendItemCollection0 = spiderWebPlot0.getLegendItems();
        categoryPlot0.setFixedLegendItems(legendItemCollection0);
        categoryPlot0.getLegendItems();
        numberAxis0.getUpperBound();
    }

    @Test(timeout = 4000)
    public void test086112() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
        double[][] doubleArray0 = new double[1][4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, numberAxis0, stackedBarRenderer0);
        SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
        LegendItemCollection legendItemCollection0 = spiderWebPlot0.getLegendItems();
        categoryPlot0.setFixedLegendItems(legendItemCollection0);
        categoryPlot0.getLegendItems();
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test087113() throws Throwable {
        double[][] doubleArray0 = new double[3][1];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-691.7534376), "Null 'location' for ndex 0 not permited.");
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, (CategoryItemRenderer) null);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'location' for ndex 0 not permited.", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 1751);
        categoryPlot0.isRangeGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test087114() throws Throwable {
        double[][] doubleArray0 = new double[3][1];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-691.7534376), "Null 'location' for ndex 0 not permited.");
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, (CategoryItemRenderer) null);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'location' for ndex 0 not permited.", categoryPlot0);
        jFreeChart0.createBufferedImage(500, 1751);
        categoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test088115() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
        categoryPlot0.handleClick(10, 10, plotRenderingInfo0);
        categoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test089116() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
        Rectangle rectangle0 = new Rectangle(10, 10, 10, 10);
        plotRenderingInfo0.setDataArea(rectangle0);
        categoryPlot0.handleClick(10, 10, plotRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test090117() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.zoom((-2230.223737335));
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test091118() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.zoom(391.3166);
    }

    @Test(timeout = 4000)
    public void test092119() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        combinedRangeCategoryPlot1.setDataset((CategoryDataset) taskSeriesCollection0);
        combinedRangeCategoryPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test093120() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot1.add((CategoryPlot) combinedRangeCategoryPlot0);
        RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
        combinedRangeCategoryPlot0.rendererChanged(rendererChangeEvent0);
        combinedRangeCategoryPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test094121() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(10, (CategoryMarker) null, layer0);
    }

    @Test(timeout = 4000)
    public void test095122() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, (Layer) null);
    }

    @Test(timeout = 4000)
    public void test096123() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0, true);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test097124() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0, true);
        combinedRangeCategoryPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test098125() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0, false);
        categoryMarker0.getDrawAsLine();
    }

    @Test(timeout = 4000)
    public void test099126() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
        combinedRangeCategoryPlot0.clearDomainMarkers();
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test100127() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getDomainMarkers((Layer) null);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test101128() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(10);
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
        Collection collection0 = combinedRangeCategoryPlot0.getDomainMarkers(10, layer0);
    }

    @Test(timeout = 4000)
    public void test102129() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.FOREGROUND;
        CategoryMarker categoryMarker0 = new CategoryMarker(10);
        StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
        Paint paint0 = stackedAreaRenderer0.lookupSeriesFillPaint((-5879));
        CategoryMarker categoryMarker1 = new CategoryMarker(10, paint0, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
        combinedRangeCategoryPlot0.addDomainMarker((-5879), categoryMarker1, layer0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeDomainMarker((-5879), (Marker) categoryMarker0, layer0, true);
    }

    @Test(timeout = 4000)
    public void test102130() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.FOREGROUND;
        CategoryMarker categoryMarker0 = new CategoryMarker(10);
        StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
        Paint paint0 = stackedAreaRenderer0.lookupSeriesFillPaint((-5879));
        CategoryMarker categoryMarker1 = new CategoryMarker(10, paint0, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
        combinedRangeCategoryPlot0.addDomainMarker((-5879), categoryMarker1, layer0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeDomainMarker((-5879), (Marker) categoryMarker0, layer0, true);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test103131() throws Throwable {
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeDomainMarker(500, (Marker) categoryMarker0, layer0, true);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test103132() throws Throwable {
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeDomainMarker(500, (Marker) categoryMarker0, layer0, true);
    }

    @Test(timeout = 4000)
    public void test104133() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.FOREGROUND;
        CategoryMarker categoryMarker0 = new CategoryMarker(true);
        combinedRangeCategoryPlot0.addDomainMarker(10, categoryMarker0, layer0);
        combinedRangeCategoryPlot0.removeDomainMarker(10, (Marker) categoryMarker0, layer0, false);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test105134() throws Throwable {
        PeriodAxis periodAxis0 = new PeriodAxis("7EQ&d");
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
        Layer layer0 = Layer.FOREGROUND;
        IntervalMarker intervalMarker0 = new IntervalMarker(1000.0, 10);
        combinedRangeCategoryPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0);
        combinedRangeCategoryPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, true);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test106135() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.addRangeMarker(10, (Marker) null, (Layer) null);
    }

    @Test(timeout = 4000)
    public void test107136() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addRangeMarker(0, (Marker) null, layer0);
    }

    @Test(timeout = 4000)
    public void test108137() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-1.0));
        Layer layer0 = Layer.BACKGROUND;
        combinedRangeCategoryPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0, false);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test109138() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.clearRangeMarkers();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test109139() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.clearRangeMarkers();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test110140() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
        combinedRangeCategoryPlot0.clearRangeMarkers();
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test111141() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getRangeMarkers(10, (Layer) null);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test112142() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Layer layer0 = Layer.FOREGROUND;
        combinedRangeCategoryPlot0.removeRangeMarker((Marker) null, layer0);
    }

    @Test(timeout = 4000)
    public void test113143() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(false);
        Layer layer0 = Layer.BACKGROUND;
        boolean boolean0 = combinedRangeCategoryPlot0.removeRangeMarker((Marker) categoryMarker0, layer0);
    }

    @Test(timeout = 4000)
    public void test114144() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeCrosshairVisible(false);
        combinedRangeCategoryPlot0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test115145() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test115146() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeCrosshairVisible(true);
        combinedRangeCategoryPlot0.setRangeCrosshairValue((-2614.35990259614), false);
        combinedRangeCategoryPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test116147() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(true);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test117148() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test117149() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(false);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test118150() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeCrosshairVisible(true);
        combinedRangeCategoryPlot0.setRangeCrosshairValue((double) 1.0F, true);
        combinedRangeCategoryPlot0.isRangeCrosshairVisible();
    }

    @Test(timeout = 4000)
    public void test119151() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
        combinedRangeCategoryPlot0.setRangeCrosshairStroke(extendedCategoryAxis0.DEFAULT_AXIS_LINE_STROKE);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test120152() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setRangeCrosshairStroke((Stroke) null);
    }

    @Test(timeout = 4000)
    public void test121153() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
        combinedDomainCategoryPlot0.setRangeCrosshairPaint(categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test122154() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
    }

    @Test(timeout = 4000)
    public void test123155() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.addAnnotation((CategoryAnnotation) null);
    }

    @Test(timeout = 4000)
    public void test124156() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
    }

    @Test(timeout = 4000)
    public void test125157() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 1.0F, 10, 10, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        combinedRangeCategoryPlot0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
        boolean boolean0 = combinedRangeCategoryPlot0.removeAnnotation((CategoryAnnotation) categoryLineAnnotation0);
    }

    @Test(timeout = 4000)
    public void test126158() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
        bufferedImage0.getTileGridXOffset();
    }

    @Test(timeout = 4000)
    public void test127159() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(493, 10);
        bufferedImage0.getType();
    }

    @Test(timeout = 4000)
    public void test128160() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2715, 180, chartRenderingInfo0);
        bufferedImage0.getWidth();
    }

    @Test(timeout = 4000)
    public void test129161() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
        LinkedList<LogAxis> linkedList0 = new LinkedList<LogAxis>();
        combinedDomainCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D_Float0, linkedList0);
        combinedDomainCategoryPlot0.getWeight();
    }

    @Test(timeout = 4000)
    public void test130162() throws Throwable {
        StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
        CategoryPlot categoryPlot0 = new CategoryPlot();
        JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
        categoryPlot0.setRenderer((CategoryItemRenderer) statisticalLineAndShapeRenderer0);
        jFreeChart0.createBufferedImage(500, 500);
        categoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test131163() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        BasicStroke basicStroke0 = new BasicStroke(0);
        Paint paint0 = combinedRangeCategoryPlot0.getDomainGridlinePaint();
        combinedRangeCategoryPlot0.drawRangeLine((Graphics2D) null, defaultCaret0, (-2648.6645199), basicStroke0, paint0);
    }

    @Test(timeout = 4000)
    public void test132164() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        Rectangle rectangle0 = new Rectangle();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        float[][] floatArray0 = new float[2][4];
        float[] floatArray1 = new float[1];
        floatArray1[0] = (float) 10;
        floatArray0[0] = floatArray1;
        FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, numberAxis3D0, numberAxis3D0);
        PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 10, numberAxis3D0, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE, fastScatterPlot0.DEFAULT_GRIDLINE_PAINT);
    }

    @Test(timeout = 4000)
    public void test133165() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 660.66796875, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test133166() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 660.66796875, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test133167() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        combinedRangeCategoryPlot0.drawRangeCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 660.66796875, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test134168() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        PolarPlot polarPlot0 = new PolarPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, (Rectangle2D) null, plotOrientation0, 0.05, numberAxis3D0, numberAxis3D0.DEFAULT_TICK_MARK_STROKE, polarPlot0.DEFAULT_GRIDLINE_PAINT);
    }

    @Test(timeout = 4000)
    public void test135169() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test136170() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category 5");
        DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, numberAxis0, (CategoryItemRenderer) null);
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category 5");
        categoryPlot0.getCategoriesForAxis(subCategoryAxis0);
        categoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test136171() throws Throwable {
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category 5");
        DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, numberAxis0, (CategoryItemRenderer) null);
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category 5");
        categoryPlot0.getCategoriesForAxis(subCategoryAxis0);
        categoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test137172() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        NumberAxis numberAxis0 = new NumberAxis();
        AreaRenderer areaRenderer0 = new AreaRenderer();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, numberAxis0, areaRenderer0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3702.0), "B[(C9!l{XU.936ixs");
        categoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0);
        numberAxis0.getLowerBound();
    }

    @Test(timeout = 4000)
    public void test137173() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        NumberAxis numberAxis0 = new NumberAxis();
        AreaRenderer areaRenderer0 = new AreaRenderer();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, numberAxis0, areaRenderer0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3702.0), "B[(C9!l{XU.936ixs");
        categoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0);
        categoryPlot0.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test138174() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        combinedDomainCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null, false);
        combinedDomainCategoryPlot0.isDomainZoomable();
    }

    @Test(timeout = 4000)
    public void test139175() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.getCategories();
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test140176() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        Point2D.Float point2D_Float0 = new Point2D.Float();
        combinedRangeCategoryPlot1.zoomRangeAxes((-1.5707963267948966), (PlotRenderingInfo) null, (Point2D) point2D_Float0, false);
        combinedRangeCategoryPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test141177() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Point2D.Float point2D_Float0 = new Point2D.Float();
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point2D_Float0, true);
        combinedRangeCategoryPlot0.isRangeZoomable();
    }

    @Test(timeout = 4000)
    public void test142178() throws Throwable {
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
        Point2D.Float point2D_Float0 = new Point2D.Float();
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, plotRenderingInfo0, (Point2D) point2D_Float0, true);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test143179() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        categoryPlot0.zoomRangeAxes(3974.1422, 3091.107, (PlotRenderingInfo) null, (Point2D) null);
        categoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test144180() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Point point0 = new Point(10, 10);
        combinedRangeCategoryPlot0.zoomRangeAxes((double) 10, (double) 1.0F, (PlotRenderingInfo) null, (Point2D) point0);
    }

    @Test(timeout = 4000)
    public void test145181() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setAnchorValue(2776.6796875, false);
        combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test145182() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setAnchorValue(2776.6796875, false);
        combinedRangeCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test146183() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test147184() throws Throwable {
        CategoryPlot categoryPlot0 = new CategoryPlot();
        categoryPlot0.clearRangeMarkers();
        categoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test148185() throws Throwable {
        Layer layer0 = Layer.BACKGROUND;
        CategoryPlot categoryPlot0 = new CategoryPlot();
        boolean boolean0 = categoryPlot0.equals(layer0);
    }

    @Test(timeout = 4000)
    public void test149186() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.getWeight();
    }

    @Test(timeout = 4000)
    public void test149187() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.add((CategoryPlot) combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test150188() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
        boolean boolean0 = categoryPlot0.equals(combinedDomainCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test150189() throws Throwable {
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        CategoryPlot categoryPlot0 = new CategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
        boolean boolean0 = categoryPlot0.equals(combinedDomainCategoryPlot0);
        combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test151190() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test151191() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test151192() throws Throwable {
        DateAxis dateAxis0 = new DateAxis();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.isRangeCrosshairLockedOnData();
    }

    @Test(timeout = 4000)
    public void test152193() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot1.setDomainGridlinesVisible(true);
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
        combinedRangeCategoryPlot1.isDomainGridlinesVisible();
    }

    @Test(timeout = 4000)
    public void test152194() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot1.setDomainGridlinesVisible(true);
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test153195() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot1.equals((Object) combinedRangeCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test153196() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot1.setDomainGridlinePaint(multiplePiePlot0.DEFAULT_OUTLINE_PAINT);
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test154197() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker((-1140.96847142), 289.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE, 1.0F);
        combinedDomainCategoryPlot1.equals((Object) combinedDomainCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test154198() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker((-1140.96847142), 289.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_STROKE, 1.0F);
        Layer layer0 = Layer.FOREGROUND;
        combinedDomainCategoryPlot1.addRangeMarker(151, (Marker) intervalMarker0, layer0, true);
        combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
        combinedDomainCategoryPlot0.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test155199() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
        CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'marker' argument.", false, 10);
        combinedRangeCategoryPlot1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, false);
        boolean boolean0 = combinedRangeCategoryPlot0.equals(combinedRangeCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test156200() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisSpace axisSpace0 = new AxisSpace();
        combinedDomainCategoryPlot0.setFixedDomainAxisSpace(axisSpace0, false);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
        boolean boolean0 = combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
    }

    @Test(timeout = 4000)
    public void test157201() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.equals((Object) combinedDomainCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test157202() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        AxisSpace axisSpace0 = new AxisSpace();
        combinedDomainCategoryPlot1.setFixedRangeAxisSpace(axisSpace0, true);
        combinedDomainCategoryPlot0.equals(combinedDomainCategoryPlot1);
        combinedDomainCategoryPlot1.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test158203() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultStatisticalCategoryDataset0);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test158204() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultStatisticalCategoryDataset0);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.getDatasetCount();
    }

    @Test(timeout = 4000)
    public void test158205() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultStatisticalCategoryDataset0);
        CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot) combinedDomainCategoryPlot0.clone();
        combinedDomainCategoryPlot1.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test159206() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) Plot.DEFAULT_LEGEND_ITEM_BOX;
        AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
        combinedRangeCategoryPlot0.setFixedDomainAxisSpace(axisSpace0, false);
        axisSpace0.getLeft();
    }

    @Test(timeout = 4000)
    public void test159207() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) Plot.DEFAULT_LEGEND_ITEM_BOX;
        AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
        combinedRangeCategoryPlot0.setFixedDomainAxisSpace(axisSpace0, false);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot) combinedRangeCategoryPlot0.clone();
        combinedRangeCategoryPlot1.equals((Object) combinedRangeCategoryPlot0);
    }

    @Test(timeout = 4000)
    public void test159208() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) Plot.DEFAULT_LEGEND_ITEM_BOX;
        AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
        combinedRangeCategoryPlot0.setFixedDomainAxisSpace(axisSpace0, false);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot) combinedRangeCategoryPlot0.clone();
        combinedRangeCategoryPlot1.getRangeAxisCount();
    }

    @Test(timeout = 4000)
    public void test160209() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
    }

    @Test(timeout = 4000)
    public void test160210() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setFixedRangeAxisSpace(axisSpace0);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot) combinedRangeCategoryPlot0.clone();
        combinedRangeCategoryPlot1.getDomainAxisCount();
    }

    @Test(timeout = 4000)
    public void test160211() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        AxisSpace axisSpace0 = combinedDomainCategoryPlot0.calculateRangeAxisSpace((Graphics2D) null, (Rectangle2D) null, (AxisSpace) null);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        combinedRangeCategoryPlot0.setFixedRangeAxisSpace(axisSpace0);
        CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot) combinedRangeCategoryPlot0.clone();
        combinedRangeCategoryPlot1.getRangeAxisCount();
    }
}
