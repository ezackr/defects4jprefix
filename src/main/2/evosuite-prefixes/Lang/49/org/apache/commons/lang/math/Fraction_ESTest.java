/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 15:01:49 GMT 2024
 */
package org.apache.commons.lang.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.math.Fraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Fraction_ESTest extends Fraction_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((double) (-2147483643));
        fraction0.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fraction0.TWO_THIRDS.hashCode();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fraction0.TWO_THIRDS.hashCode();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483643), 977);
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(63.0);
        long long0 = fraction0.longValue();
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(63.0);
        long long0 = fraction0.longValue();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(63.0);
        long long0 = fraction0.longValue();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(63.0);
        float float0 = fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(63.0);
        float float0 = fraction0.floatValue();
        fraction0.getNumerator();
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2571), 1, 46);
        int int0 = fraction0.intValue();
        fraction0.floatValue();
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2571), 1, 46);
        int int0 = fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        double double0 = fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test0713() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.byteValue();
    }

    @Test(timeout = 4000)
    public void test0814() throws Throwable {
        Fraction.getFraction(0, 0);
    }

    @Test(timeout = 4000)
    public void test0915() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), (-2147483641));
        Fraction fraction1 = Fraction.ONE;
        fraction0.add(fraction1);
    }

    @Test(timeout = 4000)
    public void test1016() throws Throwable {
        Fraction.getFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        Fraction.getFraction((-946), Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        Fraction.getFraction(0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        Fraction.getFraction((-2571), (-2571), (-2571));
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        Fraction.getFraction(11, (-1), 11);
    }

    @Test(timeout = 4000)
    public void test1521() throws Throwable {
        Fraction.getFraction(2147483620, 2147483620, 2147483620);
    }

    @Test(timeout = 4000)
    public void test1622() throws Throwable {
        Fraction.getFraction((-67108863), 1879, 1879);
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        Fraction.getReducedFraction(0, 0);
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        Fraction.getReducedFraction(1, Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        Fraction.getReducedFraction(Integer.MIN_VALUE, (-1));
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        Fraction.getFraction((double) Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-307.269916));
        Fraction fraction1 = fraction0.TWO_QUARTERS.reduce();
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-307.269916));
        Fraction fraction1 = fraction0.TWO_QUARTERS.reduce();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2129() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-307.269916));
        Fraction fraction1 = fraction0.TWO_QUARTERS.reduce();
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2230() throws Throwable {
        Fraction.getFraction("1 yw");
    }

    @Test(timeout = 4000)
    public void test2331() throws Throwable {
        Fraction.getFraction((String) null);
    }

    @Test(timeout = 4000)
    public void test2432() throws Throwable {
        Fraction.getFraction("K/d4:gFCd5'8C.+2");
    }

    @Test(timeout = 4000)
    public void test2533() throws Throwable {
        Fraction.getFraction("");
    }

    @Test(timeout = 4000)
    public void test2634() throws Throwable {
        Fraction fraction0 = Fraction.getFraction("-2198038 517/977");
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((double) (-2147483641));
        Fraction fraction1 = fraction0.reduce();
    }

    @Test(timeout = 4000)
    public void test2736() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((double) (-2147483641));
        Fraction fraction1 = fraction0.reduce();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2737() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((double) (-2147483641));
        Fraction fraction1 = fraction0.reduce();
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test2838() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), 847);
        Fraction fraction1 = fraction0.invert();
        int int0 = fraction1.compareTo(fraction0);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test2839() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), 847);
        Fraction fraction1 = fraction0.invert();
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test2940() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(1.4598424691314449E-9);
        fraction0.invert();
    }

    @Test(timeout = 4000)
    public void test3041() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.getReducedFraction(Integer.MIN_VALUE, 494);
        fraction0.divideBy(fraction1);
    }

    @Test(timeout = 4000)
    public void test3142() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fraction0.THREE_QUARTERS.pow(Integer.MIN_VALUE);
    }

    @Test(timeout = 4000)
    public void test3243() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, 17);
        fraction0.negate();
    }

    @Test(timeout = 4000)
    public void test3344() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        Fraction fraction1 = fraction0.abs();
        fraction0.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3345() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        Fraction fraction1 = fraction0.abs();
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test3446() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = fraction0.THREE_FIFTHS.abs();
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test3547() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        Fraction fraction1 = fraction0.ONE_QUARTER.pow(0);
        fraction1.shortValue();
    }

    @Test(timeout = 4000)
    public void test3648() throws Throwable {
        Fraction fraction0 = Fraction.ONE_THIRD;
        fraction0.pow((-5243));
    }

    @Test(timeout = 4000)
    public void test3749() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((double) (-2147483643));
        Fraction fraction1 = Fraction.ONE_QUARTER;
        fraction0.add(fraction1);
    }

    @Test(timeout = 4000)
    public void test3850() throws Throwable {
        Fraction fraction0 = Fraction.ONE_QUARTER;
        fraction0.pow(46);
    }

    @Test(timeout = 4000)
    public void test3951() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.ONE;
        Fraction fraction2 = fraction0.add(fraction1);
        fraction2.floatValue();
    }

    @Test(timeout = 4000)
    public void test4052() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.getReducedFraction((-294), 2147483633);
        fraction1.subtract(fraction0);
    }

    @Test(timeout = 4000)
    public void test4153() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test4154() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction1.floatValue();
    }

    @Test(timeout = 4000)
    public void test4155() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test4156() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        Fraction fraction1 = fraction0.subtract(fraction0);
        fraction0.intValue();
    }

    @Test(timeout = 4000)
    public void test4257() throws Throwable {
        Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);
        Fraction fraction1 = Fraction.getFraction(Integer.MIN_VALUE, 346);
        fraction0.subtract(fraction1);
    }

    @Test(timeout = 4000)
    public void test4358() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        fraction0.add((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test4459() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = fraction0.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test4560() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = Fraction.TWO_FIFTHS;
        Fraction fraction2 = fraction1.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test4661() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.add(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test4662() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = fraction0.add(fraction0);
        fraction1.byteValue();
    }

    @Test(timeout = 4000)
    public void test4763() throws Throwable {
        Fraction fraction0 = Fraction.THREE_QUARTERS;
        Fraction fraction1 = Fraction.getFraction((-2147483641), 4154);
        fraction1.add(fraction0);
    }

    @Test(timeout = 4000)
    public void test4864() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        fraction0.TWO_FIFTHS.multiplyBy((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test4965() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        Fraction fraction1 = fraction0.multiplyBy(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5066() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        fraction0.divideBy((Fraction) null);
    }

    @Test(timeout = 4000)
    public void test5167() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        fraction0.divideBy(fraction0);
    }

    @Test(timeout = 4000)
    public void test5268() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        Fraction fraction1 = Fraction.getFraction("2/5");
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5269() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        Fraction fraction1 = Fraction.getFraction("2/5");
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test5270() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        Fraction fraction1 = Fraction.getFraction("2/5");
        boolean boolean0 = fraction1.equals(fraction0);
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test5371() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        boolean boolean0 = fraction0.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test5472() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        boolean boolean0 = fraction0.equals((Object) null);
    }

    @Test(timeout = 4000)
    public void test5573() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.TWO_QUARTERS;
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test5574() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.TWO_QUARTERS;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5675() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE_THIRD;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getDenominator();
    }

    @Test(timeout = 4000)
    public void test5676() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE_THIRD;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5677() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE_THIRD;
        boolean boolean0 = fraction1.equals(fraction0);
        fraction0.equals((Object) fraction1);
    }

    @Test(timeout = 4000)
    public void test5678() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE_THIRD;
        boolean boolean0 = fraction1.equals(fraction0);
    }

    @Test(timeout = 4000)
    public void test5779() throws Throwable {
        Fraction fraction0 = Fraction.THREE_FIFTHS;
        int int0 = fraction0.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test5880() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), 847);
        Fraction fraction1 = Fraction.getFraction((-2147483641), 847);
        int int0 = fraction1.compareTo(fraction0);
        fraction1.getNumerator();
    }

    @Test(timeout = 4000)
    public void test5881() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), 847);
        Fraction fraction1 = Fraction.getFraction((-2147483641), 847);
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test5882() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-2147483641), 847);
        Fraction fraction1 = Fraction.getFraction((-2147483641), 847);
        int int0 = fraction1.compareTo(fraction0);
        fraction1.doubleValue();
    }

    @Test(timeout = 4000)
    public void test5983() throws Throwable {
        Fraction fraction0 = Fraction.ONE_HALF;
        Fraction fraction1 = Fraction.ONE_THIRD;
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test6084() throws Throwable {
        Fraction fraction0 = Fraction.TWO_QUARTERS;
        Fraction fraction1 = Fraction.ONE_HALF;
        int int0 = fraction1.compareTo(fraction0);
    }

    @Test(timeout = 4000)
    public void test6185() throws Throwable {
        Fraction fraction0 = Fraction.TWO_FIFTHS;
        String string0 = fraction0.toString();
    }

    @Test(timeout = 4000)
    public void test6287() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        fraction0.toProperString();
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test6288() throws Throwable {
        Fraction fraction0 = Fraction.getFraction((-1.0));
        fraction0.toProperString();
        String string0 = fraction0.toProperString();
        fraction0.getDenominator();
    }

    @Test(timeout = 4000)
    public void test6390() throws Throwable {
        Fraction fraction0 = Fraction.ZERO;
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test6491() throws Throwable {
        Fraction fraction0 = Fraction.ONE;
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test6593() throws Throwable {
        Fraction fraction0 = Fraction.ONE_FIFTH;
        String string0 = fraction0.toProperString();
    }

    @Test(timeout = 4000)
    public void test6695() throws Throwable {
        Fraction fraction0 = Fraction.getFraction(47, 47, 47);
        String string0 = fraction0.toProperString();
    }
}
