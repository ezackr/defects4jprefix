/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 13:15:39 GMT 2024
 */
package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float float0 = NumberUtils.max((float) numberUtils0.BYTE_MINUS_ONE, 1.0F, 49.0F);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = NumberUtils.min(0.0F, 1.0F, 1.0F);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = NumberUtils.toDouble("dE,6nC?");
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        double double0 = NumberUtils.min(0.0, 0.0, (double) (-1L));
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        byte byte0 = NumberUtils.toByte("|ApV524AP");
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        double double0 = NumberUtils.max(0.0, (double) 17L, (double) 17L);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        long long0 = NumberUtils.toLong("");
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        int int0 = NumberUtils.toInt((String) null);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        float float0 = NumberUtils.toFloat("mc$,q3r8hc");
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        short short0 = NumberUtils.toShort((String) null);
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        int int0 = NumberUtils.toInt("0xInvocationTargetException occurred during 1.6 backcompat code");
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        long long0 = NumberUtils.toLong((String) null, (long) 0);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        float float0 = NumberUtils.toFloat((String) null, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        double double0 = NumberUtils.toDouble((String) null, (double) (-31L));
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        byte byte0 = NumberUtils.toByte((String) null, (byte) (-123));
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        short short0 = NumberUtils.toShort("|ApV524AP", (short) 0);
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        NumberUtils.createNumber("6e.kt(Wr6");
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        Number number0 = NumberUtils.createNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        NumberUtils.createNumber("");
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        Number number0 = NumberUtils.createNumber("--");
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        NumberUtils.createNumber("0x-0xAb-V +vdh:0u");
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        NumberUtils.createNumber("-0xQ[OqW7{ \"D");
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        Number number0 = NumberUtils.createNumber("0E6");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.");
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        NumberUtils.createNumber("nJ04J]3E`p~.\"gneb");
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        NumberUtils.createNumber(".\"A@-'4bX>&;eBLsw5");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        Number number0 = NumberUtils.createNumber("-4l");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        NumberUtils.createNumber("?/J4^cVevfE}");
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        NumberUtils.createNumber("0E'");
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        NumberUtils.createNumber("0e");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.D");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        Number number0 = NumberUtils.createNumber("4F");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        NumberUtils.createNumber("&mPIL");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        NumberUtils.createNumber("?d");
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        NumberUtils.createNumber("R/f");
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        NumberUtils.createNumber("-W.l");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        NumberUtils.createNumber("Strings must not be null");
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        NumberUtils.createNumber("-Hl");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        Number number0 = NumberUtils.createNumber("0l");
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        Number number0 = NumberUtils.createNumber("0F");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        Number number0 = NumberUtils.createNumber("8D");
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        NumberUtils.createNumber("-'xUKeE=18/i8");
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        Number number0 = NumberUtils.createNumber("9.");
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        Float float0 = NumberUtils.createFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        Double double0 = NumberUtils.createDouble((String) null);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        Integer integer0 = NumberUtils.createInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        Long long0 = NumberUtils.createLong((String) null);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        NumberUtils.createNumber("F");
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        NumberUtils.min((long[]) null);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        long[] longArray0 = new long[7];
        longArray0[0] = 30L;
        long long0 = NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        NumberUtils.min((int[]) null);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        int[] intArray0 = new int[6];
        intArray0[0] = (int) (short) 57;
        int int0 = NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        short[] shortArray0 = new short[2];
        short short0 = NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        NumberUtils.min((short[]) null);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short[] shortArray0 = new short[2];
        shortArray0[1] = (short) (byte) numberUtils0.BYTE_MINUS_ONE;
        short short0 = NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        NumberUtils.min((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[2] = (byte) (-1);
        byte byte0 = NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        NumberUtils.min((double[]) null);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        double[] doubleArray0 = new double[16];
        doubleArray0[5] = Double.NaN;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        Float float0 = new Float((-1.0F));
        double[] doubleArray0 = new double[8];
        doubleArray0[6] = (double) (float) float0;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        NumberUtils.min((float[]) null);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        float[] floatArray0 = new float[4];
        floatArray0[1] = Float.NaN;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float[] floatArray0 = new float[10];
        floatArray0[0] = (float) (long) numberUtils0.LONG_ONE;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        NumberUtils.max((long[]) null);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        long[] longArray0 = new long[9];
        longArray0[0] = (-31L);
        long long0 = NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        NumberUtils.max((int[]) null);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        int[] intArray0 = new int[7];
        intArray0[5] = 97;
        int int0 = NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        NumberUtils.max((short[]) null);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        short[] shortArray0 = new short[4];
        shortArray0[0] = (short) (-1271);
        short short0 = NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        NumberUtils.max((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[2] = (byte) 97;
        byte byte0 = NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        NumberUtils.max((double[]) null);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        double[] doubleArray0 = new double[16];
        doubleArray0[5] = Double.NaN;
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        double[] doubleArray0 = new double[5];
        doubleArray0[3] = (double) (short) numberUtils0.SHORT_ONE;
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        NumberUtils.max((float[]) null);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[2] = Float.NaN;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[0] = (-1648.5275F);
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        long long0 = NumberUtils.min(0L, (-13L), 0L);
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        long long0 = NumberUtils.min(3618L, 3618L, (-3897L));
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        int int0 = NumberUtils.min(256, 2145665268, 5);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        int int0 = NumberUtils.min((int) (byte) 0, (-1032), (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        short short0 = NumberUtils.min((short) 380, (short) 380, (short) (-1264));
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short short0 = NumberUtils.min((short) numberUtils0.BYTE_ONE, (short) (-4007), (short) 952);
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        byte byte0 = NumberUtils.min((byte) (-43), (byte) (-43), (byte) (-48));
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        byte byte0 = NumberUtils.min((byte) (-1), (byte) (-99), (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        long long0 = NumberUtils.max((long) (byte) 1, (-3610L), 2405L);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        long long0 = NumberUtils.max((-1058L), 102L, 0L);
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        int int0 = NumberUtils.max((int) numberUtils0.INTEGER_MINUS_ONE, (int) (byte) (-114), 1022);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        int int0 = NumberUtils.max((int) numberUtils0.BYTE_ZERO, (int) numberUtils0.INTEGER_ONE, (int) numberUtils0.BYTE_ONE);
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        short short0 = NumberUtils.max((short) 10, (short) 34, (short) 108);
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        short short0 = NumberUtils.max((short) 2674, (short) 2674, (short) (-1905));
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        byte byte0 = NumberUtils.max((byte) 2, (byte) 2, (byte) 127);
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        byte byte0 = NumberUtils.max((byte) 19, (byte) 43, (byte) 43);
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        boolean boolean0 = NumberUtils.isDigits("");
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("6e.kt(Wr6");
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("");
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-L");
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0l");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x");
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0xC");
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0x is less tan 0: ");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x0xStrings must not be null");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0xCannot pad a negative amount: ");
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-");
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("6El");
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("...");
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("5E1e@75-C4");
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-Em<OTw6ss|[9");
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("8E+jCCOP!");
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("--KaZp");
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("3-");
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("6");
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0e");
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("E");
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("9.");
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("..");
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("d");
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("D");
    }

    @Test(timeout = 4000)
    public void test132132() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("8f");
    }

    @Test(timeout = 4000)
    public void test133133() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("F");
    }
}
