/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:29:36 GMT 2024
 */
package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        float float0 = NumberUtils.max(0.0F, 0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = NumberUtils.min(0.0F, 1.0F, 1.0F);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = NumberUtils.toDouble("-#dE,6nC?");
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        double double0 = NumberUtils.min((double) 3193L, (double) 3193L, (double) 3193L);
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long[] longArray0 = new long[4];
        longArray0[2] = (long) (short) numberUtils0.SHORT_MINUS_ONE;
        long long0 = NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        byte byte0 = NumberUtils.toByte("|ApV524AP");
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        double double0 = NumberUtils.max((double) 0L, (double) 0L, (double) 0);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        long long0 = NumberUtils.toLong("");
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        int int0 = NumberUtils.toInt((String) null);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        float float0 = NumberUtils.toFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        short short0 = NumberUtils.toShort("0");
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        int int0 = NumberUtils.toInt("PpFB]r[E&mk[h-T");
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        long long0 = NumberUtils.toLong((String) null, 1087L);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        float float0 = NumberUtils.toFloat("");
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        double double0 = NumberUtils.toDouble((String) null, 0.0);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        byte byte0 = NumberUtils.toByte((String) null, (byte) (-38));
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        short short0 = NumberUtils.toShort((String) null, (short) (byte) 122);
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        Number number0 = NumberUtils.createNumber("0f");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        Number number0 = NumberUtils.createNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        NumberUtils.createNumber("");
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        NumberUtils.createNumber("-0x*5N?U[Usm\"");
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        NumberUtils.createNumber("#/");
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        Number number0 = NumberUtils.createNumber("-0.");
        number0.shortValue();
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        NumberUtils.createNumber("e9?0BYUU|o.OfE7");
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        NumberUtils.createNumber(" is not a valid number.");
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        NumberUtils.createNumber("a.o(bk9YE}RV!ie");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        NumberUtils.createNumber("Strings must not be null");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        NumberUtils.createNumber("0G6R<^E_t7ezV");
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        NumberUtils.createNumber("0E");
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        NumberUtils.createNumber("0ERoyg2dWn!5lqC");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        NumberUtils.createNumber("D");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        NumberUtils.createNumber("M%O|xbZj[e\"&SF");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        NumberUtils.createNumber("^pr<^$.rVA;/L");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        NumberUtils.createNumber("A(N; 9[>o/d");
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        NumberUtils.createNumber("--0x-0l");
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        Number number0 = NumberUtils.createNumber("0l");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        Number number0 = NumberUtils.createNumber("-0l");
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        Number number0 = NumberUtils.createNumber("6f");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        NumberUtils.createNumber("0Eoy)2d0n!5lq1");
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        Number number0 = NumberUtils.createNumber("2");
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.");
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        Number number0 = NumberUtils.createNumber("8.");
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        NumberUtils.createNumber(".er]ubR3nmWEL$0Y");
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        Float float0 = NumberUtils.createFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        Double double0 = NumberUtils.createDouble((String) null);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        Integer integer0 = NumberUtils.createInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        Long long0 = NumberUtils.createLong((String) null);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        NumberUtils.createNumber("-0xMinimum abbreviation width is 4");
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger("2");
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        NumberUtils.createBigInteger("#");
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger("-0");
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        NumberUtils.createBigInteger("-0XSarch anM Replace array lengths don't match: ");
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        NumberUtils.createNumber("f");
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        NumberUtils.createNumber("--Minimum abbreviation width is 4");
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        long[] longArray0 = new long[4];
        long long0 = NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        int[] intArray0 = new int[3];
        intArray0[2] = (-2288);
        int int0 = NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short[] shortArray0 = new short[5];
        shortArray0[0] = (short) numberUtils0.SHORT_ONE;
        short short0 = NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[6] = (byte) (-72);
        byte byte0 = NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[3] = Double.NaN;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) (long) numberUtils0.LONG_ONE;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        float[] floatArray0 = new float[5];
        floatArray0[3] = Float.NaN;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float[] floatArray0 = new float[2];
        floatArray0[0] = (float) (long) numberUtils0.LONG_ONE;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        long[] longArray0 = new long[7];
        longArray0[0] = (-1492L);
        long long0 = NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        int[] intArray0 = new int[9];
        intArray0[4] = (int) numberUtils0.INTEGER_ONE;
        int int0 = NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short[] shortArray0 = new short[5];
        shortArray0[0] = (short) numberUtils0.SHORT_MINUS_ONE;
        short short0 = NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[1] = (byte) 48;
        byte byte0 = NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        double[] doubleArray0 = new double[9];
        doubleArray0[2] = (double) Float.NaN;
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) (-402);
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        float[] floatArray0 = new float[20];
        floatArray0[5] = Float.NaN;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float[] floatArray0 = new float[2];
        floatArray0[1] = (float) (short) numberUtils0.SHORT_ONE;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        NumberUtils.min((float[]) null);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        long long0 = NumberUtils.min(0L, (-220L), 0L);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long long0 = NumberUtils.min((-1L), (long) numberUtils0.INTEGER_ZERO, (-229L));
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        int int0 = NumberUtils.min((int) (byte) 0, (-1032), (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        int int0 = NumberUtils.min((-2591), (-2591), (-3993));
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        short short0 = NumberUtils.min((short) (-3158), (short) (-3158), (short) (-3158));
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        short short0 = NumberUtils.min((short) 1876, (short) (-357), (short) (-3158));
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        byte byte0 = NumberUtils.min((byte) (-1), (byte) (-1), (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        byte byte0 = NumberUtils.min((byte) 45, (byte) (-14), (byte) (-120));
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        long long0 = NumberUtils.max((long) (byte) 122, (long) (short) 122, (long) (byte) 122);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long long0 = NumberUtils.max((long) numberUtils0.INTEGER_MINUS_ONE, (long) numberUtils0.INTEGER_ZERO, (long) numberUtils0.BYTE_ONE);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        int int0 = NumberUtils.max(108, 2735, 256);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        int int0 = NumberUtils.max((-504), (-504), 0);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        Short short0 = new Short((short) (-357));
        short short1 = NumberUtils.max((short) short0, (short) (-3158), (short) 2714);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        short short0 = NumberUtils.max((short) 0, (short) 10, (short) 14676);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        short short0 = NumberUtils.max((short) (byte) (-1), (short) 97, (short) 16);
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        byte byte0 = NumberUtils.max((byte) (-107), (byte) (-107), (byte) 70);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        byte byte0 = NumberUtils.max((byte) (-40), (byte) (-20), (byte) (-40));
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        boolean boolean0 = NumberUtils.isDigits("");
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0e.");
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("D");
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x0f");
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x");
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x-#");
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0xArray cannot be empty.");
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-");
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0.l");
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("...");
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0El");
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("7eezCn");
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("E:W\"c");
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("3+0.");
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("4e-4\"0R>4Y1UjrymDqq");
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0");
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber(".e");
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("E");
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("..");
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0.");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("d");
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("f");
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("F");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0Eo");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("L");
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0l");
    }
}
