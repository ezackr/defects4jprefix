/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 13:10:03 GMT 2024
 */
package org.apache.commons.lang3.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.Format;
import java.util.HashMap;
import java.util.Locale;
import org.apache.commons.lang3.text.ExtendedMessageFormat;
import org.apache.commons.lang3.text.FormatFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ExtendedMessageFormat_ESTest extends ExtendedMessageFormat_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("n'{ 1,|,U']&}&", hashMap0);
        extendedMessageFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("9H>xd'RH");
        DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
        extendedMessageFormat0.setFormat(32, dateFormat0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("", hashMap0);
        Format[] formatArray0 = new Format[0];
        extendedMessageFormat0.setFormatsByArgumentIndex(formatArray0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>(0);
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("Unreadable format element at position ", hashMap0);
        extendedMessageFormat0.setFormats((Format[]) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Locale locale0 = Locale.UK;
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("org.apache.commons.lang3.text.StrMatcher$StringMatcher", locale0);
        String string0 = extendedMessageFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("org.apache.commons.lang3.text.StrMatcher$CharMatcher");
        DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
        extendedMessageFormat0.setFormatByArgumentIndex((-1), dateFormat0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat(";w{6 }I", hashMap0);
        extendedMessageFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("n'{ 1,,U']&}&z]", hashMap0);
        extendedMessageFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        FormatFactory formatFactory0 = mock(FormatFactory.class, new ViolatedAssumptionAnswer());
        doReturn((Format) null).when(formatFactory0).getFormat(anyString(), anyString(), any(java.util.Locale.class));
        hashMap0.put("", formatFactory0);
        ExtendedMessageFormat extendedMessageFormat0 = new ExtendedMessageFormat("{ 1,}&0]", hashMap0);
        extendedMessageFormat0.toPattern();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = null;
        extendedMessageFormat0 = new ExtendedMessageFormat("tTVFk~o;%HY={}", hashMap0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = null;
        extendedMessageFormat0 = new ExtendedMessageFormat("{ ", hashMap0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = null;
        extendedMessageFormat0 = new ExtendedMessageFormat("{6 ,]", hashMap0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = null;
        extendedMessageFormat0 = new ExtendedMessageFormat("{6 1,}(0]", hashMap0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HashMap<String, FormatFactory> hashMap0 = new HashMap<String, FormatFactory>();
        ExtendedMessageFormat extendedMessageFormat0 = null;
        extendedMessageFormat0 = new ExtendedMessageFormat("n'{ 1,{]&}LzE]", hashMap0);
    }
}
