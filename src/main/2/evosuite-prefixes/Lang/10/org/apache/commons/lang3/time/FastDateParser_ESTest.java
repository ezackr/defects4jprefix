/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:57:27 GMT 2024
 */
package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import java.util.regex.Pattern;
import org.apache.commons.lang3.time.FastDateParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class FastDateParser_ESTest extends FastDateParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = Locale.forLanguageTag("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++");
        FastDateParser fastDateParser0 = new FastDateParser("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++", simpleTimeZone0, locale0);
        boolean boolean0 = fastDateParser0.equals(fastDateParser0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("0dZ)", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.KOREAN;
        FastDateParser fastDateParser0 = new FastDateParser("D+|E+|F+DG+|H+|K+|M+|S|W+|Z+|a+|d+|6+|k+|mM|s+|w+|y+|z+|9'|'[^']++(''[^']*+)*+'|[^'A-a-z]++", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.GERMANY;
        FastDateParser fastDateParser0 = new FastDateParser("dTDu,kuUj<", timeZone0, locale0);
        Date date0 = fastDateParser0.parse("0c_:");
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Locale locale0 = Locale.US;
        TimeZone timeZone0 = TimeZone.getDefault();
        FastDateParser fastDateParser0 = new FastDateParser("+iAsdS2#%*>", timeZone0, locale0);
        fastDateParser0.hashCode();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("Dy[y;O}lr(mi,:i79o");
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("Dy[y;O}lr(mi,:i79o", timeZone0, locale0);
        String string0 = fastDateParser0.toString();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("u{2M{9G");
        Locale locale0 = Locale.KOREA;
        FastDateParser fastDateParser0 = new FastDateParser("u{2M{9G", timeZone0, locale0);
        fastDateParser0.parseObject("u{2M{9G", (ParsePosition) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("/|T");
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("~bW5x4v", timeZone0, locale0);
        String string0 = fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = Locale.forLanguageTag("d?}aW``");
        FastDateParser fastDateParser0 = new FastDateParser("d?}aW``", simpleTimeZone0, locale0);
        Locale locale1 = fastDateParser0.getLocale();
        locale1.toString();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("@,`tEZ{O7]");
        Locale locale0 = Locale.CANADA;
        FastDateParser fastDateParser0 = new FastDateParser("@,`tEZ{O7]", timeZone0, locale0);
        Object object0 = fastDateParser0.parseObject("@,`tEZ{O7]");
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("Dy[y;O}lr(mi,:i79o");
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("Dy[y;O}lr(mi,:i79o", timeZone0, locale0);
        TimeZone timeZone1 = fastDateParser0.getTimeZone();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1, "");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        FastDateParser fastDateParser0 = new FastDateParser("7gYZ|X", simpleTimeZone0, locale0);
        Pattern pattern0 = fastDateParser0.getParsePattern();
        pattern0.pattern();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        TimeZone timeZone0 = TimeZone.getDefault();
        FastDateParser fastDateParser0 = null;
        fastDateParser0 = new FastDateParser("", timeZone0, locale0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = new Locale("d?}aW``", "d?}aW``", "d?}aW``");
        FastDateParser fastDateParser0 = new FastDateParser("d?}aW``", simpleTimeZone0, locale0);
        boolean boolean0 = fastDateParser0.equals("m0O%d( $I`G+CH9M");
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = Locale.forLanguageTag("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++");
        FastDateParser fastDateParser0 = new FastDateParser("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++", simpleTimeZone0, locale0);
        FastDateParser fastDateParser1 = new FastDateParser("0OZ.u0-?t", simpleTimeZone0, locale0);
        boolean boolean0 = fastDateParser0.equals(fastDateParser1);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = new Locale("d?}aW``", "d?}aW``", "d?}aW``");
        FastDateParser fastDateParser0 = new FastDateParser("d?}aW``", simpleTimeZone0, locale0);
        TimeZone timeZone0 = TimeZone.getDefault();
        FastDateParser fastDateParser1 = new FastDateParser("d?}aW``", timeZone0, locale0);
        boolean boolean0 = fastDateParser0.equals(fastDateParser1);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("@,f`tEZ{O7]");
        Locale locale0 = Locale.forLanguageTag("#-R=QE8Nf48b]");
        Locale locale1 = Locale.KOREAN;
        FastDateParser fastDateParser0 = new FastDateParser("#-R=QE8Nf48b]", timeZone0, locale0);
        FastDateParser fastDateParser1 = new FastDateParser("#-R=QE8Nf48b]", timeZone0, locale1);
        boolean boolean0 = fastDateParser0.equals(fastDateParser1);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("Dy[y;O}lKmi,i79o");
        Locale locale0 = Locale.GERMAN;
        FastDateParser fastDateParser0 = new FastDateParser("Dy[y;O}lKmi,i79o", timeZone0, locale0);
        fastDateParser0.parse("Dy[y;O}lKmi,i79o");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = FastDateParser.JAPANESE_IMPERIAL;
        FastDateParser fastDateParser0 = new FastDateParser("D&", timeZone0, locale0);
        fastDateParser0.parse("D&");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.UK;
        FastDateParser fastDateParser0 = new FastDateParser("a{W  %=,R+FT9", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("2$ajc1i0yFx'k'0fD5", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.ENGLISH;
        FastDateParser fastDateParser0 = new FastDateParser("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+Ed+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++('[^']*+)*+'|[^'A-Za-z]++", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = Locale.forLanguageTag("d?}aW``");
        FastDateParser fastDateParser0 = new FastDateParser("d?}aW``", simpleTimeZone0, locale0);
        int int0 = fastDateParser0.adjustYear(1181);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-266), "d?}aW``");
        Locale locale0 = Locale.forLanguageTag("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++");
        FastDateParser fastDateParser0 = new FastDateParser("D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++", simpleTimeZone0, locale0);
        int int0 = fastDateParser0.adjustYear((-266));
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CANADA;
        FastDateParser fastDateParser0 = new FastDateParser("(p{IsNd}++q)", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.FRENCH;
        FastDateParser fastDateParser0 = new FastDateParser(";|(E*<=s", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CANADA;
        FastDateParser fastDateParser0 = new FastDateParser(",f`EZ{O7]", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CHINESE;
        FastDateParser fastDateParser0 = new FastDateParser("s-&\"j~", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CANADA;
        FastDateParser fastDateParser0 = new FastDateParser("s.<;", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.JAPANESE;
        FastDateParser fastDateParser0 = new FastDateParser("/AMXfK", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("1`h4");
        Locale locale0 = Locale.ITALIAN;
        FastDateParser fastDateParser0 = new FastDateParser("1`h4", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.UK;
        FastDateParser fastDateParser0 = new FastDateParser("?s3C\"7$-oYCP", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        TimeZone timeZone0 = TimeZone.getTimeZone("W9.w5wN[");
        FastDateParser fastDateParser0 = new FastDateParser("W9.w5wN[", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = new Locale("NMInR*@,]]}");
        FastDateParser fastDateParser0 = new FastDateParser("#K''6pH", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        TimeZone timeZone0 = TimeZone.getTimeZone("y8tEZ{O7]");
        Locale locale0 = Locale.CANADA;
        FastDateParser fastDateParser0 = new FastDateParser("y8tEZ{O7]", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.UK;
        FastDateParser fastDateParser0 = new FastDateParser(":", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.JAPAN;
        FastDateParser fastDateParser0 = new FastDateParser("<TPJg", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.FRENCH;
        FastDateParser fastDateParser0 = new FastDateParser("={K", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.KOREAN;
        FastDateParser fastDateParser0 = new FastDateParser(">^5WS{9_9cgjnI_8", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.ENGLISH;
        FastDateParser fastDateParser0 = new FastDateParser("s*+", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.ROOT;
        FastDateParser fastDateParser0 = new FastDateParser("^mmr`U", timeZone0, locale0);
        fastDateParser0.getPattern();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.GERMANY;
        FastDateParser fastDateParser0 = new FastDateParser("Ez_v;%bH$J+ya", timeZone0, locale0);
        fastDateParser0.getPattern();
    }
}
