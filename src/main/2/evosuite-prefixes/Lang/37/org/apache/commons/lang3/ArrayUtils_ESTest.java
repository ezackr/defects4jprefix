/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 14:11:36 GMT 2024
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.AbstractMap;
import java.util.Arrays;
import java.util.Map;
import org.apache.commons.lang3.ArrayUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ArrayUtils_ESTest extends ArrayUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        Short short0 = new Short((short) 3440);
        double[] doubleArray0 = new double[7];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) short0, (double) 0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float[] floatArray0 = ArrayUtils.add((float[]) null, (float) 8);
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        char[] charArray0 = ArrayUtils.add((char[]) null, 'U');
    }

    @Test(timeout = 4000)
    public void test0035() throws Throwable {
        long[] longArray0 = new long[0];
        ArrayUtils.add(longArray0, 1858, (long) 892);
    }

    @Test(timeout = 4000)
    public void test0046() throws Throwable {
        byte[] byteArray0 = new byte[5];
        boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 86);
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((double[]) null, (double) 'd');
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        int[] intArray0 = new int[4];
        int[] intArray1 = ArrayUtils.add(intArray0, (int) (byte) 25);
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        float[] floatArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_FLOAT_ARRAY, (float) (-1));
    }

    @Test(timeout = 4000)
    public void test00810() throws Throwable {
        int[] intArray0 = new int[7];
        int int0 = ArrayUtils.lastIndexOf((Object[]) null, (Object) intArray0[3]);
    }

    @Test(timeout = 4000)
    public void test00911() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 477);
    }

    @Test(timeout = 4000)
    public void test01012() throws Throwable {
        ArrayUtils.remove((char[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test01113() throws Throwable {
        Object[] objectArray0 = new Object[9];
        Integer integer0 = new Integer((-2407));
        Object[] objectArray1 = ArrayUtils.removeElement(objectArray0, (Object) integer0);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.add(doubleArray0, (int) (byte) 0, (double) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, true);
        Arrays.equals(new boolean[] { false, true }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byte[] byteArray1 = ArrayUtils.add(byteArray0, (byte) (-67));
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        float[] floatArray0 = new float[6];
        ArrayUtils.add(floatArray0, (-1), (-1406.7F));
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((double[]) null, (-2215.9979767), 1600.9404623414);
    }

    @Test(timeout = 4000)
    public void test01720() throws Throwable {
        long[] longArray0 = new long[3];
        long[] longArray1 = ArrayUtils.add(longArray0, (long) 0);
    }

    @Test(timeout = 4000)
    public void test01821() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 0.0);
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        booleanArray0[2] = true;
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
        Arrays.equals(new boolean[] { false, false, false, false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02023() throws Throwable {
        long[] longArray0 = new long[7];
        long[] longArray1 = ArrayUtils.removeElement(longArray0, (long) 0);
    }

    @Test(timeout = 4000)
    public void test02124() throws Throwable {
        String string0 = ArrayUtils.toString((Object) null);
    }

    @Test(timeout = 4000)
    public void test02225() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) 50);
    }

    @Test(timeout = 4000)
    public void test02326() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((char[]) null, '(');
    }

    @Test(timeout = 4000)
    public void test02427() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test02528() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        ArrayUtils.add(booleanArray0, (-1), true);
    }

    @Test(timeout = 4000)
    public void test02629() throws Throwable {
        int[] intArray0 = new int[13];
        intArray0[0] = 2;
        int[] intArray1 = ArrayUtils.removeElement(intArray0, 2);
    }

    @Test(timeout = 4000)
    public void test02730() throws Throwable {
        short[] shortArray0 = new short[5];
        short[] shortArray1 = ArrayUtils.add(shortArray0, (short) (-1495));
    }

    @Test(timeout = 4000)
    public void test02831() throws Throwable {
        ArrayUtils.add((int[]) null, (-2141), (-2141));
    }

    @Test(timeout = 4000)
    public void test02932() throws Throwable {
        Byte[] byteArray0 = new Byte[3];
        Byte byte0 = new Byte((byte) (-1));
        byteArray0[1] = byte0;
        char[] charArray0 = new char[7];
        ArrayUtils.add(charArray0, (int) byteArray0[1], 'j');
    }

    @Test(timeout = 4000)
    public void test03033() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test03134() throws Throwable {
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.isEquals(object0, object0);
    }

    @Test(timeout = 4000)
    public void test03235() throws Throwable {
        double[] doubleArray0 = new double[7];
        double[] doubleArray1 = ArrayUtils.add(doubleArray0, (-496.5887721));
    }

    @Test(timeout = 4000)
    public void test03336() throws Throwable {
        Object[] objectArray0 = new Object[6];
        Object[] objectArray1 = ArrayUtils.removeElement(objectArray0, objectArray0[5]);
    }

    @Test(timeout = 4000)
    public void test03437() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 62;
        byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 62);
    }

    @Test(timeout = 4000)
    public void test03539() throws Throwable {
        float[] floatArray0 = new float[7];
        floatArray0[3] = (float) (byte) (-73);
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-73.0F));
    }

    @Test(timeout = 4000)
    public void test03640() throws Throwable {
        short[] shortArray0 = new short[9];
        short[] shortArray1 = ArrayUtils.add(shortArray0, 0, (short) 56);
    }

    @Test(timeout = 4000)
    public void test03741() throws Throwable {
        Object object0 = new Object();
        String string0 = ArrayUtils.toString(object0);
    }

    @Test(timeout = 4000)
    public void test03842() throws Throwable {
        Object[] objectArray0 = new Object[4];
        ArrayUtils.toMap(objectArray0);
    }

    @Test(timeout = 4000)
    public void test03943() throws Throwable {
        Map<Object, Object> map0 = ArrayUtils.toMap((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test04044() throws Throwable {
        AbstractMap.SimpleImmutableEntry<String, String>[] abstractMap_SimpleImmutableEntryArray0 = (AbstractMap.SimpleImmutableEntry<String, String>[]) Array.newInstance(AbstractMap.SimpleImmutableEntry.class, 1);
        AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("java.lang.Object", "java.lang.Character");
        AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, String>(abstractMap_SimpleEntry0);
        AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>(abstractMap_SimpleEntry1);
        abstractMap_SimpleImmutableEntryArray0[0] = abstractMap_SimpleImmutableEntry0;
        Map<Object, Object> map0 = ArrayUtils.toMap(abstractMap_SimpleImmutableEntryArray0);
        map0.size();
    }

    @Test(timeout = 4000)
    public void test04145() throws Throwable {
        Integer[] integerArray0 = ArrayUtils.addAll((Integer[]) null, (Integer[]) null);
    }

    @Test(timeout = 4000)
    public void test04246() throws Throwable {
        long[] longArray0 = new long[8];
        long[] longArray1 = ArrayUtils.addAll(longArray0, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test04348() throws Throwable {
        long[] longArray0 = ArrayUtils.addAll((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test04449() throws Throwable {
        int[] intArray0 = new int[3];
        int[] intArray1 = ArrayUtils.addAll((int[]) null, intArray0);
    }

    @Test(timeout = 4000)
    public void test04551() throws Throwable {
        int[] intArray0 = ArrayUtils.removeElement((int[]) null, (-2141));
    }

    @Test(timeout = 4000)
    public void test04652() throws Throwable {
        short[] shortArray0 = new short[10];
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 2321);
    }

    @Test(timeout = 4000)
    public void test04754() throws Throwable {
        short[] shortArray0 = ArrayUtils.addAll((short[]) null, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test04855() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = ArrayUtils.addAll(charArray0, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test04956() throws Throwable {
        char[] charArray0 = ArrayUtils.addAll((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test05057() throws Throwable {
        byte[] byteArray0 = new byte[9];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test05159() throws Throwable {
        byte[] byteArray0 = ArrayUtils.addAll((byte[]) null, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test05260() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test05362() throws Throwable {
        double[] doubleArray0 = ArrayUtils.addAll((double[]) null, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test05463() throws Throwable {
        float[] floatArray0 = ArrayUtils.addAll((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test05564() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test05665() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.addAll((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test05766() throws Throwable {
        Object[] objectArray0 = new Object[4];
        Object[] objectArray1 = ArrayUtils.subarray(objectArray0, 892, 771);
    }

    @Test(timeout = 4000)
    public void test05868() throws Throwable {
        Object[] objectArray0 = ArrayUtils.subarray((Object[]) null, 892, (-1));
    }

    @Test(timeout = 4000)
    public void test05969() throws Throwable {
        Float[] floatArray0 = ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY;
        Object[] objectArray0 = ArrayUtils.subarray((Object[]) floatArray0, (-65), (-65));
    }

    @Test(timeout = 4000)
    public void test06070() throws Throwable {
        Object[] objectArray0 = new Object[1];
        Object[] objectArray1 = ArrayUtils.subarray(objectArray0, (-1), 6);
    }

    @Test(timeout = 4000)
    public void test06172() throws Throwable {
        long[] longArray0 = new long[9];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 96, 2);
    }

    @Test(timeout = 4000)
    public void test06274() throws Throwable {
        long[] longArray0 = ArrayUtils.subarray((long[]) null, (int) '$', (int) 'y');
    }

    @Test(timeout = 4000)
    public void test06375() throws Throwable {
        long[] longArray0 = new long[9];
        long[] longArray1 = ArrayUtils.subarray(longArray0, (-1505), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test06477() throws Throwable {
        int[] intArray0 = new int[2];
        int[] intArray1 = ArrayUtils.subarray(intArray0, (-2141), 0);
    }

    @Test(timeout = 4000)
    public void test06579() throws Throwable {
        int[] intArray0 = ArrayUtils.subarray((int[]) null, 2137, (-2141));
    }

    @Test(timeout = 4000)
    public void test06680() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-2141));
    }

    @Test(timeout = 4000)
    public void test06781() throws Throwable {
        int[] intArray0 = new int[6];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 0, 905);
    }

    @Test(timeout = 4000)
    public void test06883() throws Throwable {
        short[] shortArray0 = ArrayUtils.subarray((short[]) null, (-108), (-4669));
    }

    @Test(timeout = 4000)
    public void test06984() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) (-1), 64);
    }

    @Test(timeout = 4000)
    public void test07086() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, 3511, (int) (short) (-2171));
    }

    @Test(timeout = 4000)
    public void test07187() throws Throwable {
        char char0 = '#';
        Character[] characterArray0 = new Character[7];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, char0);
        char[] charArray1 = ArrayUtils.subarray(charArray0, (-3338), 36);
    }

    @Test(timeout = 4000)
    public void test07290() throws Throwable {
        char[] charArray0 = ArrayUtils.subarray((char[]) null, 0, 0);
    }

    @Test(timeout = 4000)
    public void test07391() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, 'o');
        char[] charArray1 = ArrayUtils.subarray(charArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test07493() throws Throwable {
        char[] charArray0 = new char[6];
        char[] charArray1 = ArrayUtils.subarray(charArray0, (-4313), (-1));
    }

    @Test(timeout = 4000)
    public void test07594() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) 0, (-1));
    }

    @Test(timeout = 4000)
    public void test07696() throws Throwable {
        byte[] byteArray0 = ArrayUtils.subarray((byte[]) null, 9, 9);
    }

    @Test(timeout = 4000)
    public void test07797() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (-975), 2657);
    }

    @Test(timeout = 4000)
    public void test07899() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (int) (byte) 0, 1626);
    }

    @Test(timeout = 4000)
    public void test079102() throws Throwable {
        double[] doubleArray0 = ArrayUtils.subarray((double[]) null, (-67), (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test080103() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test081104() throws Throwable {
        float[] floatArray0 = new float[8];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, (-3104), 3);
    }

    @Test(timeout = 4000)
    public void test082106() throws Throwable {
        float[] floatArray0 = ArrayUtils.subarray((float[]) null, 3593, 48);
    }

    @Test(timeout = 4000)
    public void test083107() throws Throwable {
        float[] floatArray0 = new float[5];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 526, 526);
    }

    @Test(timeout = 4000)
    public void test084108() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 512);
    }

    @Test(timeout = 4000)
    public void test085111() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.subarray((boolean[]) null, (-1126), 11);
    }

    @Test(timeout = 4000)
    public void test086112() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, (-1), 0);
    }

    @Test(timeout = 4000)
    public void test087113() throws Throwable {
        Object[] objectArray0 = new Object[4];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, (Object[]) null);
    }

    @Test(timeout = 4000)
    public void test088114() throws Throwable {
        Object[] objectArray0 = new Object[4];
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, objectArray0);
    }

    @Test(timeout = 4000)
    public void test089115() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, (Object[]) null);
    }

    @Test(timeout = 4000)
    public void test090116() throws Throwable {
        Object[] objectArray0 = new Object[0];
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, objectArray0);
    }

    @Test(timeout = 4000)
    public void test091117() throws Throwable {
        Object[] objectArray0 = new Object[0];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, (Object[]) null);
    }

    @Test(timeout = 4000)
    public void test092118() throws Throwable {
        Object[] objectArray0 = new Object[4];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray0);
    }

    @Test(timeout = 4000)
    public void test093119() throws Throwable {
        Object[] objectArray0 = new Object[2];
        Object[] objectArray1 = new Object[0];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray1);
    }

    @Test(timeout = 4000)
    public void test094120() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = new long[1];
        boolean boolean0 = ArrayUtils.isSameLength(longArray1, longArray0);
    }

    @Test(timeout = 4000)
    public void test095121() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test096122() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isSameLength((long[]) null, longArray0);
    }

    @Test(timeout = 4000)
    public void test097123() throws Throwable {
        long[] longArray0 = new long[1];
        boolean boolean0 = ArrayUtils.isSameLength((long[]) null, longArray0);
    }

    @Test(timeout = 4000)
    public void test098124() throws Throwable {
        long[] longArray0 = new long[11];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test099125() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test100126() throws Throwable {
        long[] longArray0 = new long[1];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test101127() throws Throwable {
        int[] intArray0 = new int[2];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test102128() throws Throwable {
        int[] intArray0 = new int[0];
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, intArray0);
    }

    @Test(timeout = 4000)
    public void test103129() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test104130() throws Throwable {
        int[] intArray0 = new int[2];
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, intArray0);
    }

    @Test(timeout = 4000)
    public void test105131() throws Throwable {
        int[] intArray0 = new int[0];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test106132() throws Throwable {
        int[] intArray0 = new int[7];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test107133() throws Throwable {
        int[] intArray0 = new int[2];
        int[] intArray1 = new int[3];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray1);
    }

    @Test(timeout = 4000)
    public void test108134() throws Throwable {
        short[] shortArray0 = new short[3];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test109135() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((short[]) null, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test110136() throws Throwable {
        short[] shortArray0 = new short[0];
        boolean boolean0 = ArrayUtils.isSameLength((short[]) null, shortArray0);
    }

    @Test(timeout = 4000)
    public void test111137() throws Throwable {
        short[] shortArray0 = new short[6];
        boolean boolean0 = ArrayUtils.isSameLength((short[]) null, shortArray0);
    }

    @Test(timeout = 4000)
    public void test112138() throws Throwable {
        short[] shortArray0 = new short[0];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test113139() throws Throwable {
        short[] shortArray0 = new short[1];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test114140() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = new short[4];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray1);
    }

    @Test(timeout = 4000)
    public void test115141() throws Throwable {
        char[] charArray0 = new char[10];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test116142() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test117143() throws Throwable {
        char[] charArray0 = new char[1];
        boolean boolean0 = ArrayUtils.isSameLength((char[]) null, charArray0);
    }

    @Test(timeout = 4000)
    public void test118144() throws Throwable {
        char[] charArray0 = new char[0];
        boolean boolean0 = ArrayUtils.isSameLength((char[]) null, charArray0);
    }

    @Test(timeout = 4000)
    public void test119145() throws Throwable {
        char[] charArray0 = new char[6];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test120146() throws Throwable {
        char[] charArray0 = new char[0];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test121147() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = new char[7];
        boolean boolean0 = ArrayUtils.isSameLength(charArray1, charArray0);
    }

    @Test(timeout = 4000)
    public void test122148() throws Throwable {
        byte[] byteArray0 = new byte[8];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test123149() throws Throwable {
        byte[] byteArray0 = new byte[7];
        boolean boolean0 = ArrayUtils.isSameLength((byte[]) null, byteArray0);
    }

    @Test(timeout = 4000)
    public void test124150() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((byte[]) null, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test125151() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = ArrayUtils.isSameLength((byte[]) null, byteArray0);
    }

    @Test(timeout = 4000)
    public void test126152() throws Throwable {
        byte[] byteArray0 = new byte[7];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test127153() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test128154() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = new byte[4];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray1);
    }

    @Test(timeout = 4000)
    public void test129155() throws Throwable {
        double[] doubleArray0 = new double[2];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test130156() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((double[]) null, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test131157() throws Throwable {
        double[] doubleArray0 = new double[5];
        boolean boolean0 = ArrayUtils.isSameLength((double[]) null, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test132158() throws Throwable {
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.isSameLength((double[]) null, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test133159() throws Throwable {
        double[] doubleArray0 = new double[9];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test134160() throws Throwable {
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test135161() throws Throwable {
        double[] doubleArray0 = new double[2];
        double[] doubleArray1 = new double[6];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray1);
    }

    @Test(timeout = 4000)
    public void test136162() throws Throwable {
        float[] floatArray0 = new float[2];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test137163() throws Throwable {
        float[] floatArray0 = new float[0];
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    }

    @Test(timeout = 4000)
    public void test138164() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test139165() throws Throwable {
        float[] floatArray0 = new float[2];
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    }

    @Test(timeout = 4000)
    public void test140166() throws Throwable {
        float[] floatArray0 = new float[0];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test141167() throws Throwable {
        float[] floatArray0 = new float[2];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test142168() throws Throwable {
        float[] floatArray0 = new float[2];
        float[] floatArray1 = new float[3];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray1);
    }

    @Test(timeout = 4000)
    public void test143169() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test144170() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test145171() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test146172() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test147173() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test148174() throws Throwable {
        boolean[] booleanArray0 = new boolean[10];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test149175() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = new boolean[3];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test150176() throws Throwable {
        Object object0 = new Object();
        ArrayUtils.isSameType((Object) null, object0);
    }

    @Test(timeout = 4000)
    public void test151177() throws Throwable {
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.isSameType(object0, object0);
    }

    @Test(timeout = 4000)
    public void test152178() throws Throwable {
        ArrayUtils.isSameType("", (Object) null);
    }

    @Test(timeout = 4000)
    public void test153179() throws Throwable {
        Object[] objectArray0 = new Object[3];
        ArrayUtils.reverse(objectArray0);
    }

    @Test(timeout = 4000)
    public void test154180() throws Throwable {
        ArrayUtils.reverse((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test155181() throws Throwable {
        long[] longArray0 = new long[9];
        ArrayUtils.reverse(longArray0);
    }

    @Test(timeout = 4000)
    public void test156182() throws Throwable {
        ArrayUtils.reverse((long[]) null);
    }

    @Test(timeout = 4000)
    public void test157183() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
        ArrayUtils.reverse(intArray1);
    }

    @Test(timeout = 4000)
    public void test158185() throws Throwable {
        ArrayUtils.reverse((int[]) null);
    }

    @Test(timeout = 4000)
    public void test159186() throws Throwable {
        int[] intArray0 = new int[3];
        ArrayUtils.reverse(intArray0);
    }

    @Test(timeout = 4000)
    public void test160187() throws Throwable {
        short[] shortArray0 = new short[2];
        ArrayUtils.reverse(shortArray0);
    }

    @Test(timeout = 4000)
    public void test161188() throws Throwable {
        ArrayUtils.reverse((short[]) null);
    }

    @Test(timeout = 4000)
    public void test162189() throws Throwable {
        ArrayUtils.reverse((char[]) null);
    }

    @Test(timeout = 4000)
    public void test163190() throws Throwable {
        char[] charArray0 = new char[9];
        ArrayUtils.reverse(charArray0);
    }

    @Test(timeout = 4000)
    public void test164191() throws Throwable {
        ArrayUtils.reverse((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test165192() throws Throwable {
        byte[] byteArray0 = new byte[6];
        ArrayUtils.reverse(byteArray0);
    }

    @Test(timeout = 4000)
    public void test166193() throws Throwable {
        ArrayUtils.reverse((double[]) null);
    }

    @Test(timeout = 4000)
    public void test167194() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayUtils.reverse(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test168195() throws Throwable {
        float[] floatArray0 = new float[3];
        ArrayUtils.reverse(floatArray0);
    }

    @Test(timeout = 4000)
    public void test169196() throws Throwable {
        ArrayUtils.reverse((float[]) null);
    }

    @Test(timeout = 4000)
    public void test170197() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        ArrayUtils.reverse(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test171198() throws Throwable {
        ArrayUtils.reverse((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test172199() throws Throwable {
        Object object0 = new Object();
        int int0 = ArrayUtils.indexOf((Object[]) null, object0, 48);
    }

    @Test(timeout = 4000)
    public void test173200() throws Throwable {
        Object[] objectArray0 = new Object[1];
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], (-1));
    }

    @Test(timeout = 4000)
    public void test174201() throws Throwable {
        Object[] objectArray0 = new Object[1];
        Object object0 = new Object();
        objectArray0[0] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (-2173));
    }

    @Test(timeout = 4000)
    public void test175202() throws Throwable {
        int[] intArray0 = new int[7];
        double[] doubleArray0 = new double[1];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test175203() throws Throwable {
        int[] intArray0 = new int[7];
        double[] doubleArray0 = new double[1];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        int int0 = ArrayUtils.indexOf((Object[]) doubleArray1, (Object) intArray0[1], 512);
    }

    @Test(timeout = 4000)
    public void test176205() throws Throwable {
        Object[] objectArray0 = new Object[1];
        Object object0 = new Object();
        objectArray0[0] = object0;
        boolean boolean0 = ArrayUtils.contains(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test177206() throws Throwable {
        Object[] objectArray0 = new Object[0];
        int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 512);
    }

    @Test(timeout = 4000)
    public void test178207() throws Throwable {
        byte byte0 = (byte) (-84);
        Byte[] byteArray0 = new Byte[6];
        int int0 = ArrayUtils.lastIndexOf((Object[]) byteArray0, (Object) byte0, (int) (byte) (-84));
    }

    @Test(timeout = 4000)
    public void test179208() throws Throwable {
        Object[] objectArray0 = new Object[5];
        objectArray0[3] = (Object) 0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[3], 0);
    }

    @Test(timeout = 4000)
    public void test180209() throws Throwable {
        Object[] objectArray0 = new Object[6];
        objectArray0[2] = (Object) 0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[1], 2);
    }

    @Test(timeout = 4000)
    public void test181210() throws Throwable {
        Long[] longArray0 = new Long[2];
        Object object0 = new Object();
        int int0 = ArrayUtils.lastIndexOf((Object[]) longArray0, object0, 251);
    }

    @Test(timeout = 4000)
    public void test182211() throws Throwable {
        Object[] objectArray0 = new Object[5];
        objectArray0[3] = (Object) 0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[3], 1061);
    }

    @Test(timeout = 4000)
    public void test183212() throws Throwable {
        Float[] floatArray0 = new Float[1];
        Integer integer0 = new Integer((-5606));
        boolean boolean0 = ArrayUtils.contains((Object[]) floatArray0, (Object) integer0);
    }

    @Test(timeout = 4000)
    public void test184213() throws Throwable {
        int int0 = ArrayUtils.indexOf((long[]) null, 1325L);
    }

    @Test(timeout = 4000)
    public void test185214() throws Throwable {
        long[] longArray0 = new long[5];
        int int0 = ArrayUtils.indexOf(longArray0, (long) 2, (-1073741824));
    }

    @Test(timeout = 4000)
    public void test186215() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((long[]) null, (long) (byte) 2, 8);
    }

    @Test(timeout = 4000)
    public void test187216() throws Throwable {
        long[] longArray0 = new long[2];
        int int0 = ArrayUtils.lastIndexOf(longArray0, (long) (byte) 108, (int) (byte) (-50));
    }

    @Test(timeout = 4000)
    public void test188217() throws Throwable {
        long[] longArray0 = new long[5];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 856L, 2);
    }

    @Test(timeout = 4000)
    public void test189218() throws Throwable {
        Integer integer0 = new Integer((-1));
        long[] longArray0 = new long[2];
        longArray0[0] = (long) (int) integer0;
        int int0 = ArrayUtils.lastIndexOf(longArray0, (long) (-1));
    }

    @Test(timeout = 4000)
    public void test190219() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.contains(longArray0, (long) (-1));
    }

    @Test(timeout = 4000)
    public void test191220() throws Throwable {
        long[] longArray0 = new long[7];
        boolean boolean0 = ArrayUtils.contains(longArray0, 0L);
    }

    @Test(timeout = 4000)
    public void test192221() throws Throwable {
        int[] intArray0 = new int[6];
        int int0 = ArrayUtils.indexOf(intArray0, 96, (-2223));
    }

    @Test(timeout = 4000)
    public void test193222() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((int[]) null, (-1));
    }

    @Test(timeout = 4000)
    public void test194223() throws Throwable {
        int[] intArray0 = new int[6];
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-1115), (-1115));
    }

    @Test(timeout = 4000)
    public void test195224() throws Throwable {
        int[] intArray0 = new int[9];
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-1748), 2);
    }

    @Test(timeout = 4000)
    public void test196225() throws Throwable {
        int[] intArray0 = new int[2];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test197226() throws Throwable {
        int[] intArray0 = new int[2];
        boolean boolean0 = ArrayUtils.contains(intArray0, (-108));
    }

    @Test(timeout = 4000)
    public void test198227() throws Throwable {
        int[] intArray0 = new int[6];
        boolean boolean0 = ArrayUtils.contains(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test199228() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((short[]) null, (short) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test200229() throws Throwable {
        short[] shortArray0 = new short[1];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 1535, (-1147));
    }

    @Test(timeout = 4000)
    public void test201230() throws Throwable {
        Short[] shortArray0 = new Short[0];
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray2 = ArrayUtils.addAll(shortArray1, shortArray1);
    }

    @Test(timeout = 4000)
    public void test201231() throws Throwable {
        Short[] shortArray0 = new Short[0];
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
        short[] shortArray2 = ArrayUtils.addAll(shortArray1, shortArray1);
        int int0 = ArrayUtils.lastIndexOf(shortArray2, (short) (-25691), 0);
    }

    @Test(timeout = 4000)
    public void test202233() throws Throwable {
        short[] shortArray0 = new short[0];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-1), (-2353));
    }

    @Test(timeout = 4000)
    public void test203234() throws Throwable {
        short[] shortArray0 = new short[2];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 57, (int) (short) 0);
    }

    @Test(timeout = 4000)
    public void test204235() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[3] = (short) (-1);
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-1), 5);
    }

    @Test(timeout = 4000)
    public void test205236() throws Throwable {
        short[] shortArray0 = new short[4];
        boolean boolean0 = ArrayUtils.contains(shortArray0, (short) 0);
    }

    @Test(timeout = 4000)
    public void test206237() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = '5';
        int int0 = ArrayUtils.indexOf(charArray0, '5', (-3165));
    }

    @Test(timeout = 4000)
    public void test207238() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((char[]) null, '!');
    }

    @Test(timeout = 4000)
    public void test208239() throws Throwable {
        char[] charArray0 = new char[2];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'b', (-178));
    }

    @Test(timeout = 4000)
    public void test209240() throws Throwable {
        char[] charArray0 = new char[2];
        int int0 = ArrayUtils.lastIndexOf(charArray0, '-', 0);
    }

    @Test(timeout = 4000)
    public void test210241() throws Throwable {
        char[] charArray0 = new char[2];
        charArray0[1] = 'h';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'h', 2050);
    }

    @Test(timeout = 4000)
    public void test211242() throws Throwable {
        char[] charArray0 = new char[1];
        boolean boolean0 = ArrayUtils.contains(charArray0, '\u0000');
    }

    @Test(timeout = 4000)
    public void test212243() throws Throwable {
        byte[] byteArray0 = ArrayUtils.removeElement((byte[]) null, (byte) 65);
    }

    @Test(timeout = 4000)
    public void test213244() throws Throwable {
        byte[] byteArray0 = new byte[0];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-3), (int) (byte) (-3));
    }

    @Test(timeout = 4000)
    public void test214245() throws Throwable {
        byte[] byteArray0 = new byte[7];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 118, (int) (byte) 2);
    }

    @Test(timeout = 4000)
    public void test215246() throws Throwable {
        byte[] byteArray0 = new byte[8];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-1), (int) (byte) (-74));
    }

    @Test(timeout = 4000)
    public void test216247() throws Throwable {
        byte[] byteArray0 = new byte[17];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test217248() throws Throwable {
        byte[] byteArray0 = new byte[1];
        boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test218249() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) (-1), (int) (byte) (-111));
    }

    @Test(timeout = 4000)
    public void test219250() throws Throwable {
        double[] doubleArray0 = new double[2];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-2583.59702), (-1), (-16.0));
    }

    @Test(timeout = 4000)
    public void test220251() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) 7, (-1), (double) (byte) 7);
    }

    @Test(timeout = 4000)
    public void test221252() throws Throwable {
        double[] doubleArray0 = new double[0];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1218.4);
    }

    @Test(timeout = 4000)
    public void test222253() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, (-350));
    }

    @Test(timeout = 4000)
    public void test223254() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test224255() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = (double) (-1);
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (-1));
    }

    @Test(timeout = 4000)
    public void test225256() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1172.125633764), (-971.655213));
    }

    @Test(timeout = 4000)
    public void test226257() throws Throwable {
        Integer[] integerArray0 = new Integer[8];
        Integer integer0 = new Integer((short) (-1));
        integerArray0[2] = integer0;
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) integerArray0[2], (-2146297847), (double) (short) (-1));
    }

    @Test(timeout = 4000)
    public void test227258() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0, 0.0);
    }

    @Test(timeout = 4000)
    public void test228259() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) (byte) 54, (int) (byte) 62, 0.0);
    }

    @Test(timeout = 4000)
    public void test229260() throws Throwable {
        double[] doubleArray0 = new double[8];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 0.0);
    }

    @Test(timeout = 4000)
    public void test230261() throws Throwable {
        short[] shortArray0 = new short[6];
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) shortArray0[0], 1517.0);
    }

    @Test(timeout = 4000)
    public void test231262() throws Throwable {
        double[] doubleArray0 = new double[1];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 0.0, 1.5);
    }

    @Test(timeout = 4000)
    public void test232263() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, (-2715));
    }

    @Test(timeout = 4000)
    public void test233264() throws Throwable {
        float[] floatArray0 = new float[0];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) (-2252));
    }

    @Test(timeout = 4000)
    public void test234265() throws Throwable {
        float[] floatArray0 = new float[6];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 0, (-2286));
    }

    @Test(timeout = 4000)
    public void test235266() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 1324L, 0);
    }

    @Test(timeout = 4000)
    public void test236267() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[0] = (float) 1;
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 1);
    }

    @Test(timeout = 4000)
    public void test237268() throws Throwable {
        float[] floatArray0 = new float[5];
        boolean boolean0 = ArrayUtils.contains(floatArray0, 8.302208F);
    }

    @Test(timeout = 4000)
    public void test238269() throws Throwable {
        float[] floatArray0 = new float[7];
        floatArray0[1] = (float) (-1);
        boolean boolean0 = ArrayUtils.contains(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test239270() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test240271() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (-2703));
    }

    @Test(timeout = 4000)
    public void test241272() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, (int) (byte) (-111));
    }

    @Test(timeout = 4000)
    public void test242273() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    }

    @Test(timeout = 4000)
    public void test243274() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2137);
    }

    @Test(timeout = 4000)
    public void test244275() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test245276() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test246277() throws Throwable {
        char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null);
    }

    @Test(timeout = 4000)
    public void test247278() throws Throwable {
        Character character0 = Character.valueOf('N');
        Character[] characterArray0 = new Character[6];
        characterArray0[0] = character0;
        characterArray0[1] = character0;
        characterArray0[2] = character0;
        characterArray0[3] = character0;
        characterArray0[4] = character0;
        characterArray0[5] = character0;
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test248279() throws Throwable {
        char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null, 'b');
    }

    @Test(timeout = 4000)
    public void test249280() throws Throwable {
        Character character0 = Character.valueOf('o');
        Character[] characterArray0 = new Character[1];
        characterArray0[0] = character0;
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, 'o');
    }

    @Test(timeout = 4000)
    public void test250281() throws Throwable {
        char[] charArray0 = new char[0];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    }

    @Test(timeout = 4000)
    public void test251282() throws Throwable {
        Character[] characterArray0 = ArrayUtils.toObject((char[]) null);
    }

    @Test(timeout = 4000)
    public void test252283() throws Throwable {
        char[] charArray0 = new char[5];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    }

    @Test(timeout = 4000)
    public void test253284() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test254285() throws Throwable {
        long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null);
    }

    @Test(timeout = 4000)
    public void test255286() throws Throwable {
        Long long0 = new Long(2049L);
        Long[] longArray0 = new Long[4];
        longArray0[0] = long0;
        longArray0[1] = long0;
        longArray0[2] = long0;
        longArray0[3] = long0;
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test256287() throws Throwable {
        long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null, 194L);
    }

    @Test(timeout = 4000)
    public void test257288() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (-2022L));
    }

    @Test(timeout = 4000)
    public void test258289() throws Throwable {
        Long[] longArray0 = new Long[2];
        Long long0 = new Long((-2248L));
        longArray0[1] = long0;
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, (-2248L));
    }

    @Test(timeout = 4000)
    public void test259290() throws Throwable {
        long[] longArray0 = new long[1];
        Long[] longArray1 = ArrayUtils.toObject(longArray0);
    }

    @Test(timeout = 4000)
    public void test260292() throws Throwable {
        Long[] longArray0 = ArrayUtils.toObject((long[]) null);
    }

    @Test(timeout = 4000)
    public void test261293() throws Throwable {
        long[] longArray0 = new long[0];
        Long[] longArray1 = ArrayUtils.toObject(longArray0);
    }

    @Test(timeout = 4000)
    public void test262294() throws Throwable {
        int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null);
    }

    @Test(timeout = 4000)
    public void test263295() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test264296() throws Throwable {
        Integer[] integerArray0 = new Integer[1];
        integerArray0[0] = (Integer) (-12);
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test265297() throws Throwable {
        int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null, 1);
    }

    @Test(timeout = 4000)
    public void test266298() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, 3875);
    }

    @Test(timeout = 4000)
    public void test267299() throws Throwable {
        Integer integer0 = new Integer((byte) 1);
        Integer[] integerArray0 = new Integer[3];
        integerArray0[0] = integer0;
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (int) (byte) 1);
    }

    @Test(timeout = 4000)
    public void test268300() throws Throwable {
        int[] intArray0 = new int[0];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    }

    @Test(timeout = 4000)
    public void test269301() throws Throwable {
        Integer[] integerArray0 = ArrayUtils.toObject((int[]) null);
    }

    @Test(timeout = 4000)
    public void test270302() throws Throwable {
        int[] intArray0 = new int[3];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
        Integer[] integerArray1 = ArrayUtils.addAll(integerArray0, integerArray0);
    }

    @Test(timeout = 4000)
    public void test271303() throws Throwable {
        short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null);
    }

    @Test(timeout = 4000)
    public void test272304() throws Throwable {
        Short short0 = new Short((short) 1556);
        Short[] shortArray0 = new Short[1];
        shortArray0[0] = short0;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test273305() throws Throwable {
        short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null, (short) 1280);
    }

    @Test(timeout = 4000)
    public void test274306() throws Throwable {
        Short[] shortArray0 = ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short) (-1224));
    }

    @Test(timeout = 4000)
    public void test275307() throws Throwable {
        Short[] shortArray0 = new Short[8];
        Short short0 = new Short((short) (-2040));
        shortArray0[0] = short0;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0, (short) (-2040));
    }

    @Test(timeout = 4000)
    public void test276308() throws Throwable {
        short[] shortArray0 = new short[1];
        Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    }

    @Test(timeout = 4000)
    public void test277310() throws Throwable {
        Short[] shortArray0 = ArrayUtils.toObject((short[]) null);
    }

    @Test(timeout = 4000)
    public void test278311() throws Throwable {
        short[] shortArray0 = new short[0];
        Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    }

    @Test(timeout = 4000)
    public void test279312() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null);
    }

    @Test(timeout = 4000)
    public void test280313() throws Throwable {
        Byte[] byteArray0 = new Byte[0];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test281314() throws Throwable {
        Byte[] byteArray0 = new Byte[6];
        byteArray0[0] = (Byte) (byte) (-84);
        byteArray0[1] = (Byte) (byte) (-84);
        byteArray0[2] = (Byte) (byte) (-84);
        byteArray0[3] = (Byte) (byte) (-84);
        byteArray0[4] = (Byte) (byte) (-84);
        byteArray0[5] = (Byte) (byte) (-84);
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test282315() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 0);
        byte[] byteArray2 = ArrayUtils.addAll(byteArray1, byteArray1);
    }

    @Test(timeout = 4000)
    public void test283317() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test284318() throws Throwable {
        Byte[] byteArray0 = new Byte[0];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) (-124));
    }

    @Test(timeout = 4000)
    public void test285319() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        Byte byte0 = new Byte((byte) 0);
        byteArray0[0] = byte0;
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test286320() throws Throwable {
        byte[] byteArray0 = new byte[1];
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    }

    @Test(timeout = 4000)
    public void test287322() throws Throwable {
        Byte[] byteArray0 = ArrayUtils.toObject((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test288323() throws Throwable {
        byte[] byteArray0 = new byte[0];
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    }

    @Test(timeout = 4000)
    public void test289324() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null);
    }

    @Test(timeout = 4000)
    public void test290325() throws Throwable {
        Double[] doubleArray0 = new Double[0];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test291326() throws Throwable {
        Double[] doubleArray0 = new Double[8];
        Double double0 = new Double(1.5);
        doubleArray0[0] = double0;
        doubleArray0[1] = doubleArray0[0];
        doubleArray0[2] = doubleArray0[1];
        doubleArray0[3] = doubleArray0[1];
        doubleArray0[4] = doubleArray0[0];
        doubleArray0[5] = double0;
        doubleArray0[6] = doubleArray0[2];
        doubleArray0[7] = doubleArray0[1];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test292327() throws Throwable {
        Double[] doubleArray0 = new Double[0];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, 62.0);
    }

    @Test(timeout = 4000)
    public void test293328() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null, (-12.0));
    }

    @Test(timeout = 4000)
    public void test294329() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (-1542.7929559021));
    }

    @Test(timeout = 4000)
    public void test295330() throws Throwable {
        Double[] doubleArray0 = new Double[1];
        Double double0 = new Double((-1524.024));
        doubleArray0[0] = double0;
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (-1542.7929559021));
    }

    @Test(timeout = 4000)
    public void test296331() throws Throwable {
        Double[] doubleArray0 = ArrayUtils.toObject((double[]) null);
    }

    @Test(timeout = 4000)
    public void test297332() throws Throwable {
        double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test298333() throws Throwable {
        float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null);
    }

    @Test(timeout = 4000)
    public void test299334() throws Throwable {
        Float[] floatArray0 = new Float[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test300335() throws Throwable {
        Float[] floatArray0 = new Float[4];
        Float float0 = new Float((double) (-2252));
        floatArray0[0] = float0;
        floatArray0[1] = floatArray0[0];
        floatArray0[2] = floatArray0[0];
        floatArray0[3] = floatArray0[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test301336() throws Throwable {
        Float[] floatArray0 = new Float[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (float) (-1505));
    }

    @Test(timeout = 4000)
    public void test302337() throws Throwable {
        float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null, (-11.0F));
    }

    @Test(timeout = 4000)
    public void test303338() throws Throwable {
        Float float0 = new Float((double) 407);
        Float[] floatArray0 = new Float[4];
        floatArray0[3] = float0;
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (float) floatArray0[3]);
    }

    @Test(timeout = 4000)
    public void test304339() throws Throwable {
        float[] floatArray0 = new float[0];
        Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    }

    @Test(timeout = 4000)
    public void test305340() throws Throwable {
        Float[] floatArray0 = ArrayUtils.toObject((float[]) null);
    }

    @Test(timeout = 4000)
    public void test306341() throws Throwable {
        float[] floatArray0 = new float[4];
        Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    }

    @Test(timeout = 4000)
    public void test307342() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test308343() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test309344() throws Throwable {
        Boolean boolean0 = Boolean.FALSE;
        Boolean[] booleanArray0 = new Boolean[5];
        booleanArray0[0] = boolean0;
        booleanArray0[1] = boolean0;
        booleanArray0[2] = boolean0;
        booleanArray0[3] = boolean0;
        booleanArray0[4] = boolean0;
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test310345() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test311346() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, true);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test312347() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[2];
        Boolean boolean0 = Boolean.valueOf("XF`R`Hc(Ur");
        booleanArray0[0] = boolean0;
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, true);
        Arrays.equals(new boolean[] { false, true }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test313348() throws Throwable {
        Boolean[] booleanArray0 = ArrayUtils.toObject((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test314349() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test315350() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        booleanArray0[0] = true;
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test316351() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test317352() throws Throwable {
        String[] stringArray0 = new String[0];
        boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    }

    @Test(timeout = 4000)
    public void test318353() throws Throwable {
        AbstractMap.SimpleImmutableEntry<String, String>[] abstractMap_SimpleImmutableEntryArray0 = (AbstractMap.SimpleImmutableEntry<String, String>[]) Array.newInstance(AbstractMap.SimpleImmutableEntry.class, 1);
        boolean boolean0 = ArrayUtils.isEmpty(abstractMap_SimpleImmutableEntryArray0);
    }

    @Test(timeout = 4000)
    public void test319354() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((long[]) null);
    }

    @Test(timeout = 4000)
    public void test320355() throws Throwable {
        long[] longArray0 = new long[7];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test321356() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test322357() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((int[]) null);
    }

    @Test(timeout = 4000)
    public void test323358() throws Throwable {
        int[] intArray0 = ArrayUtils.EMPTY_INT_ARRAY;
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test324359() throws Throwable {
        int[] intArray0 = new int[6];
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test325360() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((short[]) null);
    }

    @Test(timeout = 4000)
    public void test326361() throws Throwable {
        short[] shortArray0 = new short[0];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test327362() throws Throwable {
        short[] shortArray0 = new short[8];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test328363() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((char[]) null);
    }

    @Test(timeout = 4000)
    public void test329364() throws Throwable {
        char[] charArray0 = new char[4];
        boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    }

    @Test(timeout = 4000)
    public void test330365() throws Throwable {
        char[] charArray0 = new char[0];
        boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    }

    @Test(timeout = 4000)
    public void test331366() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test332367() throws Throwable {
        byte[] byteArray0 = new byte[2];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test333368() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test334369() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((float[]) null, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test335370() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2592);
    }

    @Test(timeout = 4000)
    public void test336371() throws Throwable {
        int[] intArray0 = new int[6];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
        Integer[] integerArray1 = ArrayUtils.addAll(integerArray0, (Integer[]) null);
    }

    @Test(timeout = 4000)
    public void test337373() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test338374() throws Throwable {
        char[] charArray0 = new char[1];
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test339375() throws Throwable {
        short[] shortArray0 = new short[5];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test340377() throws Throwable {
        int[] intArray0 = new int[3];
        int[] intArray1 = ArrayUtils.addAll(intArray0, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test341379() throws Throwable {
        long[] longArray0 = new long[1];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test342380() throws Throwable {
        float[] floatArray0 = new float[1];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test343382() throws Throwable {
        float[] floatArray0 = new float[4];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test344383() throws Throwable {
        double[] doubleArray0 = new double[1];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test345384() throws Throwable {
        Object[] objectArray0 = ArrayUtils.add((Object[]) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test346386() throws Throwable {
        Object object0 = new Object();
        Object[] objectArray0 = new Object[6];
        Object[] objectArray1 = ArrayUtils.add(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test347387() throws Throwable {
        Integer[] integerArray0 = ArrayUtils.add((Integer[]) null, (Integer) (-646));
    }

    @Test(timeout = 4000)
    public void test348388() throws Throwable {
        Object[] objectArray0 = ArrayUtils.add((Object[]) null, (-1), (Object) null);
    }

    @Test(timeout = 4000)
    public void test349389() throws Throwable {
        String[] stringArray0 = new String[0];
        ArrayUtils.add(stringArray0, (-2252), "Pl?ghmzv*fK");
    }

    @Test(timeout = 4000)
    public void test350390() throws Throwable {
        Object object0 = new Object();
        ArrayUtils.add((Object[]) null, 512, object0);
    }

    @Test(timeout = 4000)
    public void test351391() throws Throwable {
        String[] stringArray0 = ArrayUtils.add((String[]) null, 0, "java.lang.Float");
    }

    @Test(timeout = 4000)
    public void test352392() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.removeElement((boolean[]) null, false);
    }

    @Test(timeout = 4000)
    public void test353393() throws Throwable {
        char[] charArray0 = new char[8];
        charArray0[1] = '>';
        char[] charArray1 = ArrayUtils.removeElement(charArray0, '>');
    }

    @Test(timeout = 4000)
    public void test354395() throws Throwable {
        char[] charArray0 = new char[5];
        char[] charArray1 = ArrayUtils.removeElement(charArray0, 'y');
    }

    @Test(timeout = 4000)
    public void test355396() throws Throwable {
        double[] doubleArray0 = ArrayUtils.removeElement((double[]) null, 1.0);
    }

    @Test(timeout = 4000)
    public void test356397() throws Throwable {
        long[] longArray0 = new long[7];
        long[] longArray1 = ArrayUtils.removeElement(longArray0, 2290L);
    }

    @Test(timeout = 4000)
    public void test357398() throws Throwable {
        ArrayUtils.remove((char[]) null, (-13));
    }

    @Test(timeout = 4000)
    public void test358399() throws Throwable {
        short[] shortArray0 = new short[2];
        shortArray0[1] = (short) 23;
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 23);
    }
}
