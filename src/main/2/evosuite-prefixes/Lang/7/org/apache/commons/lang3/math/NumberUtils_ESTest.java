/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:40:46 GMT 2024
 */
package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        float float0 = NumberUtils.max((-1908.364F), 0.0F, (-1908.364F));
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = NumberUtils.min(0.0F, 0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = NumberUtils.toDouble((String) null);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        double double0 = NumberUtils.min((double) (short) 0, (-2066.7685804175953), (-1.0));
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long long0 = NumberUtils.toLong((String) null, (long) numberUtils0.SHORT_ONE);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        byte byte0 = NumberUtils.toByte("|ApV524AP");
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        double double0 = NumberUtils.max((double) 0L, (double) 0L, (double) 0);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        long long0 = NumberUtils.toLong("Nq@+@<E{eZ\" A#&`0'");
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        int int0 = NumberUtils.toInt("");
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        float float0 = NumberUtils.toFloat("");
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        short short0 = NumberUtils.toShort("org.apache.commons.lang3.math.NumberUtils");
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        int int0 = NumberUtils.toInt((String) null);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        float float0 = NumberUtils.toFloat((String) null, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        double double0 = NumberUtils.toDouble("|=cMEo\n`&r_a/aeEs`", (double) 0);
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        byte byte0 = NumberUtils.toByte((String) null, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        short short0 = NumberUtils.toShort((String) null);
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        Number number0 = NumberUtils.createNumber("-4l");
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        Number number0 = NumberUtils.createNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        NumberUtils.createNumber("");
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        Number number0 = NumberUtils.createNumber("--gejQM=?2I");
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        NumberUtils.createNumber("0x");
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        NumberUtils.createNumber("-0xn");
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        NumberUtils.createNumber("0XOV{8Rx'de");
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        NumberUtils.createNumber("-0X");
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.");
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        NumberUtils.createNumber("?$fLVNe!$EK<.bm");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        NumberUtils.createNumber(" is nt a vlid nmber.");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        NumberUtils.createNumber("org.apache.commons.lang3.math.NumberUtils");
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        Number number0 = NumberUtils.createNumber("0E8");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        NumberUtils.createNumber("}'eM)vE18");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        NumberUtils.createNumber("0E");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        NumberUtils.createNumber("0EO");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        Number number0 = NumberUtils.createNumber("48D");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        NumberUtils.createNumber("' ?HF");
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        NumberUtils.createNumber("1ytQH*.4V\"uL");
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        NumberUtils.createNumber("H-!\"gIdRdbDN+f!*8Hd");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        Number number0 = NumberUtils.createNumber("8f");
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        NumberUtils.createNumber("The Array must not be null");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        Number number0 = NumberUtils.createNumber("2l");
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        NumberUtils.createNumber("-~l");
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        Number number0 = NumberUtils.createNumber("0f");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        Number number0 = NumberUtils.createNumber(".0");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        Number number0 = NumberUtils.createNumber(".3");
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        Float float0 = NumberUtils.createFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        Double double0 = NumberUtils.createDouble((String) null);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        Integer integer0 = NumberUtils.createInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        Long long0 = NumberUtils.createLong((String) null);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        NumberUtils.createNumber("f");
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        NumberUtils.min((long[]) null);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long[] longArray0 = new long[3];
        longArray0[0] = (long) numberUtils0.LONG_ONE;
        long long0 = NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        NumberUtils.min((int[]) null);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        int[] intArray0 = new int[7];
        intArray0[1] = (int) (byte) numberUtils0.BYTE_MINUS_ONE;
        int int0 = NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        NumberUtils.min((short[]) null);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short[] shortArray0 = new short[5];
        shortArray0[2] = (short) numberUtils0.SHORT_MINUS_ONE;
        short short0 = NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        NumberUtils.min((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[1] = (byte) (-1);
        byte byte0 = NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        NumberUtils.min((double[]) null);
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[3] = Double.NaN;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 3682.9010587;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        NumberUtils.min((float[]) null);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        float[] floatArray0 = new float[6];
        floatArray0[2] = Float.NaN;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float[] floatArray0 = new float[2];
        floatArray0[1] = (float) (int) numberUtils0.INTEGER_MINUS_ONE;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        NumberUtils.max((long[]) null);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long[] longArray0 = new long[3];
        longArray0[0] = (long) (int) numberUtils0.INTEGER_MINUS_ONE;
        long long0 = NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        NumberUtils.max((int[]) null);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        int[] intArray0 = new int[4];
        intArray0[0] = (int) (short) numberUtils0.SHORT_MINUS_ONE;
        int int0 = NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        NumberUtils.max((short[]) null);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        short[] shortArray0 = new short[4];
        shortArray0[2] = (short) 6174;
        short short0 = NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        NumberUtils.max((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[0] = (byte) (-40);
        byte byte0 = NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        NumberUtils.max((double[]) null);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        double[] doubleArray0 = new double[7];
        doubleArray0[2] = Double.NaN;
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = (double) (-741);
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        NumberUtils.max((float[]) null);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        float[] floatArray0 = new float[6];
        floatArray0[5] = Float.NaN;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        float[] floatArray0 = new float[5];
        floatArray0[0] = (float) (short) numberUtils0.SHORT_MINUS_ONE;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        long long0 = NumberUtils.min(1L, (-1L), (long) (byte) 102);
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        long long0 = NumberUtils.min((-1L), 0L, (-2201L));
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        int int0 = NumberUtils.min(118, 118, 101);
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        int int0 = NumberUtils.min(100, 5, 5);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        short short0 = NumberUtils.min((short) numberUtils0.BYTE_ZERO, (short) numberUtils0.BYTE_MINUS_ONE, (short) 70);
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        short short0 = NumberUtils.min((short) (-172), (short) (-172), (short) (-3070));
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        byte byte0 = NumberUtils.min((byte) (-43), (byte) 7, (byte) (-48));
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        byte byte0 = NumberUtils.min((byte) 1, (byte) 0, (byte) 1);
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        long long0 = NumberUtils.max((-67L), (-1L), (-1L));
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        long long0 = NumberUtils.max(1L, (long) numberUtils0.SHORT_ZERO, 1218L);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        int int0 = NumberUtils.max((-504), (-504), 0);
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        int int0 = NumberUtils.max((int) (byte) 108, 1924, 0);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        Byte byte0 = NumberUtils.BYTE_MINUS_ONE;
        short short0 = NumberUtils.max((short) 3, (short) 101, (short) byte0);
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        short short0 = NumberUtils.max((short) 0, (short) 0, (short) 995);
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        byte byte0 = NumberUtils.max((byte) 41, (byte) 57, (byte) 57);
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        byte byte0 = NumberUtils.max((byte) (-51), (byte) (-51), (byte) 4);
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        boolean boolean0 = NumberUtils.isDigits("");
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0E.p");
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("");
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-");
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-4l");
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x(]hg+>p3m#");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x");
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0x0f");
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0x1utH*}4V\"uL");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0xEvX5Te.P^");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("4el");
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("...");
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("9E+P+3G`s]N5Bfa");
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0EEO");
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("e&9fsSCn");
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("--0X");
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0e.");
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0");
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0e");
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0E");
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("..");
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber(".");
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("d");
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("D");
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0f");
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("F");
    }

    @Test(timeout = 4000)
    public void test132132() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("L");
    }

    @Test(timeout = 4000)
    public void test133133() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0EO");
    }
}
