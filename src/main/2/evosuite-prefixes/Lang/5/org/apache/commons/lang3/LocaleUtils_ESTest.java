/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:35:06 GMT 2024
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.apache.commons.lang3.LocaleUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class LocaleUtils_ESTest extends LocaleUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        LocaleUtils localeUtils0 = new LocaleUtils();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        List<Locale> list0 = LocaleUtils.localeLookupList(locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Set<Locale> set0 = LocaleUtils.availableLocaleSet();
        set0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        boolean boolean0 = LocaleUtils.isAvailableLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        LocaleUtils.SyncAvoid localeUtils_SyncAvoid0 = new LocaleUtils.SyncAvoid();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        LocaleUtils.toLocale("sg_GOY!");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale((String) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        LocaleUtils.toLocale("");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        LocaleUtils.toLocale("Invalid locale format: ");
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        LocaleUtils.toLocale("dArTx>");
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale("uk");
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        LocaleUtils.toLocale("sg_");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        LocaleUtils.toLocale("org.apache.commons.lang3.LocaleUtils");
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale("so__'RtV");
        locale0.getLanguage();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        LocaleUtils.toLocale("sg_xOY!");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        LocaleUtils.toLocale("sg_G*!");
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Locale locale0 = LocaleUtils.toLocale("sg_AY");
        locale0.toString();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        LocaleUtils.toLocale("sg_GY!");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        List<Locale> list0 = LocaleUtils.localeLookupList((Locale) null, (Locale) null);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Locale locale0 = new Locale("qa`nj@1\")3QPdA'J", "qa`nj@1\")3QPdA'J", "qa`nj@1\")3QPdA'J");
        List<Locale> list0 = LocaleUtils.localeLookupList(locale0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        List<Locale> list0 = LocaleUtils.localeLookupList(locale0, (Locale) null);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        boolean boolean0 = LocaleUtils.isAvailableLocale((Locale) null);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        List<Locale> list0 = LocaleUtils.languagesByCountry("TH");
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        List<Locale> list0 = LocaleUtils.languagesByCountry((String) null);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        List<Locale> list0 = LocaleUtils.countriesByLanguage("no");
        list0.size();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        List<Locale> list0 = LocaleUtils.countriesByLanguage((String) null);
        list0.isEmpty();
    }
}
