/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 13:21:54 GMT 2024
 */
package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        float float0 = NumberUtils.max((-1223.6655F), (-1437.629F), 1184.97F);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        float float0 = NumberUtils.min(0.0F, 0.0F, 0.0F);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double double0 = NumberUtils.toDouble("");
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        double double0 = NumberUtils.min(0.0, 0.0, (double) (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        NumberUtils numberUtils0 = new NumberUtils();
        byte byte0 = NumberUtils.max((byte) numberUtils0.BYTE_ZERO, (byte) 54, (byte) 1);
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        byte byte0 = NumberUtils.toByte((String) null);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        double double0 = NumberUtils.max((double) 0L, (double) 0L, (double) 0);
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        long long0 = NumberUtils.toLong("Nq@+@<E{eZ\" A#&`0'");
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        int int0 = NumberUtils.toInt("");
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        float float0 = NumberUtils.toFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        short short0 = NumberUtils.toShort((String) null);
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        int int0 = NumberUtils.toInt((String) null);
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        long long0 = NumberUtils.toLong((String) null, 0L);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        float float0 = NumberUtils.toFloat("|Ap524AP", (float) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        double double0 = NumberUtils.toDouble((String) null, 1.0);
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        byte byte0 = NumberUtils.toByte("|ApV524AP");
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        short short0 = NumberUtils.toShort("/GC`", (short) 76);
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.f");
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        Number number0 = NumberUtils.createNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        NumberUtils.createNumber("");
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        Number number0 = NumberUtils.createNumber("---]D");
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        Number number0 = NumberUtils.createNumber("0xc");
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        NumberUtils.createNumber("-0xQ_NF");
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        Number number0 = NumberUtils.createNumber("-0l");
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        NumberUtils.createNumber("0.2E<0");
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        NumberUtils.createNumber("Array cannot be empty.");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        NumberUtils.createNumber("E2e6");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        Number number0 = NumberUtils.createNumber("+0.");
        number0.shortValue();
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        NumberUtils.createNumber("0EUZB:u$\"]PXy*lF");
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        NumberUtils.createNumber("0e");
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        Number number0 = NumberUtils.createNumber("88D");
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        NumberUtils.createNumber("-;?hrA-gx[db3hWL");
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.d");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        NumberUtils.createNumber("/$tB~($.J2PL#.'l");
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        NumberUtils.createNumber("Strings must not be null");
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        Number number0 = NumberUtils.createNumber("2l");
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        Number number0 = NumberUtils.createNumber("4f");
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        Number number0 = NumberUtils.createNumber("0f");
        number0.byteValue();
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        Number number0 = NumberUtils.createNumber("2e655");
        number0.shortValue();
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        Number number0 = NumberUtils.createNumber("0.");
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        Number number0 = NumberUtils.createNumber(".3");
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        Number number0 = NumberUtils.createNumber("2e65");
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        Float float0 = NumberUtils.createFloat((String) null);
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        Double double0 = NumberUtils.createDouble((String) null);
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        Integer integer0 = NumberUtils.createInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        Long long0 = NumberUtils.createLong((String) null);
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        NumberUtils.createNumber("D");
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        NumberUtils.min((long[]) null);
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        long[] longArray0 = new long[20];
        longArray0[0] = 1505L;
        long long0 = NumberUtils.min(longArray0);
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        NumberUtils.min((int[]) null);
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        int[] intArray0 = new int[6];
        intArray0[0] = (int) (short) 57;
        int int0 = NumberUtils.min(intArray0);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        NumberUtils.min((short[]) null);
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        short[] shortArray0 = new short[3];
        shortArray0[2] = (short) (-3792);
        short short0 = NumberUtils.min(shortArray0);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        NumberUtils.min((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[1] = (byte) (-29);
        byte byte0 = NumberUtils.min(byteArray0);
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        NumberUtils.min((double[]) null);
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[1] = (double) Float.NaN;
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[2] = (-2773.773883);
        double double0 = NumberUtils.min(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        NumberUtils.min((float[]) null);
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        float[] floatArray0 = new float[8];
        floatArray0[6] = Float.NaN;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        float[] floatArray0 = new float[5];
        floatArray0[0] = 8.0F;
        float float0 = NumberUtils.min(floatArray0);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        NumberUtils.max((long[]) null);
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        long[] longArray0 = new long[0];
        NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        long[] longArray0 = new long[19];
        longArray0[5] = 1163L;
        long long0 = NumberUtils.max(longArray0);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        NumberUtils.max((int[]) null);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        int[] intArray0 = new int[0];
        NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        int[] intArray0 = new int[5];
        intArray0[1] = 108;
        int int0 = NumberUtils.max(intArray0);
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        short[] shortArray0 = new short[0];
        NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        NumberUtils.max((short[]) null);
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[3] = (short) 46;
        short short0 = NumberUtils.max(shortArray0);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        NumberUtils.max((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        byte[] byteArray0 = new byte[0];
        NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byte byte0 = NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-126);
        byte byte0 = NumberUtils.max(byteArray0);
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        NumberUtils.max((double[]) null);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        double[] doubleArray0 = new double[0];
        NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = Double.NaN;
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = (double) (-741);
        double double0 = NumberUtils.max(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        NumberUtils.max((float[]) null);
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        float[] floatArray0 = new float[0];
        NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        float[] floatArray0 = new float[9];
        floatArray0[6] = Float.NaN;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        float[] floatArray0 = new float[5];
        floatArray0[1] = 738.52F;
        float float0 = NumberUtils.max(floatArray0);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        long long0 = NumberUtils.min((long) (short) 7, (long) (short) 7, (-67L));
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        long long0 = NumberUtils.min((long) (short) 7, 0L, (long) (short) 7);
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        int int0 = NumberUtils.min(1869, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        int int0 = NumberUtils.min(8192, 8192, 100);
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        short short0 = NumberUtils.min((short) (byte) 89, (short) (byte) 5, (short) (byte) 5);
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        short short0 = NumberUtils.min((short) (byte) 89, (short) 21213, (short) (byte) 5);
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        byte byte0 = NumberUtils.min((byte) 57, (byte) (-1), (byte) 117);
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        byte byte0 = NumberUtils.min((byte) (-43), (byte) (-43), (byte) (-48));
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        long long0 = NumberUtils.max((long) (byte) (-20), (-3843L), (long) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        long long0 = NumberUtils.max((long) (byte) (-20), (long) (byte) 0, (long) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        int int0 = NumberUtils.max((-2551), (-741), (-2551));
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        int int0 = NumberUtils.max((-504), (-504), 0);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        short short0 = NumberUtils.max((short) (-16), (short) 6, (short) 6);
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        short short0 = NumberUtils.max((short) (-16), (short) (-16), (short) 102);
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        byte byte0 = NumberUtils.max((byte) (-20), (byte) (-20), (byte) 0);
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        boolean boolean0 = NumberUtils.isDigits("");
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("4el");
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber((String) null);
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0e.");
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("L");
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0x is not a valid number.");
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-0x");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0x65c");
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0xArray cannot be empty.");
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-");
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("0E.2E0");
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("...");
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("2e+OM");
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("2eEO0&U6`");
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("E/&oUs]#I+DW^34'w:Y");
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("--hP");
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("2e65");
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("2e");
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("E");
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("..");
    }

    @Test(timeout = 4000)
    public void test125125() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber(".");
    }

    @Test(timeout = 4000)
    public void test126126() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("d");
    }

    @Test(timeout = 4000)
    public void test127127() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("D");
    }

    @Test(timeout = 4000)
    public void test128128() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("f");
    }

    @Test(timeout = 4000)
    public void test129129() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("-F");
    }

    @Test(timeout = 4000)
    public void test130130() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("2es");
    }

    @Test(timeout = 4000)
    public void test131131() throws Throwable {
        boolean boolean0 = NumberUtils.isNumber("49L");
    }
}
