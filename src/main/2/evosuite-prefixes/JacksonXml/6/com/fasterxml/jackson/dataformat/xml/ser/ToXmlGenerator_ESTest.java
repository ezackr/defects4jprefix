/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 00:55:18 GMT 2024
 */
package com.fasterxml.jackson.dataformat.xml.ser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ctc.wstx.api.WriterConfig;
import com.ctc.wstx.sw.AsciiXmlWriter;
import com.ctc.wstx.sw.BufferingXmlWriter;
import com.ctc.wstx.sw.ISOLatin1XmlWriter;
import com.ctc.wstx.sw.NonNsStreamWriter;
import com.ctc.wstx.sw.RepairingNsStreamWriter;
import com.ctc.wstx.sw.SimpleNsStreamWriter;
import com.ctc.wstx.sw.XmlWriter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.PrettyPrinter;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator;
import com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.namespace.QName;
import org.codehaus.stax2.util.StreamWriter2Delegate;
import org.codehaus.stax2.util.StreamWriterDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ToXmlGenerator_ESTest extends ToXmlGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, "@VnX%?OQrc\"CY\"1z(n", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0._releaseBuffers();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "g/", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 0, objectMapper0, nonNsStreamWriter0);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        toXmlGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.inRoot();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.setNextIsAttribute(true);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "j", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        SerializedString serializedString0 = PrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        toXmlGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRaw('D');
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "g/", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.setNextIsCData(true);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeStringField("e^a", "IM2a+$ 6qrP)t");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "Yl\"9k.'j&%S*y$VHEV", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 3, (-1526), objectMapper0, streamWriterDelegate0);
        toXmlGenerator0.writeRawValue("", (-1526), (-574));
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonFactory0, true);
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "l4ZgxHg=", writerConfig0);
        StreamWriter2Delegate streamWriter2Delegate0 = new StreamWriter2Delegate(nonNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 32, 0, objectMapper0, streamWriter2Delegate0);
        byte[] byteArray0 = new byte[0];
        toXmlGenerator0.writeUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(256);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-1786), (-1786), objectMapper0, nonNsStreamWriter0);
        int int0 = toXmlGenerator0.getOutputBuffered();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(256);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-1786), (-1786), objectMapper0, nonNsStreamWriter0);
        int int0 = toXmlGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeNumber((BigDecimal) null);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(274);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-1786), (-1786), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRawValue((SerializableString) null);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        JsonGenerator jsonGenerator0 = toXmlGenerator0.useDefaultPrettyPrinter();
        jsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 0, objectMapper0, nonNsStreamWriter0);
        int int0 = toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("*jjl[oJ94wZYw", true);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockFileOutputStream0, writerConfig0, false);
        SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "write raw value", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, simpleNsStreamWriter0);
        toXmlGenerator0.getStaxWriter();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        JsonFactory jsonFactory0 = new JsonFactory();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, (-3412), (-427), objectMapper0, simpleNsStreamWriter0);
        SerializedString serializedString0 = new SerializedString("JSON");
        toXmlGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, ", byte #", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-491), 1720, objectMapper0, repairingNsStreamWriter0);
        Object object0 = toXmlGenerator0.getOutputTarget();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, ", byte #", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-491), 1720, objectMapper0, repairingNsStreamWriter0);
        Object object0 = toXmlGenerator0.getOutputTarget();
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        boolean boolean0 = toXmlGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        boolean boolean0 = toXmlGenerator0.canWriteFormattedNumbers();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        byte[] byteArray0 = new byte[0];
        toXmlGenerator0.writeRawUTF8String(byteArray0, 256, 256);
    }

    @Test(timeout = 4000)
    public void test2023() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, nonNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        ToXmlGenerator toXmlGenerator1 = toXmlGenerator0.enable(toXmlGenerator_Feature0);
        boolean boolean0 = toXmlGenerator1.isEnabled(toXmlGenerator_Feature0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2024() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, nonNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        ToXmlGenerator toXmlGenerator1 = toXmlGenerator0.enable(toXmlGenerator_Feature0);
        boolean boolean0 = toXmlGenerator1.isEnabled(toXmlGenerator_Feature0);
    }

    @Test(timeout = 4000)
    public void test2125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1324, 1, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeNumber("");
    }

    @Test(timeout = 4000)
    public void test2226() throws Throwable {
        int int0 = ToXmlGenerator.Feature.collectDefaults();
    }

    @Test(timeout = 4000)
    public void test2327() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.initGenerator();
        toXmlGenerator0.initGenerator();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2328() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.initGenerator();
        toXmlGenerator0.initGenerator();
        nonNsStreamWriter0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test2429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "g/", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.initGenerator();
        nonNsStreamWriter0.getXmlVersion();
    }

    @Test(timeout = 4000)
    public void test2530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.initGenerator();
    }

    @Test(timeout = 4000)
    public void test2631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, "98I;HW-;j,YU", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 62, 627, objectMapper0, nonNsStreamWriter0);
        JsonGenerator jsonGenerator0 = toXmlGenerator0.setPrettyPrinter((PrettyPrinter) null);
        jsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 554, objectMapper0, nonNsStreamWriter0);
        JsonGenerator jsonGenerator0 = toXmlGenerator0.overrideFormatFeatures(1, 0);
        jsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2833() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(256);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-1786), (-1786), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.overrideFormatFeatures((-944), (-1786));
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2934() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, nonNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test2935() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, nonNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        JsonFactory jsonFactory0 = new JsonFactory();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayBuilder0, writerConfig0, false);
        SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, (-3412), (-427), objectMapper0, simpleNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        ToXmlGenerator toXmlGenerator1 = toXmlGenerator0.configure(toXmlGenerator_Feature0, false);
        toXmlGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 0, objectMapper0, repairingNsStreamWriter0);
        ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;
        toXmlGenerator0.configure(toXmlGenerator_Feature0, true);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3238() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 267, 267, objectMapper0, repairingNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 267, 267, objectMapper0, repairingNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.startWrappedValue((QName) null, (QName) null);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, " ma[^w_naQfA1", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 4695, 482, objectMapper0, nonNsStreamWriter0);
        DefaultXmlPrettyPrinter defaultXmlPrettyPrinter0 = new DefaultXmlPrettyPrinter();
        toXmlGenerator0.setPrettyPrinter(defaultXmlPrettyPrinter0);
        QName qName0 = QName.valueOf(" ma[^w_naQfA1");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3542() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
        BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "JSON", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.finishWrappedValue((QName) null, (QName) null);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3643() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.finishWrappedValue(qName0, qName0);
    }

    @Test(timeout = 4000)
    public void test3744() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeStartObject();
        toXmlGenerator0.writeRepeatedFieldName();
        toXmlGenerator0.writeNumber((float) 92);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "y", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-1786), (-1786), objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("y");
        toXmlGenerator0.setNextNameIfMissing(qName0);
        toXmlGenerator0.writeRepeatedFieldName();
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 2775, 2775, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeStartObject();
        toXmlGenerator0.writeFieldName("");
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test4047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeStartArray();
        toXmlGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test4148() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test4249() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 2775, 2775, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeStartObject();
        toXmlGenerator0.writeEndObject();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test4350() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test4451() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test4552() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0._handleEndObject();
    }

    @Test(timeout = 4000)
    public void test4653() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "g", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 105, 105, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("g");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeString("g");
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test4754() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        char[] charArray0 = new char[1];
        toXmlGenerator0.writeString(charArray0, 92, 92);
    }

    @Test(timeout = 4000)
    public void test4855() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeString((char[]) null, 256, (-151));
    }

    @Test(timeout = 4000)
    public void test4956() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRawValue("write Binary value");
    }

    @Test(timeout = 4000)
    public void test5057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        DefaultXmlPrettyPrinter defaultXmlPrettyPrinter0 = new DefaultXmlPrettyPrinter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, defaultXmlPrettyPrinter0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, "H+bMT", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 0, objectMapper0, streamWriterDelegate0);
        toXmlGenerator0.writeRawValue("H+bMT");
    }

    @Test(timeout = 4000)
    public void test5158() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeRawValue("write Binary value");
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test5259() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "j", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRawValue("j", 92, 92);
    }

    @Test(timeout = 4000)
    public void test5360() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "j", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("j");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeRawValue("j", 92, 92);
    }

    @Test(timeout = 4000)
    public void test5461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRawValue((char[]) null, 1969, (-450));
    }

    @Test(timeout = 4000)
    public void test5562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        DefaultXmlPrettyPrinter defaultXmlPrettyPrinter0 = new DefaultXmlPrettyPrinter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, defaultXmlPrettyPrinter0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, "H+bMT", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 0, objectMapper0, streamWriterDelegate0);
        char[] charArray0 = new char[2];
        toXmlGenerator0.writeRawValue(charArray0, 57343, 0);
    }

    @Test(timeout = 4000)
    public void test5663() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(134);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "$", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 134, 134, objectMapper0, nonNsStreamWriter0);
        QName qName0 = new QName("$", "$", "$");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeRawValue((char[]) null, 56319, 134);
    }

    @Test(timeout = 4000)
    public void test5764() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(256);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(iSOLatin1XmlWriter0, "com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(repairingNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 115, 115, objectMapper0, streamWriterDelegate0);
        toXmlGenerator0.writeRaw("com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer");
    }

    @Test(timeout = 4000)
    public void test5865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "44", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeRaw("44", 3, 0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test5966() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "EHCN+)MDpo$+:5", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(repairingNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 76, 2435, objectMapper0, streamWriterDelegate0);
        toXmlGenerator0.writeRaw("EHCN+)MDpo$+:5", 2435, 76);
    }

    @Test(timeout = 4000)
    public void test6067() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(256);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, "@VnX%?OQrc\"CY\"1z(n", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 0, 0, objectMapper0, nonNsStreamWriter0);
        char[] charArray0 = new char[0];
        toXmlGenerator0.writeRaw(charArray0, (-1), 55296);
    }

    @Test(timeout = 4000)
    public void test6168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonInclude_Include0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\"]*A", false);
        BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter((Writer) null, writerConfig0, "\"]*A", false, mockFileOutputStream0, 2);
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, "}+", writerConfig0);
        StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(repairingNsStreamWriter0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1858, 1858, objectMapper0, streamWriterDelegate0);
        char[] charArray0 = new char[1];
        toXmlGenerator0.writeRaw(charArray0, 57343, 2);
    }

    @Test(timeout = 4000)
    public void test6269() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        byte[] byteArray0 = new byte[1];
        toXmlGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test6370() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeBinary((byte[]) null, 56320, 56320);
    }

    @Test(timeout = 4000)
    public void test6471() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        byte[] byteArray0 = new byte[1];
        toXmlGenerator0.writeBinary(byteArray0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test6572() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeBoolean(false);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test6673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter((OutputStream) null, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "g/", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 2, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test6774() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
        IOContext iOContext0 = new IOContext((BufferRecycler) null, dataInputStream0, false);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, (-4024), 256, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.setNextIsUnwrapped(true);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeBoolean(false);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test6875() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeNumber(907);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test6976() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 256, 256, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeNumber(1784);
    }

    @Test(timeout = 4000)
    public void test7077() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeNumber((long) 92);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test7178() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeNumber((long) 92);
    }

    @Test(timeout = 4000)
    public void test7279() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeNumber(0.0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test7380() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeNumber(0.0);
    }

    @Test(timeout = 4000)
    public void test7481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 0, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.writeNumber(6.225275F);
    }

    @Test(timeout = 4000)
    public void test7582() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(105);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 2, 208, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        toXmlGenerator0.writeNumber(bigDecimal0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test7683() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        toXmlGenerator0.writeNumber(bigDecimal0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test7784() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        toXmlGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test7885() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, (-3171), objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test7986() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        BigInteger bigInteger0 = BigInteger.TEN;
        toXmlGenerator0.writeNumber(bigInteger0);
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test8087() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        QName qName0 = QName.valueOf("");
        toXmlGenerator0.startWrappedValue(qName0, qName0);
        toXmlGenerator0.writeStartObject();
        toXmlGenerator0.writeNumber((float) 92);
    }

    @Test(timeout = 4000)
    public void test8188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 0, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.flush();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test8289() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(92);
        WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
        ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, false);
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, "", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 92, 92, objectMapper0, nonNsStreamWriter0);
        toXmlGenerator0.flush();
        toXmlGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test8390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ObjectMapper objectMapper0 = new ObjectMapper();
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, "IM2a+$ 6qrP)t", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 62, 1, objectMapper0, repairingNsStreamWriter0);
        toXmlGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test8491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_NULL;
        IOContext iOContext0 = new IOContext(bufferRecycler0, jsonInclude_Include0, false);
        WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
        NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, "unknown", writerConfig0);
        ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 2, (ObjectCodec) null, nonNsStreamWriter0);
        toXmlGenerator0.close();
    }
}
