/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 22:05:39 GMT 2024
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Parser_ESTest extends Parser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        posixParser0.parse(options0, (String[]) null, properties0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.push("");
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        Option option0 = new Option("", false, "");
        posixParser0.processArgs(option0, listIterator0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        CommandLine commandLine0 = posixParser0.parse(options0, (String[]) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Options options0 = new Options();
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-7Y5C8cAr$j";
        options0.addOption("7", "mP", false, "#|I}(BXb_gKU#");
        PosixParser posixParser0 = new PosixParser();
        CommandLine commandLine0 = posixParser0.parse(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Options options0 = new Options();
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-";
        CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, false);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Options options0 = new Options();
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-";
        CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Options options0 = new Options();
        GnuParser gnuParser0 = new GnuParser();
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-7Y5C8cAr$j";
        stringArray0[1] = "org.apache.commons.cli.PosixParser";
        options0.addOption("7", "mP", false, "#|I}(BXb_gKU#");
        stringArray0[2] = "org.apache.commons.cli.PosixParser";
        stringArray0[3] = "#|I}(BXb_gKU#";
        stringArray0[4] = "#|I}(BXb_gKU#";
        stringArray0[5] = "-7Y5C8cAr$j";
        Properties properties0 = new Properties();
        CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-7Y5C}cAr$j";
        posixParser0.parse(options0, stringArray0, properties0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Options options0 = new Options();
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        String[] stringArray0 = new String[9];
        stringArray0[0] = "-7Y5C8cAr$j";
        CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        properties0.put("-7Y5C8cAr$j", "-7Y5C8cAr$j");
        posixParser0.parse(options0, (String[]) null, properties0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup0);
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        gnuParser0.parse(options1, (String[]) null, properties0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup0);
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        options0.addOptionGroup(optionGroup0);
        gnuParser0.parse(options1, (String[]) null, properties0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        options0.addOption("6", true, "6");
        Properties properties0 = new Properties();
        posixParser0.parse(options0, (String[]) null, properties0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.push("6");
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        posixParser0.processOption("6", listIterator0);
        linkedList0.contains("6");
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        posixParser0.parse(options0, (String[]) null, properties0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        options0.addOption("", "--", true, "");
        linkedList0.push("--");
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        posixParser0.processOption("--", listIterator0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        Option option0 = new Option("@", "@", false, "@");
        option0.setOptionalArg(true);
        posixParser0.processArgs(option0, listIterator0);
        option0.hasOptionalArg();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Option option0 = new Option("", false, "cm#x2Xf");
        Options options1 = options0.addOption(option0);
        String[] stringArray0 = new String[4];
        option0.setRequired(true);
        stringArray0[0] = "cm#x2Xf";
        stringArray0[1] = "";
        stringArray0[2] = "cm#x2Xf";
        stringArray0[3] = "";
        posixParser0.parse(options1, stringArray0, (Properties) null);
        ListIterator<Locale.LanguageRange> listIterator0 = (ListIterator<Locale.LanguageRange>) mock(ListIterator.class, new ViolatedAssumptionAnswer());
        posixParser0.processOption("", listIterator0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "");
        optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup0);
        Properties properties0 = new Properties();
        posixParser0.parse(options1, (String[]) null, properties0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        posixParser0.processOption("", listIterator0);
        listIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("", "");
        optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup0);
        optionGroup0.setRequired(true);
        Properties properties0 = new Properties();
        posixParser0.parse(options1, (String[]) null, properties0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        ListIterator<Object> listIterator0 = linkedList0.listIterator();
        posixParser0.processOption("", listIterator0);
        listIterator0.hasNext();
    }
}
