/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:52:08 GMT 2024
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "-";
        posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        posixParser0.parse(options0, (String[]) null);
        options0.addOption("", true, "");
        posixParser0.burstToken("8$`}U@;-|", true);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = Locale.getISOLanguages();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
        String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[9];
        stringArray0[0] = "----=@|T\"e P";
        posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-W";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "-)gOJR9";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = Locale.getISOCountries();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Options options1 = options0.addOption("W", "W", true, "W");
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-W";
        stringArray0[1] = "W";
        posixParser0.flatten(options1, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        posixParser0.parse(options0, (String[]) null, false);
        options0.addOption("", "", false, "");
        posixParser0.burstToken("8$`}U@;-|", true);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "-r";
        posixParser0.flatten(options0, stringArray0, false);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        posixParser0.parse(options0, (String[]) null, true);
        options0.addOption("", true, "");
        posixParser0.burstToken("NuZ#Hs/Z+-", true);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Options options0 = new Options();
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "-)gOJR9";
        posixParser0.flatten(options0, stringArray0, false);
    }
}
