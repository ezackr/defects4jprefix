/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:57:27 GMT 2024
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Parser_ESTest extends Parser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        String[] stringArray0 = new String[6];
        basicParser0.parse(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Options options0 = new Options();
        Properties properties0 = new Properties();
        GnuParser gnuParser0 = new GnuParser();
        CommandLine commandLine0 = gnuParser0.parse(options0, (String[]) null, properties0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-";
        CommandLine commandLine0 = basicParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-";
        basicParser0.parse(options0, stringArray0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        options0.addOption("o", "Y,", true, "o");
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-o";
        stringArray0[1] = "Y,";
        stringArray0[2] = "Y,";
        CommandLine commandLine0 = basicParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-o";
        basicParser0.parse(options0, stringArray0, properties0, false);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "";
        basicParser0.parse(options0, stringArray0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        String[] stringArray0 = new String[3];
        stringArray0[0] = "--";
        stringArray0[2] = "--";
        CommandLine commandLine0 = basicParser0.parse(options0, stringArray0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Options options0 = new Options();
        Properties properties0 = new Properties();
        properties0.put("", "");
        BasicParser basicParser0 = new BasicParser();
        String[] stringArray0 = new String[0];
        basicParser0.parse(options0, stringArray0, properties0, false);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup0);
        basicParser0.parse(options1, (String[]) null);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        Options options1 = options0.addOption("o", "-sHafRZ%B!9OyDK$<", true, "-o");
        String[] stringArray0 = new String[4];
        stringArray0[0] = "-o";
        stringArray0[1] = "o";
        stringArray0[2] = "-sHafRZ%B!9OyDK$<";
        CommandLine commandLine0 = basicParser0.parse(options1, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        Options options1 = options0.addOption("o", "-o", true, "-o");
        String[] stringArray0 = new String[4];
        stringArray0[0] = "-o";
        stringArray0[1] = "-o";
        basicParser0.parse(options1, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("o", "ZA3;SsFE8@7U^cy", true, "'");
        option0.setOptionalArg(true);
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-o";
        CommandLine commandLine0 = basicParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("o", "[", true, "-o");
        optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup0);
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-o";
        option0.setRequired(true);
        basicParser0.parse(options1, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Option option0 = new Option("o", "KKP`", true, "-o");
        optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup0);
        String[] stringArray0 = new String[6];
        stringArray0[0] = "-o";
        basicParser0.parse(options0, stringArray0, properties0, true);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Options options0 = new Options();
        BasicParser basicParser0 = new BasicParser();
        Properties properties0 = new Properties();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("o", false, "o");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup1);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-o";
        CommandLine commandLine0 = basicParser0.parse(options0, stringArray0, properties0, false);
    }
}
