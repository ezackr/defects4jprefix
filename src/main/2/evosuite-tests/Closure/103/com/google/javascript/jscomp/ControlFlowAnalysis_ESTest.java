/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 06:14:54 GMT 2024
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.MemoizedScopeCreator;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.ReferenceCollectingCallback;
import com.google.javascript.jscomp.SourceExcerptProvider;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ControlFlowAnalysis_ESTest extends ControlFlowAnalysis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node0 = Node.newNumber(13.15143561244108);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = new Node(102);
      ControlFlowAnalysis.isBreakStructure(node0, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Node node0 = new Node(749, 749, 749);
      ControlFlowAnalysis.isContinueStructure(node0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.getCfg();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Node node0 = new Node(112);
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"v!j.#09xhx<w,", ")zkk\"\"v!j.#09xhx<w,");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("A");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"bj.#09xhx,", ")zkk\"\"bj.#09xhx,");
      Node node1 = new Node(102, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = new Node(103, 103, 103);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(49);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"bj.#09xhx,", ")zkk\"\"bj.#09xhx,");
      Node node1 = new Node(26, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Node node0 = new Node(125, 2675, 125);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis.isBreakStructure(node0, false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis.isBreakStructure(node0, true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkkJ\"\"v!j.#09xhx<w,", ")zkkJ\"\"v!j.#09xhx<w,");
      Node node1 = Node.newString(")zkkJ\"\"v!j.#09xhx<w,");
      Node node2 = new Node(37, node0, node0, node1, 2, 12);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"bj.#09xhx,", ")zkk\"\"bj.#09xhx,");
      Node node1 = new Node(30, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(116);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("", "");
      Node node1 = new Node(22, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"v!j.#09xhx<w,", ")zkk\"\"v!j.#09xhx<w,");
      Node node1 = new Node(49, node0, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node1 = new Node(4, node0, node0, node0, 2, 37);
      controlFlowAnalysis0.process(node1, node0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = new Node(110);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("YO)q^k$D");
      Node node1 = new Node(116, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node0 = Node.newString("ardnOG*");
      Node node1 = new Node(108, node0, node0, node0, 48, (-1));
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"v!j.#09xhx<w,", ")zkk\"\"v!j.#09xhx<w,");
      Node node1 = new Node(119, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(108);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = new Node(111, 111, 111);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.ControlFlowAnalysis");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Node node0 = new Node(37);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.SuspiciousPropertiesCheck$ProcessProperties");
      Node node1 = new Node(39, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Node node0 = new Node(130);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Node node0 = new Node(115);
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Node node0 = new Node(105);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(105);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = new Node(77, 77, 77);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Node node0 = new Node(4);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Node node0 = new Node(105);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, controlFlowAnalysis0);
      controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
      Node node1 = new Node(node0.LABEL_PROP);
      // Undeclared exception!
      try { 
        controlFlowAnalysis0.process(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Node node0 = new Node(115);
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, controlFlowAnalysis0);
      controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("2+EkNLIWSs");
      Node node1 = new Node(4, node0, node0, node0, 44, 27);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      ControlFlowAnalysis.isContinueStructure(node0);
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Node node0 = new Node(35, 35, 35);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      ControlFlowAnalysis controlFlowAnalysis1 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = Node.newString(110, "`:+A9", 6, 110);
      Node node1 = new Node(43, node0);
      node1.removeProp((-14));
      compiler0.getTypeRegistry();
      Vector<JSType> vector0 = new Vector<JSType>();
      ControlFlowAnalysis.isBreakStructure(node0, false);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(119);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"bj.#09xhx,", ")zkk\"\"bj.#09xhx,");
      Node node1 = new Node(110, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Node node0 = new Node(105);
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      ControlFlowAnalysis controlFlowAnalysis1 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      Node node1 = Node.newNumber(0.0, 661, (-2281));
      Node node2 = new Node(2025, node1, node0, node0, 1, 102);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Node node0 = new Node(95);
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(42);
      Node node2 = compiler0.parseSyntheticCode("ob)0JOC*go{R", "ob)0JOC*go{R");
      Node node3 = new Node(105, node0, node1, node2, 27, 0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node4 = new Node(0, node3, 1750, (-84));
      controlFlowAnalysis0.process(node2, node4);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(")c61$O2i+/IQN!=MR-2");
      Node node1 = new Node(77, node0, node0, node0, 0, 39);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkk\"\"v!j.#09xhx<w,", ")zkk\"\"v!j.#09xhx<w,");
      Node node1 = new Node(115, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Node node0 = new Node(95);
      Compiler compiler0 = new Compiler();
      Node node1 = new Node(42);
      Node node2 = compiler0.parseSyntheticCode("ob)0JOC*go{R", "ob)0JOC*go{R");
      Node node3 = new Node(105, node0, node1, node2, 27, 0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node2, node3);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Node node0 = new Node(113);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Node node0 = new Node(77, 189, 189);
      ControlFlowAnalysis.isBreakStructure(node0, false);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")c61$O2i+/IQN!=MR-2", ")c61$O2i+/IQN!=MR-2");
      Node node1 = new Node(117, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Node node0 = new Node(117);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Node node0 = new Node(117);
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(117);
      Node node1 = new Node(47, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("");
      Node node1 = new Node(105, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Node node0 = new Node(114);
      ControlFlowAnalysis.isContinueStructure(node0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(86);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(")c61O2(+/IQN=MoR-2");
      Node node1 = new Node(77, node0, node0, node0, 0, 39);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("{PK*E*?*K*hN?,)y", "{PK*E*?*K*hN?,)y");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node1 = new Node(111, node0, node0, node0, 1, 35);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(118, node0, node0, node0, 16, 29);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Node node0 = Node.newString(")zkkJ\"L.0(xh<w,");
      Node node1 = new Node(111, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("inlieunction");
      Node node1 = new Node(112, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("W:wH");
      Node node1 = new Node(115, node0, node0, node0, 29, 41);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")c61$O2i+/IQN!=MR-2", ")c61$O2i+/IQN!=MR-2");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node1 = Node.newNumber((double) 12, 39, 9);
      Node node2 = new Node(111, node0, node0, node1, 1, 35);
      controlFlowAnalysis0.process(node1, node2);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$1");
      Compiler compiler0 = new Compiler();
      SourceExcerptProvider.SourceExcerpt sourceExcerptProvider_SourceExcerpt0 = SourceExcerptProvider.SourceExcerpt.LINE;
      LightweightMessageFormatter lightweightMessageFormatter0 = new LightweightMessageFormatter(compiler0, sourceExcerptProvider_SourceExcerpt0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
      Compiler compiler1 = new Compiler(printStreamErrorManager0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler1, false);
      ControlFlowAnalysis controlFlowAnalysis1 = new ControlFlowAnalysis(compiler1, false);
      SyntheticAst syntheticAst0 = new SyntheticAst("T@|jN");
      Node node0 = syntheticAst0.getAstRoot(compiler1);
      controlFlowAnalysis1.process(node0, node0);
      Node node1 = Node.newString((-2871), "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$1", 3, 10);
      Node node2 = new Node(113, node1, node1, node0, 3304, 0);
      ControlFlowAnalysis.isBreakStructure(node2, false);
      ControlFlowAnalysis.isBreakStructure(node2, false);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler1, (SyntacticScopeCreator.RedeclarationHandler) null);
      MemoizedScopeCreator memoizedScopeCreator0 = new MemoizedScopeCreator(syntacticScopeCreator0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      Node node0 = Node.newString("Cannot find continue target.");
      Node node1 = new Node(114, node0, node0, node0, 48, (-1));
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      node0.setType(108);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis.isBreakStructure(node0, true);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      Compiler compiler0 = new Compiler();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Node node0 = new Node(114);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis.isBreakStructure(node0, true);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode(")zkkJ\"\"v!j.#09xhx<w,");
      Node node1 = new Node(126, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkkJ\"\"v!j.#09xhx<w,", ")zkkJ\"\"v!j.#09xhx<w,");
      Node node1 = new Node(119, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
      controlFlowAnalysis0.shouldTraverse((NodeTraversal) null, node1, node1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("");
      Node node1 = new Node(112, node0, node0, node0, 2, 30);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(126);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkkJ\"\"v!j.#09xhx<w,", ")zkkJ\"\"v!j.#09xhx<w,");
      Node node1 = new Node(113, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
      Node node0 = Node.newString(113, ")zkk\"\"v!j.#09xhx<w,", 368, (-3));
      ControlFlowAnalysis.isContinueStructure(node0);
      System.setCurrentTimeMillis(6);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Node node0 = new Node(4417);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      Node node1 = Node.newNumber((double) 4, 4, 30);
      Node node2 = new Node(77, node0, node1, node0, 1, 0);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, controlFlowAnalysis0);
      controlFlowAnalysis0.visit(nodeTraversal0, node1, node2);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(")c61$O2i+/IQN!=MR-2");
      Node node1 = new Node(20, 12, 11);
      Node node2 = new Node(77, node0, node0, node1, 0, 39);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Node node0 = new Node(116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph/com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SyntheticAst syntheticAst0 = new SyntheticAst("ob)hJO</(o{R");
      MockFile mockFile0 = new MockFile("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph", "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph");
      MockFile mockFile1 = new MockFile(mockFile0, "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      Compiler compiler0 = new Compiler(mockPrintStream0);
      JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = compiler0.parseSyntheticCode("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph", "ob)hJO</(o{R");
      Node node3 = new Node(105, node0, node1, node2, (-1648), 0);
      controlFlowAnalysis0.process(node1, node3);
      controlFlowAnalysis0.process(node0, node1);
      controlFlowAnalysis0.visit((NodeTraversal) null, node3, node0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(117);
      Node node1 = compiler0.parseSyntheticCode("", "");
      Node node2 = new Node(115, node1, node1, node0, 26, 1);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("LBwg", "LBwg");
      Node node1 = new Node(120, node0, node0, node0, 2, 6);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
      controlFlowAnalysis0.visit(nodeTraversal0, node1, node1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(")c61$O2i+/IQN!=MR-2");
      Node node1 = compiler0.parseTestCode(")c61$O2i+/IQN!=MR-2");
      Node node2 = new Node(77, node0, node0, node1, 0, 39);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Node node0 = new Node(116);
      ControlFlowAnalysis.isContinueStructure(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      Node node1 = new Node(77, node0, node0, node0, 20, 46);
      controlFlowAnalysis0.process(node0, node0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")zkkJ\"\"v!j.#09xhx<w,", ")zkkJ\"\"v!j.#09xhx<w,");
      Node node1 = Node.newString(")zkkJ\"\"v!j.#09xhx<w,");
      Node node2 = new Node(110, node0, node1, node1, 32, 24);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node2);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode(")c61$O2i+/IQN!=MR-2", ")c61$O2i+/IQN!=MR-2");
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      Node node1 = Node.newNumber((double) 1, 34, 115);
      Node node2 = new Node(114, node1, node0, node0, 18, 49);
      controlFlowAnalysis0.process(node2, node2);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(115, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString(")c61$O2i+/IQN!=MR-2");
      Node node1 = Node.newString(2, ")c61$O2i+/IQN!=MR-2", 41, 41);
      Node node2 = Node.newString(")c61$O2i+/IQN!=MR-2");
      Node node3 = new Node(77, node0, node2, node1, 8, 39);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node2, node3);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseSyntheticCode("-1~_<*b}J}b{2", "-1~_<*b}J}b{2");
      Node node1 = compiler0.parseSyntheticCode("-1~_<*b}J}b{2", "-1~_<*b}J}b{2");
      Node node2 = new Node(77, node0, node0, node1, 0, 39);
      node1.removeProp(2);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node1, node2);
      controlFlowAnalysis0.shouldTraverse((NodeTraversal) null, node1, node2);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Node node0 = new Node(4);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      Node node1 = new Node(77, node0, node0, node0, 9, (-2));
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Node node0 = new Node(1571);
      Compiler compiler0 = new Compiler();
      Node node1 = compiler0.parseSyntheticCode("ob)0JOd*go{R", "ob)0JOd*go{R");
      node1.setIsSyntheticBlock(true);
      Node node2 = new Node(14, node0, node0, node1, 27, 0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Node node0 = new Node((-1011));
      FileSystemHandling.shouldAllThrowIOExceptions();
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
      Compiler compiler0 = new Compiler();
      Node node1 = compiler0.parseSyntheticCode((String) null, "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$1");
      Node node2 = new Node(108, node1, node0, node0, 26, 48);
      controlFlowAnalysis0.process(node0, node2);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("&");
      Node node1 = new Node(111, node0, node0, node0, 2, 41);
      Node node2 = new Node(1, node1, node1, node1, 33, 16);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
      controlFlowAnalysis0.process(node2, node1);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("inNieunction");
      Node node1 = new Node(112, node0);
      node0.addChildAfter(node1, node1);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node1, node1);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(117);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
      Node node1 = new Node(115, node0, node0, node0, 1, 48);
      controlFlowAnalysis0.process(node0, node1);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = new Node(117);
      Node node1 = new Node(39, node0, node0, node0, node0, 38, 1);
      Node node2 = compiler0.parseSyntheticCode("", "");
      Node node3 = new Node(113, node1, node2, node2, 37, (-1942));
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
      controlFlowAnalysis0.process(node2, node3);
  }
}
