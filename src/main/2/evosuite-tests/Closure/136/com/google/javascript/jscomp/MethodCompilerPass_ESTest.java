/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 08:12:13 GMT 2024
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.InlineGetters;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodCompilerPass_ESTest extends MethodCompilerPass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      // Undeclared exception!
      try { 
        inlineGetters0.process((Node) null, (Node) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("coe.doogoe.javalcrit=op_DvrtualizCPAotjtypeMtuods");
      Node node1 = new Node(11, node0, node0);
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // VarCheck should have caught this undefined function
         //   Node(GETPROP):  [testcode] :1:0
         // [source unknown]
         //   Parent(ASSIGN):  [testcode] :1:20
         // [source unknown]
         //
         verifyException("com.google.javascript.jscomp.MethodCompilerPass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = compiler0.parseTestCode("coe.poogoe.javalcrit=jomp.DvirtualizCPAotjtypeM_thods");
      Node node1 = new Node(32, node0, node0);
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //   Node(SCRIPT):  [testcode] :1:0
         // [source unknown]
         //   Parent(TYPEOF):  [testcode] :-1:-1
         // [source unknown]
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("com.google.javascrit.jscomp.DevirtualizePrototypeMethods");
      Node node1 = new Node(35, node0, node0, node0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node1, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("p");
      Node node1 = Node.newString("p");
      Node node2 = new Node(33, node1, node1, node0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = Node.newString("com.google.javascrip,.jscomp.DevirtualizePrototypeMethods");
      Node node1 = Node.newString("com.google.javascrip,.jscomp.DevirtualizePrototypeMethods");
      Node node2 = new Node(64, node1, node1, node0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL COMPILER ERROR.
         // Please report this problem.
         // null
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("F*[ MZFxCgQdYW>AQKZ");
      Node node1 = new Node(64, node0, node0, node0);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node1, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("*/Pql<q--!@PwA");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(35, nodeArray0, 1, 4);
      Node node2 = new Node(41, node0, node0, node1);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("*/Pql<q--!@PwA");
      Node node1 = Node.newString(64, "*/Pql<q--!@PwA");
      Node node2 = new Node(41, node0, node0, node1);
      inlineGetters0.process(node0, node1);
      assertFalse(node1.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("*/Pql<q--!@PwA");
      Node node1 = Node.newString(64, "*/Pql<q--!@PwA");
      Node node2 = Node.newString("*/Pql<q--!@PwA");
      node1.addChildToBack(node2);
      Node node3 = new Node(41, node0, node0, node1);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      InlineGetters inlineGetters0 = new InlineGetters(compiler0);
      Node node0 = compiler0.parseTestCode("*/Pql<q--!@PwA");
      Node node1 = Node.newString(64, "*/Pql<q--!@PwA");
      Node node2 = new Node(30, 49, 24);
      node1.addChildToBack(node2);
      Node node3 = new Node(41, node0, node0, node1);
      // Undeclared exception!
      try { 
        inlineGetters0.process(node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }
}
