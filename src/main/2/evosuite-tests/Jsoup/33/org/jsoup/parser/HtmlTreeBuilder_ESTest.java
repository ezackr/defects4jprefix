/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 03:12:16 GMT 2024
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.DescendableLinkedList;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getFormElement();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.push((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.aboveOnStack((Element) null);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getActiveFormattingElement("tr");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("VyEyE", "VyEyE");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("VE", "VE");
      htmlTreeBuilder0.insertInFosterParent(document0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_StartTag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Token$Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      htmlTreeBuilder0.parseFragment("q_G{?>>O,NKA;F", (Element) null, "q_G{?>>O,NKA;F", parseErrorList0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.reconstructFormattingElements();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.isFosterInserts();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
      Element element0 = null;
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.setFosterInserts(false);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.isFragmentParsing();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getStack();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.maybeSetBaseUri((Element) null);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("VE");
      htmlTreeBuilder0.maybeSetBaseUri(document0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.inScope((String[]) null);
      Element element0 = null;
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getBaseUri();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.originalState();
      String string0 = "";
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.getFromStack("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.newPendingTableCharacters();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.inListItemScope("even");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.inScope("DyZYVk!");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getDocument();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getHeadElement();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("VE");
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("VE", document0, "VE", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("yEyE", "yEyE");
      htmlTreeBuilder0.insert("yEyE");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Token.Character> list0 = htmlTreeBuilder0.getPendingTableCharacters();
      htmlTreeBuilder0.setPendingTableCharacters(list0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("<html>\n <head />\n <body>\n  s\n </body>\n</html>", "<html>\n <head />\n <body>\n  s\n </body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.inButtonScope("qvz[PaGdca&8._lfI6");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("VyEyE", "VyEyE");
      htmlTreeBuilder0.aboveOnStack(document0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("T=/e", "T=/e");
      htmlTreeBuilder0.isInActiveFormattingElements(document0);
      htmlTreeBuilder0.insertInFosterParent(document0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.generateImpliedEndTags("listing");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("tbody", "tbody");
      htmlTreeBuilder0.generateImpliedEndTags("tbody");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.inTableScope("{Ykr~%6a5dQ_;LV");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      htmlTreeBuilder0.reconstructFormattingElements();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("td", "td");
      Token.Doctype token_Doctype0 = new Token.Doctype();
      htmlTreeBuilder0.process(token_Doctype0);
      document0.normalise();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("VyEyE", "VyEyE");
      htmlTreeBuilder0.clearStackToTableRowContext();
      htmlTreeBuilder0.pop();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String string0 = "w|)@&j~BA";
      Document document0 = htmlTreeBuilder0.parse("w|)@&j~BA", "w|)@&j~BA");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("VE", "VE");
      htmlTreeBuilder0.inSelectScope("VE");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.state();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "5HKPDj<7o=#<\u0006u=";
      stringArray0[1] = "N7?.RMH@^!WaY";
      stringArray0[2] = "^d32<B";
      stringArray0[3] = "{_$)7BwF@^1>Y5`ch/L";
      stringArray0[4] = "del";
      stringArray0[6] = "Fhn";
      htmlTreeBuilder0.popStackToClose(stringArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.setFosterInserts(true);
      htmlTreeBuilder0.parse("|", "|");
      htmlTreeBuilder0.clearStackToTableRowContext();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("Mu", "Mu");
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag0 = new Token.StartTag("Mu", attributes0);
      htmlTreeBuilder0.insertEmpty(token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("VyEyE", "VyEyE");
      htmlTreeBuilder0.inListItemScope("VyEyE");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("AttributeName", "AttributeName");
      htmlTreeBuilder0.inScope("AttributeName");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("J+", "J+");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.getActiveFormattingElement("J+");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      htmlTreeBuilder0.getActiveFormattingElement(":5f\"i+|k},bN(k");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("<!--", "<!--");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("QU+/");
      htmlTreeBuilder0.isSpecial(document0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.generateImpliedEndTags();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.popStackToBefore("ue");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.generateImpliedEndTags((String) null);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.framesetOk();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      Document document0 = htmlTreeBuilder0.parse("{&l+A{xmn_v{'\"", "fieldet");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("Feh", "Feh");
      htmlTreeBuilder0.popStackToClose("Feh");
      htmlTreeBuilder0.generateImpliedEndTags("Feh");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.markInsertionMode();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      htmlTreeBuilder0.reconstructFormattingElements();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ud", "ud");
      Element element0 = htmlTreeBuilder0.insert("ud");
      htmlTreeBuilder0.popStackToBefore("ud");
      htmlTreeBuilder0.maybeSetBaseUri(element0);
      htmlTreeBuilder0.aboveOnStack(element0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("\u0005o=]CYhBJ:/[unN6", "\u0005o=]CYhBJ:/[unN6");
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag0 = new Token.StartTag("9i", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      htmlTreeBuilder0.maybeSetBaseUri(formElement0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.getFormElement();
      htmlTreeBuilder0.setFormElement((FormElement) null);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("WE@", "WE@");
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag0 = new Token.StartTag("WE@", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
      htmlTreeBuilder0.maybeSetBaseUri(formElement0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("Mu", "Mu");
      Element element0 = document0.body();
      htmlTreeBuilder0.removeFromStack(element0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("{Yu[P", (Element) null, "{Yu[P", (ParseErrorList) null);
      htmlTreeBuilder0.removeFromStack((Element) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse(":cntains(%s", ":cntains(%s");
      Element element0 = htmlTreeBuilder0.insert("colgroup");
      htmlTreeBuilder0.insertOnStackAfter(element0, element0);
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("ue", "ue");
      Element element0 = document0.createElement("ue");
      htmlTreeBuilder0.parseFragment("ue", element0, "ue", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      DescendableLinkedList<Element> descendableLinkedList0 = new DescendableLinkedList<Element>();
      htmlTreeBuilder0.stack = descendableLinkedList0;
      String[] stringArray0 = new String[0];
      htmlTreeBuilder0.popStackToClose(stringArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      Document document0 = htmlTreeBuilder0.parse("c)2in", "c)2in", (ParseErrorList) null);
      document0.createElement("k9");
      htmlTreeBuilder0.popStackToClose((String[]) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ue";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      htmlTreeBuilder0.pop();
      String string0 = "fARe@lC";
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("}='|_-|{b[_B>aXHJ", "}='|_-|{b[_B>aXHJ");
      htmlTreeBuilder0.popStackToClose("}='|_-|{b[_B>aXHJ");
      htmlTreeBuilder0.inSelectScope("thead");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.initialiseParse("center", "center", (ParseErrorList) null);
      htmlTreeBuilder0.getActiveFormattingElement("center");
      htmlTreeBuilder0.clearStackToTableRowContext();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("select", "select");
      htmlTreeBuilder0.insert("select");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("q_G{?>>O,NKA;F", "xmp");
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.getActiveFormattingElement("q_G{?>>O,NKA;F");
      htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
      htmlTreeBuilder0.insertInFosterParent(document0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      Document document0 = htmlTreeBuilder0.parse("captin", "captin", (ParseErrorList) null);
      Element element0 = document0.createElement("plaintext");
      htmlTreeBuilder0.parseFragment("captin", element0, "captin", (ParseErrorList) null);
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("1Q-:KJ;cR\"\"'#");
      Element element0 = document0.head();
      htmlTreeBuilder0.parseFragment("1Q-:KJ;cR\"\"'#", element0, "1Q-:KJ;cR\"\"'#", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      DescendableLinkedList<Element> descendableLinkedList0 = new DescendableLinkedList<Element>();
      htmlTreeBuilder0.stack = descendableLinkedList0;
      htmlTreeBuilder0.inButtonScope("AfterAttributeValue_quoted");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("s", "s");
      document0.toString();
      Document document1 = htmlTreeBuilder0.parse("s", "s");
      document1.textNodes();
      ParseErrorList parseErrorList0 = new ParseErrorList(50, 50);
      htmlTreeBuilder0.parseFragment("<html>\n <head />\n <body>\n  s\n </body>\n</html>", document1, "s", parseErrorList0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("header", "header");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.parse("header", "header");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("VyEyE", "VyEyE");
      Element element0 = htmlTreeBuilder0.insert("VyEyE");
      htmlTreeBuilder0.aboveOnStack(element0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("<b>ZzF&#v", "abs:");
      htmlTreeBuilder0.insert("Unexpected token [%s] when in state [%s]");
      htmlTreeBuilder0.pop();
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("cIJ:T?5Nnq&A", "html");
      htmlTreeBuilder0.insert("html");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("Y");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "h?kuY\"PSR1Vh.", attributes0);
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("Y", formElement0, "Y", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse(":cntains(%s", ":cntains(%s");
      htmlTreeBuilder0.insert("colgroup");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      Document document0 = new Document("select");
      Element element0 = document0.createElement("select");
      htmlTreeBuilder0.parseFragment("select", element0, "select", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("ue");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ue";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      htmlTreeBuilder0.pop();
      htmlTreeBuilder0.inSelectScope("fARe@lC");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("ue");
      htmlTreeBuilder0.inSelectScope("ue");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("VyEyE");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("tr");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("body", "body");
      htmlTreeBuilder0.generateImpliedEndTags("body");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("ue");
      htmlTreeBuilder0.popStackToClose("ue");
      Document document0 = htmlTreeBuilder0.parse("N^aQ@Qtt", "N^aQ@Qtt");
      htmlTreeBuilder0.maybeSetBaseUri(document0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = new ParseErrorList(4614, 4614);
      htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
      Element element0 = htmlTreeBuilder0.insert("table");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.getActiveFormattingElement("table");
      htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("yEy");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Document document1 = htmlTreeBuilder0.parse("yEy", "yEy");
      htmlTreeBuilder0.insertInFosterParent(document1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("ue", "ue");
      Element element0 = document0.head();
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("VoyEE", "VoyEE");
      Element element0 = document0.body();
      Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
      htmlTreeBuilder0.aboveOnStack(element1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("VP5=2D0*8/?yww{l", "VP5=2D0*8/?yww{l");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("text", "text");
      htmlTreeBuilder0.getFromStack(")jqbMP<pHN~-");
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      ParseErrorList.tracking((-1795451356));
      htmlTreeBuilder0.parseFragment(")jqbMP<pHN~-", document0, "<l;^Yu\"vW)]SW{", parseErrorList0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("c)2in");
      htmlTreeBuilder0.maybeSetBaseUri(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Token.Character token_Character0 = new Token.Character("c)2in");
      ParseErrorList parseErrorList0 = ParseErrorList.tracking((-2491));
      htmlTreeBuilder0.parseFragment("c)2in", document0, "c)2in", parseErrorList0);
      htmlTreeBuilder0.reconstructFormattingElements();
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.parseFragment("c)2in", document0, "SYSTEM", parseErrorList0);
      htmlTreeBuilder0.reconstructFormattingElements();
      htmlTreeBuilder0.pop();
      htmlTreeBuilder0.reconstructFormattingElements();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("td", "td");
      htmlTreeBuilder0.insert("td");
      htmlTreeBuilder0.resetInsertionMode();
      Token.Character token_Character0 = new Token.Character("td");
      htmlTreeBuilder0.insert(token_Character0);
      htmlTreeBuilder0.pop();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("7CyE", "caption");
      htmlTreeBuilder0.insert("caption");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("ue");
      htmlTreeBuilder0.getFromStack("ue");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("noscript");
      tag0.setSelfClosing();
      Element element0 = new Element(tag0, "(SqY7");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      htmlTreeBuilder0.parseFragment(":matches", element0, "noscript", parseErrorList0);
      htmlTreeBuilder0.getFormElement();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ud", "ud");
      Element element0 = htmlTreeBuilder0.insert("script");
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      ParseErrorList parseErrorList1 = ParseErrorList.noTracking();
      htmlTreeBuilder0.parseFragment("U,~^", element0, "script", parseErrorList1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("e8|Qpr7$", (Element) null, "e8|Qpr7$", (ParseErrorList) null);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.selfClosing = true;
      token_StartTag0.name("e8|Qpr7$");
      htmlTreeBuilder0.insert(token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("table", "table");
      htmlTreeBuilder0.insert("table");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("table", (Element) null, "table", (ParseErrorList) null);
      Element element0 = htmlTreeBuilder0.insert("table");
      htmlTreeBuilder0.insertInFosterParent(element0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      htmlTreeBuilder0.parseFragment("lI0L`2kf9nx:", (Element) null, "lI0L`2kf9nx:", parseErrorList0);
      Token.StartTag token_StartTag0 = new Token.StartTag("fieldset");
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
      htmlTreeBuilder0.parseFragment("lI0L`2kf9nx:", formElement0, "fieldset", parseErrorList0);
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
      htmlTreeBuilder1.generateImpliedEndTags("lI0L`2kf9nx:");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = new Document("yEy");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("ue", "ue");
      htmlTreeBuilder0.insert("frameset");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("table", "tbody");
      htmlTreeBuilder0.insert(document0);
      htmlTreeBuilder0.insert("tbody");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("thead", "thead");
      htmlTreeBuilder0.insert("thead");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("e8|Qpr7$", (Element) null, "e8|Qpr7$", (ParseErrorList) null);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.selfClosing = true;
      token_StartTag0.name("b");
      htmlTreeBuilder0.insert(token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("tfoot", "tfoot");
      htmlTreeBuilder0.insert("tfoot");
      htmlTreeBuilder0.resetInsertionMode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("td", "td");
      htmlTreeBuilder0.insert("td");
      htmlTreeBuilder0.pop();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("[u{\"*_rc5P. ", "[u{\"*_rc5P. ");
      Element element0 = htmlTreeBuilder0.insert("xmp");
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("td", element0, "[CDATA[", parseErrorList0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
      htmlTreeBuilder1.parse("", "");
      Element element0 = htmlTreeBuilder1.insert("title");
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      HtmlTreeBuilder htmlTreeBuilder2 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList1 = htmlTreeBuilder2.errors;
      htmlTreeBuilder1.parseFragment("title", element0, "html", (ParseErrorList) null);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse("r", "ud");
      DescendableLinkedList<Node> descendableLinkedList0 = new DescendableLinkedList<Node>();
      Element element0 = htmlTreeBuilder0.insert("ud");
      htmlTreeBuilder0.inButtonScope("r");
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
      String string0 = "select";
      Document document0 = element0.ownerDocument();
      Document document1 = (Document)document0.removeAttr("ud");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "r";
      document0.getElementsByAttributeValueNot("extended", "6D'}Bb9-Vn2o]");
      stringArray0[1] = "ud";
      stringArray0[2] = "ud";
      stringArray0[3] = "ud";
      stringArray0[4] = "r";
      stringArray0[5] = "ud";
      stringArray0[6] = "ud";
      stringArray0[7] = "r";
      htmlTreeBuilder0.inScope("r", stringArray0);
      document1.text("select");
      htmlTreeBuilder0.resetInsertionMode();
      Tag.valueOf("r");
      htmlTreeBuilder1.inButtonScope("select");
      htmlTreeBuilder0.generateImpliedEndTags(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse("ud", "ud");
      DescendableLinkedList<Node> descendableLinkedList0 = new DescendableLinkedList<Node>();
      Document document1 = Document.createShell("ud");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document1.classNames((Set<String>) linkedHashSet0);
      document1.body();
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document1);
      htmlTreeBuilder0.maybeSetBaseUri(document1);
      htmlTreeBuilder0.insert((Token.Character) null);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = new ParseErrorList(4614, 4614);
      htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
      Element element0 = htmlTreeBuilder0.insert("table");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.aboveOnStack(element0);
      htmlTreeBuilder0.resetInsertionMode();
      Document document0 = new Document("'AFE=$,9E)ou,^y");
      htmlTreeBuilder0.parse("'AFE=$,9E)ou,^y", "RCDATAEndTagOpen");
      htmlTreeBuilder0.getActiveFormattingElement("");
      htmlTreeBuilder0.clearStackToTableContext();
      htmlTreeBuilder0.resetInsertionMode();
      htmlTreeBuilder0.maybeSetBaseUri((Element) null);
      htmlTreeBuilder0.currentElement();
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
      String string0 = "(Q#W6";
      htmlTreeBuilder1.inListItemScope(string0);
      HtmlTreeBuilder htmlTreeBuilder2 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder2.currentElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
      htmlTreeBuilder0.parseFragment("table", (Element) null, "table", (ParseErrorList) null);
      Element element0 = htmlTreeBuilder0.insert("table");
      element0.remove();
      htmlTreeBuilder0.insertInFosterParent(element0);
  }
}
