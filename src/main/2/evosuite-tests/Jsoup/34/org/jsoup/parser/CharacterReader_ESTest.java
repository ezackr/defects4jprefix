/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 03:12:27 GMT 2024
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      characterReader0.rewindToMark();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f]");
      characterReader0.mark();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      characterReader0.advance();
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("jb", string0);
      
      String string1 = characterReader0.consumeDigitSequence();
      assertEquals("2", string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      characterReader0.unconsume();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      String string0 = characterReader0.toString();
      assertEquals("^jb2^~g<$<4v!-", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      String string0 = characterReader0.consumeAsString();
      assertEquals("N", string0);
      
      String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
      assertEquals("p!s$!\"0n^", string1);
      
      String string2 = characterReader0.consumeDigitSequence();
      assertEquals("", string2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
      boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
      boolean boolean1 = characterReader0.matchesDigit();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`1*vz+F`<>Ky&=m");
      char char0 = characterReader0.current();
      assertEquals('`', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      char char0 = characterReader0.consume();
      assertEquals('^', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<ps`yF#K");
      boolean boolean0 = characterReader0.matchConsume("<ps`yF#K");
      assertTrue(boolean0);
      
      char char0 = characterReader0.consume();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<ps`yF#K");
      String string0 = characterReader0.consumeTo('\"');
      assertEquals("<ps`yF#K", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.containsIgnoreCase("1MT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeTo("y9D!o$Qu3|2|hac:cA74");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("4e");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1MT");
      boolean boolean0 = characterReader0.containsIgnoreCase("1MT");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      char[] charArray0 = new char[4];
      charArray0[3] = 's';
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals("Np!", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.consumeToAny((char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
      assertTrue(boolean0);
      
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeTo('Q');
      assertEquals("y9!o$", string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals("Qu", string1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Etd{lj,Jp1vkX");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("Etd", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
      boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
      assertTrue(boolean0);
      
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("y9", string0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("A|:9]e");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
      assertTrue(boolean0);
      
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeAsString();
      assertEquals("y", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("9", string1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("KDf<fn1Z[L54");
      String string0 = characterReader0.consumeAsString();
      assertEquals("K", string0);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals("Df", string1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" Z\"ihRwn4");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      String string0 = characterReader0.consumeAsString();
      assertEquals("N", string0);
      
      String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
      assertEquals("p!s$!\"0n^", string1);
      
      boolean boolean0 = characterReader0.matches('V');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matches('D');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("y9", string0);
      
      boolean boolean0 = characterReader0.matches('D');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.helper.Validate");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      boolean boolean0 = characterReader0.matchConsume("IcP~(9,g5k)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      String string0 = characterReader0.consumeAsString();
      assertEquals("N", string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("Np!s$!\"0n^");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("N");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      String string0 = characterReader0.consumeAsString();
      assertEquals("N", string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("N");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      char[] charArray0 = new char[8];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[7];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      String string0 = characterReader0.consumeTo('h');
      assertEquals("y9!o$Qu3|2|", string0);
      
      char[] charArray0 = new char[8];
      charArray0[2] = 'h';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("Np", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("A|:9]e");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{H&,n(sDN_EUH-X'");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1MT");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
      boolean boolean0 = characterReader0.containsIgnoreCase("^jb2^~g<$<4v!-");
      assertTrue(boolean0);
  }
}
