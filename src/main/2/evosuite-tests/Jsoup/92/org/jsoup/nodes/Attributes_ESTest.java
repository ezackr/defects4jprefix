/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 09:15:32 GMT 2024
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("|6iNf#[wbWPk)fy7~ ", "|6iNf#[wbWPk)fy7~ ");
      attributes1.addAll(attributes0);
      attributes0.removeIgnoreCase("|6iNf#[wbWPk)fy7~ ");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.dataset();
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hashCode();
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      boolean boolean0 = attributes0.equals(attributes1);
      assertNotSame(attributes1, attributes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(" }AzY", " }AzY");
      attributes0.addAll(attributes1);
      Attributes attributes2 = attributes0.put("Th=(q'98@QoF", "Th=(q'98@QoF");
      attributes2.addAll(attributes0);
      assertEquals(3, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Th=(qe@oF", "Th=(qe@oF");
      Attribute attribute0 = new Attribute("Iz$Nl:CT", "Th=(qe@oF", attributes0);
      Attributes attributes2 = attributes0.put(attribute0);
      Attributes attributes3 = attributes2.clone();
      Attributes attributes4 = attributes3.put("org.jsoup.nodes.Attributes$1", true);
      attributes1.addAll(attributes4);
      assertEquals(3, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("|6iNf#[wbWPk)fy7~ ", "|6iNf#[wbWPk)fy7~ ");
      assertEquals(1, attributes0.size());
      
      attributes0.removeIgnoreCase("|6iNf#[wbWPk)fy7~ ");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("Th=(q'98@oF", "Th=(q'98@oF");
      attributes0.get("Th=(q'98@oF");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.get("gcl]e(y^ri+kj3*7s");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Th=(q'98@oF", "Th=(q'98@oF");
      String string0 = attributes1.getIgnoreCase("Th=(q'98@oF");
      assertEquals("Th=(q'98@oF", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.getIgnoreCase("");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("9O,=e", "9O,=e");
      attributes1.put("9O,=e", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("9O,=e", "9O,=e");
      attributes1.normalize();
      attributes1.put("9O,=e", true);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("/;1>pi/d$p]%f fk0", false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Th=(q'98@oF", "Th=(q'98@oF");
      attributes1.remove("Th=(q'98@oF");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("Th=(q'98@F");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hasKey("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", true);
      attributes1.hasKey("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hasKeyIgnoreCase("sj+%ta[");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("1D,2$80wZmRb9", "1D,2$80wZmRb9");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.hasKeyIgnoreCase("1D,2$80wZmRb9");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.addAll(attributes0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("sugh7`l_]b)9]q.kd*j", true);
      attributes0.asList();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put(" }AzY", " }AzY");
      attributes0.asList();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.attributes$dataset", true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes1.html((Appendable) outputStreamWriter0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.attributes$dataset", true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attributes1.html((Appendable) outputStreamWriter0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("AfterDoctypeSystemIdentifier", "AfterDoctypeSystemIdentifier");
      attributes0.toString();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.equals(attributes0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.equals("org.jsoup.nodes.attributes");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("zs*Gz=mV~bED`0F", "zs*Gz=mV~bED`0F");
      Attributes attributes1 = new Attributes();
      attributes0.equals(attributes1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("lzs*Gz=mV~bED`0F", "lzs*Gz=mV~bED`0F");
      Attributes attributes2 = attributes1.clone();
      attributes0.equals(attributes2);
  }
}
