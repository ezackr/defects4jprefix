/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 02:28:43 GMT 2024
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsoup.helper.DataUtil;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataUtil_ESTest extends DataUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataUtil.load((InputStream) null, "9W%", "9W%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.DataUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      // Undeclared exception!
      try { 
        DataUtil.load((InputStream) null, "9W%", "9W%", parser0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.DataUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("2\"#3");
      try { 
        DataUtil.load((File) mockFile0, "2\"#3", "2\"#3");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      File file0 = MockFile.createTempFile("&.JRe_UB.=)Yy vxs#kX", "&.JRe_UB.=)Yy vxs#kX");
      // Undeclared exception!
      try { 
        DataUtil.load(file0, "UTF-8", "&.JRe_UB.=)Yy vxs#kX");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Document document0 = DataUtil.parseByteData(byteBuffer0, "UTF-8", "UTF-8", parser0);
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      File file0 = MockFile.createTempFile("%cGbyq*a=", "%cGbyq*a=");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/%cGbyq*a=0%cGbyq*a=");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "%cGbyq*a=");
      Document document0 = DataUtil.load(file0, (String) null, "%cGbyq*a=");
      assertEquals("%cGbyq*a=", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = DataUtil.getCharsetFromContentType("%cGbyq*a=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = DataUtil.getCharsetFromContentType((String) null);
      assertNull(string0);
  }
}
