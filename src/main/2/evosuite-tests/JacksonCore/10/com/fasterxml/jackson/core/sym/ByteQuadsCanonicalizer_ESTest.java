/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 16:54:06 GMT 2024
 */

package com.fasterxml.jackson.core.sym;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteQuadsCanonicalizer_ESTest extends ByteQuadsCanonicalizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int int0 = byteQuadsCanonicalizer0.hashSeed();
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3654);
      byteQuadsCanonicalizer1.addName("H", 3654, 3654);
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer0.size());
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-279));
      int int0 = byteQuadsCanonicalizer0.bucketCount();
      assertEquals(0, int0);
      assertEquals((-279), byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byteQuadsCanonicalizer0.release();
      assertEquals(0, byteQuadsCanonicalizer0.size());
      assertEquals(839877741, byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-1179));
      byteQuadsCanonicalizer1.release();
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-1));
      byteQuadsCanonicalizer1._count = (-1);
      byteQuadsCanonicalizer1.addName("`Vs;", (-1));
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3654);
      byteQuadsCanonicalizer1._count = 3654;
      byteQuadsCanonicalizer1.addName("H", 3654, 3654);
      byteQuadsCanonicalizer1._count = 32768;
      byteQuadsCanonicalizer1.release();
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-217));
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int int0 = byteQuadsCanonicalizer1.size();
      assertEquals((-217), byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-1171));
      int int0 = byteQuadsCanonicalizer0.size();
      assertEquals(0, int0);
      assertEquals((-1171), byteQuadsCanonicalizer0.hashSeed());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("h ", 0, 0, 0);
      byteQuadsCanonicalizer1.addName("h ", 0);
      byteQuadsCanonicalizer1.toString();
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("FtCI_lP{'", 0);
      byteQuadsCanonicalizer1.toString();
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int[] intArray0 = new int[1];
      byteQuadsCanonicalizer1.findName(intArray0, 0);
      assertEquals(0, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.findName(0);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      int[] intArray0 = new int[1];
      byteQuadsCanonicalizer1.findName(intArray0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.findName(0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      int[] intArray0 = new int[1];
      byteQuadsCanonicalizer1.findName(intArray0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.secondaryCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(0, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.findName(931, (-686));
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-4665));
      byteQuadsCanonicalizer1.addName("_", (-4665), (-4665));
      byteQuadsCanonicalizer1.addName("_", (-4665), (-4665));
      byteQuadsCanonicalizer1.findName((-4665), 328);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("FtCI_lP{'", 0);
      byteQuadsCanonicalizer1.addName("FtCI_lP{'", 384, 0);
      byteQuadsCanonicalizer1.findName(0, (-964));
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0, 0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", 0);
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(0, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("J/^:", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 448, 448);
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Bq", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0, 4096);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-1163));
      byteQuadsCanonicalizer1.addName(") &", (-1163), (-1163), (-1163));
      byteQuadsCanonicalizer1.findName((-1163), (-1163), (-1163));
      assertEquals(1, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("y|!dxR[", 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._secondaryStart = 0;
      byteQuadsCanonicalizer1.addName("Failed rehash(): old count=", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(4, 380, 9);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("J/^:", 0, 0);
      byteQuadsCanonicalizer1.addName("J/^:", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 448, 448);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("Bq", 0, 0);
      byteQuadsCanonicalizer1.addName("Bq", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0, 4096);
      assertEquals(2, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName((int[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[14];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-28));
      int[] intArray0 = new int[42];
      byteQuadsCanonicalizer1.findName(intArray0, 9);
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertEquals(839877741, byteQuadsCanonicalizer1.hashSeed());
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[43];
      intArray1[3] = 7;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[22];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(7);
      byteQuadsCanonicalizer1.addName("Nuj", intArray0, 7);
      byteQuadsCanonicalizer1.findName(intArray0, 7);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-28));
      int[] intArray0 = new int[42];
      byteQuadsCanonicalizer1.addName("2", (-28));
      byteQuadsCanonicalizer1.findName(intArray0, 9);
      assertEquals(1, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[16];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("s=C'c4~", 0);
      byteQuadsCanonicalizer1.addName("s=C'c4~", intArray0, 4);
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._secondaryStart = 0;
      byteQuadsCanonicalizer1.addName("", 0, 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.findName(0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("?f9xNg", 0);
      int[] intArray0 = new int[1];
      byteQuadsCanonicalizer1.findName(intArray0, 0);
      assertEquals(3, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(1);
      byteQuadsCanonicalizer0._spilloverEnd = 1;
      int[] intArray0 = new int[9];
      intArray0[3] = 1;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      assertEquals(1, byteQuadsCanonicalizer0.hashSeed());
      
      byteQuadsCanonicalizer0.findName(1);
      assertEquals(0, byteQuadsCanonicalizer0.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(24);
      byteQuadsCanonicalizer0._spilloverEnd = 24;
      int[] intArray0 = new int[9];
      intArray0[3] = 24;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      intArray0[4] = 24;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName(" ", 0, 0, 0);
      byteQuadsCanonicalizer1._secondaryStart = 0;
      byteQuadsCanonicalizer1.addName(" ", 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", 0);
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", 0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      int[] intArray0 = new int[12];
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("fD9S-L!]*,~R<#F4)", intArray0, 8);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.tertiaryCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.findName(931, (-686));
      assertEquals(4, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("~X8&", 0);
      byteQuadsCanonicalizer1.addName("~X8&", 0);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("~X8&", 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.tertiaryCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("|X7", 0);
      byteQuadsCanonicalizer1.addName("|X7", 0);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("|X7", 0);
      byteQuadsCanonicalizer1.findName(0, 0);
      assertEquals(3, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("y|!dxR[", 0);
      byteQuadsCanonicalizer1._hashSize = 6;
      byteQuadsCanonicalizer1.addName("y|!dxR[", 384, 384);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("y|!dxR[", 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(101, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      byteQuadsCanonicalizer1.addName("", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(1, byteQuadsCanonicalizer1.secondaryCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("|X7", 0);
      byteQuadsCanonicalizer1.addName("|X7", (-112));
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("|X7", (-112), 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertEquals(3, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0, 0);
      byteQuadsCanonicalizer1.findName(0, 0, 0);
      assertTrue(byteQuadsCanonicalizer1.maybeDirty());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("om.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", 0);
      byteQuadsCanonicalizer1.addName("om.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", 0, 0, 0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.addName("om.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", intArray0, 4);
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(3, byteQuadsCanonicalizer1.totalCount());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1.addName("=9]4wn ngGiXlu$*^E7", 0, 0, 0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("=9]4wn ngGiXlu$*^E7", 4);
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer1._hashSize = 0;
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      byteQuadsCanonicalizer1.findName(intArray0, 4);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[51];
      intArray1[3] = 5;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(6);
      int[] intArray0 = new int[19];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(6);
      byteQuadsCanonicalizer1.addName("l^Om{Y%%", intArray0, 6);
      byteQuadsCanonicalizer1.findName(intArray0, 6);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[31];
      intArray1[3] = 8;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[4];
      intArray1[3] = 9;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[6];
      int[] intArray1 = new int[20];
      intArray1[3] = 6;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      int[] intArray0 = new int[10];
      int[] intArray1 = new int[14];
      intArray1[3] = 4;
      byteQuadsCanonicalizer0._hashArea = intArray1;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.findName(intArray0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(11);
      int[] intArray0 = new int[16];
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(11);
      byteQuadsCanonicalizer1.addName("6l3", intArray0, 11);
      String string0 = byteQuadsCanonicalizer1.findName(intArray0, 11);
      assertEquals(64, byteQuadsCanonicalizer1.bucketCount());
      assertNotNull(string0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
      assertEquals(11, byteQuadsCanonicalizer1.hashSeed());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot((-17));
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild((-17));
      byteQuadsCanonicalizer1._count = 56;
      byteQuadsCanonicalizer1.addName("com.fasterxml.jackson.core.JsonFactory$Feature", 57);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("com.fasterxml.jackson.core.JsonFactory$Feature", 56, 512);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=57, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._hashSize = 0;
      byteQuadsCanonicalizer1.addName("", 0, 0);
      byteQuadsCanonicalizer1.addName("", 0);
      assertEquals(2, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3);
      byteQuadsCanonicalizer1._count = 41;
      byteQuadsCanonicalizer1.addName("@5VLVxAW+B", 42);
      assertEquals(42, byteQuadsCanonicalizer1.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      byteQuadsCanonicalizer1._tertiaryStart = 0;
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1.addName("?f9xNg", 0, 0);
      byteQuadsCanonicalizer1._spilloverEnd = 4096;
      byteQuadsCanonicalizer1._tertiaryShift = 0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("?f9xNg", 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4096
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(473);
      int[] intArray0 = new int[4];
      intArray0[3] = 473;
      byteQuadsCanonicalizer0._hashArea = intArray0;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("n^OunZh_KA_s,", 473);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot(0);
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(0);
      int[] intArray0 = new int[9];
      byteQuadsCanonicalizer1._hashSize = 0;
      byteQuadsCanonicalizer1.addName((String) null, intArray0, 4);
      byteQuadsCanonicalizer1.addName((String) null, 0);
      assertEquals(0, byteQuadsCanonicalizer1.spilloverCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      int[] intArray0 = new int[41];
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0.addName("e:6=)", intArray0, (-28));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3585);
      byteQuadsCanonicalizer1._count = 3585;
      byteQuadsCanonicalizer1.addName(" copyCout=", 3585);
      byteQuadsCanonicalizer1._hashSize = 65537;
      byteQuadsCanonicalizer1.addName(" copyCout=", 0);
      assertEquals(1, byteQuadsCanonicalizer1.primaryCount());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(3176);
      byteQuadsCanonicalizer1._count = 3176;
      byteQuadsCanonicalizer1.addName("", 3176, 3177, 3177);
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer1.addName("", 3176, 3176);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed rehash(): old count=3177, copyCount=1
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      byteQuadsCanonicalizer0._hashSize = 32768;
      // Undeclared exception!
      try { 
        byteQuadsCanonicalizer0._reportTooManyCollisions();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Spill-over slots in symbol table with 0 entries, hash area of 32768 slots is now full (all 4096 slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`
         //
         verifyException("com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(1551);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(515);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = ByteQuadsCanonicalizer._calcTertiaryShift(4747);
      assertEquals(7, int0);
  }
}
