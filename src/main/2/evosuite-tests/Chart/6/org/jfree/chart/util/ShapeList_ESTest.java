/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 20:56:46 GMT 2024
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Rectangle;
import java.awt.Shape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.ShapeList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShapeList_ESTest extends ShapeList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Object object0 = shapeList0.clone();
      assertNotSame(shapeList0, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Shape shape0 = shapeList0.getShape(8);
      assertNull(shape0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Rectangle rectangle0 = new Rectangle();
      shapeList0.setShape(8, rectangle0);
      assertEquals(9, shapeList0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      boolean boolean0 = shapeList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      boolean boolean0 = shapeList0.equals(shapeList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      ShapeList shapeList1 = new ShapeList();
      boolean boolean0 = shapeList0.equals(shapeList1);
      assertTrue(boolean0);
  }
}
