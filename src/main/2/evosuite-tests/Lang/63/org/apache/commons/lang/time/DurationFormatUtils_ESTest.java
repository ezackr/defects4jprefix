/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 15:56:45 GMT 2024
 */

package org.apache.commons.lang.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.temporal.ChronoField;
import java.util.Locale;
import java.util.TimeZone;
import org.apache.commons.lang.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(1894L);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(1869L, 1869L);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DurationFormatUtils.formatDuration(2349L, "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
      durationFormatUtils_Token0.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO((-2419202872L), (-676L));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(3599980L);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.s;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("s");
      durationFormatUtils_Token0.equals("s");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DurationFormatUtils.lexx("i]_L C)}ne<~Vf&");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(159L, false, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("y");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DurationFormatUtils.formatDurationWords((-271L), true, true);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DurationFormatUtils.formatDurationISO((-2680L));
      DurationFormatUtils.formatPeriod((-2680L), (-2680L), "java.lang.StringBuffer@00000000160java.lang.StringBuffer@00000000170java.lang.StringBuffer@00000000180java.lang.StringBuffer@00000000190java.lang.StringBuffer@00000000200java.lang.StringBuffer@0000000021-2java.lang.StringBuffer@000000002220java.lang.StringBuffer@0000000023");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = (String)DurationFormatUtils.y;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("y");
      durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null, 1001);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.YEAR_OF_ERA;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(chronoField0);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[5];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 11, 11, 11, 11, 11, 11, 3, false);
      durationFormatUtils_Token0.equals(chronoField0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN;
      DurationFormatUtils.formatPeriod((-16L), (-16L), "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils.formatPeriod((-271L), (-271L), "`[C07r+nS+!!JL1wAik", false, timeZone0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(0, 0, 0, 0, 0);
      DurationFormatUtils.reduceAndCorrect(mockGregorianCalendar0, mockGregorianCalendar1, 0, 0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(1310L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010310");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010310", (-3174));
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO((-22L), 2419200000L);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DurationFormatUtils.formatPeriod(1000L, 2419202215L, "org.apache.commons.lang.time.DurationFormatUtils$Token");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DurationFormatUtils.formatPeriod(1000L, 2419202215L, "ygOT!1^^+j");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(1665L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuffer@000000000800java.lang.StringBuffer@000000000901java.lang.StringBuffer@0000000010665");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("Minimum abbreviation width with offset is 7");
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DurationFormatUtils.formatDurationWords((-1L), false, false);
      StringBuffer stringBuffer0 = new StringBuffer("0java.lang.StringBuffer@00000000090java.lang.StringBuffer@00000000100java.lang.StringBuffer@00000000110java.lang.StringBuffer@0000000012");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0, (-981));
      durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DurationFormatUtils.formatPeriod(1L, 2419202222L, "Minimum abbreviation width is 4");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long(121);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(long0, 121);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
  }
}
