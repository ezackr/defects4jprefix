/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 15:43:50 GMT 2024
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.ensureCapacity(250);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(20);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("s3<q9e$", 1467);
      String string0 = entities_ArrayEntityMap0.name(1467);
      assertEquals("s3<q9e$", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.add(")KXt]K.`5f=z\"S/", 972);
      int int0 = entities_TreeEntityMap0.value(")KXt]K.`5f=z\"S/");
      assertEquals(972, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(128);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "hRFjf+K&amp;:&apos;Ld&amp;`LI");
      assertEquals("hRFjf+K&:'Ld&`LI", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      int int0 = entities_TreeEntityMap0.value(")KXt]XK|.`/f=fS/");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.XML.entityName(1040);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("org.apache.commons.lang.IntHashMap", 945);
      int int0 = entities_BinaryEntityMap0.value("sigmaf");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("sigmaf", 945);
      int int0 = entities_BinaryEntityMap0.value("sigmaf");
      assertEquals(945, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("88B+_@", 2299);
      entities_BinaryEntityMap0.add("88B+_@", (-1103));
      entities_BinaryEntityMap0.add("88B+_@", 2299);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.escape("jkxz?L&#WQUl;Cy>A");
      assertEquals("jkxz?L&amp;#WQUl;Cy&gt;A", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.escape((Writer) stringWriter0, "ksx?L&#WQUl1;Cy>A");
      assertEquals("ksx?L&amp;#WQUl1;Cy&gt;A", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.XML.unescape("kx?L&#XWQUl1;CymA");
      assertEquals("kx?L&#XWQUl1;CymA", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("l:");
      assertEquals("l:", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("Ykr?~&#Ul;tk&0A8");
      assertEquals("Ykr?~&#Ul;tk&0A8", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.unescape("YkY&?~&#w%;|d!48");
      assertEquals("YkY&?~&#w%;|d!48", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("_&;+'G&;9");
      assertEquals("_&;+'G&;9", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("{:t!PL>r./HrE&?~L;");
      assertEquals("{:t!PL>r./HrE&?~L;", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("YkYX?~&#;A8");
      assertEquals("YkYX?~&#;A8", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("hRFjf+:'Ld&amp;`LI");
      assertEquals("hRFjf+:'Ld&`LI", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter(724);
      entities0.unescape((Writer) stringWriter0, "DDb+yvh");
      assertEquals("DDb+yvh", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "kr?~&#Ul;tk&0A8");
      assertEquals("kr?~&#Ul;tk&0A8", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Entities entities0 = new Entities();
      entities0.unescape((Writer) stringWriter0, "?k&reM?Hng~&#x;d!A8");
      assertEquals("?k&reM?Hng~&#x;d!A8", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "YkYX?~&;A8");
      assertEquals("YkYX?~&;A8", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "YkYX?~&#;A8");
      assertEquals("YkYX?~&#;A8", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter(724);
      entities0.unescape((Writer) stringWriter0, "kx?L&#XWQUl1;CymA");
      assertEquals("kx?L&#XWQUl1;CymA", stringWriter0.toString());
  }
}
