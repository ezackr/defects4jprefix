/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Apr 07 22:12:59 GMT 2024
 */

package org.apache.commons.math.optimization.univariate;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class MultiStartUnivariateRealOptimizer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiStartUnivariateRealOptimizer_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.math.exception.NumberIsTooSmallException",
      "org.apache.commons.math.exception.NullArgumentException",
      "org.apache.commons.math.MathException",
      "org.apache.commons.math.util.FastMath",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm",
      "org.apache.commons.math.optimization.SimpleScalarValueChecker",
      "org.apache.commons.math.optimization.AbstractConvergenceChecker",
      "org.apache.commons.math.random.Well19937c",
      "org.apache.commons.math.random.Well19937a",
      "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer",
      "org.apache.commons.math.analysis.UnivariateRealFunction",
      "org.apache.commons.math.optimization.SimpleVectorialPointChecker",
      "org.apache.commons.math.analysis.ComposableFunction$2",
      "org.apache.commons.math.analysis.ComposableFunction$1",
      "org.apache.commons.math.analysis.ComposableFunction$4",
      "org.apache.commons.math.exception.MathIllegalArgumentException",
      "org.apache.commons.math.analysis.ComposableFunction$3",
      "org.apache.commons.math.analysis.ComposableFunction$6",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunction",
      "org.apache.commons.math.analysis.ComposableFunction$5",
      "org.apache.commons.math.DuplicateSampleAbscissaException",
      "org.apache.commons.math.analysis.ComposableFunction$17",
      "org.apache.commons.math.analysis.ComposableFunction$16",
      "org.apache.commons.math.analysis.ComposableFunction$19",
      "org.apache.commons.math.analysis.ComposableFunction$18",
      "org.apache.commons.math.analysis.ComposableFunction$13",
      "org.apache.commons.math.MathRuntimeException",
      "org.apache.commons.math.analysis.ComposableFunction$12",
      "org.apache.commons.math.analysis.ComposableFunction$15",
      "org.apache.commons.math.ArgumentOutsideDomainException",
      "org.apache.commons.math.MathRuntimeException$1",
      "org.apache.commons.math.analysis.ComposableFunction$14",
      "org.apache.commons.math.MathRuntimeException$2",
      "org.apache.commons.math.MathRuntimeException$3",
      "org.apache.commons.math.MathRuntimeException$4",
      "org.apache.commons.math.analysis.ComposableFunction$11",
      "org.apache.commons.math.random.AbstractRandomGenerator",
      "org.apache.commons.math.random.Well44497b",
      "org.apache.commons.math.MathRuntimeException$5",
      "org.apache.commons.math.analysis.ComposableFunction$10",
      "org.apache.commons.math.random.Well44497a",
      "org.apache.commons.math.MathRuntimeException$6",
      "org.apache.commons.math.MathRuntimeException$7",
      "org.apache.commons.math.MathRuntimeException$8",
      "org.apache.commons.math.MathRuntimeException$9",
      "org.apache.commons.math.optimization.univariate.BaseUnivariateRealOptimizer",
      "org.apache.commons.math.random.MersenneTwister",
      "org.apache.commons.math.random.AbstractWell",
      "org.apache.commons.math.analysis.ComposableFunction$28",
      "org.apache.commons.math.exception.ConvergenceException",
      "org.apache.commons.math.analysis.ComposableFunction$27",
      "org.apache.commons.math.analysis.ComposableFunction$29",
      "org.apache.commons.math.analysis.ComposableFunction$24",
      "org.apache.commons.math.analysis.ComposableFunction$23",
      "org.apache.commons.math.analysis.ComposableFunction$26",
      "org.apache.commons.math.analysis.ComposableFunction$25",
      "org.apache.commons.math.analysis.ComposableFunction$8",
      "org.apache.commons.math.analysis.ComposableFunction$20",
      "org.apache.commons.math.analysis.ComposableFunction$7",
      "org.apache.commons.math.analysis.ComposableFunction$22",
      "org.apache.commons.math.analysis.ComposableFunction$9",
      "org.apache.commons.math.analysis.ComposableFunction$21",
      "org.apache.commons.math.optimization.BaseOptimizer",
      "org.apache.commons.math.exception.util.Localizable",
      "org.apache.commons.math.random.Well512a",
      "org.apache.commons.math.FunctionEvaluationException",
      "org.apache.commons.math.exception.MaxCountExceededException",
      "org.apache.commons.math.optimization.VectorialPointValuePair",
      "org.apache.commons.math.random.BitsStreamGenerator",
      "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer$1",
      "org.apache.commons.math.analysis.ComposableFunction$35",
      "org.apache.commons.math.analysis.ComposableFunction$34",
      "org.apache.commons.math.analysis.ComposableFunction$36",
      "org.apache.commons.math.optimization.univariate.UnivariateRealOptimizer",
      "org.apache.commons.math.analysis.ComposableFunction$31",
      "org.apache.commons.math.analysis.ComposableFunction$30",
      "org.apache.commons.math.analysis.ComposableFunction$33",
      "org.apache.commons.math.analysis.ComposableFunction$32",
      "org.apache.commons.math.optimization.GoalType",
      "org.apache.commons.math.exception.util.ArgUtils",
      "org.apache.commons.math.exception.MathIllegalStateException",
      "org.apache.commons.math.random.JDKRandomGenerator",
      "org.apache.commons.math.util.Incrementor",
      "org.apache.commons.math.exception.NotStrictlyPositiveException",
      "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction",
      "org.apache.commons.math.analysis.MultivariateRealFunction",
      "org.apache.commons.math.random.RandomGenerator",
      "org.apache.commons.math.optimization.univariate.BrentOptimizer",
      "org.apache.commons.math.exception.MathIllegalNumberException",
      "org.apache.commons.math.optimization.SimpleRealPointChecker",
      "org.apache.commons.math.analysis.BivariateRealFunction",
      "org.apache.commons.math.MathRuntimeException$10",
      "org.apache.commons.math.MathRuntimeException$11",
      "org.apache.commons.math.optimization.SimpleVectorialValueChecker",
      "org.apache.commons.math.analysis.ComposableFunction",
      "org.apache.commons.math.optimization.ConvergenceChecker",
      "org.apache.commons.math.exception.NoDataException",
      "org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair",
      "org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction",
      "org.apache.commons.math.exception.TooManyEvaluationsException",
      "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer",
      "org.apache.commons.math.random.Well1024a",
      "org.apache.commons.math.optimization.RealPointValuePair",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm",
      "org.apache.commons.math.exception.util.LocalizedFormats",
      "org.apache.commons.math.random.RandomAdaptor"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.commons.math.optimization.univariate.BaseUnivariateRealOptimizer", false, MultiStartUnivariateRealOptimizer_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiStartUnivariateRealOptimizer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer",
      "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer$1",
      "org.apache.commons.math.exception.util.LocalizedFormats",
      "org.apache.commons.math.util.FastMath",
      "org.apache.commons.math.random.BitsStreamGenerator",
      "org.apache.commons.math.random.AbstractWell",
      "org.apache.commons.math.random.Well19937a",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunction",
      "org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction",
      "org.apache.commons.math.MathRuntimeException",
      "org.apache.commons.math.MathRuntimeException$4",
      "org.apache.commons.math.random.Well1024a",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm",
      "org.apache.commons.math.random.MersenneTwister",
      "org.apache.commons.math.exception.MathIllegalStateException",
      "org.apache.commons.math.exception.ConvergenceException",
      "org.apache.commons.math.exception.util.ArgUtils",
      "org.apache.commons.math.random.Well19937c",
      "org.apache.commons.math.exception.MathIllegalArgumentException",
      "org.apache.commons.math.exception.MathIllegalNumberException",
      "org.apache.commons.math.exception.NumberIsTooSmallException",
      "org.apache.commons.math.exception.NotStrictlyPositiveException",
      "org.apache.commons.math.random.Well44497a",
      "org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm",
      "org.apache.commons.math.random.Well44497b",
      "org.apache.commons.math.random.RandomAdaptor",
      "org.apache.commons.math.random.Well512a",
      "org.apache.commons.math.random.JDKRandomGenerator",
      "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer",
      "org.apache.commons.math.optimization.univariate.BrentOptimizer",
      "org.apache.commons.math.util.Incrementor",
      "org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair",
      "org.apache.commons.math.exception.NoDataException"
    );
  }
}
