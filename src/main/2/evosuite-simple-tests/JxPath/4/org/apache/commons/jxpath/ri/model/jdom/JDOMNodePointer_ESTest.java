/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 09:54:41 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.ProcessingInstruction;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isCollection();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0, "");
        NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("");
        assertFalse(nodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Element element0 = new Element("mnME");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Element element0 = new Element("mnME");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        assertEquals("mnME", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Object object0 = new Object();
        Locale locale0 = Locale.ITALIAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(object0, locale0);
        int int0 = jDOMNodePointer0.getLength();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        CDATA cDATA0 = new CDATA("");
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeTypeTest0, true, jDOMNodePointer0);
        assertEquals(0, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Element element0 = new Element("R3lI3g", "R3lI3g", "R3lI3g");
        Locale locale0 = Locale.KOREA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "R3lI3g");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        namespaceResolver0.setNamespaceContextPointer(jDOMNodePointer1);
        jDOMNodePointer1.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("id('R3lI3g')/R3lI3g:R3lI3g[1]", string0);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Element element0 = new Element("K", "K");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
        jDOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        QName qName0 = jDOMNodePointer0.getName();
        // Undeclared exception!
        try {
            jDOMNodePointer0.createChild(jXPathContext0, qName0, 0, (Object) jXPathContext0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        Element element0 = new Element("C", "C", "C");
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("C");
        assertEquals("C", string0);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        Element element0 = new Element("ln.", "ln.", "ln.");
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
        String string0 = jDOMNodePointer0.getNamespaceURI("ln.");
        assertEquals("ln.", string0);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        Element element0 = new Element("ln.");
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
        String string0 = jDOMNodePointer0.getNamespaceURI("ln.");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("", locale0, "");
        String string0 = jDOMNodePointer0.getNamespaceURI("");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        Element element0 = new Element("lng");
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("lng");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        Element element0 = new Element("lng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        assertEquals("lng", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Element element0 = new Element("lng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, (Locale) null);
        // Undeclared exception!
        try {
            jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // JXPath internal error: compareChildNodes called for null
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        Element element0 = new Element("K");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
        element0.addContent((Content) cDATA0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        Element element0 = new Element("l5dg", "l5dg", "l5dg");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue("l5dg");
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer0, (Locale) null);
        int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        Element element0 = new Element("l5dg", "l5dg", "l5dg");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue("l5dg");
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, jDOMNodePointer0, (Locale) null);
        int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        assertEquals("l5dg:l5dg", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test2023() throws Throwable {
        Element element0 = new Element("K", "K");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
        element0.addContent((Content) cDATA0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test2124() throws Throwable {
        CDATA cDATA0 = new CDATA("t");
        Locale locale0 = Locale.CANADA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2225() throws Throwable {
        Element element0 = new Element("LgHVJ3", "LgHVJ3", "LgHVJ3");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2326() throws Throwable {
        Element element0 = new Element("LgHVJ3", "LgHVJ3", "LgHVJ3");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue("LgHVJ3");
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2427() throws Throwable {
        Element element0 = new Element("lZ-kng");
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2528() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("org.apache.commons.jxpath.ri.NamespaceResolver", "org.apache.commons.jxpath.ri.NamespaceResolver");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        assertEquals("org.apache.commons.jxpath.ri.NamespaceResolver", qName0.getName());
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("quWi", "quWi");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("quWi", object0);
    }

    @Test(timeout = 4000)
    public void test2630() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("quWi", "quWi");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test2731() throws Throwable {
        Element element0 = new Element("lng");
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue(jDOMNodePointer0);
        assertEquals(1, jDOMNodePointer0.getLength());
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        CDATA cDATA0 = new CDATA("+ZQz7");
        Locale locale0 = Locale.FRANCE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("+ZQz7", object0);
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3034() throws Throwable {
        CDATA cDATA0 = new CDATA("");
        Locale locale0 = Locale.CANADA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, "");
        // Undeclared exception!
        try {
            jDOMNodePointer0.setValue("");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3135() throws Throwable {
        CDATA cDATA0 = new CDATA("EntityRef");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, (Locale) null);
        // Undeclared exception!
        try {
            jDOMNodePointer0.setValue((Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3236() throws Throwable {
        Locale locale0 = Locale.PRC;
        CDATA cDATA0 = new CDATA("/text()");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        jDOMNodePointer0.setValue("/text()");
        assertEquals("/text()", cDATA0.getValue());
    }

    @Test(timeout = 4000)
    public void test3237() throws Throwable {
        Locale locale0 = Locale.PRC;
        CDATA cDATA0 = new CDATA("/text()");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        jDOMNodePointer0.setValue("/text()");
        assertEquals("/text()", cDATA0.getText());
    }

    @Test(timeout = 4000)
    public void test3338() throws Throwable {
        Element element0 = new Element("r", "r", "r");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue(element0);
        assertEquals("r", element0.getName());
    }

    @Test(timeout = 4000)
    public void test3439() throws Throwable {
        Element element0 = new Element("Bl");
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
        jDOMNodePointer0.setValue(cDATA0);
        assertFalse(jDOMNodePointer0.isCollection());
    }

    @Test(timeout = 4000)
    public void test3540() throws Throwable {
        Element element0 = new Element("mnME");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("mnME", "~F+B;C");
        jDOMNodePointer0.setValue(processingInstruction0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test3641() throws Throwable {
        Element element0 = new Element("ng", "ng", "ng");
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        Comment comment0 = new Comment("/processing-instruction('");
        jDOMNodePointer0.setValue(comment0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test3742() throws Throwable {
        Element element0 = new Element("r");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue((Object) null);
        assertFalse(jDOMNodePointer0.isContainer());
    }

    @Test(timeout = 4000)
    public void test3843() throws Throwable {
        Element element0 = new Element("org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer", "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer", "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer");
        Document document0 = new Document(element0);
        DocType docType0 = new DocType("org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer", "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer", "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer");
        document0.setDocType(docType0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        jDOMNodePointer0.setValue(document0);
        assertEquals(1, element0.getContentSize());
    }

    @Test(timeout = 4000)
    public void test3944() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4045() throws Throwable {
        Element element0 = new Element("lZ-kng", "lZ-kng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertEquals("lZ-kng", nodeNameTest0.toString());
    }

    @Test(timeout = 4000)
    public void test4046() throws Throwable {
        Element element0 = new Element("lZ-kng", "lZ-kng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4147() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4248() throws Throwable {
        Element element0 = new Element("ng", "ng");
        Locale locale0 = Locale.KOREA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4349() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("quWi", "quWi");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("quWi");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4450() throws Throwable {
        Element element0 = new Element("nME", "nME");
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, (Locale) null);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4551() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4652() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4753() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4854() throws Throwable {
        Element element0 = new Element("lng");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4955() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        Locale locale0 = Locale.ITALIAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5056() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5157() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5258() throws Throwable {
        Element element0 = new Element("lng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "lng");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5359() throws Throwable {
        CDATA cDATA0 = new CDATA("t");
        String string0 = JDOMNodePointer.getPrefix(cDATA0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5460() throws Throwable {
        Element element0 = new Element("lng", "lng", "lng");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5461() throws Throwable {
        Element element0 = new Element("lng", "lng", "lng");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertEquals("lng", string0);
    }

    @Test(timeout = 4000)
    public void test5562() throws Throwable {
        Element element0 = new Element("Wlng");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5663() throws Throwable {
        Element element0 = new Element("lg");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        QName qName1 = nodePointer0.getName();
        assertTrue(qName1.equals((Object) qName0));
    }

    @Test(timeout = 4000)
    public void test5764() throws Throwable {
        Element element0 = new Element("lg", "lg", "lg");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        QName qName1 = nodePointer0.getName();
        assertEquals("lg:lg", qName1.toString());
    }

    @Test(timeout = 4000)
    public void test5865() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        String string0 = JDOMNodePointer.getLocalName(locale0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5966() throws Throwable {
        Element element0 = new Element("C", "C", "C");
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLanguage("C");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6067() throws Throwable {
        Locale locale0 = Locale.ITALIAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLanguage("<<unknown namespace>>");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6168() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("quWi", "quWi");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root JDOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6269() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        QName qName0 = new QName("<<unknown namespace>>");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6370() throws Throwable {
        Element element0 = new Element("K", "K");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
        // Undeclared exception!
        try {
            jDOMNodePointer1.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot create an attribute for path /text()[1]/@K, operation is not allowed for this type of node
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6471() throws Throwable {
        Element element0 = new Element("E");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Unknown namespace prefix: http
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6572() throws Throwable {
        Element element0 = new Element("lg", "lg", "lg");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) jDOMNodePointer0);
        QName qName0 = jDOMNodePointer0.getName();
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertEquals("lg:lg", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test6673() throws Throwable {
        Element element0 = new Element("mnME");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = jDOMNodePointer0.getName();
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertEquals("mnME", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test6774() throws Throwable {
        Element element0 = new Element("K", "K");
        Locale locale0 = Locale.ENGLISH;
        CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        element0.addContent((Content) cDATA0);
        jDOMNodePointer0.remove();
        assertFalse(jDOMNodePointer0.isContainer());
    }

    @Test(timeout = 4000)
    public void test6875() throws Throwable {
        Element element0 = new Element("lng");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        // Undeclared exception!
        try {
            jDOMNodePointer1.asPath();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6976() throws Throwable {
        Element element0 = new Element("R3lg");
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "R3lg");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        jDOMNodePointer1.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("id('R3lg')/R3lg[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7077() throws Throwable {
        Element element0 = new Element("R3lg", "R3lg");
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "R3lg");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        namespaceResolver0.setNamespaceContextPointer(jDOMNodePointer1);
        jDOMNodePointer1.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("id('R3lg')/node()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7178() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("K", "K");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/processing-instruction('K')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7279() throws Throwable {
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0, "id('");
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("id('id(&apos;')", string0);
    }

    @Test(timeout = 4000)
    public void test7380() throws Throwable {
        Locale locale0 = Locale.KOREA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0, "n ~9a)qOGd[R\"IcO");
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("id('n ~9a)qOGd[R&quot;IcO')", string0);
    }

    @Test(timeout = 4000)
    public void test7481() throws Throwable {
        Element element0 = new Element("t", "t");
        CDATA cDATA0 = new CDATA("t");
        Locale locale0 = Locale.CANADA;
        element0.setText("org.jdom.Element@0000000001");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        element0.addContent((Content) cDATA0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/text()[2]", string0);
    }

    @Test(timeout = 4000)
    public void test7582() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("K", "K");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, (Locale) null);
        Element element0 = new Element("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer");
        element0.addContent((Content) processingInstruction0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/processing-instruction('K')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7683() throws Throwable {
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, (Locale) null);
        boolean boolean0 = jDOMNodePointer0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7784() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7885() throws Throwable {
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "Q-BR1x");
        Comment comment0 = new Comment("Q-BR1x");
        Locale locale0 = Locale.KOREAN;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, comment0, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, processingInstructionTest0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(processingInstructionTest0, locale0, "<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7986() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        QName qName0 = new QName("", "");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "", locale0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodePointer0, qName0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "http://www.w3.org/XML/1998/namespace");
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
        assertFalse(boolean0);
    }
}
