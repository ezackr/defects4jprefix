/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 11:18:26 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLBodyElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLOptGroupElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLHeadElementImpl;
import org.apache.wml.dom.WMLOptionElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Node;
import org.w3c.dom.html.HTMLElement;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLanguage("http://www.w3.org/2000/xmlns/");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isCollection();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        // Undeclared exception!
        try {
            dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) locale0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
        assertTrue(nodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        int int0 = dOMNodePointer0.getLength();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodePointer nodePointer0 = NodePointer.verify(dOMNodePointer0);
        assertEquals(Integer.MIN_VALUE, nodePointer0.getIndex());
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Locale locale0 = Locale.ROOT;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "xmlns");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "M_9C2YRf");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOptGroupElementImpl0);
        QName qName0 = new QName("xmlns");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        String string0 = dOMNodePointer0.getDefaultNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeIterator nodeIterator0 = dOMNodePointer0.childIterator((NodeTest) null, false, dOMNodePointer0);
        assertEquals(0, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "Factory could not create a child node for path: ");
        QName qName0 = new QName("Factory could not create a child node for path: ");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Factory could not create a child node for path: ");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLOptGroupElementImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, ",e(");
        QName qName0 = new QName(",e(", ",e(");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ",e(");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLOptGroupElementImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "[");
        QName qName0 = new QName("[");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLOptGroupElementImpl0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        QName qName0 = new QName(")S?WD", ")S?WD");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, ")S?WD", ")S?WD", ")S?WD");
        boolean boolean0 = DOMNodePointer.testNode((Node) pSVIElementNSImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "6&");
        QName qName0 = new QName("6&");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "6&");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLOptGroupElementImpl0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "n3/{", "n3/{");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("n3/{");
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("SgT2za,j>-cok$nno3*");
        boolean boolean0 = DOMNodePointer.testNode((Node) cDATASection0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "d[==@#l %f;");
        boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "'GxTi~exjK~\"`y", "'GxTi~exjK~\"`y");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xml:space");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "YV;=(f'0", "YV;=(f'0");
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        assertEquals("YV;=(f'0", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "`:3tCO'-PJ%#rz", "`:3tCO'-PJ%#rz", "`:3tCO'-PJ%#rz");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
        dOMNodePointer1.asPath();
        String string0 = dOMNodePointer1.asPath();
        assertEquals("/node()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        String string0 = dOMNodePointer0.getNamespaceURI("");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "/");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "/");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        QName qName0 = new QName("xmlns", "<<unknown namespace>>");
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
            //
            // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified.
            //
            verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
        }
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xml");
        assertEquals("http://www.w3.org/XML/1998/namespace", string0);
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI("xml");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "V*,g'mX/Q>X9h.(sZ");
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "V*,g'mX/Q>X9h.(sZ");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOptGroupElementImpl0);
        QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace");
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Unknown namespace prefix: <<unknown namespace>>
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.getNamespaceURI("l{*[?7hE{");
        String string0 = dOMNodePointer0.getNamespaceURI("l{*[?7hE{");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getDefaultNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        hTMLDocumentImpl0.setTitle("4v!r>2zUw8@+");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
        WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "~uCGO4YX47%W)aTn&");
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLOptionElementImpl0, locale0, "A'}yF");
        wMLOptionElementImpl0.setXmlLang("/text()[1]");
        boolean boolean0 = dOMNodePointer0.isLanguage("zC9LgENs?");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "xmlns");
        String string0 = DOMNodePointer.findEnclosingAttribute(hTMLOptGroupElementImpl0, "http://www.w3.org/XML/1998/namespace");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test4142() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(dOMNodePointer0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4243() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "6O 6p6?+xRkW.-");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
        dOMNodePointer0.setValue(cDATASectionImpl0);
        assertTrue(dOMNodePointer0.isActual());
    }

    @Test(timeout = 4000)
    public void test4344() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue((Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4445() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        hTMLDocumentImpl0.getDocumentElement();
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue("http://www.w3.org/XML/1998/namespace");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4546() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.JAPAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "xmlns");
        HTMLBodyElementImpl hTMLBodyElementImpl0 = new HTMLBodyElementImpl(hTMLDocumentImpl0, "xmlns");
        dOMNodePointer0.setValue(hTMLBodyElementImpl0);
        assertFalse(dOMNodePointer0.isContainer());
    }

    @Test(timeout = 4000)
    public void test4647() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(attrNSImpl0);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
            //
            // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted.
            //
            verifyException("org.apache.xerces.dom.ParentNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test4748() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator");
        CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(documentTypeImpl0);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(coreDocumentImpl0);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
            //
            // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
            //
            verifyException("org.apache.xerces.dom.ParentNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test4849() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.setValue((Object) null);
        assertFalse(dOMNodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test4950() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.setValue("");
        assertFalse(dOMNodePointer0.isCollection());
    }

    @Test(timeout = 4000)
    public void test5051() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        QName qName0 = dOMNodePointer0.getName();
        // Undeclared exception!
        try {
            dOMNodePointer0.createChild(jXPathContext0, qName0, 60);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5152() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.GERMAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute((JXPathContext) null, (QName) null);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot create an attribute for path /@null, operation is not allowed for this type of node
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5253() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "HTTP");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "HTTP");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "HTTP");
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertEquals("HTTP", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test5354() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
        dOMNodePointer1.remove();
        assertFalse(dOMNodePointer1.isContainer());
    }

    @Test(timeout = 4000)
    public void test5455() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root DOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5556() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, attrNSImpl0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test5657() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test5758() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        String string0 = "\\uAS`{Ne>8";
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, string0);
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
        String string1 = dOMNodePointer0.asPath();
        assertEquals("/text()[1]", string1);
    }

    @Test(timeout = 4000)
    public void test5859() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(deferredDocumentImpl0, "=Dr>s*l(Y");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, (Locale) null);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test5960() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "comment");
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6061() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "3K8aI(ai88\"ixl^6h>B", "3K8aI(ai88\"ixl^6h>B");
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("/processing-instruction('3K8aI(ai88\"ixl^6h>B')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6162() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "comment");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6263() throws Throwable {
        DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
        Locale locale0 = Locale.KOREAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragmentImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6364() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "fFg:");
        QName qName0 = new QName("{u7Q}2-Et", "http://www.w3.org/2000/xmlns/");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLAreaElementImpl0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLAreaElementImpl0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("${u7Q}2-Et:http://www.w3.org/2000/xmlns/[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6465() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "4R8K/\"7i;CD5m");
        HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLAreaElementImpl0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("id('4R8K/&quot;7i;CD5m')///WWW.W3.ORG/2000/XMLNS/[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6566() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("/BODY[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6667() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "");
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6768() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "");
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "RX1q!2W}t}>3o");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        WMLHeadElementImpl wMLHeadElementImpl0 = new WMLHeadElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLHeadElementImpl0);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6869() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.equals(hTMLDocumentImpl0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6970() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0, "");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, deferredDocumentImpl0);
        boolean boolean0 = dOMNodePointer1.equals(dOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7071() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ROOT;
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, (String) null, "xml:lang", "xml:lang");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("/xml:lang[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7172() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test7273() throws Throwable {
        Locale locale0 = Locale.ROOT;
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "xmlns");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "M_9C2YRf");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLOptGroupElementImpl0);
        QName qName0 = new QName("xmlns");
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        String string0 = DOMNodePointer.getNamespaceURI((Node) hTMLOptGroupElementImpl0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test7374() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        Comment comment0 = deferredDocumentImpl0.createComment((String) null);
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0, "UKKnn|N?=rm?iN;F");
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7475() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "comment");
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("comment", object0);
    }

    @Test(timeout = 4000)
    public void test7576() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "6O 6p6?+xRkW.-");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("6O 6p6?+xRkW.-", object0);
    }

    @Test(timeout = 4000)
    public void test7677() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7778() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "3K8aI(ai88\"ixl^6h>B", "3K8aI(ai88\"ixl^6h>B");
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("3K8aI(ai88\"ixl^6h>B", object0);
    }

    @Test(timeout = 4000)
    public void test7879() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRENCH;
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7980() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "Class ", "Class ");
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) processingInstructionImpl0);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "Class ");
        assertTrue(nullPointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test8081() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "http://www.w3.org/2000/xmlns/");
        assertEquals(Integer.MIN_VALUE, nullPointer0.getIndex());
    }

    @Test(timeout = 4000)
    public void test8182() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        DOMNodePointer dOMNodePointer1 = (DOMNodePointer) dOMNodePointer0.getPointerByID(jXPathContext0, "");
        assertTrue(dOMNodePointer1.isActual());
    }

    @Test(timeout = 4000)
    public void test8283() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0, "http://www.w3.org/2000/xmlns/");
        DocumentImpl documentImpl0 = new DocumentImpl();
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(documentImpl0, "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer2 = new DOMNodePointer(pSVIAttrNSImpl0, locale0, "http://www.w3.org/2000/xmlns/");
        // Undeclared exception!
        try {
            dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test8384() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0, "<<unknown namespace>>");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test8485() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ITALY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(attrNSImpl0, locale0, "http://www.w3.org/2000/xmlns/");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test8586() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRENCH;
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0, "<<unknown namespace>>");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test8687() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "S95$>Ke W`1:(]|O3");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0, "S95$>Ke W`1:(]|O3");
        int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test8788() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.TAIWAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        HTMLOptGroupElementImpl hTMLOptGroupElementImpl0 = new HTMLOptGroupElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
        hTMLDocumentImpl0.isDefaultNamespace("<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLOptGroupElementImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
        assertEquals(0, int0);
    }
}
