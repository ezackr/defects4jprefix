/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 10:50:34 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.DocType;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isCollection();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("http://www.w3.org/2000/xmlns/");
        assertFalse(nodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Element element0 = new Element("processing-instruction", "processing-instruction");
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "processing-instruction");
        boolean boolean0 = jDOMNodePointer0.isLanguage("processing-instruction");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        int int0 = jDOMNodePointer0.getLength();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4", "Zo1n4");
        Locale locale0 = Locale.TAIWAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        assertEquals("Zo1n4", jDOMNodePointer1.getNamespaceURI());
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4", "Zo1n4");
        Locale locale0 = Locale.TAIWAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        String string0 = jDOMNodePointer1.toString();
        assertEquals("/Zo1n4:Zo1n4[1]", string0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        jDOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/2000/xmlns/");
        QName qName0 = new QName("<<unknown namespace>>");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) jXPathContext0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2915);
        Locale locale0 = Locale.TAIWAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0, "org.jdom.Content");
        String string0 = jDOMNodePointer0.getNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        QName qName0 = new QName("rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        Element element0 = new Element("s", "s");
        Locale locale0 = Locale.PRC;
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("s");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        Element element0 = new Element("Z1nA", "Z1nA", "Z1nA");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z1nA");
        String string0 = jDOMNodePointer0.getNamespaceURI("Z1nA");
        assertEquals("Z1nA", string0);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        Element element0 = new Element("Z1nA", "Z1nA", "Z1nA");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z1nA");
        String string0 = jDOMNodePointer0.getNamespaceURI("Z1nA");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, locale0, "http://www.w3.org/XML/1998/namespace");
        // Undeclared exception!
        try {
            jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // JXPath internal error: compareChildNodes called for en_GB
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        Comment comment0 = new Comment("f");
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "f");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(attribute0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        Locale locale0 = Locale.ITALY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
        int int0 = jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        Comment comment0 = new Comment("P");
        Element element0 = new Element("P", "P", "P");
        Element element1 = element0.addContent((Content) comment0);
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(comment0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        Comment comment0 = new Comment("P");
        Element element0 = new Element("P", "P", "P");
        Element element1 = element0.addContent((Content) comment0);
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(comment0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        Comment comment0 = new Comment("P");
        Element element0 = new Element("P", "P");
        Element element1 = element0.addContent("P");
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(comment0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        Element element0 = new Element("s", "s");
        Locale locale0 = Locale.PRC;
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4");
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4");
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue("Zo1n4");
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        assertNull(qName0.getPrefix());
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        Locale locale0 = Locale.JAPANESE;
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Lxp", "Lxp");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        assertEquals("Lxp", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4");
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue("Zo1n4");
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("Zo1n4", object0);
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4");
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue("Zo1n4");
        Object object0 = jDOMNodePointer0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        Namespace namespace0 = Namespace.getNamespace("P", "P");
        Element element0 = new Element("P", namespace0);
        Locale locale0 = Locale.PRC;
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
        jDOMNodePointer0.setValue(document0);
        jDOMNodePointer0.getValue();
        assertEquals(1, element0.getContentSize());
    }

    @Test(timeout = 4000)
    public void test2831() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer", "rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer", "rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer");
        Comment comment0 = new Comment("rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer");
        Locale locale0 = Locale.FRENCH;
        Element element1 = element0.addContent((Content) comment0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer", "rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer", "rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer");
        Comment comment0 = new Comment("rg.apach3.commonsxpath.ri.modz.jdom.tDOMNotePointer");
        Locale locale0 = Locale.FRENCH;
        Element element1 = element0.addContent((Content) comment0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element1, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        Comment comment0 = new Comment("http://www.w3.org/X{L/1998/namesac");
        Locale locale0 = new Locale("http://www.w3.org/X{L/1998/namesac");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("http://www.w3.org/X{L/1998/namesac", object0);
    }

    @Test(timeout = 4000)
    public void test3034() throws Throwable {
        Locale locale0 = Locale.ROOT;
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("P", "P");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("P", object0);
    }

    @Test(timeout = 4000)
    public void test3135() throws Throwable {
        Locale locale0 = Locale.FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3236() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
        LinkedList<String> linkedList0 = new LinkedList<String>();
        // Undeclared exception!
        try {
            jDOMNodePointer1.setValue(linkedList0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3337() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        CDATA cDATA0 = new CDATA("<<unknown namespace>>");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(variablePointer0, cDATA0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.setValue((Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3438() throws Throwable {
        CDATA cDATA0 = new CDATA((String) null);
        Locale locale0 = Locale.CHINA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0, (String) null);
        jDOMNodePointer0.setValue(locale0);
        assertTrue(jDOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test3539() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4", "Zo1n4");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, element0);
        jDOMNodePointer0.setValue(element0);
        assertTrue(jDOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test3640() throws Throwable {
        Element element0 = new Element("Z1nA", "Z1nA", "Z1nA");
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z1nA");
        CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
        jDOMNodePointer0.setValue(cDATA0);
        assertEquals("Z1nA", jDOMNodePointer0.getNamespaceURI());
    }

    @Test(timeout = 4000)
    public void test3741() throws Throwable {
        Element element0 = new Element("r");
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("r", "<<unknown namespace>>");
        jDOMNodePointer0.setValue(processingInstruction0);
        assertTrue(jDOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test3842() throws Throwable {
        Element element0 = new Element("Zo1nd", "Zo1nd");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Zo1nd");
        Comment comment0 = new Comment("http://www.w3.org/2000/xmlns/");
        jDOMNodePointer0.setValue(comment0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test3943() throws Throwable {
        Element element0 = new Element("Zo1nd", "Zo1nd");
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Zo1nd");
        jDOMNodePointer0.setValue((Object) null);
        assertEquals(Integer.MIN_VALUE, jDOMNodePointer0.getIndex());
    }

    @Test(timeout = 4000)
    public void test4044() throws Throwable {
        Element element0 = new Element("Zo1nd");
        Locale locale0 = Locale.CHINA;
        List list0 = element0.getChildren();
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Zo1nd");
        jDOMNodePointer0.setValue(list0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test4145() throws Throwable {
        Element element0 = new Element("M", "M");
        Locale locale0 = new Locale("M", "M", "M");
        DocType docType0 = new DocType("M", "M", "M");
        Document document0 = new Document(element0, docType0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "M");
        jDOMNodePointer0.setValue(document0);
        assertEquals(1, element0.getContentSize());
    }

    @Test(timeout = 4000)
    public void test4246() throws Throwable {
        VariablePointer variablePointer0 = new VariablePointer((QName) null);
        NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) variablePointer0, (Object) variablePointer0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4347() throws Throwable {
        Element element0 = new Element("Z1nA");
        Locale locale0 = Locale.forLanguageTag("Z1nA");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "Z1nA");
        QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) element0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4448() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer");
        QName qName0 = new QName("rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "rg.apach3.commonsxpath.ri.mode.jdom.JDOMNodePointer");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4549() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer");
        QName qName0 = new QName("rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4650() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        QName qName0 = new QName("rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner", "rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "rg.apach3.commonsxpath.r.modl.jom.JDOMNodePoiner");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4751() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4852() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4953() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5054() throws Throwable {
        Locale locale0 = Locale.ITALY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5155() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) nodeTypeTest0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5256() throws Throwable {
        Element element0 = new Element("u", "u", "u");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) element0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5357() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        QName qName0 = new QName("C=Ko5", "C=Ko5");
        VariablePointer variablePointer0 = new VariablePointer(qName0);
        Document document0 = new Document();
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, document0);
        boolean boolean0 = JDOMNodePointer.testNode(nodePointer0, (Object) document0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5458() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        CDATA cDATA0 = new CDATA("$R.v]Q");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) cDATA0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5559() throws Throwable {
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("f");
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5660() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        String string0 = JDOMNodePointer.getPrefix(attribute0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5761() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4", "Zo1n4");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertEquals("Zo1n4", string0);
    }

    @Test(timeout = 4000)
    public void test5762() throws Throwable {
        Element element0 = new Element("Zo1n4", "Zo1n4", "Zo1n4");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5863() throws Throwable {
        Object object0 = new Object();
        String string0 = JDOMNodePointer.getPrefix(object0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5964() throws Throwable {
        Namespace namespace0 = Namespace.getNamespace("f", "f");
        Attribute attribute0 = new Attribute("f", "f", namespace0);
        String string0 = JDOMNodePointer.getPrefix(attribute0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5965() throws Throwable {
        Namespace namespace0 = Namespace.getNamespace("f", "f");
        Attribute attribute0 = new Attribute("f", "f", namespace0);
        String string0 = JDOMNodePointer.getPrefix(attribute0);
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test6066() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        String string0 = JDOMNodePointer.getLocalName(attribute0);
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test6167() throws Throwable {
        Object object0 = new Object();
        String string0 = JDOMNodePointer.getLocalName(object0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test6268() throws Throwable {
        Comment comment0 = new Comment(" (");
        Namespace namespace0 = Namespace.getNamespace(" (");
        String string0 = JDOMNodePointer.findEnclosingAttribute(comment0, " (", namespace0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test6369() throws Throwable {
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.createChild(jXPathContext0, (QName) null, 4618);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6470() throws Throwable {
        Namespace namespace0 = Namespace.getNamespace("P");
        Element element0 = new Element("P", namespace0);
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
        QName qName0 = jDOMNodePointer0.getName();
        Document document0 = new Document(element0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) document0);
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertNull(nodePointer0.getNamespaceURI());
    }

    @Test(timeout = 4000)
    public void test6571() throws Throwable {
        Locale locale0 = Locale.ITALY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot create an attribute for path /@http://www.w3.org/XML/1998/namespace, operation is not allowed for this type of node
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6672() throws Throwable {
        Element element0 = new Element("rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer", "rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer");
        Locale locale0 = Locale.JAPANESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "rg.apach3.commonsxpath.ri.model.jdom.JDOMNodePointer");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) Integer.MIN_VALUE);
        QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Unknown namespace prefix: http://www.w3.org/2000/xmlns/
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6773() throws Throwable {
        Namespace namespace0 = Namespace.XML_NAMESPACE;
        Element element0 = new Element("P", namespace0);
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        assertEquals("xml:P", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test6874() throws Throwable {
        Comment comment0 = new Comment("P");
        Namespace namespace0 = Namespace.NO_NAMESPACE;
        Element element0 = new Element("P", namespace0);
        element0.addContent((Content) comment0);
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
        jDOMNodePointer0.remove();
        assertNull(jDOMNodePointer0.getNamespaceURI());
    }

    @Test(timeout = 4000)
    public void test6975() throws Throwable {
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("f", locale0, "f");
        // Undeclared exception!
        try {
            jDOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root JDOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test7076() throws Throwable {
        Namespace namespace0 = Namespace.XML_NAMESPACE;
        Element element0 = new Element("P", namespace0);
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test7177() throws Throwable {
        Element element0 = new Element("P", "P", "P");
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        String string0 = jDOMNodePointer1.toString();
        assertEquals("id('P')/P:P[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7278() throws Throwable {
        Element element0 = new Element("P");
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        String string0 = jDOMNodePointer1.toString();
        assertEquals("id('P')/P[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7379() throws Throwable {
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/XML/1998/namespace");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, cDATA0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7480() throws Throwable {
        Locale locale0 = Locale.JAPANESE;
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("Lxp", "Lxp");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/processing-instruction('Lxp')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7581() throws Throwable {
        Locale locale0 = Locale.JAPAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Zo1n4", locale0, "K#'\"FZJHh3E");
        String string0 = jDOMNodePointer0.toString();
        assertEquals("id('K#&apos;&quot;FZJHh3E')", string0);
    }

    @Test(timeout = 4000)
    public void test7682() throws Throwable {
        Namespace namespace0 = Namespace.getNamespace("P");
        Element element0 = new Element("P", namespace0);
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "P");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        boolean boolean0 = jDOMNodePointer1.equals(jDOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7783() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("f", locale0);
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7884() throws Throwable {
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((Object) null, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(locale0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7985() throws Throwable {
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("f", locale0);
        CDATA cDATA0 = new CDATA("f");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(cDATA0, locale0, "http://www.w3.org/XML/1998/namespace");
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
        assertFalse(boolean0);
    }
}
