/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 09:32:48 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Attribute;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.Namespace;
import org.jdom.ProcessingInstruction;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JDOMNodePointer_ESTest extends JDOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Locale locale0 = Locale.TAIWAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isCollection();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodePointer nodePointer0 = jDOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
        assertTrue(nodePointer0.isLeaf());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Element element0 = new Element("F", "F", "F");
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        namespaceResolver0.setNamespaceContextPointer(jDOMNodePointer0);
        jDOMNodePointer0.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("/F:F[1]", string0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        int int0 = jDOMNodePointer0.getLength();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        Locale locale0 = Locale.ITALIAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        NodeIterator nodeIterator0 = jDOMNodePointer0.childIterator(nodeTypeTest0, false, jDOMNodePointer0);
        assertEquals(0, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Element element0 = new Element("P", "P", "P");
        Locale locale0 = new Locale("P");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        jDOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createChild((JXPathContext) null, qName0, 795, (Object) qName0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Locale locale0 = Locale.ROOT;
        Element element0 = new Element("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("f");
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        Locale locale0 = Locale.JAPANESE;
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("f");
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Element element0 = new Element("f", "f");
        Locale locale0 = Locale.FRENCH;
        Document document0 = new Document(element0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("f");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        Element element0 = new Element("f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        String string0 = jDOMNodePointer0.getNamespaceURI("f");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Attribute attribute0 = new Attribute("I", "I");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0);
        QName qName0 = new QName("I");
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "I", locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer0, nodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Attribute attribute0 = new Attribute("N", "N");
        Locale locale0 = Locale.FRANCE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(attribute0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "N", locale0);
        int int0 = jDOMNodePointer0.compareChildNodePointers(nodePointer0, jDOMNodePointer0);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodeTypeTest0, locale0);
        // Undeclared exception!
        try {
            jDOMNodePointer1.compareChildNodePointers(jDOMNodePointer0, jDOMNodePointer1);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // JXPath internal error: compareChildNodes called for UNKNOWN()
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Element element0 = new Element("P", "P", "P");
        Locale locale0 = new Locale("P");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        Document document0 = new Document(element0);
        jDOMNodePointer0.setValue(document0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
        jDOMNodePointer0.compareChildNodePointers(jDOMNodePointer1, jDOMNodePointer0);
        assertEquals(1, element0.getContentSize());
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Element element0 = new Element("f", "f");
        Document document0 = new Document(element0);
        Locale locale0 = Locale.TAIWAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(document0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        Locale locale0 = new Locale("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        Locale locale0 = new Locale("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue(locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Element element0 = new Element("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Element element0 = new Element("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertEquals("f", qName0.getName());
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        Element element0 = new Element("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertEquals("f", qName0.getPrefix());
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("e", "e");
        Locale locale0 = Locale.SIMPLIFIED_CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        assertEquals("e", qName0.getName());
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        Locale locale0 = new Locale("f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("f", object0);
    }

    @Test(timeout = 4000)
    public void test2528() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        Locale locale0 = new Locale("f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        Element element0 = new Element("P", "P", "P");
        Locale locale0 = Locale.CANADA_FRENCH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue(jDOMNodePointer0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
        Locale locale0 = Locale.JAPANESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("http://www.w3.org/XML/1998/namespace", object0);
    }

    @Test(timeout = 4000)
    public void test2831() throws Throwable {
        Locale locale0 = Locale.ITALY;
        CDATA cDATA0 = new CDATA("ISO-8859-1");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertEquals("ISO-8859-1", object0);
    }

    @Test(timeout = 4000)
    public void test2932() throws Throwable {
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        Object object0 = jDOMNodePointer0.getValue();
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3033() throws Throwable {
        CDATA cDATA0 = new CDATA("krQ~]$8ds*");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.setValue("");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3134() throws Throwable {
        CDATA cDATA0 = new CDATA("4jC8YF*d[");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, cDATA0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.setValue((Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3235() throws Throwable {
        CDATA cDATA0 = new CDATA("");
        Locale locale0 = Locale.PRC;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        jDOMNodePointer0.setValue(locale0);
        assertEquals("CN", locale0.getCountry());
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        Locale locale0 = Locale.ROOT;
        Element element0 = new Element("Ff");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue(element0);
        assertTrue(jDOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        Locale locale0 = Locale.ROOT;
        Element element0 = new Element("Ff", "Ff");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        CDATA cDATA0 = new CDATA("<<unknown namespace>>");
        jDOMNodePointer0.setValue(cDATA0);
        assertTrue(jDOMNodePointer0.isRoot());
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        Element element0 = new Element("eDz");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, (Locale) null);
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("eDz", "eDz");
        jDOMNodePointer0.setValue(processingInstruction0);
        assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
    }

    @Test(timeout = 4000)
    public void test3639() throws Throwable {
        Element element0 = new Element("s", "s", "s");
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        Comment comment0 = new Comment("http://www.w3.org/XML/1998/namespace");
        jDOMNodePointer0.setValue(comment0);
        assertFalse(jDOMNodePointer0.isCollection());
    }

    @Test(timeout = 4000)
    public void test3740() throws Throwable {
        Element element0 = new Element("f", "f");
        Locale locale0 = Locale.ROOT;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        jDOMNodePointer0.setValue((Object) null);
        assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
    }

    @Test(timeout = 4000)
    public void test3841() throws Throwable {
        Locale locale0 = Locale.KOREA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        Locale locale0 = new Locale("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("WP");
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("WP", "WP");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) processingInstruction0, (NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4245() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4346() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        CDATA cDATA0 = new CDATA("http://www.w3.org/2000/xmlns/");
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) cDATA0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4447() throws Throwable {
        Locale locale0 = Locale.GERMANY;
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(63);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) null, (Object) null, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4649() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(nodeTypeTest0, locale0);
        boolean boolean0 = JDOMNodePointer.testNode((NodePointer) jDOMNodePointer0, (Object) jDOMNodePointer0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4750() throws Throwable {
        Locale locale0 = Locale.FRANCE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4851() throws Throwable {
        Locale locale0 = Locale.TAIWAN;
        Element element0 = new Element("f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4852() throws Throwable {
        Locale locale0 = Locale.TAIWAN;
        Element element0 = new Element("f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertEquals("f", qName0.getName());
    }

    @Test(timeout = 4000)
    public void test4953() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        Element element0 = new Element("f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "f");
        boolean boolean0 = jDOMNodePointer0.testNode((NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5054() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5055() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test5156() throws Throwable {
        Element element0 = new Element("f");
        String string0 = JDOMNodePointer.getPrefix(element0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5257() throws Throwable {
        Locale locale0 = Locale.PRC;
        String string0 = JDOMNodePointer.getPrefix(locale0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5358() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        Namespace namespace0 = Namespace.getNamespace("f", "f");
        attribute0.setNamespace(namespace0);
        String string0 = JDOMNodePointer.getPrefix(attribute0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test5359() throws Throwable {
        Attribute attribute0 = new Attribute("f", "f");
        Namespace namespace0 = Namespace.getNamespace("f", "f");
        attribute0.setNamespace(namespace0);
        String string0 = JDOMNodePointer.getPrefix(attribute0);
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test5460() throws Throwable {
        Locale locale0 = Locale.CANADA_FRENCH;
        Element element0 = new Element("f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(nodePointer0, nodePointer0);
        // Undeclared exception!
        try {
            jDOMNodePointer1.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path: /@f
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5561() throws Throwable {
        Locale locale0 = Locale.US;
        String string0 = JDOMNodePointer.getLocalName(locale0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test5662() throws Throwable {
        Element element0 = new Element("f", "f", "f");
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLanguage("f");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5763() throws Throwable {
        Comment comment0 = new Comment("http://www.w3.Prg/XML/1198/namespTce");
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0);
        boolean boolean0 = jDOMNodePointer0.isLanguage("http://www.w3.Prg/XML/1198/namespTce");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5864() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        Locale locale0 = Locale.ITALY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        // Undeclared exception!
        try {
            jDOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root JDOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5965() throws Throwable {
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer((NodePointer) null, (Object) null);
        // Undeclared exception!
        try {
            jDOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root JDOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6066() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
        QName qName0 = jDOMNodePointer0.getName();
        // Undeclared exception!
        try {
            jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot create an attribute for path /@null, operation is not allowed for this type of node
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6167() throws Throwable {
        Locale locale0 = Locale.PRC;
        Element element0 = new Element("f", "f", "f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = jDOMNodePointer0.getName();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "f");
        jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertTrue(nodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test6268() throws Throwable {
        Element element0 = new Element("f", "f");
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/");
        // Undeclared exception!
        try {
            jDOMNodePointer0.createAttribute((JXPathContext) null, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Unknown namespace prefix: http://www.w3.org/XML/1998/namespace
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6369() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        Element element0 = new Element("G", "G");
        element0.setAttribute("G", "G");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) element0);
        QName qName0 = jDOMNodePointer0.getName();
        NodePointer nodePointer0 = jDOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertFalse(nodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test6470() throws Throwable {
        Element element0 = new Element("a", "a", "a");
        Locale locale0 = Locale.KOREAN;
        CDATA cDATA0 = new CDATA("a");
        element0.setContent((Content) cDATA0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        jDOMNodePointer0.remove();
        assertFalse(jDOMNodePointer0.isContainer());
    }

    @Test(timeout = 4000)
    public void test6571() throws Throwable {
        Element element0 = new Element("s", "s", "s");
        Locale locale0 = Locale.GERMANY;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0, "s");
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        // Undeclared exception!
        try {
            jDOMNodePointer1.asPath();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6672() throws Throwable {
        Element element0 = new Element("TB");
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        jDOMNodePointer0.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("/TB[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6773() throws Throwable {
        Element element0 = new Element("TF", "TF");
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(element0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(jDOMNodePointer0, element0);
        NamespaceResolver namespaceResolver0 = new NamespaceResolver((NamespaceResolver) null);
        namespaceResolver0.setNamespaceContextPointer(jDOMNodePointer0);
        jDOMNodePointer0.setNamespaceResolver(namespaceResolver0);
        String string0 = jDOMNodePointer1.asPath();
        assertEquals("/node()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6874() throws Throwable {
        Locale locale0 = Locale.KOREAN;
        CDATA cDATA0 = new CDATA("a");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6975() throws Throwable {
        ProcessingInstruction processingInstruction0 = new ProcessingInstruction("f", "f");
        Locale locale0 = new Locale("f");
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(processingInstruction0, locale0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/processing-instruction('f')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7076() throws Throwable {
        Comment comment0 = new Comment("+4^v'");
        Locale locale0 = Locale.UK;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(comment0, locale0, "+4^v'");
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("id('+4^v&apos;')", string0);
    }

    @Test(timeout = 4000)
    public void test7177() throws Throwable {
        Locale locale0 = Locale.CANADA;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer("Khk\"\"V", locale0, "Khk\"\"V");
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("id('Khk&quot;&quot;V')", string0);
    }

    @Test(timeout = 4000)
    public void test7278() throws Throwable {
        Element element0 = new Element("a", "a", "a");
        Locale locale0 = Locale.KOREAN;
        CDATA cDATA0 = new CDATA("a");
        element0.setContent((Content) cDATA0);
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(cDATA0, locale0);
        String string0 = jDOMNodePointer0.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test7379() throws Throwable {
        Locale locale0 = Locale.US;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer((Object) jDOMNodePointer0, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7480() throws Throwable {
        Locale locale0 = Locale.CHINESE;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7581() throws Throwable {
        Locale locale0 = Locale.GERMAN;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(locale0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7682() throws Throwable {
        Locale locale0 = Locale.ENGLISH;
        JDOMNodePointer jDOMNodePointer0 = new JDOMNodePointer(locale0, locale0);
        JDOMNodePointer jDOMNodePointer1 = new JDOMNodePointer(locale0, locale0);
        boolean boolean0 = jDOMNodePointer0.equals(jDOMNodePointer1);
        assertTrue(boolean0);
    }
}
