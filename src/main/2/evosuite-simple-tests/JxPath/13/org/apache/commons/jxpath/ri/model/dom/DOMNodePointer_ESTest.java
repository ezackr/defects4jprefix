/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 10:39:22 GMT 2024
 */
package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFontElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "", "string");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null, "&quot;");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLButtonElementImpl");
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLanguage("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isCollection();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "Pd:cA.u*(");
        HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("id('Pd:cA.u*(')///WWW.W3.ORG/XML/1998/NAMESPACE[1]", string0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        QName qName0 = dOMNodePointer0.getName();
        // Undeclared exception!
        try {
            dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE, (Object) dOMNodePointer0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        NodePointer nodePointer0 = dOMNodePointer0.namespacePointer(".[9tvLgO]");
        assertFalse(nodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        int int0 = dOMNodePointer0.getLength();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASection cDATASection0 = hTMLDocumentImpl0.createCDATASection("')");
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASection0, locale0);
        dOMNodePointer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLButtonElementImpl");
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0);
        DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(hTMLDocumentImpl0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) documentFragmentImpl0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertEquals("ORG.APACHE.HTML.DOM.HTMLBUTTONELEMENTIMPL", qName0.toString());
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLButtonElementImpl");
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0);
        DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(hTMLDocumentImpl0);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) documentFragmentImpl0);
        QName qName0 = dOMNodePointer0.getName();
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        dOMNodePointer0.createAttribute(jXPathContext0, qName0);
        assertEquals("ORG.APACHE.HTML.DOM.HTMLBUTTONELEMENTIMPL", qName0.getName());
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        Locale locale0 = Locale.CANADA_FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isActual();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "7z");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLButtonElementImpl0, locale0, "7z");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.namespaceIterator();
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        NodeIterator nodeIterator0 = dOMNodePointer0.childIterator((NodeTest) null, true, (NodePointer) null);
        assertEquals(0, nodeIterator0.getPosition());
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Element element0 = hTMLDocumentImpl0.createElementNS("dir", "dir", "dir");
        QName qName0 = new QName("dir");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) element0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        QName qName0 = new QName("dir");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        QName qName0 = new QName("org.apache.commons.jxpath.ri.compiler.NodeTypeTest", "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "");
        QName qName0 = new QName("", "");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "3FA?5&");
        QName qName0 = new QName("3FA?5&");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "3FA?5&");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "3GA?5&");
        QName qName0 = new QName("3GA?5&", "3GA?5&");
        NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "3GA?5&");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLIsIndexElementImpl0, (NodeTest) nodeNameTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "@IIkd'Z");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "", "");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-10));
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(pSVIDocumentImpl0, "}-lO/AQJb]BX{");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) cDATASectionImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(pSVIDocumentImpl0, "}-lO/AQJb]BX{");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "}-lO/AQJb]BX{");
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeTypeTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(3);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
        boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "", "");
        ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("");
        boolean boolean0 = DOMNodePointer.testNode((Node) processingInstructionImpl0, (NodeTest) processingInstructionTest0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "//www.w3.org/XML/1998/namespace", "//www.w3.org/XML/1998/namespace");
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        QName qName0 = dOMNodePointer0.getName();
        assertNull(qName0.getPrefix());
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Element element0 = hTMLDocumentImpl0.createElementNS("dir", "dir", "dir");
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
        String string0 = dOMNodePointer0.getNamespaceURI((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        String string0 = dOMNodePointer0.getNamespaceURI("");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
        assertEquals("http://www.w3.org/2000/xmlns/", string0);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.getNamespaceURI("V");
        String string0 = dOMNodePointer0.getNamespaceURI("V");
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLButtonElementImpl");
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0);
        dOMNodePointer0.getDefaultNamespaceURI();
        String string0 = dOMNodePointer0.getDefaultNamespaceURI();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3941() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.isLeaf();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.setValue(dOMNodePointer0);
        assertTrue(dOMNodePointer0.isActual());
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(textImpl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.xerces.dom.CharacterDataImpl", e);
        }
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "org.jIom#Contxnt");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue((Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLDocumentImpl0);
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null);
        // Undeclared exception!
        try {
            dOMNodePointer0.createPath(jXPathContext0, (Object) "");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.getDefaultNamespaceURI();
        dOMNodePointer0.setValue((Object) null);
        assertTrue(dOMNodePointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "t:+Rm1t`'");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(wMLDocumentImpl0);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
            //
            // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted.
            //
            verifyException("org.apache.xerces.dom.ParentNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test4648() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Element element0 = hTMLDocumentImpl0.createElement("");
        Locale locale0 = Locale.JAPANESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
        dOMNodePointer0.setValue(element0);
        assertFalse(dOMNodePointer0.isAttribute());
    }

    @Test(timeout = 4000)
    public void test4749() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "id('");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null, "id('");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        // Undeclared exception!
        try {
            dOMNodePointer0.createPath(jXPathContext0, (Object) cDATASectionImpl0);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
            //
            // HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted.
            //
            verifyException("org.apache.xerces.dom.ParentNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test4850() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "7z");
        // Undeclared exception!
        try {
            dOMNodePointer0.setValue(locale0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4951() throws Throwable {
        DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "GN]JA!ib?OvbGgy'");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(wMLDocumentImpl0, "org.apache.wml.dom.WMLOptionElementImpl", "{9sGm3^@<:vw*MP", "org.apache.html.dom.HTMLModElementImpl");
        Locale locale0 = Locale.PRC;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIElementNSImpl0, locale0);
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLModElementImpl");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) hTMLLegendElementImpl0);
        QName qName0 = dOMNodePointer0.getName();
        // Undeclared exception!
        try {
            dOMNodePointer0.createChild(jXPathContext0, qName0, (-568));
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Factory is not set on the JXPathContext - cannot create path:
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5052() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, hTMLDocumentImpl0);
        QName qName0 = dOMNodePointer0.getName();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) dOMNodePointer0);
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute(jXPathContext0, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot create an attribute for path /@null, operation is not allowed for this type of node
            //
            verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5153() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLFontElementImpl hTMLFontElementImpl0 = new HTMLFontElementImpl(hTMLDocumentImpl0, "7z");
        Locale locale0 = Locale.FRENCH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLFontElementImpl0, locale0, "http://www.w3.org/2000/xmlns/");
        QName qName0 = new QName("xml", "xml");
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
        }
    }

    @Test(timeout = 4000)
    public void test5254() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "7z");
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLButtonElementImpl0, locale0, "7z");
        QName qName0 = new QName("7z", "http://www.w3.org/XML/1998/namespace");
        // Undeclared exception!
        try {
            dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Unknown namespace prefix: 7z
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5355() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "P<<p'c[jG?}XU(]");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        Locale locale0 = Locale.US;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
        dOMNodePointer0.remove();
        assertFalse(dOMNodePointer0.isContainer());
    }

    @Test(timeout = 4000)
    public void test5456() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        Locale locale0 = Locale.ROOT;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale0);
        // Undeclared exception!
        try {
            dOMNodePointer0.remove();
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Cannot remove root DOM node
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5557() throws Throwable {
        AttrNSImpl attrNSImpl0 = new AttrNSImpl();
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(attrNSImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test5658() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test5759() throws Throwable {
        DocumentImpl documentImpl0 = new DocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, "org.jIom#Contxnt");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("/text()[1]", string0);
    }

    @Test(timeout = 4000)
    public void test5860() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREAN;
        EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "P:@6M~tmJZ");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityReferenceImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test5961() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINESE;
        EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "TA~5nVlKp/Z>[%iSA[G");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6062() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("/processing-instruction('null')[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6163() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.ITALIAN;
        Comment comment0 = hTMLDocumentImpl0.createComment("APLE");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6264() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DocumentFragment documentFragment0 = hTMLDocumentImpl0.createDocumentFragment();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragment0, (Locale) null);
        String string0 = dOMNodePointer0.asPath();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test6365() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Element element0 = hTMLDocumentImpl0.getDocumentElement();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, (Locale) null);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, element0);
        String string0 = dOMNodePointer1.asPath();
        assertEquals("/HTML[1]", string0);
    }

    @Test(timeout = 4000)
    public void test6466() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.KOREA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
        QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
        PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "string", "string");
        NodePointer nodePointer0 = NodePointer.newChildNodePointer(dOMNodePointer0, qName0, pSVIElementNSImpl0);
        // Undeclared exception!
        try {
            nodePointer0.asPath();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6567() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.FRANCE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "KAS4'!@@-x qaz6");
        String string0 = dOMNodePointer0.asPath();
        assertEquals("id('KAS4&apos;!@@-x qaz6')", string0);
    }

    @Test(timeout = 4000)
    public void test6668() throws Throwable {
        Locale locale0 = Locale.TRADITIONAL_CHINESE;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "d s~.\"");
        String string0 = dOMNodePointer0.asPath();
        assertEquals("id('d s~.&quot;')", string0);
    }

    @Test(timeout = 4000)
    public void test6769() throws Throwable {
        CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl0, "-lO/AQJb]BX{");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "-lO/AQJb]BX{");
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6870() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl0, "O']cW^P*drm=7s)K~%");
        Locale locale0 = Locale.UK;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLLinkElementImpl0, locale0, "");
        HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "`");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableElementImpl0);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6971() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CHINA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "@#;(7bMO{|?-<fS+[");
        boolean boolean0 = dOMNodePointer0.equals("@#;(7bMO{|?-<fS+[");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7072() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "", "");
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(processingInstructionImpl0, locale0);
        boolean boolean0 = dOMNodePointer0.equals(dOMNodePointer1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7173() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = new Locale("-");
        CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "-");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("-", object0);
    }

    @Test(timeout = 4000)
    public void test7274() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Comment comment0 = hTMLDocumentImpl0.createComment((String) null);
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, (Locale) null, "");
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7375() throws Throwable {
        TextImpl textImpl0 = new TextImpl();
        Locale locale0 = Locale.GERMANY;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7476() throws Throwable {
        CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl0, "id('");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "id('");
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("id('", object0);
    }

    @Test(timeout = 4000)
    public void test7577() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, (String) null, (String) null);
        Locale locale0 = Locale.ENGLISH;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("", object0);
    }

    @Test(timeout = 4000)
    public void test7678() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "Hw7!4`_A)fNcZXvk+", "Hw7!4`_A)fNcZXvk+");
        Locale locale0 = Locale.ITALIAN;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, locale0);
        Object object0 = dOMNodePointer0.getValue();
        assertEquals("Hw7!4`_A)fNcZXvk+", object0);
    }

    @Test(timeout = 4000)
    public void test7779() throws Throwable {
        CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
        CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl0, "-lO/AQJb]BX{");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(cDATASectionImpl0, (Locale) null, "-lO/AQJb]BX{");
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "http://www.w3.org/XML/1998/namespace");
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "<<unknown namespace>>");
        assertTrue(nullPointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test7880() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        NullPointer nullPointer0 = (NullPointer) dOMNodePointer0.getPointerByID(jXPathContext0, "");
        assertTrue(nullPointer0.isNode());
    }

    @Test(timeout = 4000)
    public void test7981() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        dOMNodePointer0.namespaceIterator();
        JXPathContext jXPathContext0 = JXPathContext.newContext((Object) null);
        DOMNodePointer dOMNodePointer1 = (DOMNodePointer) dOMNodePointer0.getPointerByID(jXPathContext0, "");
        assertFalse(dOMNodePointer1.isAttribute());
    }

    @Test(timeout = 4000)
    public void test8082() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "presevae", "presevae");
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "presevae", "<<unknown namespace>>", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null, "presevae");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIAttrNSImpl0, (Locale) null, "<<unknown namespace>>");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test8183() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
        PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(pSVIAttrNSImpl0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
        int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test8284() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        Locale locale0 = Locale.CANADA;
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "V.p");
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "m$]'?n6pRUP]_", ",#8:g{H", "t7yR&^2K");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0, "<<unknown namespace>>");
        DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, wMLDocumentImpl0);
        int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test8385() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "", "string");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null, "&quot;");
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "KCKrj$LoL,Qr", "Bf^/D@mHK#{gr", "&quot;");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, (Locale) null, "Q:$xp&a,");
        DOMNodePointer dOMNodePointer2 = new DOMNodePointer(wMLDocumentImpl0, (Locale) null, "Az[AogY!q|Xf");
        int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test8486() throws Throwable {
        HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
        ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "Vp", "Vp");
        DOMNodePointer dOMNodePointer0 = new DOMNodePointer(processingInstructionImpl0, (Locale) null, "Vp");
        DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/", "Vp");
        WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
        DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
        int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
        assertEquals(0, int0);
    }
}
