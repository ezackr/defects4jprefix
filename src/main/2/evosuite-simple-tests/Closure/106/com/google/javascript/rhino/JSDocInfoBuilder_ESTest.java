/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 06:30:12 GMT 2024
 */
package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSDocInfoBuilder;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JSDocInfoBuilder_ESTest extends JSDocInfoBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.isConstructorRecorded();
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.hasParameter("V");
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.isInterfaceRecorded();
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.isPopulatedWithFileOverview();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.isPopulatedWithFileOverview();
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordFileOverview("");
        boolean boolean0 = jSDocInfoBuilder0.isPopulatedWithFileOverview();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.isPopulatedWithFileOverview();
        assertTrue(jSDocInfoBuilder0.isConstructorRecorded());
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.isPopulatedWithFileOverview();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.isDescriptionRecorded();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.isDescriptionRecorded();
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDescription("");
        boolean boolean0 = jSDocInfoBuilder0.isDescriptionRecorded();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        JSDocInfo jSDocInfo0 = jSDocInfoBuilder0.build("aXJw>CK");
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
        jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
        jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        jSDocInfoBuilder0.build((String) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordConstancy();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1015() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordConstancy();
        jSDocInfoBuilder0.build("Nb3o UAb])u3J8n5D");
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.markAnnotation("v,c4KtK2ogPizUo", (-633), (-633));
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.markText("jsr", 320, 320, 320, 320);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.markAnnotation("eiU", (-3756), (-3491));
        jSDocInfoBuilder0.markText("eiU", (-3756), (-3756), 0, 370);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        Node node0 = new Node(3864);
        jSDocInfoBuilder0.markTypeNode(node0, 0, 46, 27, true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1520() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        Node node0 = Node.newString("", 188, 188);
        jSDocInfoBuilder0.markAnnotation("", 44, 46);
        jSDocInfoBuilder0.markTypeNode(node0, 10, 77, 9, true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.markName("'Q", 112, 112);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.markAnnotation("", (-287), (-287));
        jSDocInfoBuilder0.markName("L1l@X!>R>>E_v?9m", (-2040), (-2040));
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordBlockDescription("4[Q!!jx%\"S$@]");
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1924() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordBlockDescription("f_o#[3~");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.PUBLIC;
        jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        boolean boolean0 = jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.PUBLIC;
        jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        boolean boolean0 = jSDocInfoBuilder0.recordVisibility(jSDocInfo_Visibility0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2129() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "uvpBEdAl+y$o#Cq^", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "uvpBEdAl+y$o#Cq^", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordParameter("uvpBEdAl+y$o#Cq^", jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "uvpBEdAl+y$o#Cq^", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordParameter("uvpBEdAl+y$o#Cq^", jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "NULL_TYPE", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "NULL_TYPE", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordParameter("J%e,t", jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2234() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "NULL_TYPE", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordParameter("J%e,t", jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2335() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2336() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "", jSTypeRegistry0);
        jSDocInfoBuilder0.recordParameter("", jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordParameter("", jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2337() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "", jSTypeRegistry0);
        jSDocInfoBuilder0.recordParameter("", jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordParameter("", jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2438() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2439() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordParameterDescription("", "");
        boolean boolean0 = jSDocInfoBuilder0.recordParameterDescription("", "o4q?ljX5vlw4{_sM]");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2440() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordParameterDescription("", "");
        boolean boolean0 = jSDocInfoBuilder0.recordParameterDescription("", "o4q?ljX5vlw4{_sM]");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2541() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2542() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordTemplateTypeName("");
        boolean boolean0 = jSDocInfoBuilder0.recordTemplateTypeName("LEOO;X?\"L8~+W8%!");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2543() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordTemplateTypeName("");
        boolean boolean0 = jSDocInfoBuilder0.recordTemplateTypeName("LEOO;X?\"L8~+W8%!");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2644() throws Throwable {
        Node node0 = Node.newString("B8");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "B8", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2645() throws Throwable {
        Node node0 = Node.newString("B8");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "B8", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThrowType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2646() throws Throwable {
        Node node0 = Node.newString("B8");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "B8", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThrowType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2747() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2748() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordThrowType((JSTypeExpression) null);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2749() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordThrowType((JSTypeExpression) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2850() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2851() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordThrowDescription((JSTypeExpression) null, "");
        boolean boolean0 = jSDocInfoBuilder0.recordThrowDescription((JSTypeExpression) null, "HoD~");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2852() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordThrowDescription((JSTypeExpression) null, "");
        boolean boolean0 = jSDocInfoBuilder0.recordThrowDescription((JSTypeExpression) null, "HoD~");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2953() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2954() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.addAuthor("'=@~Z+W;bX$");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test2955() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.addAuthor("'=@~Z+W;bX$");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3056() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3057() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.addReference("uvpBEdAl+y$o#Cq^");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3058() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.addReference("uvpBEdAl+y$o#Cq^");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3159() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3160() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordVersion("");
        boolean boolean0 = jSDocInfoBuilder0.recordVersion("com.google.javascript.rhino.jstype.ObjectType");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3161() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordVersion("");
        boolean boolean0 = jSDocInfoBuilder0.recordVersion("com.google.javascript.rhino.jstype.ObjectType");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3262() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3263() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDeprecationReason("");
        boolean boolean0 = jSDocInfoBuilder0.recordDeprecationReason("");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3264() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDeprecationReason("");
        boolean boolean0 = jSDocInfoBuilder0.recordDeprecationReason("");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3365() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3366() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getSuppressions();
        jSDocInfoBuilder0.recordSuppressions(set0);
        boolean boolean0 = jSDocInfoBuilder0.recordSuppressions(set0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3367() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getSuppressions();
        jSDocInfoBuilder0.recordSuppressions(set0);
        boolean boolean0 = jSDocInfoBuilder0.recordSuppressions(set0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3468() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3469() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3570() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordTypedef((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3571() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordTypedef((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3672() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3673() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordTypedef(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3674() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordTypedef(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3775() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3776() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3877() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3878() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3879() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3980() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3981() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "", jSTypeRegistry0);
        jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test3982() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "", jSTypeRegistry0);
        jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4083() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4084() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordTypedef(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4085() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordTypedef(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordReturnType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4186() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4187() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordReturnDescription("temp");
        boolean boolean0 = jSDocInfoBuilder0.recordReturnDescription("temp");
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4188() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordReturnDescription("temp");
        boolean boolean0 = jSDocInfoBuilder0.recordReturnDescription("temp");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4289() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4290() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4391() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4392() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4393() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "e*5:", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4494() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordEnumParameterType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4495() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordEnumParameterType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4596() throws Throwable {
        Node node0 = Node.newString("pjGD!39P4Nl9>J");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "pjGD!39P4Nl9>J", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4597() throws Throwable {
        Node node0 = Node.newString("pjGD!39P4Nl9>J");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "pjGD!39P4Nl9>J", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test4598() throws Throwable {
        Node node0 = Node.newString("pjGD!39P4Nl9>J");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "pjGD!39P4Nl9>J", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4699() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test46100() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test47101() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test47102() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test47103() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test48104() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test48105() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "z5r/j]|ZAa4W;8B%g", jSTypeRegistry0);
        jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test48106() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "z5r/j]|ZAa4W;8B%g", jSTypeRegistry0);
        jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test49107() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType((JSTypeExpression) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test49108() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test50109() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test50110() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test50111() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test51112() throws Throwable {
        Node node0 = Node.newString("");
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test51113() throws Throwable {
        Node node0 = Node.newString("");
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test51114() throws Throwable {
        Node node0 = Node.newString("");
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test52115() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test52116() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstancy();
        boolean boolean0 = jSDocInfoBuilder0.recordConstancy();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test52117() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstancy();
        boolean boolean0 = jSDocInfoBuilder0.recordConstancy();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test53118() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordDescription((String) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test53119() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        boolean boolean0 = jSDocInfoBuilder0.recordDescription((String) null);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test54120() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDescription("");
        boolean boolean0 = jSDocInfoBuilder0.recordDescription("n>31M;bx\"oO");
        assertTrue(jSDocInfoBuilder0.isDescriptionRecorded());
    }

    @Test(timeout = 4000)
    public void test54121() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDescription("");
        boolean boolean0 = jSDocInfoBuilder0.recordDescription("n>31M;bx\"oO");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test55122() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordFileOverview("Eu/6");
        boolean boolean0 = jSDocInfoBuilder0.recordFileOverview("Eu/6");
        assertTrue(jSDocInfoBuilder0.isPopulatedWithFileOverview());
    }

    @Test(timeout = 4000)
    public void test55123() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordFileOverview("Eu/6");
        boolean boolean0 = jSDocInfoBuilder0.recordFileOverview("Eu/6");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test56124() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test56125() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordHiddenness();
        boolean boolean0 = jSDocInfoBuilder0.recordHiddenness();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test56126() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordHiddenness();
        boolean boolean0 = jSDocInfoBuilder0.recordHiddenness();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test57127() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test57128() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordNoTypeCheck();
        boolean boolean0 = jSDocInfoBuilder0.recordNoTypeCheck();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test57129() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordNoTypeCheck();
        boolean boolean0 = jSDocInfoBuilder0.recordNoTypeCheck();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test58130() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test58131() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[0];
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "I#?^Y", jSTypeRegistry0);
        jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test58132() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[0];
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "I#?^Y", jSTypeRegistry0);
        jSDocInfoBuilder0.recordEnumParameterType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test59133() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertTrue(jSDocInfoBuilder0.isConstructorRecorded());
    }

    @Test(timeout = 4000)
    public void test59134() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test60135() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertTrue(jSDocInfoBuilder0.isInterfaceRecorded());
    }

    @Test(timeout = 4000)
    public void test60136() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordConstructor();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test61137() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test61138() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordPreserveTry();
        boolean boolean0 = jSDocInfoBuilder0.recordPreserveTry();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test61139() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordPreserveTry();
        boolean boolean0 = jSDocInfoBuilder0.recordPreserveTry();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test62140() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test62141() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordOverride();
        boolean boolean0 = jSDocInfoBuilder0.recordOverride();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test62142() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordOverride();
        boolean boolean0 = jSDocInfoBuilder0.recordOverride();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test63143() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test63144() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordNoAlias();
        boolean boolean0 = jSDocInfoBuilder0.recordNoAlias();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test63145() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordNoAlias();
        boolean boolean0 = jSDocInfoBuilder0.recordNoAlias();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test64146() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test64147() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDeprecated();
        boolean boolean0 = jSDocInfoBuilder0.recordDeprecated();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test64148() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordDeprecated();
        boolean boolean0 = jSDocInfoBuilder0.recordDeprecated();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test65149() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test65150() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test65151() throws Throwable {
        Node node0 = Node.newString("'=@~Z+W;bX$");
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "'=@~Z+W;bX$", jSTypeRegistry0);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test66152() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertTrue(jSDocInfoBuilder0.isConstructorRecorded());
    }

    @Test(timeout = 4000)
    public void test66153() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test67154() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertTrue(jSDocInfoBuilder0.isInterfaceRecorded());
    }

    @Test(timeout = 4000)
    public void test67155() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordInterface();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test68156() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test68157() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordExport();
        boolean boolean0 = jSDocInfoBuilder0.recordExport();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test68158() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordExport();
        boolean boolean0 = jSDocInfoBuilder0.recordExport();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test69159() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test69160() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordNoShadow();
        boolean boolean0 = jSDocInfoBuilder0.recordNoShadow();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test69161() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordNoShadow();
        boolean boolean0 = jSDocInfoBuilder0.recordNoShadow();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test70162() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test70163() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordImplicitCast();
        boolean boolean0 = jSDocInfoBuilder0.recordImplicitCast();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test70164() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordImplicitCast();
        boolean boolean0 = jSDocInfoBuilder0.recordImplicitCast();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test71165() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test71166() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordNoSideEffects();
        boolean boolean0 = jSDocInfoBuilder0.recordNoSideEffects();
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test71167() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordNoSideEffects();
        boolean boolean0 = jSDocInfoBuilder0.recordNoSideEffects();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test72168() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test72169() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordImplementedInterface((JSTypeExpression) null);
        boolean boolean0 = jSDocInfoBuilder0.recordImplementedInterface((JSTypeExpression) null);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test72170() throws Throwable {
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordImplementedInterface((JSTypeExpression) null);
        boolean boolean0 = jSDocInfoBuilder0.recordImplementedInterface((JSTypeExpression) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test73171() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "ArPj2|mwiYdMqbsqi6", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isConstructorRecorded());
    }

    @Test(timeout = 4000)
    public void test73172() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "ArPj2|mwiYdMqbsqi6", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordConstructor();
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test74173() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isInterfaceRecorded());
    }

    @Test(timeout = 4000)
    public void test74174() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordInterface();
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test75175() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test75176() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test75177() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(false);
        jSDocInfoBuilder0.recordBaseType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test76178() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        assertFalse(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test76179() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertTrue(jSDocInfoBuilder0.isPopulated());
    }

    @Test(timeout = 4000)
    public void test76180() throws Throwable {
        JSTypeExpression jSTypeExpression0 = new JSTypeExpression((Node) null, "3QE;*tX]mw^8Y$oTiNb", (JSTypeRegistry) null);
        JSDocInfoBuilder jSDocInfoBuilder0 = new JSDocInfoBuilder(true);
        jSDocInfoBuilder0.recordThisType(jSTypeExpression0);
        boolean boolean0 = jSDocInfoBuilder0.recordDefineType(jSTypeExpression0);
        assertFalse(boolean0);
    }
}
