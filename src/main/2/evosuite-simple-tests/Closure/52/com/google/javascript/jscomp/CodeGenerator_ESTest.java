/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 02:32:30 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.CodeConsumer;
import com.google.javascript.jscomp.CodeGenerator;
import com.google.javascript.rhino.Node;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CodeGenerator_ESTest extends CodeGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = new Node(51);
        CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0, true, codeGenerator_Context0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("\t\n\u000B\f\r \u0085\u1680\u2028\u2029\u205F\u3000\u00A0\u180E\u202F");
        assertEquals("/\\t\\n\\u000b\\u000c\\r \\u0085\\u1680\\u2028\\u2029\\u205f\\u3000\\u00a0\\u180e\\u202f/", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.tagAsStrict();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("]]>GQ");
        assertEquals("\"]]\\>GQ\"", string0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addCaseBody((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = Node.newString("throw");
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0, false);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Charset charset0 = Charset.forName("default");
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Charset charset0 = Charset.defaultCharset();
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("6");
        assertEquals(6.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        boolean boolean0 = CodeGenerator.isSimpleNumber("/RLj<!--");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        boolean boolean0 = CodeGenerator.isSimpleNumber("3T'Ux@l=J5pMH^");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        boolean boolean0 = CodeGenerator.isSimpleNumber("");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        double double0 = CodeGenerator.getSimpleNumber("typeof");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = new Node(85);
        // Undeclared exception!
        try {
            codeGenerator0.addArrayList(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        Node node0 = Node.newNumber(1606.41);
        CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
        // Undeclared exception!
        try {
            codeGenerator0.addList(node0, true, codeGenerator_Context0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        codeGenerator0.addList((Node) null);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        codeGenerator0.addArrayList((Node) null);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        codeGenerator0.addAllSiblings((Node) null);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Node node0 = Node.newNumber((-4295.46));
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addAllSiblings(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addJsString("PlM$FP!|2?*'}h<TO");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
        // Undeclared exception!
        try {
            codeGenerator0.addJsString("\"jLj<!--");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.CodeGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("\r");
        assertEquals("/\\r/", string0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString(">");
        assertEquals("\">\"", string0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("C8XRvI}QV?->}K");
        assertEquals("\"C8XRvI}QV?->}K\"", string0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("/E!`Q7<!-->ihzRVtJ");
        assertEquals("//E!`Q7<\\!--\\>ihzRVtJ/", string0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        String string0 = CodeGenerator.escapeToDoubleQuotedJsString("KeNmWCGG*JLv]>KU");
        assertEquals("\"KeNmWCGG*JLv]>KU\"", string0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        String string0 = CodeGenerator.regexpEscape("jrlq'5_</scriptx&l");
        assertEquals("/jrlq'5_<\\/scriptx&l/", string0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Charset charset0 = Charset.forName("default");
        CharsetEncoder charsetEncoder0 = charset0.newEncoder();
        String string0 = CodeGenerator.regexpEscape("\t\n\u000BwT\u2029\u205F\u3000\u00A0\u202F", charsetEncoder0);
        assertEquals("/\\t\\n\u000BwT\\u2029\\u205f\\u3000\\u00a0\\u202f/", string0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        String string0 = CodeGenerator.identifierEscape("\t\n\u000B\f\rY\u0085m\u2028\u2029\u205F\u3000\u00A0\u180E\u202F");
        assertEquals("\\u0009\\u000a\\u000b\\u000c\\u000dY\\u0085m\\u2028\\u2029\\u205f\\u3000\\u00a0\\u180e\\u202f", string0);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        String string0 = CodeGenerator.identifierEscape("typeof");
        assertEquals("typeof", string0);
    }
}
