/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 07:58:36 GMT 2024
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocToken;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("K!oX!:%k*/RUk");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("K!oX!:%k*/RUk");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("K!oX!:%k*/RUk");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("K!oX!:%k*/RUk");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
        assertEquals(306, node0.getType());
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Node node0 = Node.newString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[mvPWc$%'~.;9O];aq");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[mvPWc$%'~.;9O];aq");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[mvPWc$%'~.;9O];aq");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(308, node0.getType());
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[mvPWc$%'~.;9O];aq");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[mvPWc$%'~.;9O];aq");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertTrue(node0.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test026() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[mvPWc$%'~.;9O];aq");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[mvPWc$%'~.;9O];aq");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        Node node0 = Node.newString(".");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        Node node0 = Node.newString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3", 36);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.ANNOTATION;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        Node node0 = Node.newString("!");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
        jsDocInfoParser0.setFileLevelJsDocBuilder(node_FileLevelJsDocBuilder0);
    }

    @Test(timeout = 4000)
    public void test0610() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        jsDocInfoParser0.setFileOverviewJSDocInfo(jSDocInfo0);
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{l:B1?");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test0813() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        assertNotNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test0814() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(304, node1.getType());
    }

    @Test(timeout = 4000)
    public void test0815() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test0816() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(0, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test0917() throws Throwable {
        Node node0 = Node.newString("!");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        node0.setSourceFileForTesting("!");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!", 46);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1018() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test1119() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.head.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1220() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test1221() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertTrue(node0.isString());
    }

    @Test(timeout = 4000)
    public void test1222() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test1223() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(40, node0.getType());
    }

    @Test(timeout = 4000)
    public void test1324() throws Throwable {
        Node node0 = Node.newString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.EOC;
        jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1425() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test1426() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test1527() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node0 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test1628() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test1629() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.COMMA;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test1630() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.COMMA;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test1731() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1832() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(">");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1933() throws Throwable {
        Node node0 = Node.newString("{E");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{E");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2034() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("(", 55, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2135() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test2136() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test2137() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2138() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LT;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test2239() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2340() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|970e", 50);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2441() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("F}H1i.Ea9*Mns");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test2442() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("F}H1i.Ea9*Mns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]m*");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test2443() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("F}H1i.Ea9*Mns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]m*");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2444() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("F}H1i.Ea9*Mns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]m*");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(0, node0.getCharno());
    }

    @Test(timeout = 4000)
    public void test2545() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")]");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2646() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("...");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = Node.newString("...");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.head.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test2747() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=", 53);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2848() throws Throwable {
        Node node0 = Node.newString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 1);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2949() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test2950() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3051() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("}. ");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.head.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test3152() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("FH1i].a9ns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("FH1i].a9ns", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(221184, node1.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test3153() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("FH1i].a9ns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("FH1i].a9ns", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test3154() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("FH1i].a9ns");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("FH1i].a9ns", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(40, node1.getType());
    }

    @Test(timeout = 4000)
    public void test3255() throws Throwable {
        Node node0 = Node.newString("F}H1i].Ea9nYs");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("F}H1i].Ea9nYs", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(221184, node1.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test3256() throws Throwable {
        Node node0 = Node.newString("F}H1i].Ea9nYs");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("F}H1i].Ea9nYs", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test3257() throws Throwable {
        Node node0 = Node.newString("F}H1i].Ea9nYs");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("F}H1i].Ea9nYs", 54);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.LC;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(40, node1.getType());
    }

    @Test(timeout = 4000)
    public void test3358() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("CrJ|[b1,fqc|iF:\"");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test3459() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("-N.<#");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test3560() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("-N.<");
        assertEquals(40, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3561() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("-N.<");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3562() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("-N.<");
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test3663() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test3664() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(304, node1.getType());
    }

    @Test(timeout = 4000)
    public void test3665() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("CD|`m1,cX{qcB", 2238);
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(2238, 2238, token_CommentType0, "CD|`m1,cX{qcB");
        Node node0 = Node.newNumber(1406.852925625619, 4, 12);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(2, node1.getCharno());
    }

    @Test(timeout = 4000)
    public void test3766() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("5Jbs|?,*e#=ncO-");
        assertEquals(3, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test3767() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("5Jbs|?,*e#=ncO-");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3768() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("5Jbs|?,*e#=ncO-");
        assertEquals(301, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3869() throws Throwable {
        Node node0 = Node.newString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=EfV4{@u", 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test3870() throws Throwable {
        Node node0 = Node.newString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=EfV4{@u", 55);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(304, node1.getType());
    }

    @Test(timeout = 4000)
    public void test3971() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[?]1G");
        assertEquals(308, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3972() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[?]1G");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3973() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[?]1G");
        assertTrue(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test4074() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}");
        assertEquals(304, node0.getType());
    }

    @Test(timeout = 4000)
    public void test4075() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4176() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("D");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4177() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("D");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")8HxuwTO", 38);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(304, node1.getType());
    }

    @Test(timeout = 4000)
    public void test4178() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("D");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")8HxuwTO", 38);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNotNull(node1);
    }

    @Test(timeout = 4000)
    public void test4179() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("D");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")8HxuwTO", 38);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test4180() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("D");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")8HxuwTO", 38);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.QMARK;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test4281() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?>M>2kmFSUL?8d-j");
        assertEquals(304, node0.getType());
    }

    @Test(timeout = 4000)
    public void test4282() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?>M>2kmFSUL?8d-j");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4383() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4484() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4485() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test4486() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        assertEquals(4, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test4587() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test4588() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        assertEquals(9, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test4589() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4690() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("r|1q|F:");
        assertEquals(3, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test4691() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("r|1q|F:");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4692() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("r|1q|F:");
        assertEquals(301, node0.getType());
    }

    @Test(timeout = 4000)
    public void test4793() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(I)Ljava/lang/Integer;");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4794() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(I)Ljava/lang/Integer;");
        assertTrue(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test4795() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(I)Ljava/lang/Integer;");
        assertEquals(301, node0.getType());
    }

    @Test(timeout = 4000)
    public void test4896() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(trEMNN%oC[S;7");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4997() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test5098() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{l:>YB?");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test5199() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{ryK,u%rKB*eZk%9");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test52100() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test53101() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("K!oX!:%k*/RUk");
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = Node.newString("K!oX!:%k*/RUk");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test54102() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test54103() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.EOL;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test54104() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*3");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*3");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        JsDocToken jsDocToken0 = JsDocToken.EOL;
        Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
        jsDocInfoParser0.parse();
        assertEquals(302, node0.getType());
    }

    @Test(timeout = 4000)
    public void test55105() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test55106() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 54);
        jsDocTokenStream0.getRemainingJSDocLine();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertEquals(0, node0.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test55107() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'SilPItNH\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'SilPItNH\n", 54);
        jsDocTokenStream0.getRemainingJSDocLine();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
        jsDocInfoParser0.parse();
        assertTrue(node0.isString());
    }
}
