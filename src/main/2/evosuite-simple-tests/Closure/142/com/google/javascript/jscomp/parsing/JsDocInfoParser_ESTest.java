/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 08:46:49 GMT 2024
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;
import com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector;
import com.google.javascript.jscomp.mozilla.rhino.tools.ToolErrorReporter;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*/O\"#j");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*/O\"#j", config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*1L#l");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*1L#l", config0, (ErrorReporter) null);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(" )");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, " )", config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*\"L#j");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*\"L#j", config0, (ErrorReporter) null);
        jsDocInfoParser0.setFileLevelJsDocBuilder((Node.FileLevelJsDocBuilder) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(" )");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, " )", config0, (ErrorReporter) null);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@kk*4");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "@kk*4", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;");
        assertEquals(301, node0.getType());
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;");
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*\"L#j");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*\"L#j", config0, (ErrorReporter) null);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.retrieveAndResetParsedJSDocInfo();
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[\n\r]+");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "[\n\r]+", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@@A{&I9LyB!<c(i`Z<");
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Charset charset0 = Charset.defaultCharset();
        Set<String> set0 = charset0.aliases();
        Config config0 = new Config(jSTypeRegistry0, set0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "@@A{&I9LyB!<c(i`Z<", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!q|8/@{2V2n3>!['- ");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "!q|8/@{2V2n3>!['- ", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(",sGJy|m]-4hw[Y f_");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ",sGJy|m]-4hw[Y f_", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":9l(tAwz0M");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ":9l(tAwz0M", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*>>\"fD");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*>>\"fD", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "{", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("(e8Rbz_69PF");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "(e8Rbz_69PF", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".<");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, ".<", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?1Lkl");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "?1Lkl", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|.P");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "|.P", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[8G\r}p");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "[8G\r}p", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(" )");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, " )", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("...");
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "...", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=4");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "=4", config0, errorCollector0);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*1L#l");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config((JSTypeRegistry) null, linkedHashSet0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, "*1L#l", config0, (ErrorReporter) null);
        // Undeclared exception!
        try {
            jsDocInfoParser0.parse();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("bM2m$-|h,;|");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("fumeb.<*Ou8Y0");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("FH.<{qWL2jt+:");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("FH.<{qWL2jt+:");
        assertEquals(40, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,>z YIe");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test2831() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!q|8#@{2V2n3>!['- ");
        assertEquals(301, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!q|8#@{2V2n3>!['- ");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test2833() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!q|8#@{2V2n3>!['- ");
        assertEquals(2, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test2934() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("3?xB_");
        assertEquals(304, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2935() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("3?xB_");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("b^d!T>(y{iGgn<tI?");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("b^d!T>(y{iGgn<tI?");
        assertEquals(306, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[i,zP\r]+");
        assertEquals(79, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3139() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[i,zP\r]+");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3140() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[i,zP\r]+");
        assertEquals(2, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test3241() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        assertEquals(40, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3242() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3343() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3344() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        assertEquals(40, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3445() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("QsEMH.<M'\"x>jH4ZY7Be");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3446() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("QsEMH.<M'\"x>jH4ZY7Be");
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test3547() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test3648() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function()2(");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3649() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function()2(");
        assertEquals(105, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3750() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function (");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test3851() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function ('1(");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test3952() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(e8Rbz_69PF");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4053() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[\n\r]+");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4154() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[8G\r*}p");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4255() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{82BlCVw.}_o^C+-my");
        assertEquals(81, node0.getType());
    }

    @Test(timeout = 4000)
    public void test4256() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{82BlCVw.}_o^C+-my");
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4257() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{82BlCVw.}_o^C+-my");
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test4358() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{82BCVw4Eos2wK+-:y");
        assertNull(node0);
    }

    @Test(timeout = 4000)
    public void test4459() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{Z_T$,=+Jt0I@Fr");
        assertNull(node0);
    }
}
