/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 00:00:36 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.AbstractPeepholeOptimization;
import com.google.javascript.jscomp.CheckDebuggerStatement;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.CodingConventions;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.DiagnosticType;
import com.google.javascript.jscomp.ExploitAssigns;
import com.google.javascript.jscomp.GlobalNamespace;
import com.google.javascript.jscomp.GoogleCodingConvention;
import com.google.javascript.jscomp.InlineSimpleMethods;
import com.google.javascript.jscomp.JqueryCodingConvention;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.NameAnalyzer;
import com.google.javascript.jscomp.NameReferenceGraph;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.PeepholeCollectPropertyAssignments;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.PeepholeFoldWithTypes;
import com.google.javascript.jscomp.PeepholeRemoveDeadCode;
import com.google.javascript.jscomp.PeepholeReplaceKnownMethods;
import com.google.javascript.jscomp.PeepholeSimplifyRegExp;
import com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax;
import com.google.javascript.jscomp.PrepareAst;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.ReorderConstantExpression;
import com.google.javascript.jscomp.SimpleDefinitionFinder;
import com.google.javascript.jscomp.SourceExcerptProvider;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SourceInformationAnnotator;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.jscomp.StatementFusion;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.VerboseMessageFormatter;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NodeUtil_ESTest extends NodeUtil_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        NodeUtil.isValidQualifiedName("y[Rx|6~rlh0E2'qg 8");
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        assertEquals("JSCompiler_renameProperty", string0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        boolean boolean0 = NodeUtil.isValidPropertyName("");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        boolean boolean0 = NodeUtil.isValidPropertyName("");
        Node node0 = Node.newNumber(7915.400410635983, 3230, 3230);
        NodeUtil.mayBeStringHelper(node0);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        Node node0 = new Node(8277);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForFunction(node0, (-2816));
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(51);
        assertEquals(9, int0);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(130);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for EXPR_RESULT (type 130)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(54);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 54
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        NodeUtil.precedence(101);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        Object object0 = new Object();
        int int0 = NodeUtil.precedence(26);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        Node node0 = new Node(1073741823);
        NodeUtil.isSimpleOperatorType(1);
        NodeUtil.precedence(100);
        // Undeclared exception!
        try {
            NodeUtil.isTryCatchNodeContainer(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test01011() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(89);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01112() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(109);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType((-2018));
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    }

    @Test(timeout = 4000)
    public void test01415() throws Throwable {
        Node node0 = Node.newNumber(1040.4029230862);
        Node node1 = NodeUtil.newVarNode("/", node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01416() throws Throwable {
        Node node0 = Node.newNumber(1040.4029230862);
        Node node1 = NodeUtil.newVarNode("/", node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        assertEquals(118, node1.getType());
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        Node node0 = Node.newNumber(1040.4029230862);
        Node node1 = NodeUtil.newVarNode("/", node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        assertFalse(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        NodeUtil.getStringNumberValue("e).knDMl");
        Node node0 = new Node(23, 83, 83);
        node0.isOptionalArg();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        nodeUtil_BooleanResultPredicate0.equals(nodeUtil_NumbericResultPredicate0);
        node0.removeChildren();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        nodeUtil_BooleanResultPredicate0.apply(node0);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(83);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 83: PARAM_LIST
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test01620() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.mayBeString(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01621() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.mayBeString(node0);
        assertFalse(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test01722() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue(",UpyS#");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test01723() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue(",UpyS#");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test01724() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue(",UpyS#");
        NodeUtil.getBestLValueName((Node) null);
        // Undeclared exception!
        try {
            NodeUtil.isReferenceName((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test01825() throws Throwable {
        Node node0 = Node.newString(".[h<UxU\"(.s>S>e");
        // Undeclared exception!
        try {
            NodeUtil.getRootOfQualifiedName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test01926() throws Throwable {
        Node node0 = new Node(8268, 8268, 8268);
        int int0 = NodeUtil.precedence(35);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test01927() throws Throwable {
        Node node0 = new Node(8268, 8268, 8268);
        int int0 = NodeUtil.precedence(35);
        boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02028() throws Throwable {
        Node node0 = new Node(70);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(45);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 70
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test02129() throws Throwable {
        Node node0 = new Node(94);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getPureBooleanValue(node1);
        assertEquals(122, node1.getType());
    }

    @Test(timeout = 4000)
    public void test02130() throws Throwable {
        Node node0 = new Node(94);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getPureBooleanValue(node1);
        assertNotSame(node0, node1);
    }

    @Test(timeout = 4000)
    public void test02131() throws Throwable {
        Node node0 = new Node(94);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getPureBooleanValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.getPrototypePropertyName(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test02232() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isAssignmentOp(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02233() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isAssignmentOp(node0);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test02334() throws Throwable {
        Node node0 = new Node(89);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test02435() throws Throwable {
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node0 = null;
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test02536() throws Throwable {
        Node node0 = new Node(8277);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        boolean boolean1 = NodeUtil.isLatin("%");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test02537() throws Throwable {
        Node node0 = new Node(8277);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        boolean boolean1 = NodeUtil.isLatin("%");
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test02638() throws Throwable {
        Node node0 = new Node(69, 69, 69);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.isStrWhiteSpaceChar(42);
    }

    @Test(timeout = 4000)
    public void test02739() throws Throwable {
        Node node0 = new Node(18);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02740() throws Throwable {
        Node node0 = new Node(18);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
        int int0 = NodeUtil.precedence(44);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test02841() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(154);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02942() throws Throwable {
        boolean boolean0 = NodeUtil.isLatin("s--+``zAn3&_gpWS");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03043() throws Throwable {
        boolean boolean0 = NodeUtil.isValidQualifiedName("inferTypes");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03144() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isPrototypeProperty(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test03145() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isPrototypeProperty(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test03246() throws Throwable {
        Node node0 = new Node(116);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForCallOrNew(node0, 1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test03347() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = new Node(130);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Not an assignment op:EXPR_RESULT
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test03448() throws Throwable {
        Node node0 = new Node((-937));
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03549() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test03650() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue("");
        assertEquals(0.0, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test03651() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue("");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test03652() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue("");
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getModifies();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03753() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        assertTrue(node1.isVoid());
    }

    @Test(timeout = 4000)
    public void test03754() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getPureBooleanValue(node1);
        assertTrue(node1.hasChildren());
    }

    @Test(timeout = 4000)
    public void test03755() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getPureBooleanValue(node1);
        String string0 = NodeUtil.opToStrNoFail(52);
        assertEquals("instanceof", string0);
    }

    @Test(timeout = 4000)
    public void test03856() throws Throwable {
        Node node0 = new Node(101);
        NodeUtil.isGet(node0);
        // Undeclared exception!
        try {
            NodeUtil.precedence(55);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 55
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test03957() throws Throwable {
        Node node0 = new Node(68);
        Node[] nodeArray0 = new Node[0];
        Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
        // Undeclared exception!
        try {
            NodeUtil.newHasLocalResult(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04058() throws Throwable {
        Node node0 = new Node(33, 33, 33);
        Node[] nodeArray0 = new Node[0];
        Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
        NodeUtil.isBooleanResultHelper(node1);
        // Undeclared exception!
        try {
            node1.removeChildAfter(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no next sibling.
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04159() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test04160() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(35);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test04261() throws Throwable {
        Node node0 = Node.newString(21, ",6c#ED}g>]aBrL$;", 21, 21);
        Node[] nodeArray0 = new Node[3];
        nodeArray0[0] = node0;
        nodeArray0[1] = node0;
        nodeArray0[2] = node0;
        // Undeclared exception!
        try {
            NodeUtil.newCallNode(node0, nodeArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04362() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        ControlFlowAnalysis.computeFollowNode(node0);
        // Undeclared exception!
        try {
            NodeUtil.isControlStructureCodeBlock(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test04463() throws Throwable {
        Node node0 = new Node(2313);
        boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test04564() throws Throwable {
        Node node0 = Node.newNumber((-2925.0), 65547, 65547);
        boolean boolean0 = NodeUtil.isFunctionExpression(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test04665() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.getCatchBlock((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test04766() throws Throwable {
        Node node0 = new Node(93);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(37);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04867() throws Throwable {
        Node node0 = new Node(89);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04968() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.newName((CodingConvention) null, "com.google.javascript.jscomp.NodeUtil$MatchDeclaration", (Node) null, "com.google.javascript.jscomp.NodeUtil$MatchDeclaration");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test05069() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        GoogleCodingConvention googleCodingConvention1 = new GoogleCodingConvention(googleCodingConvention0);
        // Undeclared exception!
        try {
            NodeUtil.newName(googleCodingConvention1, "Tr(u_=sG)MOSDW", (Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test05170() throws Throwable {
        Node node0 = NodeUtil.numberNode((-796.490291684712), (Node) null);
        assertTrue(node0.isNumber());
    }

    @Test(timeout = 4000)
    public void test05171() throws Throwable {
        Node node0 = NodeUtil.numberNode((-796.490291684712), (Node) null);
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test05272() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(12);
        assertEquals("==", string0);
    }

    @Test(timeout = 4000)
    public void test05273() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(12);
        String string1 = NodeUtil.trimJsWhiteSpace("==");
        assertTrue(string1.equals((Object) string0));
    }

    @Test(timeout = 4000)
    public void test05274() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(12);
        String string1 = NodeUtil.trimJsWhiteSpace("==");
        Node node0 = new Node(12);
        Node node1 = NodeUtil.numberNode(12, node0);
        assertTrue(node1.isNumber());
    }

    @Test(timeout = 4000)
    public void test05375() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType((Node) null, (JSType) null);
        assertNull(jSType0);
    }

    @Test(timeout = 4000)
    public void test05476() throws Throwable {
        Node node0 = new Node(8277);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionBody(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test05577() throws Throwable {
        FileSystemHandling.shouldAllThrowIOExceptions();
        InputId inputId0 = NodeUtil.getInputId((Node) null);
        assertNull(inputId0);
    }

    @Test(timeout = 4000)
    public void test05678() throws Throwable {
        Node node0 = new Node(3728);
        InputId inputId0 = NodeUtil.getInputId(node0);
        assertNull(inputId0);
    }

    @Test(timeout = 4000)
    public void test05779() throws Throwable {
        Node node0 = Node.newString("m}#~Lnz;}mGE+|L,z-");
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence((-2259));
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // -2259
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test05880() throws Throwable {
        boolean boolean0 = NodeUtil.isCommutative(120);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test05981() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        // Undeclared exception!
        try {
            NodeUtil.getConditionExpression(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // FALSE does not have a condition.
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test06082() throws Throwable {
        Node node0 = new Node(99);
        NodeUtil.getImpureBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test06183() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        NodeUtil.getPureBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test06284() throws Throwable {
        Node node0 = Node.newString("com.google.common.collect.ArrayListMultimap");
        // Undeclared exception!
        try {
            NodeUtil.getFunctionParameters(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06385() throws Throwable {
        Node node0 = new Node(3123, 3123, 3123);
        NodeUtil.referencesThis(node0);
        NodeUtil.precedence(41);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    }

    @Test(timeout = 4000)
    public void test06486() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 55, 53);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test06487() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 55, 53);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 4095, nodeUtil_MatchShallowStatement0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test06488() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 55, 53);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 4095, nodeUtil_MatchShallowStatement0);
        boolean boolean1 = NodeUtil.isControlStructureCodeBlock(node1, node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test06489() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 55, 53);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 4095, nodeUtil_MatchShallowStatement0);
        boolean boolean1 = NodeUtil.isControlStructureCodeBlock(node1, node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test06590() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(4095, node0, node0, node0, node0, 55, 53);
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.getNodeTypeReferenceCount(node1, 4095, nodeUtil_MatchShallowStatement0);
        Compiler compiler0 = new Compiler();
        assertEquals(0.0, compiler0.getProgress(), 0.01);
    }

    @Test(timeout = 4000)
    public void test06691() throws Throwable {
        Node node0 = new Node(8277);
        int int0 = NodeUtil.precedence(35);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test06692() throws Throwable {
        Node node0 = new Node(8277);
        int int0 = NodeUtil.precedence(35);
        boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test06793() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        // Undeclared exception!
        try {
            NodeUtil.isStatementParent((Node) null);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06894() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        // Undeclared exception!
        try {
            NodeUtil.isStatement(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test06995() throws Throwable {
        Node node0 = new Node(96, 96, 96);
        Object object0 = new Object();
        NodeUtil.isConstantName(node0);
        // Undeclared exception!
        try {
            NodeUtil.precedence(134);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 134
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test07096() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue("-");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test07097() throws Throwable {
        Double double0 = NodeUtil.getStringNumberValue("-");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test07198() throws Throwable {
        Node node0 = Node.newString((-691), ">mO{[]NA$/MJW");
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "Fwigu6");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07299() throws Throwable {
        Node node0 = new Node(89);
        NodeUtil.isSymmetricOperation(node0);
        NodeUtil.copyNameAnnotations(node0, node0);
        assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
    }

    @Test(timeout = 4000)
    public void test073100() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "c{e;BRm6_#g", "c{e;BRm6_#g");
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000540] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000541]
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test074101() throws Throwable {
        Node node0 = new Node((-1606));
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        NodeUtil.getPrototypeClassName(node0);
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test075102() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        NodeUtil.getNumberValue(node0);
        String string0 = NodeUtil.getNearestFunctionName(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test076103() throws Throwable {
        Node node0 = new Node(96);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        StaticSourceFile staticSourceFile0 = NodeUtil.getSourceFile(node0);
        assertNull(staticSourceFile0);
    }

    @Test(timeout = 4000)
    public void test077104() throws Throwable {
        Node node0 = new Node((-665));
        boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test078105() throws Throwable {
        Node node0 = Node.newString("vG}^p3AZsO}QRJ", (-2717), 150);
        // Undeclared exception!
        try {
            NodeUtil.getBestLValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test079106() throws Throwable {
        boolean boolean0 = NodeUtil.isValidQualifiedName("uS:*a?{\"4Cx:68l.");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test080107() throws Throwable {
        Node node0 = new Node(4392);
        Node node1 = new Node(4095, node0, node0, 100, 54);
        // Undeclared exception!
        try {
            NodeUtil.constructorCallHasSideEffects(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 4392
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test081108() throws Throwable {
        Node node0 = Node.newNumber(4095.0);
        Node node1 = NodeUtil.getBestLValueOwner(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test082109() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.newExpr((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test083110() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(59);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(49);
        // Undeclared exception!
        try {
            NodeUtil.functionCallHasSideEffects(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 59
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test084111() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
        Vector<JSType> vector0 = new Vector<JSType>();
        Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        boolean boolean0 = NodeUtil.has(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test085112() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(59);
        NodeUtil.getNearestFunctionName(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.mayEffectMutableState(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test085113() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(59);
        NodeUtil.getNearestFunctionName(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.mayEffectMutableState(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test086114() throws Throwable {
        Node node0 = new Node(62);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.containsFunction(node0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test087115() throws Throwable {
        Node node0 = null;
        NodeUtil.newUndefinedNode((Node) null);
        // Undeclared exception!
        try {
            NodeUtil.getPureBooleanValue((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test088116() throws Throwable {
        int int0 = NodeUtil.getInverseOperator(250);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test089117() throws Throwable {
        Node node0 = new Node(57);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test090118() throws Throwable {
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        // Undeclared exception!
        try {
            NodeUtil.getNodeTypeReferenceCount((Node) null, (-1407), nodeUtil_MatchShallowStatement0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test091119() throws Throwable {
        Node node0 = Node.newString("c;+", 8238, (-1958040916));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 55, nodeUtil_BooleanResultPredicate0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test092120() throws Throwable {
        Node node0 = new Node(100);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        Node node1 = NodeUtil.getPrototypeClassName(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test093121() throws Throwable {
        Node node0 = new Node(89);
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(31);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(53);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 53
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test094122() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(76);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 76
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test095123() throws Throwable {
        String string0 = NodeUtil.opToStr(67);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test095124() throws Throwable {
        String string0 = NodeUtil.opToStr(67);
        NodeUtil.opToStr(110);
        Node node0 = null;
        try {
            node0 = new Node(67, (Node) null, 67, 67);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test096125() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isForIn(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test096126() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isForIn(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test097127() throws Throwable {
        String string0 = NodeUtil.opToStr(1252);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test098128() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(89);
        Node node2 = new Node((-1213), node0, node1, node0, node0, 16, 55);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        NodeUtil.isNameReferenced(node2, "JSCompiler_renameProperty");
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test099129() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(28, node0, node0, 45, 0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test099130() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(28, node0, node0, 45, 0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test099131() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(28, node0, node0, 45, 0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        int int0 = NodeUtil.precedence(32);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test100132() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(9, node0, node0, node0, node0, 41, 12);
        // Undeclared exception!
        try {
            peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test101133() throws Throwable {
        Node node0 = new Node(147, 147, 147);
        Node node1 = new Node(39, node0, node0, 46, 4095);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isCallOrNew(node1);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test102134() throws Throwable {
        Node node0 = new Node(128);
        Node node1 = new Node(50, node0, node0, 54, 102);
        Node node2 = Node.newString(22, "4HU|li%'G", 35, 98);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node2, nodeUtil_NumbericResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test103135() throws Throwable {
        NodeUtil.newVarNode("&&", (Node) null);
        String string0 = NodeUtil.opToStr(3301);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test104136() throws Throwable {
        Node node0 = new Node(91, 91, 91);
        NodeUtil.getOpFromAssignmentOp(node0);
        String string0 = NodeUtil.opToStr(8);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test105137() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(41);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test105138() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(41);
        int int1 = NodeUtil.getOpFromAssignmentOp(node0);
        assertEquals(11, int1);
    }

    @Test(timeout = 4000)
    public void test106139() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(1228);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 1228
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test107140() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        SourceExcerptProvider.SourceExcerpt sourceExcerptProvider_SourceExcerpt0 = SourceExcerptProvider.SourceExcerpt.LINE;
        Compiler compiler0 = new Compiler();
        LightweightMessageFormatter lightweightMessageFormatter0 = new LightweightMessageFormatter(compiler0, sourceExcerptProvider_SourceExcerpt0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isNameReferenced(node0, "Fu|]x,[#$3,Q;", nodeUtil_BooleanResultPredicate0);
        NodeUtil.redeclareVarsInsideBranch(node0);
        // Undeclared exception!
        try {
            SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test108141() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        boolean boolean0 = NodeUtil.isBooleanResult(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test108142() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        boolean boolean0 = NodeUtil.isBooleanResult(node1);
        int int0 = NodeUtil.precedence(124);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test109143() throws Throwable {
        Node node0 = new Node(77);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test110144() throws Throwable {
        Node node0 = new Node(114, 114, 114);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test111145() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        node0.wasEmptyNode();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(52);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test112146() throws Throwable {
        Node node0 = new Node(101);
        // Undeclared exception!
        try {
            NodeUtil.mayBeStringHelper(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test113147() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        NodeUtil.isValidPropertyName("P4U7\"G&YT'3");
        // Undeclared exception!
        try {
            NodeUtil.mayBeStringHelper(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test114148() throws Throwable {
        Node node0 = new Node(70, 70, 70);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test114149() throws Throwable {
        Node node0 = new Node(70, 70, 70);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        int int0 = NodeUtil.precedence(41);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test115150() throws Throwable {
        Node node0 = new Node(96);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.redeclareVarsInsideBranch(node0);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test116151() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "-infinity", "-infinity");
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isNullOrUndefined(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(47);
        NodeUtil.isPrototypeProperty(node0);
        NodeUtil.redeclareVarsInsideBranch(node0);
        assertEquals(50, Node.FREE_CALL);
    }

    @Test(timeout = 4000)
    public void test117152() throws Throwable {
        Node node0 = new Node((-231));
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test118153() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(45);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test119154() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        node0.getJsDocBuilderForNode();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test120155() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "+", node0, "+");
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertEquals(27, node1.getCharno());
    }

    @Test(timeout = 4000)
    public void test120156() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "+", node0, "+");
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertEquals(38, node1.getType());
    }

    @Test(timeout = 4000)
    public void test120157() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "+", node0, "+");
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test121158() throws Throwable {
        Node node0 = new Node(123, 123, 123);
        boolean boolean0 = NodeUtil.isCallOrNew(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test122159() throws Throwable {
        Node node0 = new Node(21);
        NodeUtil.isFunctionObjectApply(node0);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, set0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test123160() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 42, 16);
        // Undeclared exception!
        try {
            NodeUtil.getImpureBooleanValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test124161() throws Throwable {
        Compiler compiler0 = new Compiler();
        MockFile mockFile0 = new MockFile("e", "e");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Node node0 = new Node(64);
        NodeUtil.getPureBooleanValue(node0);
        NodeUtil.getImpureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: OBJECTLIT
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test125162() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(2);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 8233
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test126163() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY, 165, (-1871));
        node0.cloneNode();
        NodeUtil.getStringValue(node0);
        CodingConvention codingConvention0 = null;
        node0.getJsDocBuilderForNode();
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForCallOrNew(node0, (-1640531527));
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test127164() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue((Node) null, (Predicate<Node>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test128165() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(84);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test128166() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(84);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "+infinity");
        assertFalse(node0.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test129167() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        Node node0 = new Node(2690, (-269), 142);
        Node node1 = new Node(30, (-1681), 1119);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(139);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test129168() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        Node node0 = new Node(2690, (-269), 142);
        Node node1 = new Node(30, (-1681), 1119);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(139);
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
        JSType jSType0 = modificationVisitor0.caseNoType();
        NodeUtil.getObjectLitKeyTypeFromValueType(node1, jSType0);
        int int0 = NodeUtil.getInverseOperator(16);
        assertEquals(14, int0);
    }

    @Test(timeout = 4000)
    public void test130169() throws Throwable {
        Node node0 = new Node(62);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.isVarArgsFunction(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test131170() throws Throwable {
        Node node0 = new Node((-310));
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        String string0 = NodeUtil.arrayToString(node0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test132171() throws Throwable {
        Node node0 = Node.newNumber((-2925.0), 65536, 65536);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("-2925", string0);
    }

    @Test(timeout = 4000)
    public void test133172() throws Throwable {
        NodeUtil.precedence(43);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(44);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 44: TRUE
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test134173() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isValidQualifiedName(".&&");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test135174() throws Throwable {
        Node node0 = Node.newString(38, "vU");
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test136175() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node0 = null;
        // Undeclared exception!
        try {
            NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, (String) null, (Node) null, "c;MC+");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test137176() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.newQualifiedNameNode((CodingConvention) null, "aA;)KDX(");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test138177() throws Throwable {
        Node node0 = new Node(8234, 8234, 8234);
        NodeUtil.isStrWhiteSpaceChar(4);
        boolean boolean0 = NodeUtil.isSwitchCase(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test139178() throws Throwable {
        Node node0 = new Node(108);
        Compiler compiler0 = new Compiler();
        NodeUtil.isControlStructure(node0);
        NodeUtil.getPureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Not an assignment op:IF
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test140179() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.isControlStructure(node0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeTRY 77
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test141180() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        NodeUtil.getSourceName(node1);
        NodeUtil.isSymmetricOperation(node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test142181() throws Throwable {
        Node node0 = new Node(27);
        node0.getJsDocBuilderForNode();
        boolean boolean0 = NodeUtil.isImmutableValue(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test142182() throws Throwable {
        Node node0 = new Node(27);
        node0.getJsDocBuilderForNode();
        boolean boolean0 = NodeUtil.isImmutableValue(node0);
        String string0 = NodeUtil.opToStrNoFail(16);
        assertEquals(">", string0);
    }

    @Test(timeout = 4000)
    public void test143183() throws Throwable {
        int int0 = NodeUtil.precedence(63);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test143184() throws Throwable {
        int int0 = NodeUtil.precedence(63);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        boolean boolean0 = NodeUtil.has((Node) null, sourceMap_DetailLevel0, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test144185() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test145186() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.isAssociative(11);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = Node.newString(11, "C'7-*^");
        Node node1 = NodeUtil.newVarNode("R", node0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionParameters(node1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test146187() throws Throwable {
        NodeUtil.isAssociative(101);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
    }

    @Test(timeout = 4000)
    public void test147188() throws Throwable {
        Node node0 = new Node(86);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        // Undeclared exception!
        try {
            NodeUtil.removeChild(node0, node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test148189() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        node0.setSourceEncodedPositionForTree(1342);
        Node node1 = new Node(16, 3, 1593);
        int int0 = (-1738);
        Node node2 = new Node(130, node0, node0, node1, node1, 5237, (-1738));
        NodeUtil.getPureBooleanValue(node0);
        Compiler compiler0 = new Compiler();
        compiler0.getRoot();
        // Undeclared exception!
        try {
            NodeUtil.isVarOrSimpleAssignLhs(node0, (Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test149190() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = Node.newNumber(29.0, 255, (-2578));
        NodeUtil.getPureBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test150191() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.isRelationalOperation(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean1 = NodeUtil.isSimpleOperatorType(1);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test150192() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.isRelationalOperation(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean1 = NodeUtil.isSimpleOperatorType(1);
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test150193() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.isRelationalOperation(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean1 = NodeUtil.isSimpleOperatorType(1);
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertFalse(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test151194() throws Throwable {
        Node node0 = null;
        NodeUtil.getBestLValueOwner((Node) null);
        Compiler compiler0 = new Compiler();
        // Undeclared exception!
        try {
            NodeUtil.constructorCallHasSideEffects((Node) null, compiler0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test152195() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        String string0 = NodeUtil.opToStr(122);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test152196() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        String string0 = NodeUtil.opToStr(122);
        boolean boolean0 = NodeUtil.isValidQualifiedName("void");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test153197() throws Throwable {
        FileSystemHandling.shouldAllThrowIOExceptions();
        NodeUtil.isAssociative((-2431));
        Node node0 = NodeUtil.booleanNode(true);
        // Undeclared exception!
        try {
            NodeUtil.isLValue(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test154198() throws Throwable {
        Node node0 = new Node(99, 99, 99);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(122);
        Node node1 = Node.newString(41, "D5rmgAl?tiKhR/!", (-4320), 44);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test155199() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.getArrayElementStringValue(node0);
        JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
        assertNull(jSDocInfo0);
    }

    @Test(timeout = 4000)
    public void test156200() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(55);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 55
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test157201() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test158202() throws Throwable {
        Node node0 = new Node(92);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.isWithinLoop(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test159203() throws Throwable {
        Compiler compiler0 = new Compiler();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        String string0 = NodeUtil.opToStrNoFail(28);
        assertEquals("+", string0);
    }

    @Test(timeout = 4000)
    public void test160204() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test160205() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        String string0 = NodeUtil.arrayToString(node1);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test160206() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
        String string0 = NodeUtil.arrayToString(node1);
        assertEquals("false", string0);
    }

    @Test(timeout = 4000)
    public void test161207() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "C");
        Node node1 = new Node(52, node0, node0, 47, 40);
        NodeUtil.arrayToString(node1);
        NodeUtil.getNumberValue(node0);
        NodeUtil.isEmptyBlock(node1);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: INSTANCEOF 47
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test162208() throws Throwable {
        Node node0 = new Node(3728);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test163209() throws Throwable {
        Node node0 = Node.newString(38, "l]");
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test163210() throws Throwable {
        Node node0 = Node.newString(38, "l]");
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test164211() throws Throwable {
        Node node0 = new Node(62);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test165212() throws Throwable {
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node((-214));
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test165213() throws Throwable {
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node((-214));
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test166214() throws Throwable {
        Node node0 = new Node(105);
        Node node1 = new Node(54, node0, node0, node0, node0, 3655, 1281);
        NodeUtil.isRelationalOperation(node1);
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.isTryFinallyNode(node1, node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        NodeUtil.isBooleanResult(node0);
        // Undeclared exception!
        try {
            NodeUtil.removeChild(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Invalid attempt to remove node: FUNCTION <invalid> of FUNCTION <invalid>
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test167215() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(47, node0);
        NodeUtil.getStringNumberValue("com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate");
        boolean boolean0 = NodeUtil.isTryCatchNodeContainer(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test167216() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(47, node0);
        NodeUtil.getStringNumberValue("com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate");
        boolean boolean0 = NodeUtil.isTryCatchNodeContainer(node0);
        assertFalse(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test167217() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(47, node0);
        NodeUtil.getStringNumberValue("com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate");
        boolean boolean0 = NodeUtil.isTryCatchNodeContainer(node0);
        Double double0 = NodeUtil.getStringNumberValue("processGoogScopeAliases");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test167218() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(47, node0);
        NodeUtil.getStringNumberValue("com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate");
        boolean boolean0 = NodeUtil.isTryCatchNodeContainer(node0);
        Double double0 = NodeUtil.getStringNumberValue("processGoogScopeAliases");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test168219() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        NodeUtil.getBestLValueName(node0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test168220() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        NodeUtil.getBestLValueName(node0);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test169221() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        boolean boolean0 = NodeUtil.isExprCall(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test169222() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        boolean boolean0 = NodeUtil.isExprCall(node0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test170223() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(51, node0, node0, 4095, 4095);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test171224() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(91);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(50);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 50
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test172225() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(150);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 150
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test173226() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(113, node0, node0, node0, node0, 1, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        String string0 = NodeUtil.opToStrNoFail(17);
        assertEquals(">=", string0);
    }

    @Test(timeout = 4000)
    public void test174227() throws Throwable {
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "_>%&[ rW \"\"7U.d/");
        // Undeclared exception!
        try {
            peepholeRemoveDeadCode0.tryFoldFor(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test175228() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        Node node1 = new Node(16, node0, node0, node0, node0, 52, 49);
        NodeUtil.opToStr(48);
        NodeUtil.getNumberValue(node1);
        NodeUtil.isFunctionExpression(node0);
        boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test176229() throws Throwable {
        Node node0 = new Node(148);
        int int0 = NodeUtil.precedence(43);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test177230() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
        boolean boolean1 = NodeUtil.isStatementBlock(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test177231() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
        boolean boolean1 = NodeUtil.isStatementBlock(node0);
        boolean boolean2 = NodeUtil.mayBeString(node0, false);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test177232() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
        boolean boolean1 = NodeUtil.isStatementBlock(node0);
        boolean boolean2 = NodeUtil.mayBeString(node0, false);
        assertTrue(boolean2);
    }

    @Test(timeout = 4000)
    public void test178233() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Compiler compiler0 = new Compiler();
        NodeUtil.isControlStructure(node0);
        NodeUtil.getPureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: TRUE
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test179234() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        Node node0 = new Node(3644);
        Node node1 = new Node(15, node0, node0, 16, 31);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        reorderConstantExpression0.optimizeSubtree(node1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
    }

    @Test(timeout = 4000)
    public void test180235() throws Throwable {
        Compiler compiler0 = new Compiler();
        ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
        Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "JSC_ILLEGAL_PROPERTY_ACCESS");
        NodeUtil.getPureBooleanValue(node0);
        assertEquals(0, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test180236() throws Throwable {
        Compiler compiler0 = new Compiler();
        ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
        Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "JSC_ILLEGAL_PROPERTY_ACCESS");
        NodeUtil.getPureBooleanValue(node0);
        String string0 = NodeUtil.getPrototypePropertyName(node0);
        assertEquals("L_PROPERTY_ACCESS", string0);
    }

    @Test(timeout = 4000)
    public void test181237() throws Throwable {
        EvoSuiteFile evoSuiteFile0 = null;
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(85);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 85: COMMA
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test182238() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test182239() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        String string0 = NodeUtil.opToStrNoFail(29);
        assertEquals("-", string0);
    }

    @Test(timeout = 4000)
    public void test183240() throws Throwable {
        Node node0 = new Node(72);
        Node node1 = new Node(38);
        Node node2 = node1.cloneTree();
        NodeUtil.isSimpleOperator(node1);
        // Undeclared exception!
        try {
            NodeUtil.canBeSideEffected(node2);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // NAME is not a string node
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test184241() throws Throwable {
        Node node0 = new Node(89);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: ASSIGN_BITAND
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test185242() throws Throwable {
        Node node0 = new Node(122);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(49);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test186243() throws Throwable {
        Node node0 = new Node(17, 42, 37);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test187244() throws Throwable {
        int int0 = 33;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(33);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 33: GETPROP
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test188245() throws Throwable {
        NodeUtil.booleanNode(false);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(38);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 38: NAME
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test189246() throws Throwable {
        Node node0 = new Node(10);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(85, node0, node0, node0, node0, 101, 10);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        String string0 = NodeUtil.getBestLValueName(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test190247() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = Node.newNumber(72.160157, 13, 13);
        NodeUtil.isNameReferenced(node0, "@", nodeUtil_BooleanResultPredicate1);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        ReorderConstantExpression reorderConstantExpression1 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(3517);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 3517
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test191248() throws Throwable {
        int int0 = NodeUtil.precedence(89);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test191249() throws Throwable {
        int int0 = NodeUtil.precedence(89);
        String string0 = NodeUtil.opToStr(89);
        assertEquals("&=", string0);
    }

    @Test(timeout = 4000)
    public void test192250() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(35);
        boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test192251() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(35);
        boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test193252() throws Throwable {
        Node node0 = new Node(17, (-2414), 17);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.getNearestFunctionName(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.anyResultsMatch(node0, nodeUtil_BooleanResultPredicate0);
        NodeUtil.getInverseOperator(15);
        NodeUtil.getNumberValue(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test194253() throws Throwable {
        Node node0 = new Node(17);
        node0.toStringTree();
        NodeUtil.isValidPropertyName(",");
        NodeUtil.mayBeStringHelper(node0);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test195254() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
        node0.isLocalResultCall();
        int int0 = NodeUtil.getInverseOperator(16);
        assertEquals(14, int0);
    }

    @Test(timeout = 4000)
    public void test195255() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
        node0.isLocalResultCall();
        int int0 = NodeUtil.getInverseOperator(16);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test196256() throws Throwable {
        String string0 = NodeUtil.opToStr(40);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test197257() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test197258() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        assertNotNull(nodeUtil_BooleanResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test197259() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getBestJSDocInfo(node0);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test197260() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getBestJSDocInfo(node0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test198261() throws Throwable {
        MockFile mockFile0 = new MockFile("com.google.javascript.jscomp.IgnoreCajaProperties$Traversal", "com.google.javascript.jscomp.IgnoreCajaProperties$Traversal");
        String string0 = NodeUtil.opToStrNoFail(86);
        assertEquals("=", string0);
    }

    @Test(timeout = 4000)
    public void test199262() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        node0.cloneTree();
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        NodeUtil.canBeSideEffected(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        assertNotNull(nodeUtil_BooleanResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test200263() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        Node node2 = NodeUtil.numberNode((-674.22214682), node1);
        assertTrue(node2.isNumber());
    }

    @Test(timeout = 4000)
    public void test200264() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        Node node2 = NodeUtil.numberNode((-674.22214682), node1);
        NodeUtil.canBeSideEffected(node1);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node1);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test200265() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        Node node2 = NodeUtil.numberNode((-674.22214682), node1);
        NodeUtil.canBeSideEffected(node1);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test200266() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        Node node2 = NodeUtil.numberNode((-674.22214682), node1);
        NodeUtil.canBeSideEffected(node1);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test201267() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        int int0 = NodeUtil.precedence(46);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test201268() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        int int0 = NodeUtil.precedence(46);
        String string1 = NodeUtil.opToStrNoFail(46);
        assertEquals("!==", string1);
    }

    @Test(timeout = 4000)
    public void test202269() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        String string0 = NodeUtil.opToStr(45);
        assertEquals("===", string0);
    }

    @Test(timeout = 4000)
    public void test203270() throws Throwable {
        Node node0 = new Node(27);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(30);
        boolean boolean0 = NodeUtil.isLoopStructure(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test204271() throws Throwable {
        Node node0 = new Node(69, 69, 69);
        MockFile mockFile0 = new MockFile("Le-wG~+nGl1cL{wA[y", "XUi");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test204272() throws Throwable {
        Node node0 = new Node(69, 69, 69);
        MockFile mockFile0 = new MockFile("Le-wG~+nGl1cL{wA[y", "XUi");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(15);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test205273() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test206274() throws Throwable {
        Node node0 = new Node(93);
        node0.getProp(12);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = NodeUtil.newExpr(node0);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        googleCodingConvention0.extractClassNameIfRequire(node0, node1);
        NodeUtil.newUndefinedNode(node1);
        // Undeclared exception!
        try {
            NodeUtil.newName(googleCodingConvention0, (String) null, node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // StringNode: str is null
            //
            verifyException("com.google.javascript.rhino.Node$StringNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test207275() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 3646, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.getConditionExpression(node1);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        int int0 = NodeUtil.precedence(51);
        assertEquals(9, int0);
    }

    @Test(timeout = 4000)
    public void test208276() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        FileSystemHandling.shouldAllThrowIOExceptions();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        Node node0 = new Node(115);
        // Undeclared exception!
        try {
            NodeUtil.getConditionExpression(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // malformed 'for' statement FOR
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test209277() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(37);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 37: CALL
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test210278() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isCommutative((-687));
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test210279() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isCommutative((-687));
        MockFile.createTempFile("===", "com.google.javascript.jscomp.NodeUtil$MatchNotFunction");
        String string0 = NodeUtil.opToStrNoFail(96);
        assertEquals("/=", string0);
    }

    @Test(timeout = 4000)
    public void test211280() throws Throwable {
        Node node0 = new Node(96);
        Node node1 = new Node(39);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(96);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test212281() throws Throwable {
        Node node0 = new Node(92);
        NodeUtil.isForIn(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = new Node(54, node0, node0, node0, node0);
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        String string0 = NodeUtil.opToStr(30);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test213282() throws Throwable {
        Node node0 = Node.newString(38, "vU");
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test213283() throws Throwable {
        Node node0 = Node.newString(38, "vU");
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(54);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test213284() throws Throwable {
        Node node0 = Node.newString(38, "vU");
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(54);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test214285() throws Throwable {
        Node node0 = Node.newNumber(497.187017);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test215286() throws Throwable {
        NodeUtil.booleanNode(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isSimpleOperatorType(30);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test216287() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "Missing return statement. Function expected to return {0}.");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.getDirectives();
        assertTrue(node0.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test217288() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(8232);
        // Undeclared exception!
        try {
            NodeUtil.precedence(8232);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 8232
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test218289() throws Throwable {
        Node node0 = new Node(3997);
        int int0 = NodeUtil.precedence(16);
        assertEquals(9, int0);
    }

    @Test(timeout = 4000)
    public void test219290() throws Throwable {
        Node node0 = new Node(53);
        String string0 = NodeUtil.opToStr(42);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test220291() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        node0.getJsDocBuilderForNode();
        NodeUtil.isImmutableValue(node0);
        assertEquals(43, node0.getType());
    }

    @Test(timeout = 4000)
    public void test220292() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        node0.getJsDocBuilderForNode();
        NodeUtil.isImmutableValue(node0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test221293() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "-infinity", "-infinity");
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isNullOrUndefined(node0);
        Compiler compiler1 = new Compiler();
        assertFalse(compiler1.equals((Object) compiler0));
    }

    @Test(timeout = 4000)
    public void test222294() throws Throwable {
        Node node0 = new Node(37, 37, 37);
        Compiler compiler0 = new Compiler();
        InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
        NodeUtil.isControlStructure(node0);
        StatementFusion statementFusion0 = new StatementFusion();
        // Undeclared exception!
        try {
            statementFusion0.mayHaveSideEffects(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test223295() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(108);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for IF (type 108)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test224296() throws Throwable {
        Node node0 = new Node(23, 83, 83);
        node0.isOptionalArg();
        String string0 = NodeUtil.opToStrNoFail(51);
        assertEquals("in", string0);
    }

    @Test(timeout = 4000)
    public void test225297() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        String string0 = NodeUtil.opToStr(31);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test226298() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isStrWhiteSpaceChar(142);
        NodeUtil.precedence(23);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test227299() throws Throwable {
        Node node0 = new Node(592, 592, 592);
        int int0 = NodeUtil.precedence(45);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test228300() throws Throwable {
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        NodeUtil.isNameReferenced(node1, "[h<UxU\".s>>e.", nodeUtil_BooleanResultPredicate0);
        NodeUtil.copyNameAnnotations(node1, node0);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // -937
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test229301() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        nodeUtil_BooleanResultPredicate0.apply(node1);
        node1.isQualifiedName();
        NodeUtil.isNameReferenced(node1, "!");
        NodeUtil.isValidPropertyName("w08");
        NodeUtil.isStatementBlock(node0);
        NodeUtil.isObjectLitKey(node0, node0);
        NodeUtil.isObjectLitKey(node1, node0);
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
        NodeUtil.isPrototypePropertyDeclaration(node1);
        // Undeclared exception!
        try {
            SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test230302() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        Node node0 = new Node(3644);
        Node node1 = new Node(15, node0, node0, 16, 31);
        Node node2 = NodeUtil.getBestLValue(node0);
        assertNull(node2);
    }

    @Test(timeout = 4000)
    public void test230303() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        Node node0 = new Node(3644);
        Node node1 = new Node(15, node0, node0, 16, 31);
        Node node2 = NodeUtil.getBestLValue(node0);
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test231304() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        node0.removeProp(35);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test231305() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        node0.removeProp(35);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.mayBeStringHelper(node0);
        NodeUtil.getImpureBooleanValue(node0);
        Node node1 = Node.newString("D-u^`@ZJ0eE%gGJM", 909, 48);
        Node node2 = node0.clonePropsFrom(node1);
        NodeUtil.getNumberValue(node2);
        boolean boolean2 = NodeUtil.isRelationalOperation(node2);
        assertFalse(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test231306() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        node0.removeProp(35);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.mayBeStringHelper(node0);
        NodeUtil.getImpureBooleanValue(node0);
        Node node1 = Node.newString("D-u^`@ZJ0eE%gGJM", 909, 48);
        Node node2 = node0.clonePropsFrom(node1);
        NodeUtil.getNumberValue(node2);
        boolean boolean2 = NodeUtil.isRelationalOperation(node2);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test232307() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(35, 185, 45);
        Node node2 = new Node(48, node0, node0, node1, node0, 16, 13);
        NodeUtil.getLoopCodeBlock(node1);
        NodeUtil.mayBeStringHelper(node1);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test233308() throws Throwable {
        Node node0 = new Node(137);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test234309() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test235310() throws Throwable {
        Node node0 = new Node(101, 101, 101);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isNullOrUndefined(node0);
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.isHoistedFunctionDeclaration(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(30);
    }

    @Test(timeout = 4000)
    public void test236311() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 42, 109);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test237312() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        node0.wasEmptyNode();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(52);
        FileSystemHandling.shouldAllThrowIOExceptions();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test238313() throws Throwable {
        Node node0 = new Node(96);
        Node node1 = new Node(54, node0, node0, node0, node0, 3663, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isCommutative(51);
        NodeUtil.getOpFromAssignmentOp(node0);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 54
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test239314() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(122);
        assertEquals("void", string0);
    }

    @Test(timeout = 4000)
    public void test240315() throws Throwable {
        Node node0 = new Node(72, (-990), (-990));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(52, node0, node0, node0, node0, 1, 51);
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        // Undeclared exception!
        try {
            NodeUtil.tryMergeBlock(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test241316() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(54);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 54
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test242317() throws Throwable {
        int int0 = NodeUtil.precedence(96);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test242318() throws Throwable {
        int int0 = NodeUtil.precedence(96);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(96);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test242319() throws Throwable {
        int int0 = NodeUtil.precedence(96);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(96);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        String string0 = NodeUtil.trimJsWhiteSpace("l|");
        assertEquals("l|", string0);
    }

    @Test(timeout = 4000)
    public void test243320() throws Throwable {
        Node node0 = new Node(96);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        // Undeclared exception!
        try {
            peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test244321() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        Node node0 = new Node((-2750), 10, 49);
        SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("uS:*a?{\"4Cx:68l..", false);
        NodeUtil.getNameReferenceCount(node0, "uS:*a?{\"4Cx:68l..");
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test245322() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node0 = new Node(63, 63, 63);
        MockFile mockFile0 = new MockFile("gUi", "gUi");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(35);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 35: GETELEM
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test246323() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(113, node0, node0, node0, node0, 32, 40);
        Node node2 = NodeUtil.getLoopCodeBlock(node1);
        NodeUtil.mayBeStringHelper(node2);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test247324() throws Throwable {
        Node node0 = new Node(99);
        // Undeclared exception!
        try {
            NodeUtil.precedence(48);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 48
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test248325() throws Throwable {
        int int0 = NodeUtil.precedence(29);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test249326() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(48);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 48
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test250327() throws Throwable {
        Node node0 = new Node(137, 8, 2974);
        String string0 = NodeUtil.opToStr(43);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test251328() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(12, 12, 12);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isSimpleOperator(node0);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(36);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test252329() throws Throwable {
        Node node0 = new Node(14, 14, 2037);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[h<UxU\".s>>e.");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(36);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test252330() throws Throwable {
        Node node0 = new Node(14, 14, 2037);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[h<UxU\".s>>e.");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(36);
        boolean boolean1 = NodeUtil.isTryFinallyNode(node0, node0);
        boolean boolean2 = NodeUtil.isValidQualifiedName(".&&");
        assertTrue(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test252331() throws Throwable {
        Node node0 = new Node(14, 14, 2037);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[h<UxU\".s>>e.");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(36);
        boolean boolean1 = NodeUtil.isTryFinallyNode(node0, node0);
        boolean boolean2 = NodeUtil.isValidQualifiedName(".&&");
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test253332() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(59);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test254333() throws Throwable {
        Node node0 = new Node(72);
        Node node1 = new Node(39, 125, 0);
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test254334() throws Throwable {
        Node node0 = new Node(72);
        Node node1 = new Node(39, 125, 0);
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test255335() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(72);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.getLoopCodeBlock(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test256336() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(31, 31, 2018);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(29, node0, node0, node0, node0, 37, 43);
        NodeUtil.allResultsMatch(node1, nodeUtil_BooleanResultPredicate0);
        // Undeclared exception!
        try {
            NodeUtil.precedence(143);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 143
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test257337() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        Node node0 = new Node(3644);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        String string0 = NodeUtil.opToStrNoFail(23);
        assertEquals("*", string0);
    }

    @Test(timeout = 4000)
    public void test258338() throws Throwable {
        Node node0 = new Node(107, 107, 107);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node1 = new Node(55);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 55
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test259339() throws Throwable {
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node0 = Node.newNumber((-727.198), 76, 76);
        Node node1 = peepholeRemoveDeadCode0.optimizeSubtree(node0);
        Node node2 = new Node(76, node1, node0, node0, 50, 42);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node2, nodeUtil_MatchDeclaration0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 76
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test260340() throws Throwable {
        NodeUtil.precedence(91);
        int int0 = NodeUtil.precedence(91);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test261341() throws Throwable {
        int int0 = NodeUtil.precedence(91);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test261342() throws Throwable {
        int int0 = NodeUtil.precedence(91);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node0 = new Node(33, 33, 1);
        NodeUtil.copyNameAnnotations(node0, node0);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test262343() throws Throwable {
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "eW5o~E1K09U~,");
        NodeUtil.opToStrNoFail(32);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(32);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test263344() throws Throwable {
        Node node0 = new Node(61);
        Node node1 = new Node(35);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        NodeUtil.getLoopCodeBlock(node0);
        NodeUtil.getNumberValue(node1);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.computeFallThrough((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test264345() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(35);
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.canBeSideEffected(node0);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test265346() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(14, 14, 2037);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".[h<UxU\".s>>e.");
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.isSimpleOperatorType(36);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isTryFinallyNode(node0, node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        NodeUtil.anyResultsMatch(node0, nodeUtil_BooleanResultPredicate0);
        NodeUtil.getInverseOperator(2);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        String string0 = NodeUtil.getBestLValueName(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test266347() throws Throwable {
        Node node0 = new Node(10);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1057);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test267348() throws Throwable {
        NodeUtil.isSimpleOperatorType(88);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        assertEquals("goog.exportProperty", googleCodingConvention0.getExportPropertyFunction());
    }

    @Test(timeout = 4000)
    public void test268349() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(41);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 41: NULL
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test269350() throws Throwable {
        Node node0 = Node.newString(42, "Z(vU");
        node0.setSourceEncodedPosition(1610612736);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test270351() throws Throwable {
        Node node0 = new Node(39, 39, 3531);
        Node node1 = new Node((-1562), node0, node0, node0, node0, 2392, 3837);
        NodeUtil.getLoopCodeBlock(node1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration1 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test271352() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test272353() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(151);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 151
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test273354() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(41, node0, node0, node0, node0, 3646, 1281);
        NodeUtil.opToStrNoFail(16);
        Node node2 = new Node(54);
        NodeUtil.isSimpleOperator(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node2, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 54
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test274355() throws Throwable {
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "AQ&QF");
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test275356() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(112);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for DEFAULT_CASE (type 112)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test276357() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = new Node(89, 1403, 89);
        Node node1 = new Node(26, node0, node0, node0, node0, 2, 30);
        NodeUtil.getLoopCodeBlock(node1);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test277358() throws Throwable {
        Node node0 = new Node(21);
        node0.toStringTree();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isBooleanResultHelper(node0);
        boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test278359() throws Throwable {
        Node node0 = new Node(92);
        NodeUtil.isForIn(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test279360() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(39);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 39: NUMBER
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test280361() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        NodeUtil.isHoistedFunctionDeclaration(node1);
        // Undeclared exception!
        try {
            NodeUtil.precedence(50);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 50
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test281362() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(154, node0, node0, (-36), 4095);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.getExceptionHandler(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test282363() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("false", string0);
    }

    @Test(timeout = 4000)
    public void test283364() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.anyResultsMatch(node0, nodeUtil_MayBeStringResultPredicate0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test284365() throws Throwable {
        NodeUtil.isSimpleOperatorType(44);
        NodeUtil.isStrWhiteSpaceChar(695);
    }

    @Test(timeout = 4000)
    public void test285366() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        NodeUtil.isLiteralValue(node0, true);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(1.0, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test286367() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        Node node0 = NodeUtil.booleanNode(false);
        node0.isLocalResultCall();
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test286368() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        Node node0 = NodeUtil.booleanNode(false);
        node0.isLocalResultCall();
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        NodeUtil.getImpureBooleanValue(node0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test286369() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        Node node0 = NodeUtil.booleanNode(false);
        node0.isLocalResultCall();
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        NodeUtil.getImpureBooleanValue(node0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test287370() throws Throwable {
        Node node0 = new Node(80);
        NodeUtil.isForIn(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        String string0 = NodeUtil.opToStr(30);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test288371() throws Throwable {
        Node node0 = new Node(45);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test289372() throws Throwable {
        Node node0 = new Node(92);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
        boolean boolean1 = NodeUtil.isObjectLitKey(node0, node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test290373() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(61);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 61
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test291374() throws Throwable {
        Node node0 = new Node(107, 107, 107);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(29);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test292375() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(26);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        String string0 = NodeUtil.opToStrNoFail(26);
        assertEquals("!", string0);
    }

    @Test(timeout = 4000)
    public void test292376() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(26);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        String string0 = NodeUtil.opToStrNoFail(26);
        boolean boolean1 = NodeUtil.isValidQualifiedName("!");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test292377() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(26);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        String string0 = NodeUtil.opToStrNoFail(26);
        boolean boolean1 = NodeUtil.isValidQualifiedName("!");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test293378() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        int int0 = NodeUtil.precedence(41);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test294379() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(32);
        assertEquals("typeof", string0);
    }

    @Test(timeout = 4000)
    public void test295380() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = Node.newString(83, "==", 83, 83);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isAssignmentOp(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test296381() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test296382() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(googleCodingConvention0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(codingConventions_Proxy0);
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, "ASSIGN_LSH", node1, "ASSIGN_LSH");
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node2, sourceMap_DetailLevel0);
        assertTrue(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test296383() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(googleCodingConvention0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(codingConventions_Proxy0);
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, "ASSIGN_LSH", node1, "ASSIGN_LSH");
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node2, sourceMap_DetailLevel0);
        assertEquals(364633, node2.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test296384() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(googleCodingConvention0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(codingConventions_Proxy0);
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, "ASSIGN_LSH", node1, "ASSIGN_LSH");
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node2, sourceMap_DetailLevel0);
        assertEquals(38, node2.getType());
    }

    @Test(timeout = 4000)
    public void test296385() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(googleCodingConvention0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(codingConventions_Proxy0);
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, "ASSIGN_LSH", node1, "ASSIGN_LSH");
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node2, sourceMap_DetailLevel0);
        assertTrue(boolean2);
    }

    @Test(timeout = 4000)
    public void test297386() throws Throwable {
        Node node0 = new Node(151);
        NodeUtil.precedence(30);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(54);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 54
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test298387() throws Throwable {
        NodeUtil.isSimpleOperatorType(26);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        int int0 = NodeUtil.precedence(46);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test299388() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(27);
        assertEquals("~", string0);
    }

    @Test(timeout = 4000)
    public void test300389() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(55, 16, 42);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node1, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test301390() throws Throwable {
        String string0 = NodeUtil.opToStr(116);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test302391() throws Throwable {
        int int0 = NodeUtil.precedence(98);
        assertEquals(2, int0);
    }

    @Test(timeout = 4000)
    public void test303392() throws Throwable {
        Node node0 = new Node(108);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeIF
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test304393() throws Throwable {
        Node node0 = new Node(144);
        NodeUtil.isSimpleOperatorType(16);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test305394() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(145);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 145
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test306395() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(101);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test306396() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(101);
        String string0 = NodeUtil.opToStrNoFail(101);
        assertEquals("&&", string0);
    }

    @Test(timeout = 4000)
    public void test307397() throws Throwable {
        Node node0 = new Node(89, (-894), (-894));
        Node node1 = new Node(26, node0, node0, node0, node0, 42, 8);
        NodeUtil.mayBeStringHelper(node1);
        node0.cloneTree();
        NodeUtil.canBeSideEffected(node1);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
    }

    @Test(timeout = 4000)
    public void test308398() throws Throwable {
        boolean boolean0 = NodeUtil.isValidSimpleName("'");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test308399() throws Throwable {
        boolean boolean0 = NodeUtil.isValidSimpleName("'");
        String string0 = NodeUtil.opToStrNoFail(14);
        assertEquals("<", string0);
    }

    @Test(timeout = 4000)
    public void test309400() throws Throwable {
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.precedence(139);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 139
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test310401() throws Throwable {
        int int0 = 63;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(63);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 63: ARRAYLIT
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test311402() throws Throwable {
        NodeUtil.isAssociative(138);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(99);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 99
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test312403() throws Throwable {
        Compiler compiler0 = new Compiler();
        int int0 = NodeUtil.precedence(10);
        assertEquals(6, int0);
    }

    @Test(timeout = 4000)
    public void test313404() throws Throwable {
        Node node0 = new Node(21);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(36);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 36
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test314405() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node0 = new Node(45);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isExprAssign(node0);
        Compiler compiler0 = new Compiler();
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test315406() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(116);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for BREAK (type 116)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test316407() throws Throwable {
        Node node0 = new Node(73);
        Node node1 = new Node(46, 42, 127);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchDeclaration0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test317408() throws Throwable {
        Node node0 = new Node(116);
        Node node1 = new Node(39, node0, node0, 46, 4095);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isVarDeclaration(node0);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Not an assignment op:BREAK
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test318409() throws Throwable {
        Node node0 = new Node(116);
        Node node1 = new Node(39, node0, node0, 46, 4095);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Number node not created with Node.newNumber
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test319410() throws Throwable {
        NodeUtil.precedence(15);
        Compiler compiler0 = new Compiler();
        assertEquals(0.0, compiler0.getProgress(), 0.01);
    }

    @Test(timeout = 4000)
    public void test320411() throws Throwable {
        Node node0 = new Node(95);
        int int0 = NodeUtil.precedence(37);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test321412() throws Throwable {
        Node node0 = new Node(119, (-5653), 119);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeWITH
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test322413() throws Throwable {
        int int0 = NodeUtil.precedence(94);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test322414() throws Throwable {
        int int0 = NodeUtil.precedence(94);
        int int1 = NodeUtil.getInverseOperator(250);
        assertEquals((-1), int1);
    }

    @Test(timeout = 4000)
    public void test323415() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(117);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 117: CONTINUE
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test324416() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        MockFile.createTempFile("com.google.javascript.jscomp.IgnoreCajaProperties$Traversal", "com.google.javascript.jscomp.IgnoreCajaProperties$Traversal");
        NodeUtil.precedence(14);
        NodeUtil.trimJsWhiteSpace("QoavPvK");
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.externsRoot;
        // Undeclared exception!
        try {
            reorderConstantExpression0.optimizeSubtree((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test325417() throws Throwable {
        NodeUtil.opToStr(15);
        Node node0 = new Node(15);
        NodeUtil.getBestLValueName(node0);
        // Undeclared exception!
        try {
            NodeUtil.getAssignedValue(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test326418() throws Throwable {
        Node node0 = new Node((-1121));
        String string0 = NodeUtil.opToStr(47);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test327419() throws Throwable {
        NodeUtil.isValidPropertyName("Hj");
        NodeUtil.isValidPropertyName("Hj");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "===.");
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getRValueOfLValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test328420() throws Throwable {
        Node node0 = new Node(107);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node1 = new Node(55);
        NodeUtil.isSimpleOperatorType(33);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test329421() throws Throwable {
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node0 = Node.newString("com.google.javascript.jscomp.DefaultPassConfig$79");
        Node node1 = new Node((-485), node0, node0, node0);
        // Undeclared exception!
        try {
            peepholeRemoveDeadCode0.tryOptimizeBlock(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test330422() throws Throwable {
        int int0 = NodeUtil.precedence(154);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test331423() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        NodeUtil.isSimpleOperatorType(27);
        ExploitAssigns exploitAssigns1 = new ExploitAssigns();
        int int0 = NodeUtil.precedence(27);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test332424() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        String string0 = NodeUtil.opToStr(18);
        assertEquals("<<", string0);
    }

    @Test(timeout = 4000)
    public void test333425() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        NodeUtil.isCommutative(23);
        int int0 = 8;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(8);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 8
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test334426() throws Throwable {
        Compiler compiler0 = new Compiler();
        SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("S:*a?{\"4Cx:68l..", false);
        InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
        boolean boolean0 = NodeUtil.isCommutative(10);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test335427() throws Throwable {
        Node node0 = new Node(112, 112, 120);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, predicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeDEFAULT_CASE 112
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test336428() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        int int0 = NodeUtil.precedence(85);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test337429() throws Throwable {
        NodeUtil.isLatin("WPSB1");
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(113);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 113: WHILE
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test338430() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(107);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 107
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test339431() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.precedence(47);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(1814);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 1814
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test340432() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(22, node0, node0, 587, (-536870922));
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        Node node2 = Node.newString(43, "n9Eaw#2j[m'8d3Tq.", (-950), 127);
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node2);
        boolean boolean1 = NodeUtil.isValidSimpleName("n9Eaw#2j[m'8d3Tq.");
        NameReferenceGraph.Reference nameReferenceGraph_Reference0 = new NameReferenceGraph.Reference(node2, (Node) null);
        nameReferenceGraph_Reference0.setUnknown(false);
        nameReferenceGraph_Reference0.getModule();
        NodeUtil.getBestLValueName((Node) null);
        boolean boolean2 = NodeUtil.mayBeString(node1, true);
        assertTrue(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test340433() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(22, node0, node0, 587, (-536870922));
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        Node node2 = Node.newString(43, "n9Eaw#2j[m'8d3Tq.", (-950), 127);
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node2);
        boolean boolean1 = NodeUtil.isValidSimpleName("n9Eaw#2j[m'8d3Tq.");
        NameReferenceGraph.Reference nameReferenceGraph_Reference0 = new NameReferenceGraph.Reference(node2, (Node) null);
        nameReferenceGraph_Reference0.setUnknown(false);
        nameReferenceGraph_Reference0.getModule();
        NodeUtil.getBestLValueName((Node) null);
        boolean boolean2 = NodeUtil.mayBeString(node1, true);
        boolean boolean3 = NodeUtil.isImmutableValue(node1);
        assertTrue(boolean3 == boolean0);
    }

    @Test(timeout = 4000)
    public void test340434() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(22, node0, node0, 587, (-536870922));
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        Node node2 = Node.newString(43, "n9Eaw#2j[m'8d3Tq.", (-950), 127);
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node2);
        boolean boolean1 = NodeUtil.isValidSimpleName("n9Eaw#2j[m'8d3Tq.");
        NameReferenceGraph.Reference nameReferenceGraph_Reference0 = new NameReferenceGraph.Reference(node2, (Node) null);
        nameReferenceGraph_Reference0.setUnknown(false);
        nameReferenceGraph_Reference0.getModule();
        NodeUtil.getBestLValueName((Node) null);
        boolean boolean2 = NodeUtil.mayBeString(node1, true);
        boolean boolean3 = NodeUtil.isImmutableValue(node1);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test340435() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(22, node0, node0, 587, (-536870922));
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        Node node2 = Node.newString(43, "n9Eaw#2j[m'8d3Tq.", (-950), 127);
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node2);
        boolean boolean1 = NodeUtil.isValidSimpleName("n9Eaw#2j[m'8d3Tq.");
        NameReferenceGraph.Reference nameReferenceGraph_Reference0 = new NameReferenceGraph.Reference(node2, (Node) null);
        nameReferenceGraph_Reference0.setUnknown(false);
        nameReferenceGraph_Reference0.getModule();
        NodeUtil.getBestLValueName((Node) null);
        boolean boolean2 = NodeUtil.mayBeString(node1, true);
        boolean boolean3 = NodeUtil.isImmutableValue(node1);
        assertFalse(boolean3);
    }

    @Test(timeout = 4000)
    public void test341436() throws Throwable {
        int int0 = NodeUtil.precedence(40);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test342437() throws Throwable {
        Node node0 = new Node(122, (-684), 105);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test343438() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        node0.getJsDocBuilderForNode();
        Node node1 = new Node(41, (-1812), 1518);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
        NodeUtil.getInverseOperator(127);
        NodeUtil.isEmptyFunctionExpression(node0);
        NodeUtil.isObjectCallMethod(node0, "[ PI,I3zgJ/&KqJv.");
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
        NodeUtil.getArrayElementStringValue(node1);
        // Undeclared exception!
        try {
            exploitAssigns0.getCodingConvention();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test344439() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        String string0 = NodeUtil.getStringValue(node0);
        assertEquals("false", string0);
    }

    @Test(timeout = 4000)
    public void test345440() throws Throwable {
        Node node0 = new Node(101);
        node0.toStringTree();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        // Undeclared exception!
        try {
            NodeUtil.anyResultsMatch(node0, (Predicate<Node>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test346441() throws Throwable {
        int int0 = NodeUtil.precedence(46);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test347442() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(89, (-998), (-998));
        Node node1 = new Node(37, node0, node0, node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MatchDeclaration0);
        node0.getIntProp(42);
        SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
        SourceFile sourceFile0 = SourceFile.fromGenerator("l)nW$~", sourceFile_Generator0);
        node0.setStaticSourceFile(sourceFile0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test347443() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(89, (-998), (-998));
        Node node1 = new Node(37, node0, node0, node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MatchDeclaration0);
        node0.getIntProp(42);
        SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
        SourceFile sourceFile0 = SourceFile.fromGenerator("l)nW$~", sourceFile_Generator0);
        node0.setStaticSourceFile(sourceFile0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        boolean boolean1 = NodeUtil.isCallOrNew(node1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test347444() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(89, (-998), (-998));
        Node node1 = new Node(37, node0, node0, node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MatchDeclaration0);
        node0.getIntProp(42);
        SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
        SourceFile sourceFile0 = SourceFile.fromGenerator("l)nW$~", sourceFile_Generator0);
        node0.setStaticSourceFile(sourceFile0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        boolean boolean1 = NodeUtil.isCallOrNew(node1);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test348445() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(59);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 59
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test349446() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.booleanNode(false);
        // Undeclared exception!
        try {
            NodeUtil.precedence(126);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for LABEL (type 126)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test350447() throws Throwable {
        NodeUtil.isLatin("y[Rx|6~rlh0E2'qg 8");
        // Undeclared exception!
        try {
            NodeUtil.precedence(117);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for CONTINUE (type 117)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test351448() throws Throwable {
        Node node0 = new Node(144);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods1.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(111);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for CASE (type 111)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test352449() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(12, (-432), 0);
        NodeUtil.isSymmetricOperation(node1);
        NodeUtil.copyNameAnnotations(node1, node1);
        assertEquals(0, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test353450() throws Throwable {
        Node node0 = new Node(20, 216, 20);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(jqueryCodingConvention0);
        Node node1 = NodeUtil.newName(codingConventions_Proxy0, "", node0, "");
        Node node2 = new Node(45, node0, node1, node0, node0, 15, 41);
        boolean boolean0 = NodeUtil.isLatin("i&VVk");
        boolean boolean1 = NodeUtil.isSymmetricOperation(node2);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test353451() throws Throwable {
        Node node0 = new Node(20, 216, 20);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(jqueryCodingConvention0);
        Node node1 = NodeUtil.newName(codingConventions_Proxy0, "", node0, "");
        Node node2 = new Node(45, node0, node1, node0, node0, 15, 41);
        boolean boolean0 = NodeUtil.isLatin("i&VVk");
        boolean boolean1 = NodeUtil.isSymmetricOperation(node2);
        NodeUtil.copyNameAnnotations(node1, node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertTrue(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test353452() throws Throwable {
        Node node0 = new Node(20, 216, 20);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(jqueryCodingConvention0);
        Node node1 = NodeUtil.newName(codingConventions_Proxy0, "", node0, "");
        Node node2 = new Node(45, node0, node1, node0, node0, 15, 41);
        boolean boolean0 = NodeUtil.isLatin("i&VVk");
        boolean boolean1 = NodeUtil.isSymmetricOperation(node2);
        NodeUtil.copyNameAnnotations(node1, node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertEquals(38, node1.getType());
    }

    @Test(timeout = 4000)
    public void test353453() throws Throwable {
        Node node0 = new Node(20, 216, 20);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(jqueryCodingConvention0);
        Node node1 = NodeUtil.newName(codingConventions_Proxy0, "", node0, "");
        Node node2 = new Node(45, node0, node1, node0, node0, 15, 41);
        boolean boolean0 = NodeUtil.isLatin("i&VVk");
        boolean boolean1 = NodeUtil.isSymmetricOperation(node2);
        NodeUtil.copyNameAnnotations(node1, node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertTrue(boolean2);
    }

    @Test(timeout = 4000)
    public void test354454() throws Throwable {
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        MockFile mockFile0 = new MockFile("com.google.javascript.jscomp.ErrorPass");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.ErrorPass", "com.google.javascript.jscomp.ErrorPass");
        NodeUtil.copyNameAnnotations(node0, node0);
        assertEquals(53, Node.INPUT_ID);
    }

    @Test(timeout = 4000)
    public void test355455() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(18);
        node0.toStringTree();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isBooleanResultHelper(node0);
        boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test356456() throws Throwable {
        Node node0 = new Node(28);
        NodeUtil.referencesThis(node0);
        NodeUtil.mayBeStringHelper(node0);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(150);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 150
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test357457() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(109);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 109
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test358458() throws Throwable {
        Node node0 = new Node(96);
        Node node1 = new Node(2);
        Node node2 = new Node(55, node1, node1, node0, node0, 16, 41);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 102;
        byteArray0[1] = (byte) 100;
        byteArray0[2] = (byte) (-9);
        byteArray0[3] = (byte) 102;
        byteArray0[4] = (byte) (-96);
        byteArray0[5] = (byte) 102;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        NodeUtil.getInverseOperator(244);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        // Undeclared exception!
        try {
            NodeUtil.newVarNode("M", node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test359459() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(53);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 53
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test360460() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        NodeUtil.isSymmetricOperation(node1);
        NodeUtil.isBleedingFunctionName(node0);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test361461() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(113, node0, node0, node0, node0, 3655, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        node1.srcrefTree(node0);
        MockFile mockFile0 = new MockFile((String) null, "Invalid token: ");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Node node2 = new Node(64);
        NodeUtil.getImpureBooleanValue(node1);
        boolean boolean0 = NodeUtil.isExecutedExactlyOnce(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test362462() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(143);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 143
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test363463() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(65);
        Node node0 = new Node(82);
        node0.children();
        boolean boolean1 = NodeUtil.isSimpleOperatorType(103);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test363464() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(65);
        Node node0 = new Node(82);
        node0.children();
        boolean boolean1 = NodeUtil.isSimpleOperatorType(103);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test364465() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(120);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for CATCH (type 120)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test365466() throws Throwable {
        String string0 = NodeUtil.opToStr(68);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test366467() throws Throwable {
        Node node0 = new Node(8289);
        Charset charset0 = Charset.defaultCharset();
        Set<String> set0 = charset0.aliases();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test367468() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "Missing return statement. Function expected to return {0}.");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node2.getDirectives();
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node2, (Set<String>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test368469() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        NodeUtil.getPrototypeClassName(node0);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        HashSet<String> hashSet0 = new HashSet<String>(set0);
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, hashSet0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test369470() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "Hj");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Set<String> set0 = jSDocInfo0.getModifies();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test370471() throws Throwable {
        Compiler compiler0 = new Compiler();
        ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
        Node node0 = Node.newString("nln5}[9");
        NodeUtil.getPureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.getPrototypePropertyName(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test371472() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        int int0 = NodeUtil.precedence(32);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test372473() throws Throwable {
        Node node0 = new Node(49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeTHROW
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test373474() throws Throwable {
        Node node0 = new Node(62, 62, 62);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node0, " (type .");
        node0.getStaticSourceFile();
        Node node2 = new Node(39, node0);
        NodeUtil.isPrototypeProperty(node1);
        Compiler compiler0 = new Compiler();
        assertEquals(0.0, compiler0.getProgress(), 0.01);
    }

    @Test(timeout = 4000)
    public void test374475() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(48);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test374476() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(48);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        int int0 = NodeUtil.getInverseOperator(1409);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test375477() throws Throwable {
        String string0 = NodeUtil.opToStr(87);
        assertEquals("|=", string0);
    }

    @Test(timeout = 4000)
    public void test376478() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        // Undeclared exception!
        try {
            NodeUtil.precedence(131);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 131
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test377479() throws Throwable {
        Node node0 = new Node(114, 114, 114);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-558));
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeDO 114
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test378480() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(3644);
        Node node0 = new Node(3644);
        Node node1 = new Node(15, node0, node0, 44, 31);
        NodeUtil.isValidPropertyName("split");
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node2 = new Node((-2672));
        node2.cloneTree();
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.getNodeTypeReferenceCount(node1, (-3015), nodeUtil_MayBeStringResultPredicate0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node2);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test379481() throws Throwable {
        Node node0 = new Node(64, 64, (-36));
        node0.setType(64);
        NodeUtil.getPureBooleanValue(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("[object Object]", string0);
    }

    @Test(timeout = 4000)
    public void test380482() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isStrWhiteSpaceChar(142);
        NodeUtil.precedence(19);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test381483() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 122, 125);
        Node node1 = new Node(1);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isControlStructure(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test381484() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 122, 125);
        Node node1 = new Node(1);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isControlStructure(node0);
        Compiler compiler0 = new Compiler();
        boolean boolean2 = NodeUtil.isAssociative(15);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test381485() throws Throwable {
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 122, 125);
        Node node1 = new Node(1);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isControlStructure(node0);
        Compiler compiler0 = new Compiler();
        boolean boolean2 = NodeUtil.isAssociative(15);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test382486() throws Throwable {
        Node node0 = new Node(105, 49, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.canBeSideEffected(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test383487() throws Throwable {
        Node node0 = new Node(65377);
        node0.getProp((-88));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(112);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 112: DEFAULT_CASE
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test384488() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(41, 41, 41);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.anyResultsMatch(node0, nodeUtil_BooleanResultPredicate0);
        NodeUtil.getInverseOperator((-3441));
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        node0.getInputId();
        NodeUtil.getImpureBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test385489() throws Throwable {
        Node node0 = new Node(21, (-937), (-97));
        boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test386490() throws Throwable {
        String string0 = NodeUtil.opToStr(10);
        assertEquals("^", string0);
    }

    @Test(timeout = 4000)
    public void test387491() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node1);
        Node node2 = new Node(39);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        assertEquals(38, node1.getType());
    }

    @Test(timeout = 4000)
    public void test387492() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node1);
        Node node2 = new Node(39);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test387493() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node1);
        Node node2 = new Node(39);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(121);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test387494() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node1);
        Node node2 = new Node(39);
        node1.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(121);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test388495() throws Throwable {
        Node node0 = new Node(13, 13, 13);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test389496() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(80);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 80
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test390497() throws Throwable {
        Node node0 = new Node(128);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.getStringNumberValue("p'f3^b4-B\"qD ");
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test391498() throws Throwable {
        Node node0 = new Node((-906), (-906), (-97));
        node0.removeChildren();
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isStrWhiteSpaceChar(32);
    }

    @Test(timeout = 4000)
    public void test392499() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isLatin("'");
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(52);
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.getNearestFunctionName(node0);
        boolean boolean1 = NodeUtil.isStatementParent(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test392500() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isLatin("'");
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(52);
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.getNearestFunctionName(node0);
        boolean boolean1 = NodeUtil.isStatementParent(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test393501() throws Throwable {
        int int0 = NodeUtil.precedence(38);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test394502() throws Throwable {
        NodeUtil.isAssociative(101);
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(154, node0, node0, (-1116), 31);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isObjectLitKey(node1, node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 1
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test395503() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(154, node0, node0, (-36), 4095);
        NodeUtil.isTryFinallyNode(node1, node1);
        NodeUtil.isCommutative(12);
        NodeUtil.getSourceName(node1);
        Node node2 = NodeUtil.getBestLValue(node0);
        node0.siblings();
        // Undeclared exception!
        try {
            node1.addChildBefore(node0, node2);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The existing child node of the parent should not be null.
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test396504() throws Throwable {
        Node node0 = new Node(147, 147, 147);
        Node node1 = new Node(1, node0, node0, node0, node0, 16, 50);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isObjectLitKey(node0, node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test396505() throws Throwable {
        Node node0 = new Node(147, 147, 147);
        Node node1 = new Node(1, node0, node0, node0, node0, 16, 50);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isObjectLitKey(node0, node1);
        String string0 = NodeUtil.trimJsWhiteSpace("F[<P(#5K4OE");
        assertEquals("F[<P(#5K4OE", string0);
    }

    @Test(timeout = 4000)
    public void test397506() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        Node node0 = Node.newString("4JUnli%'G");
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test398507() throws Throwable {
        Node node0 = new Node(18);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test399508() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(113);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for WHILE (type 113)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test400509() throws Throwable {
        Node node0 = new Node(123);
        int int0 = NodeUtil.precedence(42);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test401510() throws Throwable {
        Node node0 = new Node(89);
        int int0 = NodeUtil.precedence(52);
        assertEquals(9, int0);
    }

    @Test(timeout = 4000)
    public void test402511() throws Throwable {
        Node node0 = new Node(86);
        int int0 = NodeUtil.precedence(44);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test403512() throws Throwable {
        Node node0 = new Node(75);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(245);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 75
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test404513() throws Throwable {
        Node node0 = new Node((-2568), (-2568), 623);
        Node node1 = new Node(49, node0, node0, node0, node0, 4095, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.getBestJSDocInfo(node1);
        NodeUtil.isEmptyFunctionExpression(node1);
        // Undeclared exception!
        try {
            NodeUtil.tryMergeBlock(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test405514() throws Throwable {
        NodeUtil.precedence(39);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    }

    @Test(timeout = 4000)
    public void test406515() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(118);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 118: VAR
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test407516() throws Throwable {
        Node node0 = new Node(8233, 8233, 8233);
        // Undeclared exception!
        try {
            NodeUtil.precedence(55);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 55
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test408517() throws Throwable {
        NodeUtil.isSimpleOperatorType(107);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
    }

    @Test(timeout = 4000)
    public void test409518() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "-in#1inity", "-in#1inity");
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isTryFinallyNode(node0, node0);
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(47);
    }

    @Test(timeout = 4000)
    public void test410519() throws Throwable {
        Node node0 = new Node(99);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 99
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test411520() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 29, 1906);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        FileSystemHandling.shouldAllThrowIOExceptions();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(39);
        int int0 = NodeUtil.getCount(node1, nodeUtil_BooleanResultPredicate1, predicate0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test411521() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 29, 1906);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        FileSystemHandling.shouldAllThrowIOExceptions();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(39);
        int int0 = NodeUtil.getCount(node1, nodeUtil_BooleanResultPredicate1, predicate0);
        NodeUtil.getStringValue(node0);
        boolean boolean0 = NodeUtil.isImmutableValue(node0);
        boolean boolean1 = NodeUtil.isLValue(node1);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test411522() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 29, 1906);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        FileSystemHandling.shouldAllThrowIOExceptions();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(39);
        int int0 = NodeUtil.getCount(node1, nodeUtil_BooleanResultPredicate1, predicate0);
        NodeUtil.getStringValue(node0);
        boolean boolean0 = NodeUtil.isImmutableValue(node0);
        boolean boolean1 = NodeUtil.isLValue(node1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test412523() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        int int0 = NodeUtil.precedence(86);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test413524() throws Throwable {
        Node node0 = Node.newString("e", (-681), 99);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test413525() throws Throwable {
        Node node0 = Node.newString("e", (-681), 99);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test414526() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        SourceExcerptProvider.SourceExcerpt sourceExcerptProvider_SourceExcerpt0 = SourceExcerptProvider.SourceExcerpt.REGION;
        Compiler compiler0 = new Compiler();
        LightweightMessageFormatter lightweightMessageFormatter0 = new LightweightMessageFormatter(compiler0, sourceExcerptProvider_SourceExcerpt0);
        Node node1 = NodeUtil.newVarNode("=n", node0);
        Compiler compiler1 = new Compiler();
        node1.putIntProp((-1275), (-1251));
        Node node2 = new Node(35, node1, (-2434), 32);
        NodeUtil.isVarOrSimpleAssignLhs(node2, node1);
        Node node3 = Node.newNumber((double) 16);
        NodeUtil.getImpureBooleanValue(node0);
        NodeUtil.canBeSideEffected(node3);
        NodeUtil.isGet(node2);
        NodeUtil.isLiteralValue(node3, true);
        NodeUtil.getBestLValueOwner(node1);
        // Undeclared exception!
        try {
            NodeUtil.getRootOfQualifiedName(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test415527() throws Throwable {
        Node node0 = new Node(95);
        Node node1 = new Node(35, node0, node0, node0, node0, 42, 109);
        NodeUtil.getBestLValueOwner(node0);
        // Undeclared exception!
        try {
            NodeUtil.getAssignedValue(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test416528() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(64);
        int int0 = NodeUtil.precedence(12);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test417529() throws Throwable {
        Node node0 = new Node(17, 17, 17);
        Node node1 = new Node(47, node0, node0, node0, node0, 4095, 46);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        NodeUtil.getCount(node1, predicate0, nodeUtil_BooleanResultPredicate0);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(16);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test418530() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(77);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for TRY (type 77)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test419531() throws Throwable {
        Node node0 = new Node(62);
        NodeUtil.precedence(31);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        assertNotNull(nodeUtil_BooleanResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test420532() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(96);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test421533() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        MockFile mockFile0 = new MockFile("exec", "eB>+d4VNL=xUdrg`J");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.isSimpleOperatorType(12);
        // Undeclared exception!
        try {
            NodeUtil.getRootOfQualifiedName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test422534() throws Throwable {
        Node node0 = new Node(21, (-965), (-97));
        // Undeclared exception!
        try {
            NodeUtil.mayBeStringHelper(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test423535() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test423536() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        Compiler compiler0 = new Compiler();
        compiler0.newCompilerOptions();
        boolean boolean2 = NodeUtil.isBooleanResult(node0);
        assertTrue(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test423537() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        Compiler compiler0 = new Compiler();
        compiler0.newCompilerOptions();
        boolean boolean2 = NodeUtil.isBooleanResult(node0);
        int int0 = NodeUtil.precedence(46);
        assertEquals(8, int0);
    }

    @Test(timeout = 4000)
    public void test424538() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(70);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 70
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test425539() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(113);
        Node node1 = new Node(39, node0, node0, node0, node0, (-949), 39);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "<", nodeUtil_BooleanResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test425540() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(113);
        Node node1 = new Node(39, node0, node0, node0, node0, (-949), 39);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.isNameReferenced(node0, "<", nodeUtil_BooleanResultPredicate0);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        ReorderConstantExpression reorderConstantExpression1 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(20);
        assertEquals(10, int0);
    }

    @Test(timeout = 4000)
    public void test426541() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        MockFile mockFile0 = new MockFile("jV'!6*3la\"\"s9(6MRC_", "jV'!6*3la\"\"s9(6MRC_");
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(98);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 98: HOOK
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test427542() throws Throwable {
        Node node0 = new Node(128);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test428543() throws Throwable {
        Node node0 = new Node(86);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test429544() throws Throwable {
        Node node0 = new Node(102, (-998), (-998));
        node0.getInputId();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test430545() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.isTryFinallyNode(node1, node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test430546() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.isTryFinallyNode(node1, node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "m5F", node1, "Invalid attempt to remove node: ");
        NodeUtil.getSourceFile(node0);
        NodeUtil.redeclareVarsInsideBranch(node2);
        assertEquals(38, node2.getType());
    }

    @Test(timeout = 4000)
    public void test430547() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.isTryFinallyNode(node1, node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "m5F", node1, "Invalid attempt to remove node: ");
        NodeUtil.getSourceFile(node0);
        NodeUtil.redeclareVarsInsideBranch(node2);
        assertEquals(89, node2.getCharno());
    }

    @Test(timeout = 4000)
    public void test430548() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = node0.cloneTree();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.isTryFinallyNode(node1, node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(42);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "m5F", node1, "Invalid attempt to remove node: ");
        NodeUtil.getSourceFile(node0);
        NodeUtil.redeclareVarsInsideBranch(node2);
        boolean boolean2 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test431549() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(127);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 127
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test432550() throws Throwable {
        Node node0 = new Node(62);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 62
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test433551() throws Throwable {
        Node node0 = new Node(102, (-1005), (-1005));
        NodeUtil.getInputId(node0);
        boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
        NodeUtil.isObjectLitKey(node0, node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean1 = NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test433552() throws Throwable {
        Node node0 = new Node(102, (-1005), (-1005));
        NodeUtil.getInputId(node0);
        boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
        NodeUtil.isObjectLitKey(node0, node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean1 = NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        int int0 = NodeUtil.precedence(47);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test434553() throws Throwable {
        Node node0 = new Node(114, 114, 114);
        Node node1 = new Node(20, (-881), 39);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test435554() throws Throwable {
        String string0 = NodeUtil.opToStr(64);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test436555() throws Throwable {
        Node node0 = new Node(137, 137, 137);
        // Undeclared exception!
        try {
            NodeUtil.precedence(49);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for THROW (type 49)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test437556() throws Throwable {
        NodeUtil.getStringNumberValue(".[h<UxU\"(.s>>e");
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        Node node0 = Node.newNumber(1445.9593141091523);
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test438557() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
        Node node0 = new Node((-2750), (-2750), 957692532);
        SourceFile sourceFile0 = new SourceFile("uS:*a?{\"4Cx:68l..");
        node0.setStaticSourceFile(sourceFile0);
        SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("uS:*a?{\"4Cx:68l..", false);
        String string0 = NodeUtil.getSourceName(node0);
        assertEquals("uS:*a?{\"4Cx:68l..", string0);
    }

    @Test(timeout = 4000)
    public void test438558() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
        Node node0 = new Node((-2750), (-2750), 957692532);
        SourceFile sourceFile0 = new SourceFile("uS:*a?{\"4Cx:68l..");
        node0.setStaticSourceFile(sourceFile0);
        SourceInformationAnnotator sourceInformationAnnotator0 = new SourceInformationAnnotator("uS:*a?{\"4Cx:68l..", false);
        String string0 = NodeUtil.getSourceName(node0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test439559() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(27, 27, 2018);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(29, node0, node0, node0, node0, 37, 43);
        Node node2 = NodeUtil.getBestLValue(node0);
        assertNull(node2);
    }

    @Test(timeout = 4000)
    public void test439560() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(27, 27, 2018);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(29, node0, node0, node0, node0, 37, 43);
        Node node2 = NodeUtil.getBestLValue(node0);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test440561() throws Throwable {
        Node node0 = new Node((-2859), (-998), (-998));
        Node node1 = new Node(128, node0, node0, node0, node0, (-45), 47);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test440562() throws Throwable {
        Node node0 = new Node((-2859), (-998), (-998));
        Node node1 = new Node(128, node0, node0, node0, node0, (-45), 47);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        String string0 = NodeUtil.opToStrNoFail(9);
        assertEquals("|", string0);
    }

    @Test(timeout = 4000)
    public void test441563() throws Throwable {
        Node node0 = new Node(144);
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        String string0 = NodeUtil.opToStr(55);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test442564() throws Throwable {
        Node node0 = new Node(10);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node0);
        // Undeclared exception!
        try {
            NodeUtil.isExpressionResultUsed(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test443565() throws Throwable {
        NodeUtil.opToStr(111);
        // Undeclared exception!
        try {
            NodeUtil.isLatin((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test444566() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "-infinity", "-infinity");
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isNullOrUndefined(node0);
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        // Undeclared exception!
        try {
            peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test445567() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = Node.newString("{}6}&", 61, 61);
        MockPrintStream mockPrintStream0 = new MockPrintStream("JHdU|1GO`}q");
        Compiler compiler0 = new Compiler(mockPrintStream0);
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypes);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test446568() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        String string0 = NodeUtil.opToStrNoFail(100);
        assertEquals("||", string0);
    }

    @Test(timeout = 4000)
    public void test447569() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(115);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for FOR (type 115)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test448570() throws Throwable {
        Node node0 = new Node(17, 17, 17);
        Node node1 = new Node(47, node0, node0, node0, node0, 4095, 46);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node0);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        // Undeclared exception!
        try {
            reorderConstantExpression0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test449571() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(108);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 108: IF
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test450572() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.isValidPropertyName("+");
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        nodeUtil_MatchShallowStatement0.equals("+");
        MockFile mockFile0 = new MockFile("call");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node0 = compiler0.parseSyntheticCode("4yb\"W,k/lc$w", "f5");
        Node node1 = new Node(118, node0);
        NodeUtil.isValidDefineValue(node1, (Set<String>) null);
        // Undeclared exception!
        try {
            NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchShallowStatement0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test451573() throws Throwable {
        Node node0 = new Node(8277);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        boolean boolean0 = NodeUtil.isSimpleOperatorType(53);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test452574() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(27, 27, 2001);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.isImmutableValue(node1);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(36);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 36
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test453575() throws Throwable {
        Node node0 = new Node(70, 70, 70);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        node0.getLength();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(79);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 79
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test454576() throws Throwable {
        NodeUtil.precedence(122);
        Compiler compiler0 = new Compiler();
        assertEquals(0.0, compiler0.getProgress(), 0.01);
    }

    @Test(timeout = 4000)
    public void test455577() throws Throwable {
        Node node0 = new Node(96);
        node0.getProp(7);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isLatin("\"fa59DP");
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test455578() throws Throwable {
        Node node0 = new Node(96);
        node0.getProp(7);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isStatementBlock(node0);
        boolean boolean1 = NodeUtil.isLatin("\"fa59DP");
        Node node1 = new Node(49, 24, 46);
        int int0 = NodeUtil.precedence(17);
        assertEquals(9, int0);
    }

    @Test(timeout = 4000)
    public void test456579() throws Throwable {
        Node node0 = new Node(80);
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.getNearestFunctionName(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.anyResultsMatch(node0, nodeUtil_BooleanResultPredicate0);
        NodeUtil.getInverseOperator(35);
        NodeUtil.isSimpleOperatorType(34);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 80
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test457580() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(99, node0, node0, node0, node0, (-1237), 39);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.mayBeStringHelper(node0);
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 34;
        byteArray0[1] = (byte) 102;
        byteArray0[2] = (byte) 102;
        byteArray0[3] = (byte) 100;
        byteArray0[4] = (byte) 34;
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        Node node2 = new Node((byte) 34, 0, 4095);
        NodeUtil.isObjectLitKey(node2, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node2, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 34
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test458581() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        assertTrue(node1.isName());
    }

    @Test(timeout = 4000)
    public void test458582() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = NodeUtil.isLatin("&&.");
        NodeUtil.getStringValue(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test458583() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = NodeUtil.isLatin("&&.");
        NodeUtil.getStringValue(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        boolean boolean2 = NodeUtil.isLValue(node1);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test458584() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node((-937), (-2366), 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "!", node0, "!");
        boolean boolean0 = NodeUtil.isLatin("&&.");
        NodeUtil.getStringValue(node0);
        boolean boolean1 = NodeUtil.isImmutableValue(node0);
        boolean boolean2 = NodeUtil.isLValue(node1);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test459585() throws Throwable {
        String string0 = NodeUtil.opToStr(88);
        assertEquals("^=", string0);
    }

    @Test(timeout = 4000)
    public void test460586() throws Throwable {
        int int0 = NodeUtil.precedence(103);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test460587() throws Throwable {
        int int0 = NodeUtil.precedence(103);
        int int1 = NodeUtil.precedence(13);
        assertEquals(8, int1);
    }

    @Test(timeout = 4000)
    public void test461588() throws Throwable {
        Node.newNumber(Double.POSITIVE_INFINITY);
        Node node0 = new Node(30, 4, 36);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test462589() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(21);
        assertEquals("+", string0);
    }

    @Test(timeout = 4000)
    public void test463590() throws Throwable {
        Node node0 = new Node(107, (-990), (-990));
        node0.setIsSyntheticBlock(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForFunction(node0, 16);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test464591() throws Throwable {
        Node node0 = new Node(48, 77, 48);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test465592() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(51, node0, node0, 4095, 4095);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test465593() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(51, node0, node0, 4095, 4095);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test466594() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(68);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 68
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test467595() throws Throwable {
        String string0 = NodeUtil.opToStr(109);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test468596() throws Throwable {
        Node node0 = new Node(89, (-894), (-894));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
        Node node1 = NodeUtil.newName(jqueryCodingConvention0, "Unexpected node type: ", node0, ".<<");
        node0.addChildrenToFront(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Compiler compiler0 = new Compiler();
        peepholeReplaceKnownMethods0.beginTraversal(compiler0);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.getExceptionHandler(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test469597() throws Throwable {
        Node node0 = new Node(4392);
        Node node1 = new Node(4095, node0, node0, 100, 54);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        NodeUtil.getBestJSDocInfo(node1);
        NodeUtil.getInputId(node0);
        boolean boolean1 = NodeUtil.isWithinLoop(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test469598() throws Throwable {
        Node node0 = new Node(4392);
        Node node1 = new Node(4095, node0, node0, 100, 54);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        NodeUtil.getBestJSDocInfo(node1);
        NodeUtil.getInputId(node0);
        boolean boolean1 = NodeUtil.isWithinLoop(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test470599() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(113);
        node0.putProp(107, exploitAssigns0);
        Node node1 = new Node(16, node0, node0, node0, node0, 32, 2);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test470600() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(113);
        node0.putProp(107, exploitAssigns0);
        Node node1 = new Node(16, node0, node0, node0, node0, 32, 2);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test470601() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(113);
        node0.putProp(107, exploitAssigns0);
        Node node1 = new Node(16, node0, node0, node0, node0, 32, 2);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node0);
        boolean boolean1 = NodeUtil.isRelationalOperation(node0);
        boolean boolean2 = NodeUtil.isLoopStructure(node0);
        assertFalse(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test470602() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(113);
        node0.putProp(107, exploitAssigns0);
        Node node1 = new Node(16, node0, node0, node0, node0, 32, 2);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        boolean boolean0 = NodeUtil.isSymmetricOperation(node0);
        boolean boolean1 = NodeUtil.isRelationalOperation(node0);
        boolean boolean2 = NodeUtil.isLoopStructure(node0);
        assertTrue(boolean2);
    }

    @Test(timeout = 4000)
    public void test471603() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(113, node0, node0, node0, node0, 3655, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        NodeUtil.getBestJSDocInfo(node0);
        NodeUtil.getInputId(node1);
        boolean boolean1 = NodeUtil.isWithinLoop(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test471604() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(113, node0, node0, node0, node0, 3655, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        NodeUtil.getBestJSDocInfo(node0);
        NodeUtil.getInputId(node1);
        boolean boolean1 = NodeUtil.isWithinLoop(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test472605() throws Throwable {
        NodeUtil.isAssociative(3644);
        NodeUtil.opToStrNoFail(11);
        NodeUtil.isValidQualifiedName("&");
        PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
        SyntheticAst syntheticAst0 = new SyntheticAst("`$jLekGe43j6lV");
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("`$jLekGe43j6lV", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        Node node1 = peepholeCollectPropertyAssignments0.optimizeSubtree(node0);
        node1.isNoSideEffectsCall();
        NodeUtil.redeclareVarsInsideBranch(node1);
        assertFalse(node1.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test473606() throws Throwable {
        Node node0 = Node.newNumber(Double.POSITIVE_INFINITY);
        Node node1 = new Node(144);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(31);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test473607() throws Throwable {
        Node node0 = Node.newNumber(Double.POSITIVE_INFINITY);
        Node node1 = new Node(144);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isSimpleOperatorType(31);
        boolean boolean1 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test474608() throws Throwable {
        Node node0 = new Node(101);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node1 = exploitAssigns0.optimizeSubtree(node0);
        Node node2 = NodeUtil.newName(jqueryCodingConvention0, "===", node1, "===");
        Node node3 = new Node(55, node0, node2, 2, 36);
        NodeUtil.isImmutableValue(node2);
        NodeUtil.isExpressionResultUsed(node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        String string0 = NodeUtil.opToStr(104);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test475609() throws Throwable {
        Node node0 = new Node(70);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
        node0.isLocalResultCall();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(106);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 106
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test476610() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(113, node0, node0, node0, node0, 55, 53);
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.precedence(102);
        NodeUtil.getPureBooleanValue(node0);
    }

    @Test(timeout = 4000)
    public void test477611() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(25);
        assertEquals(12, int0);
    }

    @Test(timeout = 4000)
    public void test478612() throws Throwable {
        Node node0 = new Node(107, 107, 107);
        Node node1 = new Node(51, 39, 0);
        Node node2 = new Node(41, node0, node0, node1, node0, 37, 38);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.getPureBooleanValue(node2);
        NodeUtil.isBleedingFunctionName(node0);
        // Undeclared exception!
        try {
            NodeUtil.getRootOfQualifiedName(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test479613() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(91);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test479614() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = NodeUtil.precedence(91);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(91);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.has(node0, nodeUtil_MatchDeclaration0, nodeUtil_BooleanResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test480615() throws Throwable {
        Vector<JSType> vector0 = new Vector<JSType>();
        Node node0 = Node.newString(113, "rOY", 93, 113);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeWHILE rOY 93
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test481616() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(4095);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 4095
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test482617() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test482618() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(31);
        NodeUtil.getRValueOfLValue(node0);
        boolean boolean1 = NodeUtil.isAssignmentOp(node1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test483619() throws Throwable {
        Node node0 = new Node(58);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 58
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test484620() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        MockFile mockFile0 = new MockFile("com.google.javascript.jscomp.ErrorPass");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.ErrorPass", "com.google.javascript.jscomp.ErrorPass");
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
        ControlFlowAnalysis.computeFollowNode(node0, controlFlowAnalysis0);
        Node node1 = Node.newString((-2931), "5Z", 2, 1768);
        NodeUtil.getSourceFile(node0);
        NodeUtil.getBestJSDocInfo(node1);
        NodeUtil.getInputId(node1);
        // Undeclared exception!
        try {
            NodeUtil.getRValueOfLValue(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test485621() throws Throwable {
        Node node0 = new Node(77);
        // Undeclared exception!
        try {
            NodeUtil.precedence(138);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 138
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test486622() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(26);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test486623() throws Throwable {
        boolean boolean0 = NodeUtil.isAssociative(26);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        int int0 = NodeUtil.precedence(33);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test487624() throws Throwable {
        Node node0 = new Node(94, 94, 94);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        assertEquals(22, int0);
    }

    @Test(timeout = 4000)
    public void test487625() throws Throwable {
        Node node0 = new Node(94, 94, 94);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test488626() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        // Undeclared exception!
        try {
            nodeUtil_MayBeStringResultPredicate0.apply(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test489627() throws Throwable {
        Node node0 = new Node(216, (-1044), (-1044));
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        googleCodingConvention0.extractClassNameIfProvide(node0, node0);
        googleCodingConvention0.extractClassNameIfRequire(node0, node0);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "offset is negative");
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.isSimpleOperatorType(19);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isTryFinallyNode(node0, node0);
        Node node1 = new Node(37);
        // Undeclared exception!
        try {
            NodeUtil.hasCatchHandler(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test490628() throws Throwable {
        Node node0 = new Node(28);
        NodeUtil.referencesThis(node0);
        Node node1 = new Node(117, node0, node0, node0, node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isEmptyFunctionExpression(node0);
        NodeUtil.isLatin(".com.google.javascript.jscomp.JsMessageVisitor$MessageLocation");
        Node node2 = new Node(16, 22, 36);
        NodeUtil.isObjectLitKey(node2, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeCONTINUE
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test491629() throws Throwable {
        Node node0 = new Node(2594);
        node0.isUnscopedQualifiedName();
        Node node1 = new Node(31, node0, node0, node0, node0, 1, (-16));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        node1.getDirectives();
        NodeUtil.mayBeStringHelper(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(83);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for PARAM_LIST (type 83)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test492630() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(35, node0, node0, node0, node0, 58, 109);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isStatementBlock(node0);
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        FileSystemHandling.shouldAllThrowIOExceptions();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(39);
        NodeUtil.getCount(node1, nodeUtil_BooleanResultPredicate1, predicate0);
        // Undeclared exception!
        try {
            NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, predicate0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test493631() throws Throwable {
        int int0 = NodeUtil.precedence(91);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test493632() throws Throwable {
        int int0 = NodeUtil.precedence(91);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node0 = new Node(33, 33, 1);
        NodeUtil.copyNameAnnotations(node0, node0);
        node0.getSideEffectFlags();
        boolean boolean0 = NodeUtil.isConstantName(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test493633() throws Throwable {
        int int0 = NodeUtil.precedence(91);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node0 = new Node(33, 33, 1);
        NodeUtil.copyNameAnnotations(node0, node0);
        node0.getSideEffectFlags();
        boolean boolean0 = NodeUtil.isConstantName(node0);
        boolean boolean1 = NodeUtil.canBeSideEffected(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test494634() throws Throwable {
        Node node0 = new Node(122);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test494635() throws Throwable {
        Node node0 = new Node(122);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test495636() throws Throwable {
        String string0 = NodeUtil.opToStr(49);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test496637() throws Throwable {
        Compiler compiler0 = new Compiler();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(115);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 115: FOR
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test497638() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = Node.newString("");
        NodeUtil.getImpureBooleanValue(node0);
        PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
        node0.setLength((-766));
        peepholeFoldWithTypes0.isEcmaScript5OrGreater();
        Node node1 = peepholeFoldWithTypes0.optimizeSubtree(node0);
        NodeUtil.anyResultsMatch(node1, nodeUtil_BooleanResultPredicate0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionName(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test498639() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(119);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for WITH (type 119)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test499640() throws Throwable {
        Node node0 = new Node(93);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test500641() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(113);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        ExploitAssigns exploitAssigns1 = new ExploitAssigns();
        boolean boolean1 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test500642() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(113);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        ExploitAssigns exploitAssigns1 = new ExploitAssigns();
        boolean boolean1 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test501643() throws Throwable {
        Node node0 = new Node(70, 70, 70);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test502644() throws Throwable {
        NodeUtil.precedence(105);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(105);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 105: FUNCTION
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test503645() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(48, 1, 29);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 48
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test504646() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(140);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 140
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test505647() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 66
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test506648() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(93);
        assertEquals("+=", string0);
    }

    @Test(timeout = 4000)
    public void test507649() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test507650() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test508651() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(27, 27, 27);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(110);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for SWITCH (type 110)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test509652() throws Throwable {
        Node node0 = new Node(98);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(118);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for VAR (type 118)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test510653() throws Throwable {
        Node node0 = new Node(18);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, (Set<String>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test511654() throws Throwable {
        NodeUtil.getStringNumberValue("e).knDMl");
        Node node0 = new Node(23, 83, 83);
        NodeUtil.getInverseOperator((-4319));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test512655() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(148);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for SETTER_DEF (type 148)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test513656() throws Throwable {
        Node node0 = new Node(72, 72, 72);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        nodeUtil_BooleanResultPredicate0.apply(node0);
        Node node1 = new Node(1, 72, 135);
        NodeUtil.isObjectLitKey(node1, node0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 72
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test514657() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(64);
        // Undeclared exception!
        try {
            NodeUtil.precedence(36);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 36
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test515658() throws Throwable {
        NodeUtil.precedence(103);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(103);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 103: DEC
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test516659() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        node0.getProp(39);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node2 = NodeUtil.getRValueOfLValue(node0);
        assertNull(node2);
    }

    @Test(timeout = 4000)
    public void test517660() throws Throwable {
        NodeUtil.precedence(89);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
        Node node0 = Node.newNumber(12.0);
        Node.newString(",d3UpyS#h", 45, 153);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(12.0, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test518661() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        Node node0 = new Node(23, 5, 1785);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test519662() throws Throwable {
        int int0 = 137;
        // Undeclared exception!
        try {
            NodeUtil.precedence(137);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 137
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test520663() throws Throwable {
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
        JSType[] jSTypeArray0 = new JSType[0];
        Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodePARAM_LIST
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test521664() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSimpleOperator(node1);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node0);
        assertFalse(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test521665() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSimpleOperator(node1);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test521666() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        boolean boolean0 = NodeUtil.isSimpleOperator(node1);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test522667() throws Throwable {
        Node node0 = new Node(128);
        Node node1 = new Node(50, node0, node0, 54, 102);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.optimizeSubtree(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.referencesThis(node1);
        Compiler compiler0 = new Compiler();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 50
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test523668() throws Throwable {
        int int0 = NodeUtil.precedence(95);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test523669() throws Throwable {
        int int0 = NodeUtil.precedence(95);
        String string0 = NodeUtil.opToStrNoFail(95);
        assertEquals("*=", string0);
    }

    @Test(timeout = 4000)
    public void test524670() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(27, 27, 27);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node1 = NodeUtil.newVarNode("{K}ZgI;$`6PT-cHM", node0);
        NodeUtil.isStrWhiteSpaceChar(8);
        NodeUtil.isPrototypePropertyDeclaration(node1);
        ReorderConstantExpression reorderConstantExpression1 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.precedence(47);
        // Undeclared exception!
        try {
            NodeUtil.redeclareVarsInsideBranch(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test525671() throws Throwable {
        Node node0 = new Node(23, 23, 23);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        nodeUtil_MayBeStringResultPredicate0.equals(node0);
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MayBeStringResultPredicate0);
        NodeUtil.getNumberValue(node0);
        NodeUtil.getInputId(node0);
        boolean boolean1 = NodeUtil.isSymmetricOperation(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test525672() throws Throwable {
        Node node0 = new Node(23, 23, 23);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        nodeUtil_MayBeStringResultPredicate0.equals(node0);
        boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MayBeStringResultPredicate0);
        NodeUtil.getNumberValue(node0);
        NodeUtil.getInputId(node0);
        boolean boolean1 = NodeUtil.isSymmetricOperation(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test526673() throws Throwable {
        Node node0 = new Node(58);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        String string0 = NodeUtil.opToStr(30);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test527674() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.isValidPropertyName("+");
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        FileSystemHandling.shouldAllThrowIOExceptions();
        MockFile mockFile0 = new MockFile("call");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        Node node0 = Node.newString("4yb\"W,k/lc$w");
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(82);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 82
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test528675() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(58);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 58
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test529676() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(12, 12, 21);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test530677() throws Throwable {
        Node node0 = new Node(91);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        node0.addChildToBack(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node0);
            fail("Expecting exception: StackOverflowError");
        } catch (StackOverflowError e) {
        }
    }

    @Test(timeout = 4000)
    public void test531678() throws Throwable {
        Node node0 = new Node(421);
        Node node1 = new Node(49, node0, node0, 32, 481);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isVarDeclaration(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods1.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.precedence((-1));
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for ERROR (type -1)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test532679() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(83);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 83: PARAM_LIST
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test533680() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.isCommutative(11);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(83);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 83: PARAM_LIST
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test534681() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.isStrWhiteSpaceChar(52);
        Double double0 = NodeUtil.getNumberValue(node1);
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test534682() throws Throwable {
        Node node0 = new Node(99);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.isStrWhiteSpaceChar(52);
        Double double0 = NodeUtil.getNumberValue(node1);
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test535683() throws Throwable {
        Node node0 = new Node((-1859), (-847), 86);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        Node node2 = NodeUtil.newUndefinedNode(node0);
        node2.addChildToBack(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        NodeUtil.getLoopCodeBlock(node0);
        NodeUtil.arrayToString(node2);
        // Undeclared exception!
        try {
            NodeUtil.getNumberValue((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test536684() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        int int0 = 34;
        NodeUtil.isCommutative(34);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(34);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 34
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test537685() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(36, node0, node0, node0, node0, 55, 53);
        Node.newString(1, "QOTAmq4NWnIh@5lF:Bd", (-983), 39);
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    }

    @Test(timeout = 4000)
    public void test538686() throws Throwable {
        Node node0 = new Node(111);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(39);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeCASE
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test539687() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = Node.newString(111, "|P#wYAY#)^D#JJz#_");
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        Compiler compiler0 = new Compiler();
        node0.getSideEffectFlags();
        // Undeclared exception!
        try {
            NodeUtil.precedence((-188));
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // -188
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test540688() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(1993);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(30, 52, 12);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate3 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isStatementBlock(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test540689() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(1993);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(30, 52, 12);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate3 = new NodeUtil.BooleanResultPredicate();
        boolean boolean0 = NodeUtil.isStatementBlock(node1);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        NodeUtil.getBestJSDocInfo(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        boolean boolean1 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test541690() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        String string1 = NodeUtil.opToStrNoFail(94);
        assertEquals("-=", string1);
    }

    @Test(timeout = 4000)
    public void test542691() throws Throwable {
        Node node0 = new Node(107, (-990), (-990));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node1 = new Node(93, 4095, 45);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
        node1.addChildToBack(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node2);
        boolean boolean1 = NodeUtil.isLatin("]@=EDYq>rZyjl/&>");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test542692() throws Throwable {
        Node node0 = new Node(107, (-990), (-990));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node1 = new Node(93, 4095, 45);
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
        node1.addChildToBack(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node2);
        boolean boolean1 = NodeUtil.isLatin("]@=EDYq>rZyjl/&>");
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test543693() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        node0.cloneTree();
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        assertEquals(1, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test543694() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        node0.cloneTree();
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        assertEquals(108, node1.getCharno());
    }

    @Test(timeout = 4000)
    public void test543695() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        node0.cloneTree();
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        String string0 = NodeUtil.getStringValue(2);
        assertEquals("2", string0);
    }

    @Test(timeout = 4000)
    public void test544696() throws Throwable {
        Node node0 = new Node(105, 105, 8232);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(32);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test545697() throws Throwable {
        Node node0 = new Node(97);
        Node node1 = new Node(11, node0, node0, 35, 83);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        // Undeclared exception!
        try {
            peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test546698() throws Throwable {
        Node node0 = new Node(127, 127, 127);
        MockFile.createTempFile(",S$*&F6", ",S$*&F6");
        NodeUtil.precedence(32);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = NodeUtil.newVarNode(",S$*&F6", node0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeVAR 127
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test547699() throws Throwable {
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(85);
        Node node1 = Node.newString("{}6}&", (-3144), (-2658));
        MockPrintStream mockPrintStream0 = new MockPrintStream("{}6}&");
        Compiler compiler0 = new Compiler(mockPrintStream0);
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.idGenerators;
        NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
        NodeUtil.isFunctionExpression(node1);
        // Undeclared exception!
        try {
            NodeUtil.anyResultsMatch(node0, compilerOptions0.sourceMapDetailLevel);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test548700() throws Throwable {
        NodeUtil.getStringNumberValue("/8_/1PLM");
        NodeUtil.opToStr(91);
        String string0 = NodeUtil.opToStr(91);
        assertEquals(">>=", string0);
    }

    @Test(timeout = 4000)
    public void test549701() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(75);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 75
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test550702() throws Throwable {
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(85);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node((-44));
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Not an assignment op:COMMA
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test551703() throws Throwable {
        Node node0 = new Node(75, 75, (-1314));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test552704() throws Throwable {
        NodeUtil.precedence(97);
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test553705() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        NodeUtil.isStatementBlock(node0);
        NodeUtil.isImmutableValue(node0);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test554706() throws Throwable {
        Node node0 = new Node(86);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        // Undeclared exception!
        try {
            peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test555707() throws Throwable {
        Node node0 = new Node(10, 10, 10);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isImmutableValue(node0);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, set0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test556708() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(149);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for CONST (type 149)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test557709() throws Throwable {
        Node node0 = new Node(96);
        Node node1 = new Node(20, node0, node0, node0, node0, 53, (-2091));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        Node node2 = node1.cloneTree();
        NodeUtil.canBeSideEffected(node1);
        int int0 = 119;
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForCallOrNew(node2, 42);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test558710() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(24);
        assertEquals("/", string0);
    }

    @Test(timeout = 4000)
    public void test559711() throws Throwable {
        int int0 = NodeUtil.precedence(87);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test560712() throws Throwable {
        Node node0 = new Node(31, 31, (-1465));
        Node node1 = new Node(46, node0, node0, node0, node0, (-3297), 54);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isObjectLitKey(node0, node1);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        NodeUtil.isCommutative(41);
        // Undeclared exception!
        try {
            NodeUtil.getRootOfQualifiedName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test561713() throws Throwable {
        Node node0 = new Node(98);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test561714() throws Throwable {
        Node node0 = new Node(98);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        boolean boolean0 = NodeUtil.isStatementParent(node0);
        boolean boolean1 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test562715() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(79);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 79
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test563716() throws Throwable {
        NodeUtil.precedence(21);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        assertNotNull(nodeUtil_BooleanResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test564717() throws Throwable {
        Node node0 = new Node(53, 53, 53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        node1.setType(50);
        int int0 = NodeUtil.precedence(105);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test564718() throws Throwable {
        Node node0 = new Node(53, 53, 53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        node1.setType(50);
        int int0 = NodeUtil.precedence(105);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test564719() throws Throwable {
        Node node0 = new Node(53, 53, 53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        node1.setType(50);
        int int0 = NodeUtil.precedence(105);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        Node node2 = NodeUtil.numberNode(0.0, node0);
        assertTrue(node2.isNumber());
    }

    @Test(timeout = 4000)
    public void test564720() throws Throwable {
        Node node0 = new Node(53, 53, 53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        node1.setType(50);
        int int0 = NodeUtil.precedence(105);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        Node node2 = NodeUtil.numberNode(0.0, node0);
        assertEquals(53, node2.getCharno());
    }

    @Test(timeout = 4000)
    public void test565721() throws Throwable {
        Node node0 = new Node(96);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        node0.removeProp(96);
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.isTryFinallyNode(node0, node0);
        Node node1 = new Node(100);
        node1.addChildrenToFront(node0);
        // Undeclared exception!
        try {
            NodeUtil.getBestLValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test566722() throws Throwable {
        System.setCurrentTimeMillis(0L);
        String string0 = "&";
        SyntheticAst syntheticAst0 = new SyntheticAst("&");
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("&", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        mockFileOutputStream0.write(30);
        Node node1 = new Node(118, node0, node0, node0, node0, 12, (-12));
        mockFileOutputStream0.flush();
        NodeUtil.isAssignmentOp(node1);
        NodeUtil.getRValueOfLValue(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        sourceMap_DetailLevel0.apply(node1);
        NodeUtil.anyResultsMatch(node1, sourceMap_DetailLevel0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        Object object0 = new Object();
        nodeUtil_MatchNodeType0.equals(object0);
        NodeUtil.has(node0, nodeUtil_MatchNodeType0, nodeUtil_MatchNodeType0);
        mockFileOutputStream0.release();
        // Undeclared exception!
        try {
            NodeUtil.isLiteralValue((Node) null, true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test567723() throws Throwable {
        Node node0 = new Node(21);
        NodeUtil.getPrototypeClassName(node0);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        HashSet<String> hashSet0 = new HashSet<String>();
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, hashSet0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test568724() throws Throwable {
        Node node0 = new Node(53);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail((-2182));
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // -2182
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test569725() throws Throwable {
        Node node0 = new Node(11);
        node0.toStringTree();
        NodeUtil.isValidPropertyName("");
        NodeUtil.mayBeStringHelper(node0);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test570726() throws Throwable {
        Node node0 = new Node(101);
        node0.toStringTree();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isSimpleOperator(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1495);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test571727() throws Throwable {
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(114);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 114: DO
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test572728() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Node node1 = new Node(15, node0);
        NodeUtil.getArrayElementStringValue(node0);
        Node node2 = NodeUtil.newVarNode("true", node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node2);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test573729() throws Throwable {
        Object object0 = new Object();
        // Undeclared exception!
        try {
            NodeUtil.precedence(134);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 134
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test574730() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        node0.putIntProp(77, 77);
        // Undeclared exception!
        try {
            NodeUtil.precedence(106);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 106
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test575731() throws Throwable {
        Node node0 = new Node(24, 24, 24);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.getExceptionHandler(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test576732() throws Throwable {
        Node node0 = new Node(69);
        NodeUtil.precedence(9);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.isConstantByConvention(jqueryCodingConvention0, node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 69
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test577733() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(42);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 42: THIS
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test578734() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        StatementFusion statementFusion0 = new StatementFusion();
        StatementFusion statementFusion1 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node1);
        NodeUtil.getLoopCodeBlock(node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test579735() throws Throwable {
        String string0 = NodeUtil.opToStr(81);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test580736() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        Compiler compiler0 = new Compiler();
        int int0 = NodeUtil.precedence(93);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test580737() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        Compiler compiler0 = new Compiler();
        int int0 = NodeUtil.precedence(93);
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        node0.removeProp((-20));
        boolean boolean1 = NodeUtil.isObjectCallMethod(node0, "Qj:9+buQ.;<YS1t");
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test580738() throws Throwable {
        Node node0 = new Node(27, 27, 27);
        Compiler compiler0 = new Compiler();
        int int0 = NodeUtil.precedence(93);
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        node0.removeProp((-20));
        boolean boolean1 = NodeUtil.isObjectCallMethod(node0, "Qj:9+buQ.;<YS1t");
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test581739() throws Throwable {
        Node node0 = new Node((-2568), (-2568), 623);
        Node node1 = new Node(49, node0, node0, node0, node0, 4095, 1281);
        Node.newNumber(53.0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.nodeTypeMayHaveSideEffects(node1);
        boolean boolean1 = peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test581740() throws Throwable {
        Node node0 = new Node((-2568), (-2568), 623);
        Node node1 = new Node(49, node0, node0, node0, node0, 4095, 1281);
        Node.newNumber(53.0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.nodeTypeMayHaveSideEffects(node1);
        boolean boolean1 = peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        NodeUtil.getStringValue(node1);
        int int0 = NodeUtil.getInverseOperator(1);
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test582741() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
        JSType[] jSTypeArray0 = new JSType[0];
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(29, node0, node0, node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        node0.getDirectives();
        NodeUtil.mayBeStringHelper(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.isVarDeclaration(node1);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        // Undeclared exception!
        try {
            NodeUtil.getBestLValue(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test583742() throws Throwable {
        Node node0 = Node.newString("caAl");
        Node node1 = NodeUtil.booleanNode(false);
        NodeUtil.isLiteralValue(node0, true);
        Double double0 = NodeUtil.getNumberValue(node1);
        assertEquals(0.0, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test584743() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(8, 43, 47);
        Compiler compiler0 = new Compiler();
        NodeUtil.isAssociative(49);
        StatementFusion statementFusion0 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test585744() throws Throwable {
        Node node0 = new Node(99);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForCallOrNew(node0, 112);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test586745() throws Throwable {
        Node node0 = new Node(89, (-894), (-894));
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = Node.newString(26, "_4");
        node0.addChildToBack(node1);
        // Undeclared exception!
        try {
            NodeUtil.arrayToString(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test587746() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        // Undeclared exception!
        try {
            NodeUtil.precedence(81);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 81
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test588747() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(89, 89, 89);
        Node node1 = new Node(119, node0, node0, node0, node0, 3655, 40);
        NodeUtil.getLoopCodeBlock(node1);
        NodeUtil.isControlStructure(node1);
        // Undeclared exception!
        try {
            NodeUtil.isExecutedExactlyOnce(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test589748() throws Throwable {
        Node node0 = new Node(89, (-894), (-894));
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = Node.newString(26, "_4");
        node0.addChildToBack(node1);
        // Undeclared exception!
        try {
            NodeUtil.getPureBooleanValue(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test590749() throws Throwable {
        Node node0 = new Node(89);
        // Undeclared exception!
        try {
            NodeUtil.precedence(114);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for DO (type 114)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test591750() throws Throwable {
        NodeUtil.isAssociative(107);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(107);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 107
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test592751() throws Throwable {
        Node node0 = new Node(96);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = new Node(9, 38, 15);
        NodeUtil.getImpureBooleanValue(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        nodeUtil_BooleanResultPredicate0.equals((Object) null);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        NodeUtil.getPrototypeClassName(node0);
        Node node2 = null;
        try {
            node2 = new Node((-429), (Node[]) null, 47, 102);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test593752() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.precedence(80);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 80
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test594753() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test594754() throws Throwable {
        Node node0 = NodeUtil.booleanNode(true);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        assertTrue(node0.isTrue());
    }

    @Test(timeout = 4000)
    public void test595755() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(144);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 144
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test596756() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
        Vector<JSType> vector0 = new Vector<JSType>();
        // Undeclared exception!
        try {
            NodeUtil.precedence(125);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for BLOCK (type 125)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test597757() throws Throwable {
        Node node0 = new Node(148, (-1550), 8277);
        StatementFusion statementFusion0 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.getConditionExpression(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // SETTER_DEF does not have a condition.
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test598758() throws Throwable {
        Node node0 = new Node(46, 46, 46);
        Node node1 = new Node(55, 8, 46);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test599759() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(132);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for SCRIPT (type 132)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test600760() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = Node.newString(53, "==", 53, 53);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 53
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test601761() throws Throwable {
        boolean boolean0 = NodeUtil.isValidSimpleName("k?lPT3~<W[-zs0~");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test601762() throws Throwable {
        boolean boolean0 = NodeUtil.isValidSimpleName("k?lPT3~<W[-zs0~");
        String string0 = NodeUtil.opToStrNoFail(97);
        assertEquals("%=", string0);
    }

    @Test(timeout = 4000)
    public void test602763() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        NodeUtil.getStringNumberValue("e).knDMl");
        Node node0 = new Node(23, 83, 83);
        Node node1 = new Node(64, node0, node0, node0, node0, 53, 8);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.getPureBooleanValue(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test603764() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.precedence(69);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 69
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test604765() throws Throwable {
        String string0 = NodeUtil.opToStrNoFail(20);
        assertEquals(">>>", string0);
    }

    @Test(timeout = 4000)
    public void test605766() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node0 = Node.newString("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "'8>2", node0, "!");
        googleCodingConvention0.getAssertionFunctions();
        node0.getStaticSourceFile();
        node1.checkTreeEquals(node0);
        Node node2 = new Node(16, node1, node1);
        NodeUtil.getPureBooleanValue(node1);
        NodeUtil.isVarOrSimpleAssignLhs(node2, node0);
        NodeUtil.copyNameAnnotations(node0, node0);
        NodeUtil.getAssignedValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test606767() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.isAssociative(11);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = Node.newString(11, "C'7-*^");
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.getExceptionHandler(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test607768() throws Throwable {
        Node node0 = new Node(94);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        node1.addChildToBack(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node1);
            fail("Expecting exception: StackOverflowError");
        } catch (StackOverflowError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test608769() throws Throwable {
        Node node0 = new Node(94, 94, 94);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test609770() throws Throwable {
        Node node0 = new Node(93);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        assertEquals(21, int0);
    }

    @Test(timeout = 4000)
    public void test609771() throws Throwable {
        Node node0 = new Node(93);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        boolean boolean0 = NodeUtil.isBooleanResult(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test609772() throws Throwable {
        Node node0 = new Node(93);
        int int0 = NodeUtil.getOpFromAssignmentOp(node0);
        boolean boolean0 = NodeUtil.isBooleanResult(node0);
        int int1 = NodeUtil.precedence(32);
        assertEquals(13, int1);
    }

    @Test(timeout = 4000)
    public void test610773() throws Throwable {
        Object object0 = new Object();
        int int0 = NodeUtil.precedence(88);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test611774() throws Throwable {
        NodeUtil.isValidPropertyName("l|");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString(38, "l|");
        peepholeFoldConstants0.optimizeSubtree(node0);
        node0.setType(115);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeFOR l|
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test612775() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node((-711), 42, 13);
        NodeUtil.mayBeStringHelper(node0);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node1 = node0.cloneTree();
        Node node2 = NodeUtil.numberNode(Double.POSITIVE_INFINITY, node0);
        NodeUtil.canBeSideEffected(node1);
        // Undeclared exception!
        try {
            NodeUtil.isExpressionResultUsed(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test613776() throws Throwable {
        NodeUtil.opToStrNoFail(19);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertNotNull(nodeUtil_NumbericResultPredicate0);
    }

    @Test(timeout = 4000)
    public void test614777() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isSimpleOperatorType(5276);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(120);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 120: CATCH
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test615778() throws Throwable {
        Node node0 = new Node(27, 27, 16412);
        Compiler compiler0 = new Compiler();
        Node node1 = NodeUtil.newVarNode("u).knDMl", node0);
        node0.addChildToBack(node1);
        assertTrue(node0.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test615779() throws Throwable {
        Node node0 = new Node(27, 27, 16412);
        Compiler compiler0 = new Compiler();
        Node node1 = NodeUtil.newVarNode("u).knDMl", node0);
        node0.addChildToBack(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.arrayToString(node1);
        assertEquals(27, node1.getLineno());
    }

    @Test(timeout = 4000)
    public void test616780() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(76);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 76
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test617781() throws Throwable {
        Node node0 = new Node(21);
        node0.toStringTree();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(46);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test618782() throws Throwable {
        Node node0 = new Node(65377, 65377, 65377);
        Object object0 = new Object();
        Node node1 = new Node(76, node0, node0, node0, node0, 1, 32);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isNullOrUndefined(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        NodeUtil.trimJsWhiteSpace("xzGh=");
        NodeUtil.arrayToString(node1);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test619783() throws Throwable {
        Node node0 = new Node(120);
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) 23;
        byteArray0[1] = (byte) (-127);
        FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
        Node node1 = new Node(86, node0, node0, (-2300), (-36));
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            ControlFlowAnalysis.getExceptionHandler(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
        }
    }

    @Test(timeout = 4000)
    public void test620784() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        Node node0 = new Node(59);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-2015));
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 59
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test621785() throws Throwable {
        Node node0 = new Node(144, 23, 144);
        int int0 = NodeUtil.precedence(11);
        assertEquals(7, int0);
    }

    @Test(timeout = 4000)
    public void test622786() throws Throwable {
        NodeUtil.isSimpleOperatorType(67);
        // Undeclared exception!
        try {
            NodeUtil.precedence(67);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 67
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test623787() throws Throwable {
        Node node0 = new Node(67);
        Node node1 = new Node(41, node0, node0, 51, (-612));
        Node node2 = NodeUtil.newUndefinedNode(node1);
        node2.addChildToBack(node1);
        assertTrue(node2.isVoid());
    }

    @Test(timeout = 4000)
    public void test623788() throws Throwable {
        Node node0 = new Node(67);
        Node node1 = new Node(41, node0, node0, 51, (-612));
        Node node2 = NodeUtil.newUndefinedNode(node1);
        node2.addChildToBack(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test624789() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(41, node0, node0, 55, 36);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
    }

    @Test(timeout = 4000)
    public void test625790() throws Throwable {
        String string0 = NodeUtil.opToStr(69);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test626791() throws Throwable {
        NodeUtil.precedence(122);
        Node node0 = Node.newString("p~6gd");
        Node node1 = new Node(13, node0, node0, node0, node0, 45, 41);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isValidPropertyName("p~6gd");
        NodeUtil.mayBeStringHelper(node1);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Not an assignment op:STRING p~6gd
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test627792() throws Throwable {
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node0 = new Node(135, 679, 135);
        node0.setIsSyntheticBlock(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.isControlStructureCodeBlock(node0, node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test628793() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntheticAst syntheticAst0 = new SyntheticAst("c{e;BRm6_#g");
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean1 = NodeUtil.isStatementParent(node0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test628794() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntheticAst syntheticAst0 = new SyntheticAst("c{e;BRm6_#g");
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean1 = NodeUtil.isStatementParent(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test629795() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = new Node((-1200), (-1200), 1898);
        FileSystemHandling.shouldAllThrowIOExceptions();
        int int0 = NodeUtil.precedence(28);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test629796() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = new Node((-1200), (-1200), 1898);
        FileSystemHandling.shouldAllThrowIOExceptions();
        int int0 = NodeUtil.precedence(28);
        Compiler compiler0 = new Compiler();
        boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test630797() throws Throwable {
        Compiler compiler0 = new Compiler();
        boolean boolean0 = NodeUtil.isAssociative(10);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test631798() throws Throwable {
        Node node0 = new Node(73);
        NodeUtil.referencesThis(node0);
        NodeUtil.mayBeStringHelper(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        Node node2 = NodeUtil.newUndefinedNode(node0);
        node2.addChildToBack(node1);
        assertFalse(node2.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test631799() throws Throwable {
        Node node0 = new Node(73);
        NodeUtil.referencesThis(node0);
        NodeUtil.mayBeStringHelper(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        Node node2 = NodeUtil.newUndefinedNode(node0);
        node2.addChildToBack(node1);
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test632800() throws Throwable {
        Node node0 = new Node(73, 73, 89);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 73
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test633801() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node2 = ControlFlowAnalysis.computeFallThrough(node1);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node2);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test633802() throws Throwable {
        Node node0 = new Node(89, (-937), (-937));
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node2 = ControlFlowAnalysis.computeFallThrough(node1);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node2);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        boolean boolean1 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test634803() throws Throwable {
        Compiler compiler0 = new Compiler();
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(62);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 62
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test635804() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(57);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 57
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test636805() throws Throwable {
        Node node0 = new Node(100);
        NodeUtil.referencesThis(node0);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        Node node2 = NodeUtil.newUndefinedNode(node0);
        node2.addChildToBack(node1);
        assertTrue(node2.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test636806() throws Throwable {
        Node node0 = new Node(100);
        NodeUtil.referencesThis(node0);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        Node node2 = NodeUtil.newUndefinedNode(node0);
        node2.addChildToBack(node1);
        boolean boolean1 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test637807() throws Throwable {
        Node node0 = new Node(102, (-998), (-998));
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test638808() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(45);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test639809() throws Throwable {
        Node node0 = new Node(105);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.isStrWhiteSpaceChar(4095);
    }

    @Test(timeout = 4000)
    public void test640810() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test640811() throws Throwable {
        boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
        int int0 = NodeUtil.precedence(63);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test641812() throws Throwable {
        Node node0 = new Node(77);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        node0.copyInformationFrom(node0);
        boolean boolean0 = NodeUtil.isCommutative(35);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test642813() throws Throwable {
        Node node0 = new Node(62);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.setSourceEncodedPositionForTree(36);
        node1.addChildrenToFront(node0);
        NodeUtil.getPureBooleanValue(node1);
    }

    @Test(timeout = 4000)
    public void test643814() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node[] nodeArray0 = new Node[0];
        Node node2 = NodeUtil.newCallNode(node1, nodeArray0);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node2);
        // Undeclared exception!
        try {
            NodeUtil.precedence(50);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 50
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test644815() throws Throwable {
        Node node0 = new Node(127, 127, 127);
        MockFile.createTempFile(",S$*&F6", ",S$*&F6");
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isVarDeclaration(node0);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 127
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test645816() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(36, 414, 119);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchDeclaration0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 36
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test646817() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        Node node1 = new Node(48, 1, 29);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.isCallOrNew(node1);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test647818() throws Throwable {
        int int0 = NodeUtil.precedence(103);
        assertEquals(13, int0);
    }

    @Test(timeout = 4000)
    public void test647819() throws Throwable {
        int int0 = NodeUtil.precedence(103);
        String string0 = NodeUtil.opToStr(13);
        assertEquals("!=", string0);
    }

    @Test(timeout = 4000)
    public void test648820() throws Throwable {
        Node node0 = new Node(95, 110, 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test649821() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        // Undeclared exception!
        try {
            NodeUtil.precedence(62);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 62
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test650822() throws Throwable {
        Node node0 = new Node(61);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForCallOrNew(node0, 16);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test651823() throws Throwable {
        Node node0 = new Node(107, (-990), (-990));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(36, 74, 655);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node2 = peepholeRemoveDeadCode0.tryOptimizeBlock(node1);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        peepholeSimplifyRegExp0.optimizeSubtree(node1);
        Double double0 = NodeUtil.getNumberValue(node2);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test652824() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntheticAst syntheticAst0 = new SyntheticAst("c{e;BRm6_#g");
        Node node0 = new Node(106);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(30);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 106
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test653825() throws Throwable {
        Node node0 = new Node(105, 49, 105);
        StatementFusion statementFusion0 = new StatementFusion();
        // Undeclared exception!
        try {
            statementFusion0.mayHaveSideEffects(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test654826() throws Throwable {
        Node node0 = new Node(105);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionJSDocInfo(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test655827() throws Throwable {
        Node node0 = new Node(89, 89, 89);
        NodeUtil.precedence(18);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test656828() throws Throwable {
        Node node0 = new Node(24);
        node0.siblings();
        Node node1 = new Node(9, node0, 40, (-2313));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        jqueryCodingConvention0.identifyTypeDeclarationCall(node1);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test657829() throws Throwable {
        Node node0 = new Node(69, 69, 86);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, predicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 69
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test658830() throws Throwable {
        Node node0 = new Node(86);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(48);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test659831() throws Throwable {
        NodeUtil.isValidSimpleName("k?lPT3~<W[-zs0~");
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(71);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 71
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test660832() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(64);
        node0.setType(64);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test660833() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(64);
        node0.setType(64);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("[object Object]", string0);
    }

    @Test(timeout = 4000)
    public void test661834() throws Throwable {
        Node node0 = new Node(71);
        Node node1 = NodeUtil.booleanNode(true);
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.isTryFinallyNode(node1, node1);
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1);
    }

    @Test(timeout = 4000)
    public void test662835() throws Throwable {
        Node node0 = new Node(71);
        Node node1 = NodeUtil.booleanNode(true);
        node0.getInputId();
        node1.isNoSideEffectsCall();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 71
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test663836() throws Throwable {
        Object object0 = new Object();
        // Undeclared exception!
        try {
            NodeUtil.precedence(129);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 129
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test664837() throws Throwable {
        Node node0 = new Node(682);
        Node node1 = new Node(42, 36, 15);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node1, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        node0.setOptionalArg(true);
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test665838() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(61);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 61
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test666839() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected expression nodeTRY 77
            //  parent:null
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test667840() throws Throwable {
        Node node0 = new Node(63);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-3051));
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test668841() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        // Undeclared exception!
        try {
            NodeUtil.precedence(141);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 141
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test669842() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(1993);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(30, 52, 12);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        NodeUtil.isCallOrNew(node1);
        // Undeclared exception!
        try {
            NodeUtil.isVarArgsFunction(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test670843() throws Throwable {
        Node node0 = new Node(100, 1152, 100);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.getAncestors();
        NodeUtil.getPureBooleanValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.getImpureBooleanValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test671844() throws Throwable {
        Node node0 = new Node(151);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 151
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test672845() throws Throwable {
        Node node0 = new Node(27, 27, 110);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node node1 = new Node(42, (-1378), 47);
        NodeUtil.copyNameAnnotations(node1, node0);
        Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, predicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test673846() throws Throwable {
        Node node0 = new Node(123);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.getBestLValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test674847() throws Throwable {
        Node node0 = new Node(90);
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        node0.useSourceInfoFromForTree(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        // Undeclared exception!
        try {
            peepholeSimplifyRegExp0.mayEffectMutableState(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test675848() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node0 = new Node(63, 63, 63);
        MockFile mockFile0 = new MockFile("gUi");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.getImpureBooleanValue(node0);
        NodeUtil.isSwitchCase(node0);
        // Undeclared exception!
        try {
            NodeUtil.isLValue(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test676849() throws Throwable {
        NodeUtil.opToStr(65);
        PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = null;
        try {
            prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations((AbstractCompiler) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PrepareAst$PrepareAnnotations", e);
        }
    }

    @Test(timeout = 4000)
    public void test677850() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node0 = new Node(63, 63, 63);
        MockFile mockFile0 = new MockFile("gUi");
        Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        boolean boolean1 = NodeUtil.isAssociative(47);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test677851() throws Throwable {
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node0 = new Node(63, 63, 63);
        MockFile mockFile0 = new MockFile("gUi");
        Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
        boolean boolean1 = NodeUtil.isAssociative(47);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test678852() throws Throwable {
        int int0 = 99;
        // Undeclared exception!
        try {
            NodeUtil.precedence(99);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 99
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test679853() throws Throwable {
        Node node0 = new Node(153);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        String string0 = NodeUtil.arrayToString(node0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test680854() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(93, 93, 93);
        Node node1 = new Node(119, node0, node0, node0, node0, 3655, 40);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        NodeUtil.arrayToString(node1);
        // Undeclared exception!
        try {
            NodeUtil.getArgumentForFunction(node0, 64);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test681855() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.addChildToBack(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        NodeUtil.getLoopCodeBlock(node1);
        // Undeclared exception!
        try {
            NodeUtil.arrayToString((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test682856() throws Throwable {
        Node node0 = new Node(57);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 57
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test683857() throws Throwable {
        NodeUtil.precedence(90);
        Compiler compiler0 = new Compiler();
        assertEquals(0.0, compiler0.getProgress(), 0.01);
    }

    @Test(timeout = 4000)
    public void test684858() throws Throwable {
        Node node0 = new Node(137);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(55);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 55
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test685859() throws Throwable {
        Node node0 = new Node(109);
        node0.setIsSyntheticBlock(true);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 109
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test686860() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        assertEquals(63, node1.getLineno());
    }

    @Test(timeout = 4000)
    public void test686861() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        String string0 = NodeUtil.trimJsWhiteSpace("sxx|h}3baqWll.%fJ");
        assertEquals("sxx|h}3baqWll.%fJ", string0);
    }

    @Test(timeout = 4000)
    public void test686862() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        String string0 = NodeUtil.trimJsWhiteSpace("sxx|h}3baqWll.%fJ");
        NodeUtil.arrayToString(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test686863() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        String string0 = NodeUtil.trimJsWhiteSpace("sxx|h}3baqWll.%fJ");
        NodeUtil.arrayToString(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(0.0, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test686864() throws Throwable {
        Node node0 = new Node(63, 63, 63);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        String string0 = NodeUtil.trimJsWhiteSpace("sxx|h}3baqWll.%fJ");
        NodeUtil.arrayToString(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test687865() throws Throwable {
        Node node0 = new Node(64);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test687866() throws Throwable {
        Node node0 = new Node(64);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.getLoopCodeBlock(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test687867() throws Throwable {
        Node node0 = new Node(64);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.getLoopCodeBlock(node0);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test688868() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = new Node(177);
        Node node1 = new Node(120, 2240, (-22));
        Compiler compiler0 = new Compiler();
        NodeUtil.isControlStructure(node1);
        StatementFusion statementFusion0 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node0);
        // Undeclared exception!
        try {
            statementFusion0.optimizeSubtree(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.StatementFusion", e);
        }
    }

    @Test(timeout = 4000)
    public void test689869() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean1 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test689870() throws Throwable {
        Node node0 = new Node(66, 66, 66);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean1 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        int int0 = NodeUtil.precedence(43);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test690871() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        simpleErrorReporter0.error("Invalid size: %s", "Invalid size: %s", 1171, 1171);
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        // Undeclared exception!
        try {
            NodeUtil.precedence(153);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for LABEL_NAME (type 153)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test691872() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        NodeUtil.maybeAddFinally(node0);
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test691873() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        NodeUtil.maybeAddFinally(node0);
        assertTrue(node0.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test692874() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        node0.putIntProp(77, 77);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getImpureBooleanValue(node1);
        NodeUtil.maybeAddFinally(node0);
        assertTrue(node0.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test692875() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        node0.putIntProp(77, 77);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.getImpureBooleanValue(node1);
        NodeUtil.maybeAddFinally(node0);
        assertTrue(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test693876() throws Throwable {
        Node node0 = new Node(74);
        node0.getInputId();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 74
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test694877() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(64);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        Node node1 = NodeUtil.getLoopCodeBlock(node0);
        assertNull(node1);
    }

    @Test(timeout = 4000)
    public void test695878() throws Throwable {
        Node node0 = new Node(8233, 2070, 19);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "0GG]~{-", node0, "0GG]~{-");
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertEquals(2070, node1.getLineno());
    }

    @Test(timeout = 4000)
    public void test695879() throws Throwable {
        Node node0 = new Node(8233, 2070, 19);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "0GG]~{-", node0, "0GG]~{-");
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test695880() throws Throwable {
        Node node0 = new Node(8233, 2070, 19);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "0GG]~{-", node0, "0GG]~{-");
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        assertEquals(0, node1.getChildCount());
    }

    @Test(timeout = 4000)
    public void test695881() throws Throwable {
        Node node0 = new Node(8233, 2070, 19);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "0GG]~{-", node0, "0GG]~{-");
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(25);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test696882() throws Throwable {
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        Vector<JSType> vector0 = new Vector<JSType>();
        NodeUtil.isStrWhiteSpaceChar(13);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        assertEquals("JSCompiler_renameProperty", string0);
    }

    @Test(timeout = 4000)
    public void test697883() throws Throwable {
        FileSystemHandling.shouldAllThrowIOExceptions();
        Node node0 = new Node(92);
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isValidPropertyName("?-qLTNcl5^[/MO,");
        node0.isLocalResultCall();
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.getOpFromAssignmentOp(node0);
        NodeUtil.isBooleanResult(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        String string0 = NodeUtil.getBestLValueName(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test698884() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(75);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 75
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test699885() throws Throwable {
        Node node0 = Node.newString("arguments", 148, 148);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test699886() throws Throwable {
        Node node0 = Node.newString("arguments", 148, 148);
        Double double0 = NodeUtil.getNumberValue(node0);
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test699887() throws Throwable {
        Node node0 = Node.newString("arguments", 148, 148);
        Double double0 = NodeUtil.getNumberValue(node0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertEquals("arguments", string0);
    }

    @Test(timeout = 4000)
    public void test700888() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        NodeUtil.getStringNumberValue("e).knDMl");
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node0 = new Node(50);
        NodeUtil.isNullOrUndefined(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.isSimpleOperatorType(51);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        assertFalse(nodeUtil_NumbericResultPredicate1.equals((Object) nodeUtil_NumbericResultPredicate0));
    }

    @Test(timeout = 4000)
    public void test701889() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        // Undeclared exception!
        try {
            NodeUtil.referencesThis(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test702890() throws Throwable {
        NodeUtil.opToStr(78);
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(78, nodeArray0);
        // Undeclared exception!
        try {
            NodeUtil.getFunctionParameters(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test703891() throws Throwable {
        Node node0 = new Node(68, 548, (-3664));
        Node node1 = new Node(1813, node0, node0, 38, 305);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isCallOrNew(node1);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    }

    @Test(timeout = 4000)
    public void test704892() throws Throwable {
        Node node0 = new Node(147, 147, 19);
        Compiler compiler0 = new Compiler();
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.isGetOrSetKey(node0);
        node1.getStaticSourceFile();
        Node node2 = new Node(2895, node1);
        NodeUtil.isPrototypeProperty(node1);
        Compiler compiler1 = new Compiler();
        assertFalse(compiler1.equals((Object) compiler0));
    }

    @Test(timeout = 4000)
    public void test705893() throws Throwable {
        Node node0 = new Node(105);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        node0.addSuppression((String) null);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        node0.detachChildren();
        // Undeclared exception!
        try {
            NodeUtil.isLiteralValue(node0, true);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test706894() throws Throwable {
        Node node0 = new Node(105);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        node0.isLocalResultCall();
        NodeUtil.getArrayElementStringValue(node0);
        // Undeclared exception!
        try {
            SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test707895() throws Throwable {
        Node node0 = new Node(105, 49, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node1 = NodeUtil.booleanNode(true);
        assertEquals(44, node1.getType());
    }

    @Test(timeout = 4000)
    public void test707896() throws Throwable {
        Node node0 = new Node(105, 49, 105);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node1 = NodeUtil.booleanNode(true);
        boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test708897() throws Throwable {
        Node node0 = new Node(64, 64, (-36));
        node0.setType(64);
        NodeUtil.getPureBooleanValue(node0);
        boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test709898() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(67);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 67
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test710899() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(146);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean1 = NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test710900() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(146);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        boolean boolean1 = NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test711901() throws Throwable {
        Node node0 = new Node(80);
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        node0.addChildToBack(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp1 = new PeepholeSimplifyRegExp();
        boolean boolean0 = peepholeSimplifyRegExp1.mayEffectMutableState(node1);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(39);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test712902() throws Throwable {
        Node node0 = new Node(80);
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.optimizeSubtree(node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 80
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test713903() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test714904() throws Throwable {
        Node node0 = new Node(89, (-894), (-894));
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        String string0 = "/3thJW'.6G.U";
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "/3thJW'.6G.U", node0, "/3thJW'.6G.U");
        node1.getDirectives();
        Node node2 = new Node(3446, node1, node1, node0, 1523, 16);
        node2.removeFirstChild();
        // Undeclared exception!
        try {
            NodeUtil.isExpressionResultUsed(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test715905() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar(10);
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        JSType[] jSTypeArray0 = new JSType[6];
        ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
        JSType jSType0 = modificationVisitor0.caseNumberType();
        jSTypeArray0[0] = jSType0;
        Compiler compiler0 = new Compiler();
        SourceFile.Generator sourceFile_Generator0 = mock(SourceFile.Generator.class, new ViolatedAssumptionAnswer());
        doReturn("Not declared as a constructor").when(sourceFile_Generator0).getCode();
        SourceFile sourceFile0 = SourceFile.fromGenerator(">", sourceFile_Generator0);
        // Undeclared exception!
        try {
            compiler0.parse(sourceFile0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.Compiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test716906() throws Throwable {
        Node node0 = new Node(110);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods2 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test717907() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(72);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 72
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test718908() throws Throwable {
        Node node0 = new Node(67, (-990), 106);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(32, node0, node0, node0, node0, 53, 866);
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.getNodeTypeReferenceCount(node1, 88, nodeUtil_MayBeStringResultPredicate0);
        NodeUtil.getInverseOperator(2942);
        String string0 = NodeUtil.opToStr(39);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test719909() throws Throwable {
        Node node0 = new Node(27, 27, 2018);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Node node1 = new Node(29, node0, node0, node0, node0, 37, 43);
        node1.getSideEffectFlags();
        Double double0 = NodeUtil.getNumberValue(node1);
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test720910() throws Throwable {
        Node node0 = new Node(98, 98, 98);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.getImpureBooleanValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test721911() throws Throwable {
        int int0 = NodeUtil.precedence(22);
        assertEquals(11, int0);
    }

    @Test(timeout = 4000)
    public void test722912() throws Throwable {
        Node node0 = new Node(95, 110, 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test722913() throws Throwable {
        Node node0 = new Node(95, 110, 89);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        String string0 = NodeUtil.getArrayElementStringValue(node0);
        boolean boolean0 = NodeUtil.isEmptyBlock(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test723914() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(141, 43, 47);
        Compiler compiler0 = new Compiler();
        NodeUtil.isAssociative(48);
        StatementFusion statementFusion0 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node1);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        String string0 = NodeUtil.getArrayElementStringValue(node1);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test724915() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(18);
        Node node1 = new Node(51, node0, node0, 2, 51);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node1, "!");
        node2.getSideEffectFlags();
        NodeUtil.getSourceFile(node0);
        Node node3 = new Node(29, node2, node1, 42, 39);
        MockPrintStream mockPrintStream0 = new MockPrintStream("3@S8");
        Compiler compiler1 = new Compiler(mockPrintStream0);
        compiler1.newCompilerOptions();
        NodeUtil.opToStrNoFail(28);
        NodeUtil.isLValue(node2);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node2);
        // Undeclared exception!
        try {
            compiler0.newExternInput("u).knDMl");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.Compiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test725916() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        MockFile mockFile0 = new MockFile("beforeMainOptimizations", "NV");
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isSimpleOperator(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(87);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test726917() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(31, node0, node0, node0, node0, 49, 1281);
        NodeUtil.nodeTypeMayHaveSideEffects(node1);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(31);
        NodeUtil.isValidDefineValue(node1, (Set<String>) null);
        NodeUtil.copyNameAnnotations(node0, node1);
        assertEquals(16, Node.SOURCENAME_PROP);
    }

    @Test(timeout = 4000)
    public void test727918() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(1993, 1993, 1993);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        node0.addChildrenToBack(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getArrayElementStringValue(node0);
        NodeUtil.isStrWhiteSpaceChar(12);
    }

    @Test(timeout = 4000)
    public void test728919() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 139, 125);
        NodeUtil.hasCatchHandler(node0);
        NodeUtil.isSwitchCase(node0);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(4);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 4: RETURN
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test729920() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.cloneNode();
        int int0 = NodeUtil.precedence(41);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test729921() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.cloneNode();
        int int0 = NodeUtil.precedence(41);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test729922() throws Throwable {
        Node node0 = new Node(77, 77, 77);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        node1.cloneNode();
        int int0 = NodeUtil.precedence(41);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node1);
        assertEquals(77, node1.getLineno());
    }

    @Test(timeout = 4000)
    public void test730923() throws Throwable {
        Node node0 = new Node(27, 83, (-616));
        Node node1 = new Node(81);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(37);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 81
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test731924() throws Throwable {
        NodeUtil.precedence(92);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        NodeUtil.opToStrNoFail(92);
        NodeUtil.isStrWhiteSpaceChar(1);
        // Undeclared exception!
        try {
            NodeUtil.isRelationalOperation((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test732925() throws Throwable {
        Node node0 = new Node(58);
        NodeUtil.isForIn(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 58
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test733926() throws Throwable {
        Node node0 = new Node(4392);
        Node node1 = new Node(4095, node0, node0, 1517, 54);
        // Undeclared exception!
        try {
            NodeUtil.precedence(78);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 78
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test734927() throws Throwable {
        Node node0 = new Node(64, 64, 1704);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchDeclaration0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test735928() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        node0.getAncestors();
        NodeUtil.getPureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.getImpureBooleanValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test736929() throws Throwable {
        Node node0 = new Node(101);
        node0.toStringTree();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isSimpleOperator(node0);
        // Undeclared exception!
        try {
            NodeUtil.precedence(121);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 121
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test737930() throws Throwable {
        Node node0 = new Node(79, 79, 79);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(false);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods2 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test738931() throws Throwable {
        JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
        String string0 = NodeUtil.opToStr(77);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test739932() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        int int0 = 119;
        NodeUtil.isStrWhiteSpaceChar(1401);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(119);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 119: WITH
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test740933() throws Throwable {
        NodeUtil.isLatin("y[Rx|6~rlh0E2'qg 8");
        // Undeclared exception!
        try {
            NodeUtil.precedence(123);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 123
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test741934() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isAssociative(24);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test741935() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        boolean boolean0 = NodeUtil.isAssociative(24);
        int int0 = NodeUtil.precedence(24);
        assertEquals(12, int0);
    }

    @Test(timeout = 4000)
    public void test742936() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(152);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for DEBUGGER (type 152)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test743937() throws Throwable {
        NodeUtil.isAssociative(87);
        Node node0 = new Node(87);
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        Node node1 = new Node(87);
        // Undeclared exception!
        try {
            NodeUtil.tryMergeBlock(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test744938() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(148, 43, 47);
        Compiler compiler0 = new Compiler();
        NodeUtil.isControlStructure(node0);
        NodeUtil.getPureBooleanValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node1);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // SETTER_DEF 43 is not a string node
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test745939() throws Throwable {
        NodeUtil.opToStr(82);
        System.setCurrentTimeMillis(82);
        // Undeclared exception!
        try {
            NodeUtil.isVarDeclaration((Node) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test746940() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node1, "%!");
        node2.getSideEffectFlags();
        NodeUtil.getSourceFile(node0);
        node0.setLength(3298);
        MockPrintStream mockPrintStream0 = new MockPrintStream("3@S8");
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.idGenerators;
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test747941() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(478);
        Node node1 = NodeUtil.newVarNode("qk5'|{cC+J?^(fcRz", node0);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test747942() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(478);
        Node node1 = NodeUtil.newVarNode("qk5'|{cC+J?^(fcRz", node0);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        Node node2 = NodeUtil.getBestLValue(node0);
        assertNotNull(node2);
    }

    @Test(timeout = 4000)
    public void test747943() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        Node node0 = new Node(478);
        Node node1 = NodeUtil.newVarNode("qk5'|{cC+J?^(fcRz", node0);
        boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        Node node2 = NodeUtil.getBestLValue(node0);
        assertTrue(node2.hasChildren());
    }

    @Test(timeout = 4000)
    public void test748944() throws Throwable {
        NodeUtil.getStringNumberValue(",UpyS#");
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ",UpyS#");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        Node node1 = new Node(41, node0, node0, node0, 16, 44);
        NodeUtil.getNumberValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.hasFinally(node0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test749945() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(84);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 84
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test750946() throws Throwable {
        Node node0 = new Node(105);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.arrayToString(node0);
        NodeUtil.getNumberValue(node0);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test751947() throws Throwable {
        Node node0 = new Node((-1286));
        Node node1 = new Node(39, 38, 43);
        Node node2 = new Node(37);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(53);
        nodeUtil_MatchNodeType0.equals(node1);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node2, nodeUtil_MatchNodeType0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test752948() throws Throwable {
        Node node0 = new Node(108);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        Node node1 = new Node(46, node0);
        NodeUtil.isValidDefineValue(node1, set0);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test753949() throws Throwable {
        NodeUtil.isStrWhiteSpaceChar((-463));
        Node node0 = new Node((-463));
        Node node1 = new Node(16, node0, node0, 156, 118);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        reorderConstantExpression0.optimizeSubtree(node1);
        NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
    }

    @Test(timeout = 4000)
    public void test754950() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate2 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        NodeUtil.anyResultsMatch(node0, nodeUtil_BooleanResultPredicate1);
        node0.getInputId();
        NodeUtil.getImpureBooleanValue(node1);
    }

    @Test(timeout = 4000)
    public void test755951() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = Node.newString("call");
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        exploitAssigns0.optimizeSubtree(node1);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        NodeUtil.newName(jqueryCodingConvention0, "call", node0, "");
        Node node2 = new Node(40, node1, node1, 38, (-1746));
        NodeUtil.isImmutableValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.isExpressionResultUsed(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test756952() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        node0.wasEmptyNode();
        HashSet<String> hashSet0 = new HashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test757953() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = Node.newString(153, "com.google.javascript.jscomp.NodeUtil");
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test757954() throws Throwable {
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        Node node0 = Node.newString(153, "com.google.javascript.jscomp.NodeUtil");
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        boolean boolean1 = NodeUtil.isSimpleOperatorType(100);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test758955() throws Throwable {
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        String string0 = NodeUtil.opToStr(90);
        assertEquals("<<=", string0);
    }

    @Test(timeout = 4000)
    public void test759956() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(65);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 65
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test760957() throws Throwable {
        Node node0 = new Node(116);
        Node node1 = new Node(41, node0, node0, node0, node0, 55, 29);
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(35);
        NodeUtil.isValidDefineValue(node1, (Set<String>) null);
        NodeUtil.copyNameAnnotations(node0, node1);
        assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
    }

    @Test(timeout = 4000)
    public void test761958() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.precedence(133);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 133
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test762959() throws Throwable {
        Node node0 = new Node(85, 58, 85);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        // Undeclared exception!
        try {
            NodeUtil.getImpureBooleanValue(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test763960() throws Throwable {
        Node node0 = new Node(105, 49, 105);
        NodeUtil.isStrWhiteSpaceChar(43);
        // Undeclared exception!
        try {
            NodeUtil.getNearestFunctionName(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test764961() throws Throwable {
        Node node0 = new Node(57, 57, (-36));
        node0.setType(57);
        NodeUtil.isStrWhiteSpaceChar(65279);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        assertEquals("JSCompiler_renameProperty", string0);
    }

    @Test(timeout = 4000)
    public void test765962() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(52);
        Double double0 = NodeUtil.getStringNumberValue(" .");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test765963() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(52);
        Double double0 = NodeUtil.getStringNumberValue(" .");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test766964() throws Throwable {
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
        int int0 = 100;
        NodeUtil.isAssociative(100);
        NodeUtil.isCommutative(100);
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        String string0 = ")-map(";
        double double0 = 9.007199254740992E15;
        MockPrintStream mockPrintStream0 = null;
        try {
            mockPrintStream0 = new MockPrintStream("^Dg", "com.google.common.collect.Multimaps$MapMultimap");
            fail("Expecting exception: UnsupportedEncodingException");
        } catch (Throwable e) {
            //
            // com.google.common.collect.Multimaps$MapMultimap
            //
            verifyException("java.io.PrintStream", e);
        }
    }

    @Test(timeout = 4000)
    public void test767965() throws Throwable {
        Node node0 = new Node(28, 28, 28);
        Node node1 = new Node(134, node0, node0, 430, 40);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        NodeUtil.isVarDeclaration(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods1 = new PeepholeReplaceKnownMethods(true);
        peepholeReplaceKnownMethods1.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.getOpFromAssignmentOp(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 134
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test768966() throws Throwable {
        Node node0 = new Node(90);
        Compiler compiler0 = new Compiler();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        Node node1 = peepholeSimplifyRegExp0.optimizeSubtree(node0);
        node1.useSourceInfoFromForTree(node0);
        Node node2 = Node.newString("A:Mz");
        node0.addChildToBack(node2);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test769967() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Node node0 = Node.newString("e).knDMl");
        Node node1 = NodeUtil.newExpr(node0);
        Node node2 = NodeUtil.numberNode(163.51573, node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        exploitAssigns0.optimizeSubtree(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node3 = NodeUtil.newName(jqueryCodingConvention0, "|)RknDMl", node2, "");
        Node node4 = new Node((-242), node3, node3, 38, 73);
        assertEquals(38, node3.getType());
    }

    @Test(timeout = 4000)
    public void test769968() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Node node0 = Node.newString("e).knDMl");
        Node node1 = NodeUtil.newExpr(node0);
        Node node2 = NodeUtil.numberNode(163.51573, node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        exploitAssigns0.optimizeSubtree(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node3 = NodeUtil.newName(jqueryCodingConvention0, "|)RknDMl", node2, "");
        Node node4 = new Node((-242), node3, node3, 38, 73);
        NodeUtil.isImmutableValue(node0);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test769969() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Node node0 = Node.newString("e).knDMl");
        Node node1 = NodeUtil.newExpr(node0);
        Node node2 = NodeUtil.numberNode(163.51573, node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        exploitAssigns0.optimizeSubtree(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node3 = NodeUtil.newName(jqueryCodingConvention0, "|)RknDMl", node2, "");
        Node node4 = new Node((-242), node3, node3, 38, 73);
        NodeUtil.isImmutableValue(node0);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = new NodeUtil.NumbericResultPredicate();
        boolean boolean1 = NodeUtil.evaluatesToLocalValue(node2, nodeUtil_NumbericResultPredicate0);
        assertTrue(node2.isNumber());
    }

    @Test(timeout = 4000)
    public void test769970() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Node node0 = Node.newString("e).knDMl");
        Node node1 = NodeUtil.newExpr(node0);
        Node node2 = NodeUtil.numberNode(163.51573, node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        exploitAssigns0.optimizeSubtree(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node3 = NodeUtil.newName(jqueryCodingConvention0, "|)RknDMl", node2, "");
        Node node4 = new Node((-242), node3, node3, 38, 73);
        NodeUtil.isImmutableValue(node0);
        boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = new NodeUtil.NumbericResultPredicate();
        boolean boolean1 = NodeUtil.evaluatesToLocalValue(node2, nodeUtil_NumbericResultPredicate0);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test770971() throws Throwable {
        NodeUtil.isAssociative(101);
        Node node0 = new Node(101);
        ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getInverseOperator(45);
        NodeUtil.isSimpleOperatorType(110);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test771972() throws Throwable {
        boolean boolean0 = NodeUtil.isValidQualifiedName("Hj");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString(38, "Hj");
        boolean boolean1 = NodeUtil.isReferenceName(node0);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test771973() throws Throwable {
        boolean boolean0 = NodeUtil.isValidQualifiedName("Hj");
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString(38, "Hj");
        boolean boolean1 = NodeUtil.isReferenceName(node0);
        boolean boolean2 = NodeUtil.isSimpleOperatorType(64);
        assertFalse(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test772974() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node[] nodeArray0 = new Node[0];
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        Node node2 = NodeUtil.newCallNode(node1, nodeArray0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node2, nodeUtil_MayBeStringResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test772975() throws Throwable {
        Node node0 = new Node(53);
        Node node1 = new Node(30, node0, 35, 49);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate1 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.mayBeStringHelper(node1);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node[] nodeArray0 = new Node[0];
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        Node node2 = NodeUtil.newCallNode(node1, nodeArray0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node2, nodeUtil_MayBeStringResultPredicate0);
        assertTrue(node2.isCall());
    }

    @Test(timeout = 4000)
    public void test773976() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test773977() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test773978() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        int int0 = NodeUtil.precedence(124);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test774979() throws Throwable {
        Node node0 = new Node(108, 108, 108);
        node0.putIntProp(4095, 1016);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        Node node2 = node0.cloneNode();
        NodeUtil.isControlStructureCodeBlock(node2, node1);
        String string0 = NodeUtil.getArrayElementStringValue(node2);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test775980() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(141, 43, 47);
        Compiler compiler0 = new Compiler();
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        ControlFlowAnalysis.computeFollowNode(node0);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test775981() throws Throwable {
        Node node0 = new Node(108);
        Node node1 = new Node(141, 43, 47);
        Compiler compiler0 = new Compiler();
        ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
        ControlFlowAnalysis.computeFollowNode(node0);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
        String string0 = NodeUtil.opToStrNoFail(86);
        assertEquals("=", string0);
    }

    @Test(timeout = 4000)
    public void test776982() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node1, "%!");
        node2.getSideEffectFlags();
        NodeUtil.getSourceFile(node0);
        Node node3 = new Node(29, node2, node1, 42, 39);
        node0.setLength(3298);
        MockPrintStream mockPrintStream0 = new MockPrintStream("3@S8");
        Compiler compiler1 = new Compiler(mockPrintStream0);
        compiler1.newCompilerOptions();
        compiler1.newCompilerOptions();
        NodeUtil.getNumberValue(node3);
        assertTrue(node2.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test776983() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node1, "%!");
        node2.getSideEffectFlags();
        NodeUtil.getSourceFile(node0);
        Node node3 = new Node(29, node2, node1, 42, 39);
        node0.setLength(3298);
        MockPrintStream mockPrintStream0 = new MockPrintStream("3@S8");
        Compiler compiler1 = new Compiler(mockPrintStream0);
        compiler1.newCompilerOptions();
        compiler1.newCompilerOptions();
        NodeUtil.getNumberValue(node3);
        assertEquals(2, node2.getLineno());
    }

    @Test(timeout = 4000)
    public void test776984() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(22);
        Node node1 = new Node(51, node0, node0, 2, 51);
        node1.getJSDocInfo();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node1, "%!");
        node2.getSideEffectFlags();
        NodeUtil.getSourceFile(node0);
        Node node3 = new Node(29, node2, node1, 42, 39);
        node0.setLength(3298);
        MockPrintStream mockPrintStream0 = new MockPrintStream("3@S8");
        Compiler compiler1 = new Compiler(mockPrintStream0);
        compiler1.newCompilerOptions();
        compiler1.newCompilerOptions();
        NodeUtil.getNumberValue(node3);
        assertEquals(8243, node2.getSourcePosition());
    }

    @Test(timeout = 4000)
    public void test777985() throws Throwable {
        Node node0 = new Node(369);
        Node node1 = new Node(40);
        // Undeclared exception!
        try {
            NodeUtil.precedence(84);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 84
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test778986() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayHaveSideEffects(node1);
        Compiler compiler0 = new Compiler();
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test778987() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayHaveSideEffects(node1);
        Compiler compiler0 = new Compiler();
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean2 = NodeUtil.isEmptyFunctionExpression(node0);
        assertTrue(boolean2 == boolean0);
    }

    @Test(timeout = 4000)
    public void test778988() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayHaveSideEffects(node1);
        Compiler compiler0 = new Compiler();
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean2 = NodeUtil.isEmptyFunctionExpression(node0);
        assertTrue(node0.isFalse());
    }

    @Test(timeout = 4000)
    public void test778989() throws Throwable {
        Node node0 = NodeUtil.booleanNode(false);
        Node node1 = new Node(47, node0);
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        boolean boolean0 = peepholeReplaceKnownMethods0.mayHaveSideEffects(node1);
        Compiler compiler0 = new Compiler();
        boolean boolean1 = NodeUtil.isExpressionResultUsed(node0);
        boolean boolean2 = NodeUtil.isEmptyFunctionExpression(node0);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test779990() throws Throwable {
        Node node0 = new Node(4392, 4392, 4392);
        Node node1 = new Node(46, 142, 1);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node2 = peepholeRemoveDeadCode0.optimizeSubtree(node1);
        peepholeSimplifyRegExp0.mayEffectMutableState(node2);
        NodeUtil.getPureBooleanValue(node0);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 4392
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test780991() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MayBeStringResultPredicate0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test780992() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = NodeUtil.newUndefinedNode(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MayBeStringResultPredicate0);
        String string0 = NodeUtil.getStringValue(node1);
        assertEquals("undefined", string0);
    }

    @Test(timeout = 4000)
    public void test781993() throws Throwable {
        Node node0 = Node.newString("caAl");
        Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
        MockFile mockFile0 = new MockFile("caAl");
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node2 = Normalize.parseAndNormalizeTestCode(compiler0, "caAl", "caAl");
        NodeUtil.arrayToString(node2);
        NodeUtil.getNumberValue(node1);
        // Undeclared exception!
        try {
            NodeUtil.getObjectLitKeyName(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Unexpected node type: STRING caAl
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test782994() throws Throwable {
        Node node0 = new Node(77);
        node0.detachChildren();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test782995() throws Throwable {
        Node node0 = new Node(77);
        node0.detachChildren();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node0);
        boolean boolean1 = NodeUtil.isCommutative(44);
        boolean boolean2 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertTrue(boolean2 == boolean1);
    }

    @Test(timeout = 4000)
    public void test782996() throws Throwable {
        Node node0 = new Node(77);
        node0.detachChildren();
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        boolean boolean0 = NodeUtil.isTryFinallyNode(node0, node0);
        boolean boolean1 = NodeUtil.isCommutative(44);
        boolean boolean2 = NodeUtil.isPrototypePropertyDeclaration(node0);
        assertFalse(boolean2);
    }

    @Test(timeout = 4000)
    public void test783997() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        assertNotNull(double0);
    }

    @Test(timeout = 4000)
    public void test783998() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        assertEquals(Double.NaN, (double) double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test783999() throws Throwable {
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
        Double double0 = NodeUtil.getStringNumberValue("e).knDMl");
        Node node0 = new Node(23, 83, 83);
        Node node1 = new Node(47, node0, node0, node0, node0, 53, 8);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getPureBooleanValue(node1);
        boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7841000() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(10);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        node0.isLocalResultCall();
        NodeUtil.getInverseOperator(14);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        NodeUtil.mayBeStringHelper(node0);
        Node node1 = null;
        try {
            node1 = new Node(5285, (Node[]) null, 42, 106);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test7851001() throws Throwable {
        NodeUtil.isLatin("infinity");
        // Undeclared exception!
        try {
            NodeUtil.precedence(71);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 71
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7861002() throws Throwable {
        Node node0 = new Node(114, 114, 114);
        Node node1 = new Node(12, 4095, 0);
        Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node1, set0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test7871003() throws Throwable {
        Node node0 = new Node(101);
        Node node1 = new Node(32, node0, 32, 36);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.isControlStructure(node0);
        StatementFusion statementFusion0 = new StatementFusion();
        StatementFusion statementFusion1 = new StatementFusion();
        statementFusion1.mayHaveSideEffects(node1);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.getConditionExpression(node1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // TYPEOF 32 does not have a condition.
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test7881004() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "-infinity", "-infinity");
        NodeUtil.mayBeStringHelper(node0);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        NodeUtil.getNodeTypeReferenceCount(node0, 29, nodeUtil_MatchShallowStatement0);
        Compiler compiler1 = new Compiler();
        assertFalse(compiler1.equals((Object) compiler0));
    }

    @Test(timeout = 4000)
    public void test7891005() throws Throwable {
        Node node0 = new Node(82, 82, 82);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
        node0.wasEmptyNode();
        NodeUtil.getPrototypeClassName(node0);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(16);
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, predicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 82
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7901006() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
        Node node0 = new Node(113);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        node0.removeProp(113);
        ExploitAssigns exploitAssigns1 = new ExploitAssigns();
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7911007() throws Throwable {
        Node node0 = new Node(108);
        Compiler compiler0 = new Compiler();
        CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
        Set<String> set0 = compilerOptions0.stripNamePrefixes;
        Node node1 = new Node(46, node0);
        NodeUtil.isValidDefineValue(node1, set0);
        Node node2 = NodeUtil.getConditionExpression(node0);
        assertNull(node2);
    }

    @Test(timeout = 4000)
    public void test7921008() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(57);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 57
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7931009() throws Throwable {
        Node node0 = new Node(24);
        Node node1 = new Node(9, node0, 40, (-2313));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        jqueryCodingConvention0.identifyTypeDeclarationCall(node1);
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        node0.getDirectives();
        // Undeclared exception!
        try {
            NodeUtil.isValidDefineValue(node0, (Set<String>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test7941010() throws Throwable {
        Node node0 = new Node(84, 170, 148);
        StatementFusion statementFusion0 = new StatementFusion();
        statementFusion0.mayHaveSideEffects(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        // Undeclared exception!
        try {
            NodeUtil.getConditionExpression(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 84
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7951011() throws Throwable {
        int int0 = 104;
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        // Undeclared exception!
        try {
            NodeUtil.precedence(104);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 104
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7961012() throws Throwable {
        Node node0 = new Node((-310));
        Node node1 = new Node(136, node0, node0, node0, node0, 44, 8);
        String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.mayEffectMutableState(node1);
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test7971013() throws Throwable {
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(72);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 72
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test7981014() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = new Node(35);
        jqueryCodingConvention0.identifyTypeDeclarationCall(node0);
        Node node1 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "com.google.javascript.jscomp.RemoveUnusedVars$CallSiteOptimizer");
        node0.getJSDocInfo();
        node0.getDirectives();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node1);
        assertTrue(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test7981015() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = new Node(35);
        jqueryCodingConvention0.identifyTypeDeclarationCall(node0);
        Node node1 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "com.google.javascript.jscomp.RemoveUnusedVars$CallSiteOptimizer");
        node0.getJSDocInfo();
        node0.getDirectives();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node1);
        assertTrue(node1.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test7981016() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = new Node(35);
        jqueryCodingConvention0.identifyTypeDeclarationCall(node0);
        Node node1 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "com.google.javascript.jscomp.RemoveUnusedVars$CallSiteOptimizer");
        node0.getJSDocInfo();
        node0.getDirectives();
        boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        boolean boolean1 = NodeUtil.isBleedingFunctionName(node1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test7991017() throws Throwable {
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "Hj");
        JSDocInfo jSDocInfo0 = new JSDocInfo();
        jSDocInfo0.getModifies();
        // Undeclared exception!
        try {
            NodeUtil.isBleedingFunctionName(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test8001018() throws Throwable {
        Node node0 = new Node(67);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
        Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}", node0, "!");
        node1.getDirectives();
        Node node2 = new Node(80, node1, node1, node0, 0, 4095);
        NodeUtil.isExpressionResultUsed(node1);
        NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 67
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test8011019() throws Throwable {
        Node[] nodeArray0 = new Node[3];
        Node node0 = new Node(125, 4132, 125);
        nodeArray0[0] = node0;
        Compiler compiler0 = new Compiler();
        CheckDebuggerStatement checkDebuggerStatement0 = new CheckDebuggerStatement(compiler0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkDebuggerStatement0);
        Node node1 = compiler0.parseTestCode("var JSCompiler_stubMap = [];function JSCompiler_stubMethod(JSCompiler_stubMethod_id) {  return function() {    return JSCompiler_stubMap[JSCompicer_stubMethod_id].apply(        this, arguments);  };}function JSCompiler_unstubMethod(    JSCompiler_unstubMethod_id, JSCompiler_unstubMethod_body) {  return JSCompiler_stubMap[JSCompiler_unstubMethod_id] =       JSCompiler_unstubMethod_body;}");
        // Undeclared exception!
        try {
            NodeUtil.maybeAddFinally(node1);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test8021020() throws Throwable {
        Node node0 = new Node(139, 317, 2556);
        NodeUtil.isControlStructure(node0);
        StatementFusion statementFusion0 = new StatementFusion();
        StatementFusion statementFusion1 = new StatementFusion();
        statementFusion1.mayHaveSideEffects(node0);
        JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
        Node node1 = new Node(55, node0, node0, node0);
        assertFalse(node1.isTrue());
    }

    @Test(timeout = 4000)
    public void test8031021() throws Throwable {
        NodeUtil.getStringNumberValue("=lW`_i_6pZZirT087w");
        Node node0 = new Node(83, 83, 1038);
        Node node1 = new Node(47, node0, node0, node0, node0, 83, (-657));
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        NodeUtil.getPureBooleanValue(node0);
        boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test8041022() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        // Undeclared exception!
        try {
            NodeUtil.precedence(147);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown precedence for GETTER_DEF (type 147)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test8051023() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 139, 125);
        Node node1 = node0.cloneTree();
        boolean boolean0 = NodeUtil.hasCatchHandler(node0);
        NodeUtil.getNumberValue(node1);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        boolean boolean1 = nodeUtil_MatchShallowStatement0.apply(node1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test8051024() throws Throwable {
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
        Node[] nodeArray0 = new Node[0];
        Node node0 = new Node(125, nodeArray0, 139, 125);
        Node node1 = node0.cloneTree();
        boolean boolean0 = NodeUtil.hasCatchHandler(node0);
        NodeUtil.getNumberValue(node1);
        NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
        boolean boolean1 = nodeUtil_MatchShallowStatement0.apply(node1);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test8061025() throws Throwable {
        Node node0 = new Node(73);
        NodeUtil.referencesThis(node0);
        NodeUtil.mayBeStringHelper(node0);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        peepholeSimplifyRegExp0.optimizeSubtree(node0);
        // Undeclared exception!
        try {
            NodeUtil.precedence(73);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 73
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test8071026() throws Throwable {
        Node node0 = new Node(37, 37, 37);
        NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(45);
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        NodeUtil.copyNameAnnotations(node0, node0);
        assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
    }

    @Test(timeout = 4000)
    public void test8081027() throws Throwable {
        NodeUtil.precedence(103);
        // Undeclared exception!
        try {
            NodeUtil.opToStrNoFail(102);
            fail("Expecting exception: Error");
        } catch (Error e) {
            //
            // Unknown op 102: INC
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test8091028() throws Throwable {
        Node node0 = new Node(88, 128, 88);
        Node node1 = new Node((-2063), node0, node0, node0, node0, 1, 113);
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        NodeUtil.isFunctionObjectCall(node1);
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node2 = exploitAssigns0.optimizeSubtree(node0);
        NodeUtil.isObjectLitKey(node1, node2);
        NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
        NodeUtil.evaluatesToLocalValue(node2, nodeUtil_BooleanResultPredicate0);
        // Undeclared exception!
        try {
            NodeUtil.callHasLocalResult(node2);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test8101029() throws Throwable {
        Node node0 = new Node(149);
        PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
        PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
        Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        node0.isNoSideEffectsCall();
        peepholeSimplifyRegExp0.mayEffectMutableState(node0);
        NodeUtil.opToStr(127);
        Node node2 = NodeUtil.getPrototypeClassName(node1);
        assertNull(node2);
    }

    @Test(timeout = 4000)
    public void test8111030() throws Throwable {
        String string0 = NodeUtil.opToStr(74);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test8121031() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
        Node node0 = new Node(133);
        peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
        ExploitAssigns exploitAssigns1 = new ExploitAssigns();
        boolean boolean0 = NodeUtil.isReferenceName(node0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8131032() throws Throwable {
        Node node0 = new Node(100);
        NodeUtil.referencesThis(node0);
        // Undeclared exception!
        try {
            NodeUtil.mayBeStringHelper(node0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test8141033() throws Throwable {
        Node node0 = new Node(111, (-310), 136);
        NodeUtil.newUndefinedNode(node0);
        Node node1 = node0.cloneNode();
        int int0 = NodeUtil.precedence(42);
        assertEquals(15, int0);
    }

    @Test(timeout = 4000)
    public void test8141034() throws Throwable {
        Node node0 = new Node(111, (-310), 136);
        NodeUtil.newUndefinedNode(node0);
        Node node1 = node0.cloneNode();
        int int0 = NodeUtil.precedence(42);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node1);
        boolean boolean1 = NodeUtil.isBooleanResultHelper(node1);
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test8141035() throws Throwable {
        Node node0 = new Node(111, (-310), 136);
        NodeUtil.newUndefinedNode(node0);
        Node node1 = node0.cloneNode();
        int int0 = NodeUtil.precedence(42);
        boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node1);
        boolean boolean1 = NodeUtil.isBooleanResultHelper(node1);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test8151036() throws Throwable {
        Node node0 = new Node(100);
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
        NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.NodeUtil", e);
        }
    }

    @Test(timeout = 4000)
    public void test8161037() throws Throwable {
        Node node0 = new Node(89);
        Node node1 = new Node(52, node0, node0, node0);
        Double double0 = NodeUtil.getStringNumberValue("infinity");
        assertNull(double0);
    }

    @Test(timeout = 4000)
    public void test8171038() throws Throwable {
        NodeUtil.isAssociative(65);
        Node node0 = new Node(78);
        node0.children();
        SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
        // Undeclared exception!
        try {
            NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 78
            //
            verifyException("com.google.javascript.rhino.Token", e);
        }
    }

    @Test(timeout = 4000)
    public void test8181039() throws Throwable {
        ExploitAssigns exploitAssigns0 = new ExploitAssigns();
        Node node0 = new Node(43);
        FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6QOH9Mzx<EILU*");
        node0.cloneNode();
        Node node1 = new Node(24, node0, 2399, 43);
        node0.wasEmptyNode();
        HashSet<String> hashSet0 = new HashSet<String>();
        boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
        assertTrue(boolean0);
    }
}
