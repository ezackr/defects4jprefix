/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 00:58:39 GMT 2024
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.PeepholeCollectPropertyAssignments;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.PeepholeFoldWithTypes;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PeepholeFoldConstants_ESTest extends PeepholeFoldConstants_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(494.9279685317);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node1.isIf());
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        Node node0 = Node.newNumber(70.3935371);
        Node node1 = new Node(27, node0, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        Node node0 = Node.newNumber(20.707350379842012);
        Node node1 = new Node(28, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        Node node0 = Node.newNumber(1162.7266002542326);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-784.8134064));
        Node node1 = Node.newNumber((double) 35, 172, (-1319));
        Node node2 = new Node(17, node0, node1, node1);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(9, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(9, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasChildren());
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        Node node0 = Node.newNumber(1.0831913456073323);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(10, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(11, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        Node node0 = Node.newNumber(11.9653);
        Node node1 = Node.newNumber(11.9653);
        Node node2 = new Node(12, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        Node node0 = Node.newNumber((-9.610828896017654));
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(13, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test01011() throws Throwable {
        Node node0 = Node.newNumber(53.0);
        Node node1 = Node.newNumber((double) 45, 2, 8);
        Node node2 = new Node(14, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test01112() throws Throwable {
        Node node0 = Node.newNumber((-734.168942));
        Node node1 = Node.newNumber((double) 31);
        Node node2 = new Node(15, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-18.024119070635777));
        Node node1 = new Node(41, 52, 1);
        Node node2 = new Node(38, node1, node0, node0);
        node2.setType(16);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isCall());
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(1.4125898057537265);
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(18, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test01415() throws Throwable {
        Node node0 = Node.newNumber(11.9653);
        Node node1 = Node.newNumber(11.9653);
        Node node2 = new Node(19, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test01516() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-11.569473286262214));
        Node node1 = new Node(16, 47, 1);
        Node node2 = new Node(20, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test01617() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(21, node3.getType());
    }

    @Test(timeout = 4000)
    public void test01718() throws Throwable {
        Node node0 = Node.newNumber((-865.4833));
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(22, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test01819() throws Throwable {
        Node node0 = Node.newNumber((-22.953421204437447));
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(24, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test01920() throws Throwable {
        Node node0 = Node.newNumber(1.69299387995645);
        Node node1 = Node.newNumber((double) 50);
        Node node2 = new Node(25, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test02021() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(31, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isLocalResultCall());
    }

    @Test(timeout = 4000)
    public void test02122() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(10.846211819036927);
        Node node1 = new Node(2, 47, 1);
        Node node2 = new Node(33, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(33, node3.getType());
    }

    @Test(timeout = 4000)
    public void test02223() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(34, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isDebugger());
    }

    @Test(timeout = 4000)
    public void test02324() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(0, 46, 39);
        Node node2 = new Node(35, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test02425() throws Throwable {
        Node node0 = Node.newNumber(1.8531401241583638);
        Node node1 = new Node(15, 29, 12);
        Node node2 = new Node(36, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(54, Node.LAST_PROP);
    }

    @Test(timeout = 4000)
    public void test02526() throws Throwable {
        Node node0 = Node.newNumber(0.33750241110791246);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(37, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isNew());
    }

    @Test(timeout = 4000)
    public void test02627() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(2522.0937595085493);
        Node node1 = new Node(30);
        Node node2 = new Node(38, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(0, Node.SIDE_EFFECTS_ALL);
    }

    @Test(timeout = 4000)
    public void test02728() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(37, 4095, 2);
        Node node2 = new Node(39, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isCatch());
    }

    @Test(timeout = 4000)
    public void test02829() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = new Node(0, 46, 2);
        Node node2 = new Node(40, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotSame(node1, node3);
    }

    @Test(timeout = 4000)
    public void test02930() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 45);
        Node node2 = new Node(41, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isCall());
    }

    @Test(timeout = 4000)
    public void test03031() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_DEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_DEPRECATED_PROP", 30, 31);
        Node node2 = new Node(42, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
    }

    @Test(timeout = 4000)
    public void test03132() throws Throwable {
        Node node0 = Node.newNumber(1.8531401241583638);
        Node node1 = new Node(15, 29, 12);
        Node node2 = new Node(43, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(16, Node.SOURCENAME_PROP);
    }

    @Test(timeout = 4000)
    public void test03233() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 54);
        Node node2 = new Node(44, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isSyntheticBlock());
    }

    @Test(timeout = 4000)
    public void test03334() throws Throwable {
        Node node0 = Node.newNumber(36.575344576369304);
        Node node1 = Node.newNumber(36.575344576369304);
        Node node2 = new Node(41, node1, node1, 38, 2049);
        Node node3 = new Node(46, node0, node0, node0, node2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node3);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test03435() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = new Node(0, 46, 52);
        Node node2 = new Node(47, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isEmpty());
    }

    @Test(timeout = 4000)
    public void test03536() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber((-10.9535));
        Node node1 = new Node(44, 53, 50);
        Node node2 = new Node(48, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isFunction());
    }

    @Test(timeout = 4000)
    public void test03637() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_DEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_DEPRECATED_PROP", 30, 31);
        Node node2 = new Node(49, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isHook());
    }

    @Test(timeout = 4000)
    public void test03738() throws Throwable {
        Node node0 = Node.newNumber((-1.0));
        Node node1 = Node.newNumber((double) 1);
        Node node2 = new Node(50, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isBlock());
    }

    @Test(timeout = 4000)
    public void test03839() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(4, 49, 46);
        Node node2 = new Node(51, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasChildren());
    }

    @Test(timeout = 4000)
    public void test03940() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("undefined");
        Node node1 = new Node(1, 1, 52);
        Node node2 = new Node(52, node0, node1, node1, node1, 29, 32);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(52, node3.getType());
    }

    @Test(timeout = 4000)
    public void test04041() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_DEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_DEPRECATED_PROP", 30, 31);
        Node node2 = new Node(53, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isScript());
    }

    @Test(timeout = 4000)
    public void test04142() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(0, 46, 48);
        Node node2 = new Node(54, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isFunction());
    }

    @Test(timeout = 4000)
    public void test04243() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(36, 1877, 46);
        Node node2 = new Node(55, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(0, node3.getSideEffectFlags());
    }

    @Test(timeout = 4000)
    public void test04344() throws Throwable {
        Node node0 = Node.newNumber((-3.7484408530548223));
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(56, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isDefaultCase());
    }

    @Test(timeout = 4000)
    public void test04445() throws Throwable {
        Node node0 = Node.newNumber(1.8531401241583638);
        Node node1 = new Node(15, 29, 12);
        Node node2 = new Node(57, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(41, Node.BRACELESS_TYPE);
    }

    @Test(timeout = 4000)
    public void test04546() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(58, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isDefaultCase());
    }

    @Test(timeout = 4000)
    public void test04647() throws Throwable {
        Node node0 = Node.newNumber(15.485854794453687);
        Node node1 = new Node(0, 40, 59);
        Node node2 = new Node(59, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(37, Node.OPT_ARG_NAME);
    }

    @Test(timeout = 4000)
    public void test04748() throws Throwable {
        Node node0 = Node.newNumber((-14.043702900326613));
        Node node1 = Node.newNumber((double) 2, 16, 38);
        Node node2 = new Node(60, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isSyntheticBlock());
    }

    @Test(timeout = 4000)
    public void test04849() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(4.792621323169993);
        Node node1 = new Node(16, 0, 54);
        Node node2 = new Node(61, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isThis());
    }

    @Test(timeout = 4000)
    public void test04950() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = new Node(0, 46, 95);
        Node node2 = new Node(62, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(39, Node.EMPTY_BLOCK);
    }

    @Test(timeout = 4000)
    public void test05051() throws Throwable {
        Node node0 = Node.newNumber((-14.043702900326613));
        Node node1 = Node.newNumber((double) 43);
        Node node2 = new Node(63, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isBreak());
    }

    @Test(timeout = 4000)
    public void test05152() throws Throwable {
        Node node0 = Node.newNumber(1.0388184463867727);
        Node node1 = new Node(52);
        Node node2 = new Node(64, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(0, node3.getLength());
    }

    @Test(timeout = 4000)
    public void test05253() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 45);
        Node node2 = new Node(65, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isDelProp());
    }

    @Test(timeout = 4000)
    public void test05354() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-18.024119070635777));
        Node node1 = Node.newNumber((double) 16, 1, 36);
        Node node2 = new Node(66, node1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(36, Node.QUOTED_PROP);
    }

    @Test(timeout = 4000)
    public void test05455() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = Node.newNumber((double) 4);
        Node node2 = new Node(67, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isThis());
    }

    @Test(timeout = 4000)
    public void test05556() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber((-1.6790251046645572));
        Node node1 = new Node(2, 47, 1);
        Node node2 = new Node(68, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(46, Node.IS_NAMESPACE);
    }

    @Test(timeout = 4000)
    public void test05657() throws Throwable {
        Node node0 = Node.newNumber(10.0);
        Node node1 = Node.newNumber((double) 4095);
        Node node2 = new Node(69, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isGetElem());
    }

    @Test(timeout = 4000)
    public void test05758() throws Throwable {
        Node node0 = Node.newNumber((-0.31858288991292893));
        Node node1 = new Node(49, 0, 49);
        Node node2 = new Node(70, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test05859() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 45);
        Node node2 = new Node(71, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isNE());
    }

    @Test(timeout = 4000)
    public void test05960() throws Throwable {
        Node node0 = Node.newNumber(0.14767037811173472);
        Node node1 = Node.newNumber((double) 45, 2, 8);
        Node node2 = new Node(72, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(8, Node.FLAG_NO_THROWS);
    }

    @Test(timeout = 4000)
    public void test06061() throws Throwable {
        Node node0 = Node.newNumber(1.0);
        Node node1 = new Node(15, 29, 12);
        Node node2 = new Node(73, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.wasEmptyNode());
    }

    @Test(timeout = 4000)
    public void test06162() throws Throwable {
        Node node0 = Node.newNumber(1.0388);
        Node node1 = new Node(52);
        Node node2 = new Node(74, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals((-1), node3.getSourceOffset());
    }

    @Test(timeout = 4000)
    public void test06263() throws Throwable {
        Node node0 = Node.newNumber(731.224036);
        Node node1 = Node.newNumber(489.9598918);
        Node node2 = new Node(75, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, Node.POST_FLAG);
    }

    @Test(timeout = 4000)
    public void test06364() throws Throwable {
        Node node0 = Node.newNumber(1.69299388);
        Node node1 = Node.newNumber((double) 50);
        Node node2 = new Node(76, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isCatch());
    }

    @Test(timeout = 4000)
    public void test06465() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(44, 8, 43);
        Node node2 = new Node(77, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(54, Node.LAST_PROP);
    }

    @Test(timeout = 4000)
    public void test06566() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 15);
        Node node2 = new Node(78, node0, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(44, Node.IS_OPTIONAL_PARAM);
    }

    @Test(timeout = 4000)
    public void test06667() throws Throwable {
        Node node0 = Node.newNumber(16.11416104075758);
        Node node1 = new Node(52);
        Node node2 = new Node(79, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isCatch());
    }

    @Test(timeout = 4000)
    public void test06768() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_DEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_DEPRECATED_PROP", 30, 31);
        Node node2 = new Node(80, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(8, Node.FLAG_NO_THROWS);
    }

    @Test(timeout = 4000)
    public void test06869() throws Throwable {
        Node node0 = Node.newNumber(15.485854794453687);
        Node node1 = new Node(0, 40, 81);
        Node node2 = new Node(81, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isString());
    }

    @Test(timeout = 4000)
    public void test06970() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(37, 4095, 2);
        Node node2 = new Node(82, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isLocalResultCall());
    }

    @Test(timeout = 4000)
    public void test07071() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = new Node(0, 46, 83);
        Node node2 = new Node(83, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
    }

    @Test(timeout = 4000)
    public void test07172() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(84, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isFromExterns());
    }

    @Test(timeout = 4000)
    public void test07273() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(85, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(54, Node.LAST_PROP);
    }

    @Test(timeout = 4000)
    public void test07374() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(86, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test07475() throws Throwable {
        Node node0 = Node.newNumber(1.0);
        Node node1 = new Node(15, 29, 12);
        Node node2 = new Node(87, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test07576() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(37, 4095, 2);
        Node node2 = new Node(88, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test07677() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 45);
        Node node2 = new Node(89, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test07778() throws Throwable {
        Node node0 = Node.newNumber((-13.117717143664176));
        Node node1 = new Node(3914, 90, 38);
        Node node2 = new Node(90, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test07879() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(91, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test07980() throws Throwable {
        Node node0 = Node.newNumber(0.4641622805630774);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(92, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test08081() throws Throwable {
        Node node0 = Node.newNumber((-3.6007919329544293));
        Node node1 = new Node(0, 46, 93);
        Node node2 = new Node(93, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(93, node3.getType());
    }

    @Test(timeout = 4000)
    public void test08182() throws Throwable {
        Node node0 = Node.newNumber((-1.5152846879064057));
        Node node1 = new Node(0, 46, 95);
        Node node2 = new Node(95, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test08283() throws Throwable {
        Node node0 = Node.newNumber(1.0388);
        Node node1 = new Node(52);
        Node node2 = new Node(96, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(96, node3.getType());
    }

    @Test(timeout = 4000)
    public void test08384() throws Throwable {
        Node node0 = Node.newNumber(1740.0506226);
        Node node1 = new Node(39, 1290, (-818));
        Node node2 = new Node(97, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test08485() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(0, 46, 98);
        Node node2 = new Node(98, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isGetProp());
    }

    @Test(timeout = 4000)
    public void test08586() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 16, 45, 39);
        Node node2 = new Node(99, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isAdd());
    }

    @Test(timeout = 4000)
    public void test08687() throws Throwable {
        Node node0 = Node.newNumber(1693.820605642);
        Node node1 = Node.newNumber((double) 50);
        Node node2 = new Node(100, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test08788() throws Throwable {
        Node node0 = Node.newNumber((-14.043702900326613));
        Node node1 = new Node(15, 41, 0);
        Node node2 = new Node(101, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasChildren());
    }

    @Test(timeout = 4000)
    public void test08789() throws Throwable {
        Node node0 = Node.newNumber((-14.043702900326613));
        Node node1 = new Node(15, 41, 0);
        Node node2 = new Node(101, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test08890() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(36, 2, 46);
        Node node2 = new Node(0, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isFalse());
    }

    @Test(timeout = 4000)
    public void test08991() throws Throwable {
        Node node0 = Node.newNumber(738.5303721191725);
        Node node1 = new Node(122, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        node0.setType(4);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertEquals(122, node2.getType());
    }

    @Test(timeout = 4000)
    public void test09092() throws Throwable {
        Node node0 = Node.newNumber(1201.0);
        Node node1 = new Node(122, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.common.base.Preconditions", e);
        }
    }

    @Test(timeout = 4000)
    public void test09193() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(122, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertEquals(122, node2.getType());
    }

    @Test(timeout = 4000)
    public void test09294() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(21, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertNotNull(node2);
    }

    @Test(timeout = 4000)
    public void test09295() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(21, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertTrue(node2.hasChildren());
    }

    @Test(timeout = 4000)
    public void test09396() throws Throwable {
        Node node0 = Node.newNumber(496.2145611295092);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        node0.setType(38);
        Node node1 = new Node(22, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // NAME is not a string node
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test09497() throws Throwable {
        Node node0 = new Node(85);
        Node node1 = new Node(11, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test09598() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(11.9653);
        Node node1 = new Node(98, 47, 1);
        Node node2 = new Node(23, node1, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.Node", e);
        }
    }

    @Test(timeout = 4000)
    public void test09699() throws Throwable {
        Node node0 = Node.newNumber((-1074.715509443318));
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        node0.setType(100);
        Node node1 = new Node(9, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test097100() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(11.9653);
        Node node1 = new Node(101, 47, 1);
        Node node2 = new Node(23, node1, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test098101() throws Throwable {
        Node node0 = Node.newNumber(0.15);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        node0.setType(32);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertEquals(50, Node.FREE_CALL);
    }

    @Test(timeout = 4000)
    public void test099102() throws Throwable {
        Node node0 = Node.newNumber(731.2333620078476);
        Node node1 = new Node(4095, node0, node0, node0);
        Node node2 = new Node(32, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.isTypeOf());
    }

    @Test(timeout = 4000)
    public void test100103() throws Throwable {
        Node node0 = Node.newNumber(1162.7266002542326);
        node0.setType(63);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test101104() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        node0.setType(40);
        Node node1 = new Node(32, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test102105() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        node0.setType(41);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test103106() throws Throwable {
        Node node0 = Node.newNumber(738.5303721191725);
        Node node1 = new Node(32, node0);
        node0.setType(43);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test104107() throws Throwable {
        Node node0 = Node.newNumber(1162.7266002542326);
        Node node1 = new Node(32, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        node0.setType(44);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test105108() throws Throwable {
        Node node0 = Node.newNumber(731.2333620078476);
        Node node1 = new Node(105, node0, node0, node0);
        Node node2 = new Node(32, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test106109() throws Throwable {
        Node node0 = Node.newNumber((-1083.5582287777552));
        Node node1 = new Node(122, node0, node0, node0);
        Node node2 = new Node(32, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test107110() throws Throwable {
        Node node0 = Node.newNumber(1.5);
        Node node1 = new Node(32, node0);
        node0.setType(47);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertTrue(node2.isTypeOf());
    }

    @Test(timeout = 4000)
    public void test108111() throws Throwable {
        Node node0 = new Node(0, 46, 30);
        Node node1 = new Node(29, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertNotNull(node2);
    }

    @Test(timeout = 4000)
    public void test108112() throws Throwable {
        Node node0 = new Node(0, 46, 30);
        Node node1 = new Node(29, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertEquals(29, node2.getType());
    }

    @Test(timeout = 4000)
    public void test109113() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("com.google.javascript.jscomp.CleanupPasses$MemoizedScopeCleanupPass");
        Node node1 = new Node(26, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test110114() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("Infinity");
        Compiler compiler0 = new Compiler();
        peepholeFoldConstants0.beginTraversal(compiler0);
        Node node1 = new Node(29, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        assertEquals(45, Node.IS_VAR_ARGS_PARAM);
    }

    @Test(timeout = 4000)
    public void test111115() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(1934.04944316);
        Node node1 = new Node(26, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test112116() throws Throwable {
        Node node0 = Node.newNumber(20.707350379842012);
        Node node1 = new Node(26, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test113117() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber((-1114.20122));
        Node node1 = new Node(29, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test114118() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("$6HHiw;a");
        Compiler compiler0 = new Compiler();
        peepholeFoldConstants0.beginTraversal(compiler0);
        Node node1 = new Node(29, node0, node0, node0);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test115119() throws Throwable {
        Node node0 = Node.newNumber(36.0);
        Node node1 = new Node(27, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node1);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test116120() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(52, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test117121() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_DEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_DEPRECATED_PROP", 30, 31);
        Node node2 = new Node(52, node0, node1, node1, node1, 29, 32);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test118122() throws Throwable {
        Node node0 = Node.newNumber(1.1355070494404167);
        Node node1 = new Node(4, 38, 49);
        Node node2 = new Node(86, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasChildren());
    }

    @Test(timeout = 4000)
    public void test119123() throws Throwable {
        Node node0 = Node.newNumber((-6.515136254681011));
        Node node1 = new Node(0, 46, 30);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node2 = Node.newString(46, "F?iA,J-)O{]p4hqc=y", 53, 38);
        Node node3 = new Node(94, node1, node2, node0);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
        assertTrue(node4.hasChildren());
    }

    @Test(timeout = 4000)
    public void test120124() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 2, 16, 38);
        Node node2 = new Node(101, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test121125() throws Throwable {
        Node node0 = Node.newNumber(0.4068672415215965);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(21, node1, node0, node0);
        node1.setType(82);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test122126() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newString("");
        Node node2 = new Node(21, node1, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test123127() throws Throwable {
        Node node0 = Node.newNumber(2.1474836264075923E9);
        Node node1 = Node.newString("YJu|Y~A/h)'C)Wq");
        Node node2 = new Node(21, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test124128() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(36, 2, 46);
        node1.setType(31);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test124129() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber((-1.5492058826427342));
        Node node1 = new Node(36, 2, 46);
        node1.setType(31);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test125130() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(2, 1, 51);
        Node node2 = new Node(11, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test125131() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(2, 1, 51);
        Node node2 = new Node(11, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(2, node3.getChildCount());
    }

    @Test(timeout = 4000)
    public void test126132() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(21, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test127133() throws Throwable {
        Node node0 = Node.newNumber(11.9653);
        Node node1 = Node.newNumber(11.9653);
        Node node2 = new Node(23, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test127134() throws Throwable {
        Node node0 = Node.newNumber(11.9653);
        Node node1 = Node.newNumber(11.9653);
        Node node2 = new Node(23, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isNumber());
    }

    @Test(timeout = 4000)
    public void test128135() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(24, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertNotNull(node3);
    }

    @Test(timeout = 4000)
    public void test128136() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(24, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasMoreThanOneChild());
    }

    @Test(timeout = 4000)
    public void test129137() throws Throwable {
        Node node0 = Node.newNumber((-13.174280095952382));
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(20, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test130138() throws Throwable {
        Node node0 = Node.newNumber(9.007199254740992E15);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(20, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test131139() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 51);
        Node node2 = new Node(20, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test132140() throws Throwable {
        Node node0 = Node.newNumber(0.9347869348011569);
        Node node1 = Node.newNumber((double) 50);
        Node node2 = new Node(19, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
        }
    }

    @Test(timeout = 4000)
    public void test133141() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = new Node(42, 49, 35);
        Node node2 = new Node(14, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isAnd());
    }

    @Test(timeout = 4000)
    public void test134142() throws Throwable {
        Node node0 = Node.newNumber(32.41188510074162);
        Node node1 = new Node(50, 32, 4095);
        Node node2 = new Node(15, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.hasChildren());
    }

    @Test(timeout = 4000)
    public void test135143() throws Throwable {
        Node node0 = Node.newNumber((-3.179559574634467));
        Node node1 = new Node(0, 46, 29);
        Node node2 = new Node(16, node1, node0, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isNE());
    }

    @Test(timeout = 4000)
    public void test136144() throws Throwable {
        Node node0 = Node.newNumber(1.7);
        Node node1 = Node.newNumber((double) 50);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        node0.setType(43);
        Node node2 = new Node(12, node0, node1);
        PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
        Node node3 = peepholeFoldWithTypes0.optimizeSubtree(node2);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node3);
        assertNull(node4.getSourceFileName());
    }

    @Test(timeout = 4000)
    public void test137145() throws Throwable {
        Node node0 = Node.newNumber(794.42976276);
        node0.setType(44);
        Node node1 = Node.newNumber((double) 2, 29, 48);
        Node node2 = new Node(16, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isExprResult());
    }

    @Test(timeout = 4000)
    public void test138146() throws Throwable {
        Node node0 = Node.newNumber(1.4029632425982494);
        Node node1 = new Node(47, 49, 15);
        Node node2 = new Node(12, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isTypeOf());
    }

    @Test(timeout = 4000)
    public void test139147() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(10.846211819036927);
        Node node1 = new Node(63, 47, 1);
        Node node2 = new Node(13, node1, node0, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertTrue(node3.isNE());
    }

    @Test(timeout = 4000)
    public void test140148() throws Throwable {
        Node node0 = Node.newString("YJuY~A/h)'C)Wq");
        Node node1 = new Node(64, 45, 4095);
        Node node2 = new Node(5140, node1, node1, node0);
        node2.setType(12);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(16, Node.FLAG_LOCAL_RESULTS);
    }

    @Test(timeout = 4000)
    public void test141149() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(0.9347869348011569);
        Node node1 = new Node(105, 41, 1);
        Node node2 = new Node(38, node1, node0, node0);
        PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
        Node node3 = peepholeCollectPropertyAssignments0.optimizeSubtree(node2);
        node3.setType(16);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertEquals(0, Node.SIDE_EFFECTS_ALL);
    }

    @Test(timeout = 4000)
    public void test142150() throws Throwable {
        Node node0 = Node.newString("YJuY~A/h)'C)Wq");
        Node node1 = new Node(41, 45, 4095);
        Node node2 = new Node(39, node1, node0, node0, 53, 2);
        node2.setType(12);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test143151() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("JSC_gDEPRECATED_PROP");
        Node node1 = Node.newString(41, "JSC_gDEPRECATED_PROP", 30, 31);
        Node node2 = new Node(16, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isHook());
    }

    @Test(timeout = 4000)
    public void test144152() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("Unknown shft operator:3");
        Node node1 = Node.newString("Unknown shft operator:3", 65279, 2);
        Node node2 = new Node(12, node0, node0, node1);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test145153() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newString("Unknown shift operator: ");
        Node node1 = Node.newString("Unknown shift operator: ", 65279, 2);
        Node node2 = new Node(15, node1, node0, node1, node0, 38, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isBreak());
    }

    @Test(timeout = 4000)
    public void test146154() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newNumber(777.0);
        Node node1 = new Node(46, 50, 1);
        Node node2 = new Node(16, node0, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        assertFalse(node3.isString());
    }

    @Test(timeout = 4000)
    public void test147155() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        Node node0 = Node.newString("Infini_ty");
        node0.setString("");
        Node node1 = Node.newString("Infini_ty", 50, 2);
        Node node2 = new Node(45, node0, node0, node1, 44, 1);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test148156() throws Throwable {
        Node node0 = Node.newNumber(35.0);
        Node node1 = Node.newNumber((double) 35, 48, 15);
        Node node2 = new Node(16, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test149157() throws Throwable {
        Node node0 = Node.newNumber(731.5408215518694);
        Node node1 = Node.newNumber((double) 36);
        Node node2 = new Node(45, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test150158() throws Throwable {
        Node node0 = Node.newNumber(4.9E-324);
        Node node1 = Node.newNumber((double) 35, 48, 15);
        Node node2 = new Node(46, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test151159() throws Throwable {
        Node node0 = Node.newNumber(35.0);
        Node node1 = Node.newNumber((double) 35, 48, 15);
        Node node2 = new Node(46, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test152160() throws Throwable {
        Node node0 = Node.newNumber(0.0);
        Node node1 = Node.newNumber((double) 54);
        Node node2 = new Node(15, node0, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test153161() throws Throwable {
        Node node0 = Node.newNumber(0.14767037811173472);
        Node node1 = Node.newNumber((double) 45, 2, 8);
        Node node2 = new Node(14, node1, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test154162() throws Throwable {
        Node node0 = Node.newNumber(0.9347869348011569);
        Node node1 = Node.newNumber((double) 50);
        Node node2 = new Node(17, node1, node0, node0, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test155163() throws Throwable {
        Node node0 = Node.newNumber(794.4297627602007);
        Node node1 = Node.newNumber((double) 2, 29, 48);
        Node node2 = new Node(16, node0, node1, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        // Undeclared exception!
        try {
            peepholeFoldConstants0.optimizeSubtree(node2);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.jscomp.PeepholeFoldConstants", e);
        }
    }

    @Test(timeout = 4000)
    public void test156164() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
        Node node0 = Node.newNumber(18.382798791754617);
        node0.setType(30);
        Node node1 = new Node(54, node0, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node0);
        assertFalse(node2.isVar());
    }
}
