/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 01:44:34 GMT 2024
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.ArrayComprehensionLoop;
import com.google.javascript.rhino.head.ast.ArrayLiteral;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.Block;
import com.google.javascript.rhino.head.ast.BreakStatement;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ConditionalExpression;
import com.google.javascript.rhino.head.ast.ContinueStatement;
import com.google.javascript.rhino.head.ast.DoLoop;
import com.google.javascript.rhino.head.ast.ElementGet;
import com.google.javascript.rhino.head.ast.EmptyExpression;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.ast.ExpressionStatement;
import com.google.javascript.rhino.head.ast.ForLoop;
import com.google.javascript.rhino.head.ast.FunctionCall;
import com.google.javascript.rhino.head.ast.FunctionNode;
import com.google.javascript.rhino.head.ast.InfixExpression;
import com.google.javascript.rhino.head.ast.Label;
import com.google.javascript.rhino.head.ast.LabeledStatement;
import com.google.javascript.rhino.head.ast.Name;
import com.google.javascript.rhino.head.ast.NewExpression;
import com.google.javascript.rhino.head.ast.ObjectLiteral;
import com.google.javascript.rhino.head.ast.ObjectProperty;
import com.google.javascript.rhino.head.ast.ParenthesizedExpression;
import com.google.javascript.rhino.head.ast.PropertyGet;
import com.google.javascript.rhino.head.ast.ReturnStatement;
import com.google.javascript.rhino.head.ast.Scope;
import com.google.javascript.rhino.head.ast.StringLiteral;
import com.google.javascript.rhino.head.ast.SwitchCase;
import com.google.javascript.rhino.head.ast.SwitchStatement;
import com.google.javascript.rhino.head.ast.ThrowStatement;
import com.google.javascript.rhino.head.ast.VariableDeclaration;
import com.google.javascript.rhino.head.ast.WhileLoop;
import com.google.javascript.rhino.head.ast.WithStatement;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class IRFactory_ESTest extends IRFactory_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ConditionalExpression conditionalExpression0 = new ConditionalExpression(484, 22);
        astRoot0.addChildrenToFront(conditionalExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("crall", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(astRoot0);
        astRoot0.addChildrenToFront(parenthesizedExpression0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "%:`:O|.UBlm``CWL", config0, errorCollector0);
            fail("Expecting exception: StackOverflowError");
        } catch (StackOverflowError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.CANADA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        DoLoop doLoop0 = new DoLoop();
        astRoot0.addChild(doLoop0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMa0cheB$7", false);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ObjectLiteral objectLiteral0 = new ObjectLiteral(43, 20);
        Name name0 = new Name(3, 1929);
        PropertyGet propertyGet0 = new PropertyGet(objectLiteral0, name0);
        astRoot0.addChildrenToFront(propertyGet0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "CONTINUE", config0, errorCollector0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // StringNode: str is null
            //
            verifyException("com.google.javascript.rhino.Node$StringNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        EmptyExpression emptyExpression0 = new EmptyExpression();
        astRoot0.addChildrenToFront(emptyExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        EmptyExpression emptyExpression0 = new EmptyExpression();
        astRoot0.addChildrenToFront(emptyExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertTrue(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        EmptyExpression emptyExpression0 = new EmptyExpression();
        astRoot0.addChildrenToFront(emptyExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ObjectProperty objectProperty0 = new ObjectProperty(37);
        astRoot0.addChildrenToFront(objectProperty0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "eu^O/!QIx_", config0, toolErrorReporter0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // 103
            //
            verifyException("com.google.javascript.jscomp.parsing.IRFactory", e);
        }
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("b3+)#B@lQS+r", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        WithStatement withStatement0 = new WithStatement(8, 198);
        astRoot0.addChildrenToFront(withStatement0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "b3+)#B@lQS+r", config0, errorCollector0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ForLoop forLoop0 = new ForLoop();
        astRoot0.addChildrenToFront(forLoop0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("M[/(C\"tVg `9/,&//", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        LabeledStatement labeledStatement0 = new LabeledStatement();
        Label label0 = new Label(2003, 1854, "M[/(C\"tVg `9/,&//");
        labeledStatement0.addLabel(label0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        astRoot0.addChildrenToFront(labeledStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "M[/(C\"tVg `9/,&//", config0, errorCollector0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        NewExpression newExpression0 = new NewExpression(26, 0);
        astRoot0.addChildrenToFront(newExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newNumber((-1493.658));
        astRoot0.addChildrenToFront(node0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        Node node1 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
        assertEquals(1, node1.getLength());
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newNumber((-1493.658));
        astRoot0.addChildrenToFront(node0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        Node node1 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
        assertEquals(132, node1.getType());
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("error reporter", false);
        ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, false);
        astRoot0.addChildrenToFront(expressionStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        // Undeclared exception!
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "language version", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Scope scope0 = new Scope();
        astRoot0.addChildrenToFront(scope0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~:K", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Scope scope0 = new Scope();
        astRoot0.addChildrenToFront(scope0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~:K", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Scope scope0 = new Scope();
        astRoot0.addChildrenToFront(scope0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~:K", config0, toolErrorReporter0);
        assertTrue(node0.hasOneChild());
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")~,FmK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        WhileLoop whileLoop0 = new WhileLoop();
        astRoot0.addChildrenToFront(whileLoop0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, ")~,FmK", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.CANADA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        Block block0 = new Block(20);
        astRoot0.addChild(block0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.CANADA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        Block block0 = new Block(20);
        astRoot0.addChild(block0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.CANADA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        Block block0 = new Block(20);
        astRoot0.addChild(block0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, toolErrorReporter0);
        assertEquals(1, node0.getChildCount());
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("$`i;ZXP:-+", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Name name0 = new Name(15, 16, "class");
        FunctionNode functionNode0 = new FunctionNode(151, name0);
        astRoot0.addChildrenToFront(functionNode0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "$`i;ZXP:-+", config0, errorCollector0);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.google.javascript.rhino.head.ast.ErrorCollector", e);
        }
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        InfixExpression infixExpression0 = new InfixExpression(astRoot0, astRoot0);
        astRoot0.addChild(infixExpression0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        // Undeclared exception!
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ThrowStatement throwStatement0 = new ThrowStatement(18);
        astRoot0.addChildrenToFront(throwStatement0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, errorCollector0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("crall", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        FunctionNode functionNode0 = new FunctionNode();
        astRoot0.addChildrenToFront(functionNode0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "crall", config0, toolErrorReporter0);
        assertTrue(node0.hasChildren());
    }

    @Test(timeout = 4000)
    public void test1826() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("crall", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        FunctionNode functionNode0 = new FunctionNode();
        astRoot0.addChildrenToFront(functionNode0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "crall", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test1827() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("crall", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        FunctionNode functionNode0 = new FunctionNode();
        astRoot0.addChildrenToFront(functionNode0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "crall", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test1928() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~EdK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Name name0 = new Name((-1977), 18, "i)7~EdK");
        ElementGet elementGet0 = new ElementGet(name0, name0);
        astRoot0.addChildrenToFront(elementGet0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~EdK", config0, errorCollector0);
        assertTrue(node0.isFromExterns());
    }

    @Test(timeout = 4000)
    public void test1929() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~EdK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Name name0 = new Name((-1977), 18, "i)7~EdK");
        ElementGet elementGet0 = new ElementGet(name0, name0);
        astRoot0.addChildrenToFront(elementGet0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~EdK", config0, errorCollector0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test1930() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~EdK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        Name name0 = new Name((-1977), 18, "i)7~EdK");
        ElementGet elementGet0 = new ElementGet(name0, name0);
        astRoot0.addChildrenToFront(elementGet0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~EdK", config0, errorCollector0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test2031() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(13, 2, token_CommentType0, "call");
        astRoot0.addComment(comment0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2032() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("call", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(13, 2, token_CommentType0, "call");
        astRoot0.addComment(comment0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "call", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2133() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/* @", false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(4311, 0, token_CommentType0, "/* @");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "$`iU;ZX&zP:-+", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test2134() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/* @", false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(4311, 0, token_CommentType0, "/* @");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "$`iU;ZX&zP:-+", config0, toolErrorReporter0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2235() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("@4GFaK", false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(26, 24, token_CommentType0, "@4GFaK");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        astRoot0.setJsDocNode(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "@4GFaK", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2236() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("@4GFaK", false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment(26, 24, token_CommentType0, "@4GFaK");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        astRoot0.setJsDocNode(comment0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "@4GFaK", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test2337() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMatcher$7", false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(26, 24, token_CommentType0, "com.google.common.base.CharMatcher$7");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "com.google.common.base.CharMatcher$7", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2338() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMatcher$7", false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(26, 24, token_CommentType0, "com.google.common.base.CharMatcher$7");
        astRoot0.addComment(comment0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "com.google.common.base.CharMatcher$7", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2439() throws Throwable {
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        AstRoot astRoot0 = new AstRoot(21);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "\n * @", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2440() throws Throwable {
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        AstRoot astRoot0 = new AstRoot(21);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "\n * @", config0, toolErrorReporter0);
        assertEquals((-1), node0.getCharno());
    }

    @Test(timeout = 4000)
    public void test2441() throws Throwable {
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        AstRoot astRoot0 = new AstRoot(21);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "\n * @", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2542() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        astRoot0.addChildrenToFront(arrayLiteral0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "_<2", config0, toolErrorReporter0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2543() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ArrayLiteral arrayLiteral0 = new ArrayLiteral();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        astRoot0.addChildrenToFront(arrayLiteral0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "_<2", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2644() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("(Lorg/mozilla/javascript/Context;)Z", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        BreakStatement breakStatement0 = new BreakStatement(113);
        astRoot0.addChildrenToFront(breakStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "(Lorg/mozilla/javascript/Context;)Z", config0, errorCollector0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test2645() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("(Lorg/mozilla/javascript/Context;)Z", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        BreakStatement breakStatement0 = new BreakStatement(113);
        astRoot0.addChildrenToFront(breakStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "(Lorg/mozilla/javascript/Context;)Z", config0, errorCollector0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2746() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        BreakStatement breakStatement0 = new BreakStatement(21);
        Name name0 = new Name(3, "call");
        breakStatement0.setBreakLabel(name0);
        astRoot0.addChildrenToFront(breakStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "call", config0, errorCollector0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2747() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        BreakStatement breakStatement0 = new BreakStatement(21);
        Name name0 = new Name(3, "call");
        breakStatement0.setBreakLabel(name0);
        astRoot0.addChildrenToFront(breakStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "call", config0, errorCollector0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2848() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-J", true);
        Locale locale0 = Locale.CHINA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
        ContinueStatement continueStatement0 = new ContinueStatement(13);
        astRoot0.addChildrenToFront(continueStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-J", config0, errorCollector0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test2849() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-J", true);
        Locale locale0 = Locale.CHINA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
        ContinueStatement continueStatement0 = new ContinueStatement(13);
        astRoot0.addChildrenToFront(continueStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-J", config0, errorCollector0);
        assertTrue(node0.isFromExterns());
    }

    @Test(timeout = 4000)
    public void test2850() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-J", true);
        Locale locale0 = Locale.CHINA;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
        ContinueStatement continueStatement0 = new ContinueStatement(13);
        astRoot0.addChildrenToFront(continueStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-J", config0, errorCollector0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test2951() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-U", false);
        Locale locale0 = Locale.FRENCH;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        Name name0 = new Name(2);
        ContinueStatement continueStatement0 = new ContinueStatement(2, name0);
        astRoot0.addChildrenToFront(continueStatement0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "-U", config0, toolErrorReporter0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // StringNode: str is null
            //
            verifyException("com.google.javascript.rhino.Node$StringNode", e);
        }
    }

    @Test(timeout = 4000)
    public void test3052() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("i)7~:K", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(2, 10);
        astRoot0.addChildrenToFront(arrayComprehensionLoop0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "i)7~:K", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3153() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
        FunctionNode functionNode0 = new FunctionNode(25);
        astRoot0.addChildrenToFront(functionNode0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        functionNode0.setFunctionType(2);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "/* @", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3254() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("$`iU;ZXzP:-+", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Name name0 = new Name(12, 16, "$`iU;ZXzP:-+");
        FunctionNode functionNode0 = new FunctionNode(2, name0);
        astRoot0.addChildrenToFront(functionNode0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "$`iU;ZXzP:-+", config0, errorCollector0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3355() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ReturnStatement returnStatement0 = new ReturnStatement();
        astRoot0.addChildrenToFront(returnStatement0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "Unsupported syntax: ", config0, toolErrorReporter0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test3356() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ReturnStatement returnStatement0 = new ReturnStatement();
        astRoot0.addChildrenToFront(returnStatement0);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "Unsupported syntax: ", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test3457() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("crall", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        SwitchStatement switchStatement0 = new SwitchStatement();
        ReturnStatement returnStatement0 = new ReturnStatement((-551), (-1), switchStatement0);
        astRoot0.addChild(returnStatement0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "crall", config0, errorCollector0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3558() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")~,jmK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        StringLiteral stringLiteral0 = new StringLiteral();
        stringLiteral0.setValue(")~,jmK");
        astRoot0.addChildrenToFront(stringLiteral0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, ")~,jmK", config0, errorCollector0);
        assertTrue(node0.isFromExterns());
    }

    @Test(timeout = 4000)
    public void test3559() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")~,jmK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        StringLiteral stringLiteral0 = new StringLiteral();
        stringLiteral0.setValue(")~,jmK");
        astRoot0.addChildrenToFront(stringLiteral0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, ")~,jmK", config0, errorCollector0);
        assertEquals(1, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test3560() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")~,jmK", true);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        StringLiteral stringLiteral0 = new StringLiteral();
        stringLiteral0.setValue(")~,jmK");
        astRoot0.addChildrenToFront(stringLiteral0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, ")~,jmK", config0, errorCollector0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3661() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        SwitchCase switchCase0 = new SwitchCase(16);
        astRoot0.addChildrenToFront(switchCase0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, errorCollector0);
        assertTrue(node0.isScript());
    }

    @Test(timeout = 4000)
    public void test3662() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        SwitchCase switchCase0 = new SwitchCase(16);
        astRoot0.addChildrenToFront(switchCase0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "-iUJ", config0, errorCollector0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test3763() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration(1);
        astRoot0.addChild(variableDeclaration0);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("error reporter", false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, toolErrorReporter0);
        assertEquals(0, node0.getLength());
    }

    @Test(timeout = 4000)
    public void test3764() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration(1);
        astRoot0.addChild(variableDeclaration0);
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("error reporter", false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "error reporter", config0, toolErrorReporter0);
        assertEquals(132, node0.getType());
    }

    @Test(timeout = 4000)
    public void test3865() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("-iUJ", false);
        Locale locale0 = Locale.CANADA_FRENCH;
        FunctionCall functionCall0 = new FunctionCall(2, 0);
        astRoot0.addChild(functionCall0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        // Undeclared exception!
        try {
            IRFactory.transformTree(astRoot0, simpleSourceFile0, "", config0, toolErrorReporter0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }
}
