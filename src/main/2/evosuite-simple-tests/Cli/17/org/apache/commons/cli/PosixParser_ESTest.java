/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 22:31:47 GMT 2024
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-";
        PosixParser posixParser0 = new PosixParser();
        // Undeclared exception!
        try {
            posixParser0.flatten(options0, stringArray0, false);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray0 = new String[36];
        stringArray0[0] = "--7`anI-1`:g=)c";
        // Undeclared exception!
        try {
            posixParser0.flatten((Options) null, stringArray0, true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-7`anI-1`:g)c";
        Options options1 = options0.addOption("I", true, "-7`anI-1`:g)c");
        String[] stringArray1 = posixParser0.flatten(options1, stringArray0, true);
        String[] stringArray2 = posixParser0.flatten(options0, stringArray1, false);
        assertEquals(10, stringArray1.length);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-7`anI-1`:g)c";
        Options options1 = options0.addOption("I", true, "-7`anI-1`:g)c");
        String[] stringArray1 = posixParser0.flatten(options1, stringArray0, true);
        String[] stringArray2 = posixParser0.flatten(options0, stringArray1, false);
        assertEquals(10, stringArray2.length);
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = Locale.getISOLanguages();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
        assertEquals(189, stringArray1.length);
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-,`&nI-1`:gac";
        Options options1 = options0.addOption("", stringArray0[1], true, "-,`&nI-1`:gac");
        posixParser0.parse(options1, stringArray0, true);
        posixParser0.burstToken("-,`&nI-1`:gac", true);
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-,`&nI-1`:gac";
        Options options1 = options0.addOption("", "-,`&nI-1`:gac", false, "-,`&nI-1`:gac");
        CommandLine commandLine0 = posixParser0.parse(options1, stringArray0, true);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test67() throws Throwable {
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-j";
        PosixParser posixParser0 = new PosixParser();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
        assertEquals(1, stringArray1.length);
    }

    @Test(timeout = 4000)
    public void test78() throws Throwable {
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-j";
        PosixParser posixParser0 = new PosixParser();
        // Undeclared exception!
        try {
            posixParser0.flatten(options0, stringArray0, false);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test89() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        options0.addOption("", "", true, "");
        posixParser0.parse(options0, (String[]) null, true);
        posixParser0.burstToken("--", true);
    }
}
