/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 23:25:10 GMT 2024
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DefaultParser_ESTest extends DefaultParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, true);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        Option option0 = new Option("0", "Uo", true, "--");
        Options options1 = options0.addOption(option0);
        options1.addOption("", "0", true, "-Uo[fFC(XYni#C~S");
        String[] stringArray0 = new String[7];
        stringArray0[0] = "Uo";
        stringArray0[1] = "Uo";
        stringArray0[2] = "GC@e !";
        stringArray0[3] = "--0";
        stringArray0[4] = "-Uo[fFC(XYni#C~S";
        Properties properties0 = new Properties();
        try {
            defaultParser0.parse(options0, stringArray0, properties0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Missing argument for option: 0
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        String[] stringArray0 = new String[10];
        stringArray0[0] = "-0p";
        Properties properties0 = new Properties();
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        properties0.put("org.apache.coHos.cli.Option$1", "org.apache.coHos.cli.Option$1");
        try {
            defaultParser0.parse(options0, (String[]) null, properties0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Default option wasn't defined
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addRequiredOption("0", "0", true, "0");
        try {
            defaultParser0.parse(options0, (String[]) null);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Missing required option: 0
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        options0.addOption("", "", true, "");
        defaultParser0.parse(options0, (String[]) null);
        defaultParser0.handleConcatenatedOptions("---0G5]dN(Tw0.");
        defaultParser0.handleConcatenatedOptions("---0G5]dN(Tw0.");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "--";
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        Option option0 = new Option("0", "Uo", true, "0");
        String[] stringArray0 = new String[5];
        stringArray0[0] = "Uo";
        stringArray0[1] = "Uo";
        stringArray0[2] = "Uo";
        stringArray0[3] = "-0";
        options0.addOption(option0);
        stringArray0[4] = "--Uo[fFC(XYni#C~S";
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-";
        // Undeclared exception!
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        Options options1 = options0.addOption("0", "-0G5Tddw(T70.", true, "-0");
        String[] stringArray0 = new String[4];
        stringArray0[0] = "-0";
        stringArray0[1] = "-0";
        // Undeclared exception!
        try {
            defaultParser0.parse(options1, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addOption("0", "0", true, "--0");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "--0";
        stringArray0[1] = "0";
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addOption("0", "org.apache.commons.cli.OptionGroup", true, "0");
        String[] stringArray0 = new String[7];
        stringArray0[0] = "-0";
        stringArray0[1] = "-";
        // Undeclared exception!
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addRequiredOption("0", "0", true, "0");
        String[] stringArray0 = new String[4];
        stringArray0[0] = "0";
        stringArray0[1] = "--0";
        stringArray0[2] = "-[Rc$q%1Z=4A0G:3&";
        // Undeclared exception!
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addOption("0", "0", true, "--0");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "--0";
        stringArray0[1] = "--0";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Missing argument for option: 0
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        Properties properties0 = new Properties();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "--6vutNqbW[hQQzD}*m#2";
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        Options options1 = options0.addRequiredOption("", "", true, "");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "--=";
        // Undeclared exception!
        try {
            defaultParser0.parse(options1, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        Option option0 = new Option("0", "-0G5]dN(Tw0.", false, "%z#VvLCI'(LtCA1MV");
        Options options1 = options0.addOption(option0);
        options1.addOption("true", "%z#VvLCI'(LtCA1MV", false, "--=");
        String[] stringArray0 = new String[6];
        stringArray0[0] = "--=";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Ambiguous option: '--'  (could be: '-0G5]dN(Tw0.', '%z#VvLCI'(LtCA1MV')
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        Options options1 = options0.addRequiredOption("", "", false, (String) null);
        String[] stringArray0 = new String[2];
        stringArray0[0] = "--=";
        try {
            defaultParser0.parse(options1, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: --=
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-[";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -[
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[2];
        stringArray0[0] = "-~0=G5]dGN(TwS0.&K";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -~0=G5]dGN(TwS0.&K
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Options options0 = new Options();
        Option option0 = new Option("Uo", "-Uo", false, "Uo");
        options0.addOption(option0);
        DefaultParser defaultParser0 = new DefaultParser();
        String[] stringArray0 = new String[8];
        stringArray0[0] = "-Uo";
        // Undeclared exception!
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        Option option0 = new Option("0", "Uo", false, "--");
        Options options1 = options0.addOption(option0);
        String[] stringArray0 = new String[7];
        stringArray0[0] = "Uo";
        stringArray0[1] = "Uo";
        stringArray0[2] = "GC@e !";
        stringArray0[3] = "0";
        stringArray0[4] = "-Uo[fFC(XYni#C~S";
        try {
            defaultParser0.parse(options1, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -Uo[fFC(XYni#C~S
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("0", false, "-0G5)ddw(w0.");
        option0.setArgs(1453);
        optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup0);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-0G5)ddw(w0.";
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        String[] stringArray0 = new String[8];
        stringArray0[0] = "-0=G5]dGN(Tw0.&K";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -0=G5]dGN(Tw0.&K
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addRequiredOption("0", "-0=G5]dGN(Tw0.&K", false, "5R4");
        String[] stringArray0 = new String[8];
        stringArray0[0] = "-0=G5]dGN(Tw0.&K";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -0=G5]dGN(Tw0.&K
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addRequiredOption("0", "-0=G5]dGN(Tw90.&K", true, "0");
        String[] stringArray0 = new String[8];
        stringArray0[0] = "-0=G5]dGN(Tw90.&K";
        // Undeclared exception!
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        options0.addOption("0", "-0p");
        String[] stringArray0 = new String[10];
        stringArray0[0] = "-0p";
        Properties properties0 = new Properties();
        CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, true);
        assertNotNull(commandLine0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Options options0 = new Options();
        DefaultParser defaultParser0 = new DefaultParser();
        OptionGroup optionGroup0 = new OptionGroup();
        optionGroup0.setRequired(true);
        Option option0 = new Option("0", false, "-0G5)ddw(w0.");
        optionGroup0.addOption(option0);
        options0.addOptionGroup(optionGroup0);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-0G5)ddw(w0.";
        try {
            defaultParser0.parse(options0, stringArray0);
            fail("Expecting exception: Exception");
        } catch (Exception e) {
            //
            // Unrecognized option: -0G5)ddw(w0.
            //
            verifyException("org.apache.commons.cli.DefaultParser", e);
        }
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        DefaultParser defaultParser0 = new DefaultParser();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "");
        defaultParser0.parse(options1, (String[]) null);
        defaultParser0.handleConcatenatedOptions("--");
    }
}
