/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:21:20 GMT 2024
 */
package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.util.Locale;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieToolTipGenerator;
import org.jfree.chart.plot.AbstractPieLabelDistributor;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PiePlotState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.urls.CustomPieURLGenerator;
import org.jfree.chart.urls.StandardPieURLGenerator;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Rotation;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PiePlot_ESTest extends PiePlot_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSimpleLabels(true);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) piePlot3D0.MINIMUM_WIDTH_TO_DRAW);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getSimpleLabels());
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0015() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test0016() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0017() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test0018() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test0019() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00110() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00111() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test00112() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00213() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00214() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00215() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00216() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00217() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00218() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test00219() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00220() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00221() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00222() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00223() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        piePlot0.getLegendLabelURLGenerator();
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00324() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00325() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00326() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00327() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00328() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00329() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00330() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00331() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test00332() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00333() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00334() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertNotNull(color0);
    }

    @Test(timeout = 4000)
    public void test00335() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00336() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionPaint(10);
        assertEquals(128, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test00437() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00438() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test00439() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00440() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00441() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00442() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00443() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00444() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00445() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00446() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00447() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLabelOutlineStroke();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00548() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00549() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00550() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00551() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00552() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00553() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00554() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00555() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00556() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00557() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test00558() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00659() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00660() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00661() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00662() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00663() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00664() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00665() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'direction' argument.", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(151, 151, chartRenderingInfo0);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00766() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00767() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00768() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00769() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00770() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00771() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00772() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00773() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00774() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00775() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00776() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertEquals(3, paint0.getTransparency());
    }

    @Test(timeout = 4000)
    public void test00777() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Paint paint0 = piePlot3D0.getLabelShadowPaint();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test00878() throws Throwable {
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 0.4);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        // Undeclared exception!
        try {
            ringPlot0.drawPie((Graphics2D) null, rectangle2D_Double0, plotRenderingInfo0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.plot.RingPlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test00979() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00980() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00981() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00982() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test00983() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test00984() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00985() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00986() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00987() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test00988() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test00989() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test00990() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Color color0 = (Color) piePlot3D0.getLabelLinkPaint();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01091() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertTrue(piePlot3D1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test01092() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01093() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test01094() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01095() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01096() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01097() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01098() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test01099() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test010100() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test010101() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test010102() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelOutlineStroke((Stroke) null);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011103() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011104() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011105() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test011106() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011107() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test011108() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011109() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011110() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011111() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011112() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test011113() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getLegendLabelGenerator();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test012114() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012115() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012116() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012117() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012118() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test012119() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012120() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test012121() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012122() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012123() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test012124() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
        Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
        ringPlot0.setShadowPaint(color0);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test013125() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013126() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013127() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013128() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test013129() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013130() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test013131() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013132() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(128, color0.getGreen());
    }

    @Test(timeout = 4000)
    public void test013133() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test013134() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013135() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test013136() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getBaseSectionPaint();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014137() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test014138() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test014139() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014140() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014141() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014142() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014143() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test014144() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014145() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014146() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test014147() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionOutlineStroke(1.0F);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015148() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015149() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test015150() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015151() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test015152() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015153() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015154() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015155() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015156() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015157() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test015158() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator();
        ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test016159() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016160() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016161() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test016162() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016163() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016164() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016165() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016166() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test016167() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test016168() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016169() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test016170() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.getLabelLinksVisible();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test017171() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017172() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test017173() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017174() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test017175() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017176() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017177() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017178() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017179() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test017180() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test017181() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test017182() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSectionOutlinePaint(1.0F, piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 0.08);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test018183() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setShadowYOffset(4.5);
        assertEquals(4.5, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test019184() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test019185() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setCircular(false);
        assertFalse(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test020186() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020187() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020188() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020189() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020190() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020191() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020192() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020193() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test020194() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test020195() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test020196() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test020197() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RectangleInsets rectangleInsets0 = ringPlot0.getSimpleLabelOffset();
        assertEquals(0.18, rectangleInsets0.getLeft(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021198() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021199() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021200() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021201() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test021202() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021203() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021204() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021205() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test021206() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test021207() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021208() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test021209() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
        assertEquals(2.0, rectangleInsets0.getLeft(), 0.01);
    }

    @Test(timeout = 4000)
    public void test022210() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.getSectionOutlinePaint((Comparable) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'key' argument.
            //
            verifyException("org.jfree.chart.PaintMap", e);
        }
    }

    @Test(timeout = 4000)
    public void test023211() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSimpleLabels(true);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0F, 10, 0.08, 1.0F);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getSimpleLabels());
    }

    @Test(timeout = 4000)
    public void test024212() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test024213() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024214() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024215() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024216() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024217() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test024218() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024219() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024220() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test024221() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024222() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test024223() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
        assertEquals(128, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test025224() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025225() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025226() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test025227() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025228() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025229() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025230() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025231() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025232() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test025233() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test025234() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test025235() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setSectionPaint(10, piePlot3D0.DEFAULT_LABEL_SHADOW_PAINT);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test026236() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026237() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026238() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026239() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026240() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026241() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test026242() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026243() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026244() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test026245() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test026246() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getPlotType();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test027247() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test027248() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027249() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027250() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027251() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test027252() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test027253() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027254() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027255() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027256() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test027257() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        SystemColor systemColor0 = SystemColor.textInactiveText;
        ringPlot0.setLabelOutlinePaint(systemColor0);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test028258() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setMinimumArcAngleToDraw(1039.51584);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertEquals(1039.51584, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test028259() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setMinimumArcAngleToDraw(1039.51584);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test029260() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(0.025, piePlot1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029261() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(90.0, piePlot1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029262() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(1.0E-5, piePlot1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029263() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(4.0, piePlot1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029264() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(4.0, piePlot1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029265() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertTrue(piePlot1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test029266() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(0.14, piePlot1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029267() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(0.08, piePlot1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029268() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertEquals(0.025, piePlot1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test029269() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelGenerator((PieSectionLabelGenerator) null);
        PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test030270() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030271() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
    }

    @Test(timeout = 4000)
    public void test030272() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test030273() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test030274() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030275() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030276() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030277() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030278() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030279() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030280() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test030281() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        BasicStroke basicStroke0 = (BasicStroke) piePlot0.getLabelLinkStroke();
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test031282() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelGap(885.034);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(885.034, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test031283() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelGap(885.034);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test032284() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032285() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test032286() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test032287() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032288() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032289() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032290() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032291() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032292() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test032293() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test032294() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.getBaseSectionOutlineStroke();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033295() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033296() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test033297() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test033298() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033299() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033300() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033301() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033302() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033303() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033304() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test033305() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        AbstractPieLabelDistributor abstractPieLabelDistributor0 = piePlot0.getLabelDistributor();
        piePlot0.setLabelDistributor(abstractPieLabelDistributor0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test034306() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034307() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034308() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test034309() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034310() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034311() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034312() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test034313() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034314() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test034315() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034316() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test034317() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.getLabelBackgroundPaint();
        assertEquals(255, color0.getGreen());
    }

    @Test(timeout = 4000)
    public void test035318() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035319() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035320() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035321() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035322() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035323() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0, color0.getBlue());
    }

    @Test(timeout = 4000)
    public void test035324() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035325() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test035326() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test035327() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test035328() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test035329() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) ringPlot0.getLabelPaint();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036330() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036331() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036332() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test036333() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036334() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036335() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036336() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test036337() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036338() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test036339() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test036340() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.getSectionPaint(1.0F);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037341() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037342() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037343() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037344() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037345() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test037346() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037347() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test037348() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037349() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test037350() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test037351() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.getLegendLabelToolTipGenerator();
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038352() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038353() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038354() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038355() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test038356() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038357() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038358() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038359() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038360() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test038361() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test038362() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDataset((PieDataset) null);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test039363() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039364() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039365() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test039366() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039367() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039368() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039369() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test039370() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039371() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test039372() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test039373() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDataset(defaultKeyedValuesDataset0);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test040374() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 90.0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test040375() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 90.0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test040376() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 90.0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test041377() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setDirection((Rotation) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'direction' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test042378() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setInteriorGap((-2878.6290433031));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Invalid 'percent' (-2878.6290433031) argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test043379() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setInteriorGap(0.0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test043380() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setInteriorGap(0.0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.0, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test044381() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setInteriorGap(383.1064851841069);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Invalid 'percent' (383.1064851841069) argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test045382() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045383() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test045384() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045385() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test045386() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test045387() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045388() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045389() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045390() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045391() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test045392() throws Throwable {
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        RingPlot ringPlot0 = new RingPlot(jDBCPieDataset0);
        ringPlot0.setInteriorGap(0.08);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046393() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046394() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046395() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046396() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test046397() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046398() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046399() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test046400() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test046401() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046402() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test046403() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test046404() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) 1.0E-5);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047405() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test047406() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test047407() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(15, comparable0);
    }

    @Test(timeout = 4000)
    public void test047408() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047409() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047410() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047411() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047412() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test047413() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047414() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047415() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047416() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test047417() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Comparable comparable0 = piePlot3D0.getSectionKey(15);
        assertNotNull(comparable0);
    }

    @Test(timeout = 4000)
    public void test048418() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertNotNull(comparable0);
    }

    @Test(timeout = 4000)
    public void test048419() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals((-3246), comparable0);
    }

    @Test(timeout = 4000)
    public void test048420() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048421() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048422() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test048423() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048424() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048425() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048426() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test048427() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048428() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test048429() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test048430() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey((-3246));
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049431() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049432() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertNotNull(comparable0);
    }

    @Test(timeout = 4000)
    public void test049433() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049434() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049435() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049436() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test049437() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0, comparable0);
    }

    @Test(timeout = 4000)
    public void test049438() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049439() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test049440() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049441() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049442() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test049443() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Comparable comparable0 = piePlot0.getSectionKey(0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test050444() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        // Undeclared exception!
        try {
            piePlot3D0.setBaseSectionPaint((Paint) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test051445() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051446() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test051447() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test051448() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051449() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(192, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test051450() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051451() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertNotNull(color0);
    }

    @Test(timeout = 4000)
    public void test051452() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051453() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051454() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051455() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051456() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test051457() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(0, true);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test052458() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test052459() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052460() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052461() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(128, color0.getRed());
    }

    @Test(timeout = 4000)
    public void test052462() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052463() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test052464() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052465() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertNotNull(color0);
    }

    @Test(timeout = 4000)
    public void test052466() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test052467() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052468() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052469() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test052470() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setDrawingSupplier((DrawingSupplier) null);
        Color color0 = (Color) ringPlot0.lookupSectionOutlinePaint(10, true);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053471() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053472() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053473() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test053474() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053475() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053476() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053477() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053478() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test053479() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test053480() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test053481() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setBaseSectionOutlinePaint(piePlot0.DEFAULT_BACKGROUND_PAINT);
        Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
        JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
        PiePlot3D piePlot3D1 = new PiePlot3D(jDBCPieDataset0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test054482() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setBaseSectionOutlinePaint((Paint) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test055483() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055484() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055485() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055486() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055487() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test055488() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055489() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055490() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055491() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test055492() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        piePlot3D0.setSectionOutlineStroke(10, piePlot3D0.DEFAULT_OUTLINE_STROKE);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot3D0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(76, 10, 10, chartRenderingInfo0);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test056493() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056494() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test056495() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test056496() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056497() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
    }

    @Test(timeout = 4000)
    public void test056498() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test056499() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056500() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056501() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056502() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056503() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test056504() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(0.4, true);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057505() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057506() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test057507() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test057508() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057509() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057510() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057511() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057512() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057513() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057514() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test057515() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setDrawingSupplier((DrawingSupplier) null);
        piePlot3D0.lookupSectionOutlineStroke(1, true);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test058516() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058517() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058518() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058519() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test058520() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058521() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test058522() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058523() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test058524() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058525() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test058526() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        BasicStroke basicStroke0 = (BasicStroke) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
        piePlot0.setBaseSectionOutlineStroke(basicStroke0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test059527() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        // Undeclared exception!
        try {
            piePlot3D0.setBaseSectionOutlineStroke((Stroke) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'stroke' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test060528() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test060529() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test060530() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060531() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060532() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060533() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060534() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test060535() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060536() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060537() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060538() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test060539() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setExplodePercent(1.0F, 1.0E-5);
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1.0F, 90.0);
        double double0 = ringPlot0.getExplodePercent(simpleHistogramBin0);
        assertEquals(1.0E-5, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test061540() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setExplodePercent((Comparable) null, 10);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'key' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test062541() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setLabelLinkPaint((Paint) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test063542() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063543() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063544() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063545() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063546() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063547() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063548() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test063549() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test063550() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test063551() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test063552() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        BasicStroke basicStroke0 = (BasicStroke) XYPlot.DEFAULT_CROSSHAIR_STROKE;
        ringPlot0.setLabelLinkStroke(basicStroke0);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test064553() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        // Undeclared exception!
        try {
            piePlot3D0.setLabelLinkStroke((Stroke) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'stroke' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test065554() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065555() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065556() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test065557() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065558() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065559() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test065560() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test065561() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065562() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065563() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065564() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test065565() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        piePlot3D0.setLabelFont(piePlot0.DEFAULT_LABEL_FONT);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test066566() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setLabelFont((Font) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'font' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test067567() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067568() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067569() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067570() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067571() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067572() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067573() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test067574() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067575() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test067576() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        Color color0 = (Color) JFreeChart.DEFAULT_BACKGROUND_PAINT;
        ringPlot0.setLabelPaint(color0);
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0, ringPlot1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test068577() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setLabelPaint((Paint) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test069578() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test069579() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069580() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test069581() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test069582() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069583() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069584() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069585() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069586() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069587() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test069588() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        ringPlot0.setLabelPadding(ringPlot0.DEFAULT_INSETS);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test070589() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setLabelPadding((RectangleInsets) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'padding' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test071590() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setSimpleLabelOffset((RectangleInsets) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'offset' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test072591() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        // Undeclared exception!
        try {
            piePlot3D0.setLabelDistributor((AbstractPieLabelDistributor) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'distributor' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test073592() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.setLegendItemShape((Shape) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'shape' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test074593() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074594() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074595() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074596() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074597() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074598() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test074599() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074600() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test074601() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074602() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test074603() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("[j?V:e.'bgqCJ-| ");
        piePlot3D0.setLegendLabelGenerator(standardPieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test075604() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        // Undeclared exception!
        try {
            piePlot3D0.setLegendLabelGenerator((PieSectionLabelGenerator) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'generator' argument.
            //
            verifyException("org.jfree.chart.plot.PiePlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test076605() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test076606() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076607() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076608() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test076609() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076610() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076611() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076612() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076613() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076614() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test076615() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        jFreeChart0.createBufferedImage(10, 10);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test077616() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077617() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077618() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077619() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077620() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077621() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077622() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test077623() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test077624() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077625() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test077626() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
        ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-177), 2, (-520602097), 185, (-177), 10, true, false, false, false, false, false);
        ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test078627() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test078628() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test078629() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D();
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 1.0E-5);
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        JFreeChart jFreeChart0 = new JFreeChart("", piePlot3D0.DEFAULT_LABEL_FONT, piePlot0, true);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079630() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079631() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079632() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test079633() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079634() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079635() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079636() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test079637() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079638() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test079639() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test079640() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080641() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080642() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080643() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080644() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080645() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test080646() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081647() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081648() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081649() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081650() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081651() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0, ringPlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test081652() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test081653() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081654() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(90.0, piePlotState0.getLatestAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081655() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081656() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertTrue(ringPlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test081657() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test081658() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        Rectangle rectangle0 = new Rectangle(10, 2146680635);
        RingPlot ringPlot0 = new RingPlot();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle0, piePlot0, (Integer) 0, plotRenderingInfo0);
        piePlot0.drawItem((Graphics2D) null, 0, rectangle0, piePlotState0, 10);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test082659() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
        piePlot3D0.drawItem(graphics2D0, 0, rectangle2D_Double0, piePlotState0, 255);
        assertEquals(Double.NaN, piePlotState0.getLatestAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test082660() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        PiePlotState piePlotState0 = new PiePlotState(plotRenderingInfo0);
        piePlot3D0.drawItem(graphics2D0, 0, rectangle2D_Double0, piePlotState0, 255);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083661() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083662() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083663() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083664() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083665() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083666() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test083667() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        piePlot3D0.setSectionOutlinesVisible(false);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test084668() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test084669() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test084670() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test084671() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test084672() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test084673() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, plotRenderingInfo0);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test085674() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSimpleLabels(true);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getSimpleLabels());
    }

    @Test(timeout = 4000)
    public void test086675() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test086676() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test086677() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test086678() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test086679() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test087680() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setIgnoreNullValues(true);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getIgnoreNullValues());
    }

    @Test(timeout = 4000)
    public void test088681() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.setIgnoreZeroValues(true);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getIgnoreZeroValues());
    }

    @Test(timeout = 4000)
    public void test089682() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0E-5, (Number) integer0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 2, 2);
        piePlot3D0.setIgnoreZeroValues(true);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertTrue(piePlot3D0.getIgnoreZeroValues());
    }

    @Test(timeout = 4000)
    public void test090683() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090684() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test090685() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090686() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090687() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090688() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test090689() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090690() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090691() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test090692() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test090693() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test090694() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test091695() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setIgnoreNullValues(true);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) null);
        piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getIgnoreNullValues());
    }

    @Test(timeout = 4000)
    public void test092696() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test092697() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092698() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test092699() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092700() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092701() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092702() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertTrue(ringPlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test092703() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092704() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092705() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test092706() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        LegendItemCollection legendItemCollection0 = ringPlot0.getLegendItems();
        assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test093707() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, piePlot3D0.ZERO);
        RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
        ringPlot0.setIgnoreZeroValues(true);
        ringPlot0.getLegendItems();
        assertTrue(ringPlot0.getIgnoreZeroValues());
    }

    @Test(timeout = 4000)
    public void test094708() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test094709() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094710() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094711() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094712() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test094713() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094714() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test094715() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094716() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094717() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test094718() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test094719() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 1.0F, (-1773.21));
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095720() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095721() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test095722() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test095723() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095724() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095725() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test095726() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test095727() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095728() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095729() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095730() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test095731() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
        piePlot3D0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 10);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096732() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertFalse(piePlot3D0.isCircular());
    }

    @Test(timeout = 4000)
    public void test096733() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096734() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096735() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096736() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096737() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096738() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test096739() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test096740() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096741() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test096742() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(1, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test096743() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.4, (Number) 1.0F);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        LegendItemCollection legendItemCollection0 = piePlot3D0.getLegendItems();
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test097744() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        // Undeclared exception!
        try {
            ringPlot0.getArcBounds((Rectangle2D) null, (Rectangle2D) null, 360.0, (-476.50970342568), 90.0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.awt.geom.Arc2D$Double", e);
        }
    }

    @Test(timeout = 4000)
    public void test098745() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 90.0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.setLabelLinksVisible(false);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test098746() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        defaultKeyedValuesDataset0.setValue((Comparable) 0.08, (Number) 1.0F);
        defaultKeyedValuesDataset0.setValue((Comparable) 10, (Number) 90.0);
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        piePlot3D0.setLabelLinksVisible(false);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        piePlot3D0.drawPie(graphics2D0, rectangle2D_Double0, (PlotRenderingInfo) null);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099747() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099748() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099749() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099750() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099751() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099752() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertTrue(ringPlot1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test099753() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099754() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099755() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test099756() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        boolean boolean0 = ringPlot1.equals(ringPlot0);
        assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100757() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test100758() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test100759() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100760() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100761() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test100762() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100763() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100764() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test100765() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100766() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100767() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test100768() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        boolean boolean0 = piePlot0.equals(piePlot0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101769() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101770() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test101771() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test101772() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101773() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101774() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101775() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test101776() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101777() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101778() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101779() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test101780() throws Throwable {
        PiePlot piePlot0 = new PiePlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("Null 'offset' argument.", "Null 'offset' argument.", "Null 'offset' argument.");
        boolean boolean0 = piePlot0.equals(standardPieURLGenerator0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test102781() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test102782() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setBackgroundPaint(piePlot3D0.DEFAULT_LABEL_PAINT);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test102783() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setBackgroundPaint(piePlot3D0.DEFAULT_LABEL_PAINT);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test103784() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setPieIndex(10);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(10, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test103785() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setPieIndex(10);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test104786() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104787() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(0, piePlot3D0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test104788() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertTrue(piePlot3D0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test104789() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104790() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test104791() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104792() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104793() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104794() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104795() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test104796() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        PiePlot3D piePlot3D0 = new PiePlot3D();
        boolean boolean0 = piePlot0.equals(piePlot3D0);
        assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test105797() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setStartAngle(0.4);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.4, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test105798() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setStartAngle(0.4);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test106799() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106800() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106801() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertTrue(piePlot3D1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test106802() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106803() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106804() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test106805() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106806() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106807() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test106808() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test106809() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test106810() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        Rotation rotation0 = Rotation.ANTICLOCKWISE;
        piePlot3D0.setDirection(rotation0);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test107811() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        ringPlot1.setIgnoreZeroValues(true);
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertTrue(ringPlot1.getIgnoreZeroValues());
    }

    @Test(timeout = 4000)
    public void test107812() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        ringPlot1.setIgnoreZeroValues(true);
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test108813() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setIgnoreNullValues(true);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertTrue(piePlot3D1.getIgnoreNullValues());
    }

    @Test(timeout = 4000)
    public void test108814() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setIgnoreNullValues(true);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test109815() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
        assertTrue(ringPlot1.equals((Object) ringPlot0));
    }

    @Test(timeout = 4000)
    public void test109816() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
        ringPlot1.setBaseSectionPaint(ringPlot0.DEFAULT_LABEL_BACKGROUND_PAINT);
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertFalse(ringPlot1.equals((Object) ringPlot0));
    }

    @Test(timeout = 4000)
    public void test109817() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
        ringPlot1.setBaseSectionPaint(ringPlot0.DEFAULT_LABEL_BACKGROUND_PAINT);
        boolean boolean0 = ringPlot0.equals(ringPlot1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test110818() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test110819() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setShadowXOffset(1.0F);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test111820() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test111821() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setExplodePercent(0.08, 3515.874746486);
        piePlot3D1.equals(piePlot3D0);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112822() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112823() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test112824() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertTrue(piePlot0.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test112825() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112826() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112827() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112828() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112829() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112830() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112831() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertTrue(piePlot0.isCircular());
    }

    @Test(timeout = 4000)
    public void test112832() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test112833() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        RingPlot ringPlot0 = new RingPlot();
        PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
        piePlot0.setLabelBackgroundPaint(ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
        boolean boolean0 = piePlot0.equals(ringPlot0);
        assertEquals(0, piePlot0.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test113834() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test113835() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setLabelShadowPaint(piePlot3D0.DEFAULT_LABEL_OUTLINE_PAINT);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test114836() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSimpleLabels(true);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D1.equals(piePlot3D0);
        assertTrue(piePlot3D0.getSimpleLabels());
    }

    @Test(timeout = 4000)
    public void test114837() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        piePlot3D0.setSimpleLabels(true);
        PiePlot3D piePlot3D1 = new PiePlot3D();
        boolean boolean0 = piePlot3D1.equals(piePlot3D0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test115838() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test115839() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setSimpleLabelOffset(piePlot3D0.DEFAULT_INSETS);
        boolean boolean0 = piePlot3D1.equals(piePlot3D0);
        assertFalse(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test115840() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setSimpleLabelOffset(piePlot3D0.DEFAULT_INSETS);
        boolean boolean0 = piePlot3D1.equals(piePlot3D0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test116841() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setMaximumLabelWidth(268.27572);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(268.27572, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test116842() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D1.setMaximumLabelWidth(268.27572);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test117843() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinkMargin(94.4082);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertEquals(94.4082, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test117844() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinkMargin(94.4082);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test118845() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinksVisible(false);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.getLabelLinksVisible());
    }

    @Test(timeout = 4000)
    public void test118846() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinksVisible(false);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test119847() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test119848() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinkPaint(piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test119849() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        piePlot3D1.setLabelLinkPaint(piePlot3D0.DEFAULT_LABEL_BACKGROUND_PAINT);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test120850() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test120851() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
        piePlot3D1.setURLGenerator(standardPieURLGenerator0);
        piePlot3D0.equals(piePlot3D1);
        assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test121852() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test121853() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = new PiePlot3D();
        piePlot3D0.setLegendItemShape(piePlot3D1.DEFAULT_LEGEND_ITEM_BOX);
        piePlot3D0.equals(piePlot3D1);
        assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test122854() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test122855() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        Locale locale0 = JComponent.getDefaultLocale();
        StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("2+D\".J?#UQ S#e3g~", locale0);
        piePlot3D1.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
        boolean boolean0 = piePlot3D0.equals(piePlot3D1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test123856() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        assertTrue(ringPlot1.equals((Object) ringPlot0));
    }

    @Test(timeout = 4000)
    public void test123857() throws Throwable {
        RingPlot ringPlot0 = new RingPlot();
        RingPlot ringPlot1 = new RingPlot();
        StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator("", "");
        ringPlot1.setLegendLabelURLGenerator(standardPieURLGenerator0);
        ringPlot0.equals(ringPlot1);
        assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124858() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test124859() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124860() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124861() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124862() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test124863() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test124864() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124865() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124866() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124867() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124868() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test124869() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test124870() throws Throwable {
        PiePlot3D piePlot3D0 = new PiePlot3D();
        PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
        piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertNotSame(piePlot3D1, piePlot3D0);
    }

    @Test(timeout = 4000)
    public void test125871() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.getSectionOutlinesVisible());
    }

    @Test(timeout = 4000)
    public void test125872() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125873() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125874() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertFalse(piePlot3D1.isCircular());
    }

    @Test(timeout = 4000)
    public void test125875() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125876() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125877() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0, piePlot3D1.getPieIndex());
    }

    @Test(timeout = 4000)
    public void test125878() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125879() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125880() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertNotSame(piePlot3D1, piePlot3D0);
    }

    @Test(timeout = 4000)
    public void test125881() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertTrue(piePlot3D1.equals((Object) piePlot3D0));
    }

    @Test(timeout = 4000)
    public void test125882() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
    }

    @Test(timeout = 4000)
    public void test125883() throws Throwable {
        DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
        PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
        CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
        piePlot3D0.setLegendLabelURLGenerator(customPieURLGenerator0);
        PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
        assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
    }
}
