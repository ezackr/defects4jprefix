/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:24:13 GMT 2024
 */
package org.jfree.data.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.time.chrono.ChronoLocalDate;
import java.time.temporal.TemporalField;
import java.util.List;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Second;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DefaultIntervalCategoryDataset_ESTest extends DefaultIntervalCategoryDataset_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[][] doubleArray0 = new double[14][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        int int0 = defaultIntervalCategoryDataset0.getColumnCount();
        assertEquals(14, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        double[][] doubleArray0 = new double[14][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        int int0 = defaultIntervalCategoryDataset0.getColumnCount();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[1] = "Null 'data'argument.";
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, stringArray0, numberArray0, numberArray0);
        assertEquals(2, defaultIntervalCategoryDataset0.getSeriesCount());
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[1] = "Null 'data'argument.";
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, stringArray0, numberArray0, numberArray0);
        defaultIntervalCategoryDataset0.getValue((Comparable) "Null 'data'argument.", (Comparable) "Null 'data'argument.");
        assertEquals(2, defaultIntervalCategoryDataset0.getCategoryCount());
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = (DefaultIntervalCategoryDataset) defaultIntervalCategoryDataset0.clone();
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertEquals(2, defaultIntervalCategoryDataset1.getRowCount());
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = (DefaultIntervalCategoryDataset) defaultIntervalCategoryDataset0.clone();
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertNotSame(defaultIntervalCategoryDataset1, defaultIntervalCategoryDataset0);
    }

    @Test(timeout = 4000)
    public void test026() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = (DefaultIntervalCategoryDataset) defaultIntervalCategoryDataset0.clone();
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        double[][] doubleArray0 = new double[23][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        int int0 = defaultIntervalCategoryDataset0.getRowIndex("oyIROdE-1WZWdi^UE");
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test038() throws Throwable {
        double[][] doubleArray0 = new double[23][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        int int0 = defaultIntervalCategoryDataset0.getRowIndex("oyIROdE-1WZWdi^UE");
        assertEquals(23, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test049() throws Throwable {
        double[][] doubleArray0 = new double[3][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getRowKey(9);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The 'row' argument is out of bounds.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        String[] stringArray0 = new String[4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getColumnKey(0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[0][5];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, (Number[][]) null);
        assertEquals(0, defaultIntervalCategoryDataset0.getCategoryCount());
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        double[][] doubleArray1 = new double[0][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
        try {
            defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset: the number of series in the start value dataset does not match the number of series in the end value dataset.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test0813() throws Throwable {
        double[][] doubleArray0 = new double[0][3];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        assertEquals(0, defaultIntervalCategoryDataset0.getSeriesCount());
    }

    @Test(timeout = 4000)
    public void test0814() throws Throwable {
        double[][] doubleArray0 = new double[0][3];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        int int0 = defaultIntervalCategoryDataset0.getCategoryCount();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test0915() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[8][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
        try {
            defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The number of series keys does not match the number of series in the data.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1016() throws Throwable {
        double[][] doubleArray0 = new double[1][8];
        double[][] doubleArray1 = new double[1][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
        try {
            defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        String[] stringArray0 = new String[1];
        Number[][] numberArray0 = new Number[1][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
        try {
            defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, stringArray0, numberArray0, numberArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The number of category keys does not match the number of categories in the data.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        Second second0 = new Second();
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setStartValue(0, second0, 0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: series outside valid range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getSeriesKey(967);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // No such series : 967
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        double[][] doubleArray0 = new double[15][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getSeriesKey((-491));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // No such series : -491
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1521() throws Throwable {
        double[][] doubleArray0 = new double[1][8];
        Integer integer0 = JLayeredPane.PALETTE_LAYER;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        defaultIntervalCategoryDataset0.indexOf(integer0);
        assertEquals(1, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test1622() throws Throwable {
        double[][] doubleArray0 = new double[3][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setSeriesKeys(comparableArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The number of series keys does not match the data.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        double[][] doubleArray0 = new double[16][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setSeriesKeys((Comparable[]) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'seriesKeys' argument.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        defaultIntervalCategoryDataset0.setSeriesKeys(stringArray0);
        assertEquals(2, defaultIntervalCategoryDataset0.getColumnCount());
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        int int0 = defaultIntervalCategoryDataset0.getCategoryCount();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        double[][] doubleArray0 = new double[9][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
        assertEquals(8, list0.size());
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        double[][] doubleArray0 = new double[9][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
        assertEquals(9, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        String[] stringArray0 = new String[4];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
        List list0 = defaultIntervalCategoryDataset0.getColumnKeys();
        assertEquals(0, list0.size());
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Comparable<TemporalField>[] comparableArray0 = (Comparable<TemporalField>[]) Array.newInstance(Comparable.class, 8);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setCategoryKeys(comparableArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setCategoryKeys(): null category not permitted.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2330() throws Throwable {
        Number[][] numberArray0 = new Number[3][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setCategoryKeys((Comparable[]) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'categoryKeys' argument.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2431() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setCategoryKeys(stringArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The number of categories does not match the data.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Second second0 = new Second();
        Comparable<TemporalField>[] comparableArray0 = (Comparable<TemporalField>[]) Array.newInstance(Comparable.class, 8);
        comparableArray0[0] = (Comparable<TemporalField>) second0;
        comparableArray0[1] = (Comparable<TemporalField>) second0;
        comparableArray0[2] = (Comparable<TemporalField>) second0;
        comparableArray0[3] = (Comparable<TemporalField>) second0;
        comparableArray0[4] = (Comparable<TemporalField>) second0;
        comparableArray0[5] = (Comparable<TemporalField>) second0;
        comparableArray0[6] = (Comparable<TemporalField>) second0;
        comparableArray0[7] = (Comparable<TemporalField>) second0;
        defaultIntervalCategoryDataset0.setCategoryKeys(comparableArray0);
        defaultIntervalCategoryDataset0.setStartValue(12, second0, 0);
        assertEquals(14, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Integer integer0 = JLayeredPane.PALETTE_LAYER;
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getValue((Comparable) integer0, (Comparable) integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'series' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2734() throws Throwable {
        String[] stringArray0 = new String[3];
        stringArray0[0] = "The number of categories does not match the data.";
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getValue((Comparable) "The number of categories does not match the data.", (Comparable) "The number of categories does not match the data.");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'category' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2835() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[1] = ").";
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue((Comparable) ").", (Comparable) ").");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'category' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test2936() throws Throwable {
        double[][] doubleArray0 = new double[3][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue((Comparable) integer0, (Comparable) integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'series' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[1] = ").";
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, stringArray0, numberArray0, numberArray0);
        Number number0 = defaultIntervalCategoryDataset0.getStartValue((Comparable) ").", (Comparable) ").");
        assertNull(number0);
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        double[][] doubleArray0 = new double[19][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue((-1), (-1));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): series index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        double[][] doubleArray0 = new double[13][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue(872, 872);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): series index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        double[][] doubleArray0 = new double[23][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue(9, (-1));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): category index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        double[][] doubleArray0 = new double[15][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getStartValue(9, 9);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): category index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3542() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[1] = "Null 'data'argument.";
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, stringArray0, numberArray0, numberArray0);
        defaultIntervalCategoryDataset0.getEndValue((Comparable) "Null 'data'argument.", (Comparable) "Null 'data'argument.");
        assertEquals(2, defaultIntervalCategoryDataset0.getCategoryCount());
    }

    @Test(timeout = 4000)
    public void test3643() throws Throwable {
        double[][] doubleArray0 = new double[10][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue((Comparable) integer0, (Comparable) integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'series' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3744() throws Throwable {
        String[] stringArray0 = new String[3];
        stringArray0[0] = "createInstance";
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue((Comparable) "createInstance", (Comparable) "createInstance");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Unknown 'category' key.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue((-1), (-1));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): series index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        double[][] doubleArray0 = new double[26][0];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue(120, 120);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): series index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4047() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue(0, (-1));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): category index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4148() throws Throwable {
        Number[][] numberArray0 = new Number[1][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getEndValue(0, (int) (short) 1896);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.getValue(): category index out of range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4249() throws Throwable {
        double[][] doubleArray0 = new double[3][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Integer integer0 = JLayeredPane.PALETTE_LAYER;
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setStartValue((-6), integer0, integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: series outside valid range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4350() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Second second0 = new Second();
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setStartValue(12, second0, 0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: unrecognised category.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4451() throws Throwable {
        double[][] doubleArray0 = new double[6][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        BigInteger bigInteger0 = BigInteger.TEN;
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setEndValue((-697), bigInteger0, bigInteger0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: series outside valid range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4552() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Second second0 = new Second();
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setEndValue(0, second0, 0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: unrecognised category.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4653() throws Throwable {
        double[][] doubleArray0 = new double[1][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        MockDate mockDate0 = new MockDate();
        Second second0 = new Second(mockDate0);
        Millisecond millisecond0 = new Millisecond((-71), second0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.setEndValue(59, millisecond0, 0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // DefaultIntervalCategoryDataset.setValue: series outside valid range.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4754() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Second second0 = new Second();
        Comparable<ChronoLocalDate>[] comparableArray0 = (Comparable<ChronoLocalDate>[]) Array.newInstance(Comparable.class, 8);
        comparableArray0[0] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[1] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[2] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[3] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[4] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[5] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[6] = (Comparable<ChronoLocalDate>) second0;
        comparableArray0[7] = (Comparable<ChronoLocalDate>) second0;
        defaultIntervalCategoryDataset0.setCategoryKeys(comparableArray0);
        defaultIntervalCategoryDataset0.setEndValue(0, second0, 0);
        assertEquals(2, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test4855() throws Throwable {
        double[][] doubleArray0 = new double[4][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getColumnIndex((Comparable) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'columnKey' argument.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test4956() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        List list0 = defaultIntervalCategoryDataset0.getRowKeys();
        assertEquals(2, defaultIntervalCategoryDataset0.getColumnCount());
    }

    @Test(timeout = 4000)
    public void test4957() throws Throwable {
        String[] stringArray0 = new String[3];
        Number[][] numberArray0 = new Number[3][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        List list0 = defaultIntervalCategoryDataset0.getRowKeys();
        assertEquals(3, list0.size());
    }

    @Test(timeout = 4000)
    public void test5058() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        List list0 = defaultIntervalCategoryDataset0.getRowKeys();
        assertEquals(0, list0.size());
    }

    @Test(timeout = 4000)
    public void test5159() throws Throwable {
        double[][] doubleArray0 = new double[14][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        // Undeclared exception!
        try {
            defaultIntervalCategoryDataset0.getRowKey((-2145));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The 'row' argument is out of bounds.
            //
            verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
        }
    }

    @Test(timeout = 4000)
    public void test5260() throws Throwable {
        Number[][] numberArray0 = new Number[6][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
        Comparable comparable0 = defaultIntervalCategoryDataset0.getRowKey((byte) 0);
        assertEquals(6, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test5261() throws Throwable {
        Number[][] numberArray0 = new Number[6][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
        Comparable comparable0 = defaultIntervalCategoryDataset0.getRowKey((byte) 0);
        assertEquals("Series 1", comparable0);
    }

    @Test(timeout = 4000)
    public void test5362() throws Throwable {
        String[] stringArray0 = new String[2];
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5363() throws Throwable {
        String[] stringArray0 = new String[2];
        Number[][] numberArray0 = new Number[2][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals((Object) null);
        assertEquals(2, defaultIntervalCategoryDataset0.getColumnCount());
    }

    @Test(timeout = 4000)
    public void test5464() throws Throwable {
        double[][] doubleArray0 = new double[6][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5465() throws Throwable {
        double[][] doubleArray0 = new double[6][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset0);
        assertEquals(6, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test5566() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        String[] stringArray0 = new String[11];
        Number[][] numberArray0 = new Number[0][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5567() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        String[] stringArray0 = new String[11];
        Number[][] numberArray0 = new Number[0][2];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(defaultIntervalCategoryDataset1.equals((Object) defaultIntervalCategoryDataset0));
    }

    @Test(timeout = 4000)
    public void test5668() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Number[][] numberArray0 = new Number[0][5];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5669() throws Throwable {
        double[][] doubleArray0 = new double[2][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Number[][] numberArray0 = new Number[0][5];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertEquals(2, defaultIntervalCategoryDataset0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test5770() throws Throwable {
        double[][] doubleArray0 = new double[1][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Number[][] numberArray0 = new Number[1][5];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5771() throws Throwable {
        double[][] doubleArray0 = new double[1][8];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        Number[][] numberArray0 = new Number[1][5];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertEquals(1, defaultIntervalCategoryDataset1.getRowCount());
    }

    @Test(timeout = 4000)
    public void test5872() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        double[][] doubleArray0 = new double[0][3];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(defaultIntervalCategoryDataset1.equals((Object) defaultIntervalCategoryDataset0));
    }

    @Test(timeout = 4000)
    public void test5873() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        double[][] doubleArray0 = new double[0][3];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5974() throws Throwable {
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
        String[] stringArray0 = new String[1];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
        boolean boolean0 = defaultIntervalCategoryDataset0.equals(defaultIntervalCategoryDataset1);
        assertTrue(boolean0);
    }
}
