/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 21:43:31 GMT 2024
 */
package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.image.BufferedImage;
import javax.swing.Icon;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class MinMaxCategoryRenderer_ESTest extends MinMaxCategoryRenderer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
        minMaxCategoryRenderer0.setMaxIcon(icon0);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Icon icon0 = minMaxCategoryRenderer0.getObjectIcon();
        minMaxCategoryRenderer0.setObjectIcon(icon0);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Color color0 = (Color) minMaxCategoryRenderer0.getGroupPaint();
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Color color0 = (Color) minMaxCategoryRenderer0.getGroupPaint();
        assertEquals(0, color0.getBlue());
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        boolean boolean0 = minMaxCategoryRenderer0.isDrawLines();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        minMaxCategoryRenderer0.getMaxIcon();
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BasicStroke basicStroke0 = (BasicStroke) minMaxCategoryRenderer0.getGroupStroke();
        assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BasicStroke basicStroke0 = (BasicStroke) minMaxCategoryRenderer0.getGroupStroke();
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        minMaxCategoryRenderer0.setDrawLines(false);
        assertTrue(minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        minMaxCategoryRenderer0.setGroupPaint(minMaxCategoryRenderer0.DEFAULT_PAINT);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.setGroupPaint((Paint) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BasicStroke basicStroke0 = (BasicStroke) AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        minMaxCategoryRenderer0.setGroupStroke(basicStroke0);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.setGroupStroke((Stroke) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'stroke' argument.
            //
            verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.setObjectIcon((Icon) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'icon' argument.
            //
            verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.setMaxIcon((Icon) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'icon' argument.
            //
            verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
        minMaxCategoryRenderer0.setMinIcon(icon0);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.setMinIcon((Icon) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'icon' argument.
            //
            verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        Number[][] numberArray0 = new Number[32][1];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
        minMaxCategoryRenderer0.drawItem(graphics2D0, (CategoryItemRendererState) null, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, 10);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Number[][] numberArray0 = new Number[1][2];
        Number[] numberArray1 = new Number[1];
        numberArray1[0] = (Number) 10;
        numberArray0[0] = numberArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, 10);
        double[][] doubleArray0 = new double[4][7];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset1, 0, 0, 2);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Number[][] numberArray0 = new Number[7][2];
        Number[] numberArray1 = new Number[3];
        numberArray1[0] = (Number) 0;
        numberArray0[0] = numberArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, 0);
        double[][] doubleArray0 = new double[1][7];
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = (double) 10;
        doubleArray0[0] = doubleArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset1 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset1, 0, 0, 0);
        assertEquals(10.0, cyclicNumberAxis0.getPeriod(), 0.01);
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Number[][] numberArray0 = new Number[7][2];
        Number[] numberArray1 = new Number[3];
        numberArray1[0] = (Number) 0;
        numberArray0[0] = numberArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        minMaxCategoryRenderer0.setDrawLines(true);
        CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, 0);
        assertTrue(minMaxCategoryRenderer0.isDrawLines());
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
        Graphics2D graphics2D0 = bufferedImage0.createGraphics();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Number[][] numberArray0 = new Number[1][2];
        Number[] numberArray1 = new Number[4];
        numberArray1[0] = (Number) 10;
        numberArray0[0] = numberArray1;
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-67.28785175));
        CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
        CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        minMaxCategoryRenderer0.drawItem(graphics2D0, categoryItemRendererState0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 0, 0, 0);
        assertFalse(minMaxCategoryRenderer0.isDrawLines());
    }
}
