/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 20:44:45 GMT 2024
 */
package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.GeneralPath;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.FlowArrangement;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.HorizontalAlignment;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.VerticalAlignment;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
        ganttRenderer0.setSeriesItemLabelGenerator(2539, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
        assertFalse(ganttRenderer0.getAutoPopulateSeriesFillPaint());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getBaseToolTipGenerator();
        assertNull(categoryToolTipGenerator0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
        defaultCategoryDataset0.setValue(440.769134061, (Comparable) 0.2, (Comparable) stackedBarRenderer3D0.ZERO);
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
        DateAxis dateAxis0 = new DateAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, subCategoryAxis0, dateAxis0, stackedBarRenderer3D0);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        // Undeclared exception!
        jFreeChart0.createBufferedImage(200, 500, chartRenderingInfo0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'paint' argument.");
        DateAxis dateAxis0 = new DateAxis("Null 'paint' argument.");
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, dateAxis0, layeredBarRenderer0);
        JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", categoryPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        jFreeChart0.createBufferedImage(155, 155, chartRenderingInfo0);
        assertEquals(0.0, dateAxis0.getLowerBound(), 0.01);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        boolean boolean0 = minMaxCategoryRenderer0.removeAnnotation((CategoryAnnotation) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        ganttRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
        GanttRenderer ganttRenderer1 = (GanttRenderer) ganttRenderer0.clone();
        assertFalse(ganttRenderer1.getIncludeBaseInRange());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        DefaultCaret defaultCaret0 = new DefaultCaret();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
        CategoryAxis categoryAxis0 = new CategoryAxis();
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
        DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
        // Undeclared exception!
        try {
            statisticalBarRenderer0.drawVerticalItem((Graphics2D) null, categoryStepRenderer_State0, defaultCaret0, combinedRangeCategoryPlot0, categoryAxis0, numberAxis3D0, defaultStatisticalCategoryDataset0, 305, 0, 14, false);
            fail("Expecting exception: IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            //
            // Index: 0, Size: 0
            //
            verifyException("java.util.ArrayList", e);
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("cB''hy7TA+zgl$t`");
        Number[][] numberArray0 = new Number[1][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        GeneralPath generalPath0 = new GeneralPath();
        Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
        RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
        // Undeclared exception!
        try {
            intervalBarRenderer0.getItemMiddle(0.0, 10, defaultIntervalCategoryDataset0, extendedCategoryAxis0, rectangle2D0, rectangleEdge0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Invalid category index: -1
            //
            verifyException("org.jfree.chart.axis.CategoryAxis", e);
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.hashCode();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
        assertNull(categoryURLGenerator0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        ScatterRenderer scatterRenderer0 = new ScatterRenderer();
        scatterRenderer0.removeAnnotations();
        assertEquals(2.0, scatterRenderer0.getItemLabelAnchorOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = layeredBarRenderer0.getLegendItemURLGenerator();
        assertNull(categorySeriesLabelGenerator0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        assertNull(categoryItemLabelGenerator0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        layeredBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        boolean boolean0 = layeredBarRenderer0.equals(ganttRenderer0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("c3kXhy7TA+zb~;t");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, "c3kXhy7TA+zb~;t");
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
        CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
        // Undeclared exception!
        try {
            waterfallBarRenderer0.createHotSpotShape((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, extendedCategoryAxis0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 2833, 0, false, categoryItemRendererState0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // Not implemented.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        CategoryItemLabelGenerator categoryItemLabelGenerator0 = intervalBarRenderer0.getBaseItemLabelGenerator();
        assertNull(categoryItemLabelGenerator0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator((-1));
        assertNull(categoryURLGenerator0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
        CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
        assertNull(categorySeriesLabelGenerator0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
        intervalBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) customCategoryURLGenerator0);
        assertFalse(intervalBarRenderer0.getAutoPopulateSeriesFillPaint());
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        // Undeclared exception!
        try {
            layeredBarRenderer0.setPlot((CategoryPlot) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'plot' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.setSeriesItemLabelGenerator(1312, (CategoryItemLabelGenerator) null, false);
        assertTrue(layeredBarRenderer0.getShadowsVisible());
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
        assertEquals(0.65, ganttRenderer0.getEndPercent(), 0.01);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
        statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(14, (CategoryToolTipGenerator) null, false);
        assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
        LayeredBarRenderer layeredBarRenderer1 = (LayeredBarRenderer) layeredBarRenderer0.clone();
        assertEquals(3.0, BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD, 0.01);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        intervalBarRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) null, false);
        assertFalse(intervalBarRenderer0.getBaseItemLabelsVisible());
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
        assertTrue(layeredBarRenderer0.getBaseCreateEntities());
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Layer layer0 = Layer.BACKGROUND;
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'annotation' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
        StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
        stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
        assertEquals(12.0, BarRenderer3D.DEFAULT_X_OFFSET, 0.01);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
        // Undeclared exception!
        try {
            stackedBarRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'generator' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        DefaultCaret defaultCaret0 = new DefaultCaret();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
        // Undeclared exception!
        try {
            boxAndWhiskerRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        LevelRenderer levelRenderer0 = new LevelRenderer();
        // Undeclared exception!
        try {
            levelRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Negative 'index'.
            //
            verifyException("org.jfree.chart.plot.CategoryPlot", e);
        }
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        LevelRenderer levelRenderer0 = new LevelRenderer();
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
        NumberAxis numberAxis0 = new NumberAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, numberAxis0, levelRenderer0);
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
        // Undeclared exception!
        try {
            levelRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, categoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) null);
        assertNull(range0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        Number[][] numberArray0 = new Number[1][9];
        groupedStackedBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        Range range0 = groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        assertNull(range0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        Number[][] numberArray0 = new Number[1][9];
        DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
        Range range0 = groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
        assertNull(range0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        // Undeclared exception!
        try {
            waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, defaultCaret0, 0, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        // Undeclared exception!
        try {
            waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, defaultCaret0, 0, (Paint) null, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'paint' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        // Undeclared exception!
        try {
            waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, defaultCaret0, 500, minMaxCategoryRenderer0.DEFAULT_PAINT, (Stroke) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'stroke' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        // Undeclared exception!
        try {
            waterfallBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, defaultCaret0, 0.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        Rectangle rectangle0 = new Rectangle(10, 10, 10, 10);
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        waterfallBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle0, 2.0F, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("c3kXhy7TA+zb~;t");
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
        DefaultCaret defaultCaret0 = new DefaultCaret();
        DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
        SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 10, 0);
        CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, "c3kXhy7TA+zb~;t");
        CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
        ganttRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, defaultCaret0);
        assertEquals(2.0F, Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH, 0.01F);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        LogAxis logAxis0 = new LogAxis("Null 'annotation' argument.");
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, (-1.0), combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
        waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, defaultCaret0);
        assertTrue(waterfallBarRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ValueMarker valueMarker0 = new ValueMarker(1.0F);
        // Undeclared exception!
        try {
            waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, defaultCaret0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        DefaultCaret defaultCaret0 = new DefaultCaret();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ValueMarker valueMarker0 = new ValueMarker(3.0);
        waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, valueMarker0, defaultCaret0);
        assertTrue(numberAxis3D0.getAutoRangeIncludesZero());
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        intervalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, (Marker) null, defaultCaret0);
        assertTrue(combinedDomainCategoryPlot0.isRangeGridlinesVisible());
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3.0, (double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, 4.0);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        JFreeChart jFreeChart0 = new JFreeChart("LY lfOvg", thermometerPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 3, (-5255.2), chartRenderingInfo0);
        BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
        Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
        LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.2, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE, 0);
        DateAxis dateAxis0 = new DateAxis();
        lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Double0);
        assertFalse(lineRenderer3D0.getAutoPopulateSeriesOutlinePaint());
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-248.0), (double) ganttRenderer0.ZERO, 4.0, 4.0);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        JFreeChart jFreeChart0 = new JFreeChart("L lfOvg", thermometerPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 3, (-5255.2), chartRenderingInfo0);
        BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
        Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
        LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker((-2025.11700391006), 1.0F, lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
        DateAxis dateAxis0 = new DateAxis();
        lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Double0);
        assertFalse(dateAxis0.isMinorTickMarksVisible());
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3.0, (double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, 4.0);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        JFreeChart jFreeChart0 = new JFreeChart("LY lfOvg", thermometerPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 3, (-5255.2), chartRenderingInfo0);
        BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
        Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
        LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        IntervalMarker intervalMarker0 = new IntervalMarker((-2025.11700391), 10);
        DateAxis dateAxis0 = new DateAxis();
        lineRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Double0);
        assertTrue(lineRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3.0, (double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, 4.0);
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
        JFreeChart jFreeChart0 = new JFreeChart("LY lfOvg", thermometerPlot0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, (double) 3, (-5255.2), chartRenderingInfo0);
        BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
        Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
        HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
        VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
        FlowArrangement flowArrangement0 = new FlowArrangement(horizontalAlignment0, verticalAlignment0, 0.0, 3.0);
        LegendTitle legendTitle0 = new LegendTitle(ganttRenderer0, flowArrangement0, flowArrangement0);
        RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
        Point2D.Double point2D_Double0 = (Point2D.Double) ganttRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        assertEquals(2.0, point2D_Double0.y, 0.01);
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(3.0, 0.0, 0.0, 0.0);
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        Point2D.Double point2D_Double0 = (Point2D.Double) ganttRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
        assertEquals(11.0, point2D_Double0.x, 0.01);
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) groupedStackedBarRenderer0.ZERO, (double) groupedStackedBarRenderer0.ZERO, 3.0, 3.0);
        Crosshair crosshair0 = new Crosshair(0.2);
        RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        // Undeclared exception!
        try {
            ganttRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.util.RectangleAnchor", e);
        }
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
        LevelRenderer levelRenderer0 = new LevelRenderer();
        LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
        // Undeclared exception!
        try {
            levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Double0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.util.RectangleAnchor", e);
        }
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
        // Undeclared exception!
        try {
            groupedStackedBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
        Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
        ThermometerPlot thermometerPlot0 = new ThermometerPlot();
        PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
        RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
        Point2D.Double point2D_Double0 = (Point2D.Double) ganttRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, thermometerPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
        assertEquals((-8.0), point2D_Double0.x, 0.01);
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
        // Undeclared exception!
        try {
            minMaxCategoryRenderer0.getLegendItem(10, 10);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'dataset' argument.
            //
            verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
        }
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
        LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(10, 15);
        assertNull(legendItem0);
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
        layeredBarRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertTrue(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test5859() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
        layeredBarRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5960() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        assertTrue(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test5961() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
        layeredBarRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6062() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        assertTrue(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test6063() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
        layeredBarRenderer1.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6164() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer1.ZERO, layeredBarRenderer0.ZERO, 0.2, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer1.DEFAULT_STROKE);
        assertTrue(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test6165() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer1.ZERO, layeredBarRenderer0.ZERO, 0.2, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer1.DEFAULT_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        layeredBarRenderer1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test6166() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) layeredBarRenderer1.ZERO, layeredBarRenderer0.ZERO, 0.2, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer1.DEFAULT_STROKE);
        Layer layer0 = Layer.BACKGROUND;
        layeredBarRenderer1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6267() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        assertTrue(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test6268() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 3.0, 0.2, 0.2);
        layeredBarRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(layeredBarRenderer1.equals((Object) layeredBarRenderer0));
    }

    @Test(timeout = 4000)
    public void test6269() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LayeredBarRenderer layeredBarRenderer1 = new LayeredBarRenderer();
        CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 3.0, 0.2, 0.2);
        layeredBarRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
        boolean boolean0 = layeredBarRenderer0.equals(layeredBarRenderer1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6370() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) layeredBarRenderer0.lookupSeriesShape(10);
        assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
    }

    @Test(timeout = 4000)
    public void test6471() throws Throwable {
        BarRenderer3D barRenderer3D0 = new BarRenderer3D();
        CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        // Undeclared exception!
        try {
            barRenderer3D0.updateCrosshairValues(categoryCrosshairState0, statisticalBarRenderer0.ZERO, statisticalBarRenderer0.ZERO, 12.0, 3, 0.2, (-1.0), (PlotOrientation) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'orientation' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6572() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
        stackedBarRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 5.0, 10.0, 10.0, 3, 3.0, 30.0, plotOrientation0);
        assertEquals(8.0, stackedBarRenderer3D0.getYOffset(), 0.01);
    }

    @Test(timeout = 4000)
    public void test6673() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
        StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
        DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("B94@$$d*yA`|m>)a/");
        DateAxis dateAxis0 = new DateAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, subCategoryAxis0, dateAxis0, stackedBarRenderer3D0);
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, 0.05, dateAxis0.DEFAULT_ANCHOR_DATE, 0.2, 10, (double) statisticalBarRenderer0.ZERO, 1.0F, plotOrientation0);
        assertFalse(dateAxis0.isNegativeArrowVisible());
    }

    @Test(timeout = 4000)
    public void test6774() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        groupedStackedBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, (-1272), (-1272), true, (-1272), (-1272), true);
        assertEquals(0, groupedStackedBarRenderer0.getRowCount());
    }

    @Test(timeout = 4000)
    public void test6875() throws Throwable {
        GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
        IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
        groupedStackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
        PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        // Undeclared exception!
        try {
            groupedStackedBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultBoxAndWhiskerCategoryDataset0, (-7), (-7), true, (-7), (-7), true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test6976() throws Throwable {
        StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
        DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
        SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
        DateAxis dateAxis0 = new DateAxis();
        CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, subCategoryAxis0, dateAxis0, stackedBarRenderer3D0);
        JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
        CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (-2138.196726573849), 0.0F, 0.05, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
        Layer layer0 = Layer.FOREGROUND;
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        // Undeclared exception!
        try {
            jFreeChart0.createBufferedImage(200, 500, chartRenderingInfo0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Invalid category index: -1
            //
            verifyException("org.jfree.chart.axis.CategoryAxis", e);
        }
    }

    @Test(timeout = 4000)
    public void test7077() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
        ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
        GanttRenderer ganttRenderer1 = (GanttRenderer) ganttRenderer0.clone();
        assertFalse(ganttRenderer1.getBaseItemLabelsVisible());
    }

    @Test(timeout = 4000)
    public void test7178() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
        ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
        GanttRenderer ganttRenderer1 = (GanttRenderer) ganttRenderer0.clone();
        assertEquals(0, ganttRenderer1.getColumnCount());
    }

    @Test(timeout = 4000)
    public void test7279() throws Throwable {
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
        intervalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
        try {
            intervalBarRenderer0.clone();
            fail("Expecting exception: CloneNotSupportedException");
        } catch (CloneNotSupportedException e) {
            //
            // Base item URL generator not cloneable.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test7380() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("Unrecognised type.");
        ganttRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
        GanttRenderer ganttRenderer1 = (GanttRenderer) ganttRenderer0.clone();
        assertEquals(0.65, ganttRenderer1.getEndPercent(), 0.01);
    }

    @Test(timeout = 4000)
    public void test7481() throws Throwable {
        GanttRenderer ganttRenderer0 = new GanttRenderer();
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        ValueAxis valueAxis0 = ganttRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
        assertEquals(0.0, valueAxis0.getFixedDimension(), 0.01);
    }

    @Test(timeout = 4000)
    public void test7582() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
        ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
        assertNull(valueAxis0);
    }

    @Test(timeout = 4000)
    public void test7683() throws Throwable {
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        LegendItemCollection legendItemCollection0 = layeredBarRenderer0.getLegendItems();
        assertEquals(0, legendItemCollection0.getItemCount());
    }

    @Test(timeout = 4000)
    public void test7784() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.setPlot(combinedRangeCategoryPlot0);
        // Undeclared exception!
        try {
            layeredBarRenderer0.getLegendItems();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test7885() throws Throwable {
        WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        // Undeclared exception!
        try {
            waterfallBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, taskSeriesCollection0, 299, 299, false);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Null 'hotspot' argument.
            //
            verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
        }
    }

    @Test(timeout = 4000)
    public void test7986() throws Throwable {
        DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        layeredBarRenderer0.setPlot(combinedDomainCategoryPlot0);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        // Undeclared exception!
        try {
            layeredBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 10, 10, false, 10, 1.0F);
            fail("Expecting exception: IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            //
            // Index: 10, Size: 0
            //
            verifyException("java.util.ArrayList", e);
        }
    }

    @Test(timeout = 4000)
    public void test8087() throws Throwable {
        CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
        IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
        LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
        layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
        StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
        TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
        SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-3706), (-3706));
        // Undeclared exception!
        try {
            layeredBarRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, slidingGanttCategoryDataset0, (-3706), 16777215, false, 1.0E-100, 10);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test8188() throws Throwable {
        CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
        DefaultCaret defaultCaret0 = new DefaultCaret();
        NumberAxis3D numberAxis3D0 = new NumberAxis3D();
        ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
        PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
        CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
        IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
        CategoryAxis categoryAxis0 = new CategoryAxis();
        boolean boolean0 = intervalBarRenderer0.hitTest((-0.09406856856318867), 1.0E-8, (Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis0, numberAxis3D0, (CategoryDataset) null, (-4172), 0, false, categoryStepRenderer_State0);
        assertFalse(boolean0);
    }
}
