/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 22:41:24 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.StdValueInstantiator;
import com.fasterxml.jackson.databind.introspect.BasicBeanDescription;
import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.MapLikeType;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import java.lang.reflect.InvocationTargetException;
import java.sql.DataTruncation;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLNonTransientConnectionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdValueInstantiator_ESTest extends StdValueInstantiator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getDelegateType((DeserializationConfig) null);
        assertEquals("com.fasterxml.jackson.databind.JsonMappingException", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
        ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) placeholderForType0);
        assertNotNull(objectReader0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createUsingArrayDelegate((DeserializationContext) null, class0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // No delegate constructor for com.fasterxml.jackson.databind.deser.CreatorProperty
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Class<ExceptionInInitializerError> class0 = ExceptionInInitializerError.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getDelegateCreator();
        assertEquals("java.lang.ExceptionInInitializerError", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getArrayDelegateCreator();
        assertEquals("com.fasterxml.jackson.databind.JsonMappingException", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Class<ExceptionInInitializerError> class0 = ExceptionInInitializerError.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromInt((DeserializationContext) null, 0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Class<Object> class0 = Object.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getFromObjectArguments((DeserializationConfig) null);
        assertEquals("java.lang.Object", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        StdValueInstantiator stdValueInstantiator0 = null;
        try {
            stdValueInstantiator0 = new StdValueInstantiator((StdValueInstantiator) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Class<String> class0 = String.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getArrayDelegateType((DeserializationConfig) null);
        assertEquals("java.lang.String", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Class<InvocationTargetException> class0 = InvocationTargetException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getDefaultCreator();
        assertEquals("java.lang.reflect.InvocationTargetException", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Class<Module> class0 = Module.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        stdValueInstantiator0.getWithArgsCreator();
        assertEquals("com.fasterxml.jackson.databind.Module", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, (Class<?>) null);
        assertEquals("UNKNOWN TYPE", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, (JavaType) null);
        assertEquals("UNKNOWN TYPE", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        boolean boolean0 = stdValueInstantiator0.canInstantiate();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        boolean boolean0 = stdValueInstantiator0.canInstantiate();
        assertEquals("com.fasterxml.jackson.databind.JsonMappingException", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType((-3054));
        stdValueInstantiator0._delegateType = (JavaType) placeholderForType0;
        boolean boolean0 = stdValueInstantiator0.canInstantiate();
        assertTrue(stdValueInstantiator0.canCreateUsingDelegate());
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType((-3054));
        stdValueInstantiator0._delegateType = (JavaType) placeholderForType0;
        boolean boolean0 = stdValueInstantiator0.canInstantiate();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Class<TypeIdResolver> class0 = TypeIdResolver.class;
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, resolvedRecursiveType0);
        stdValueInstantiator0._arrayDelegateType = (JavaType) resolvedRecursiveType0;
        boolean boolean0 = stdValueInstantiator0.canCreateUsingArrayDelegate();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Class<MapLikeType> class0 = MapLikeType.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createUsingDefault((DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        Object[] objectArray0 = new Object[8];
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromObjectWith((DeserializationContext) null, objectArray0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createUsingDelegate((DeserializationContext) null, class0);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // No delegate constructor for java.lang.Integer
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromString((DeserializationContext) null, (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        Class<ExceptionInInitializerError> class0 = ExceptionInInitializerError.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromLong((DeserializationContext) null, (-98L));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromDouble((DeserializationContext) null, (-1014.3146));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.createFromBoolean((DeserializationContext) null, true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.ValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        Class<Integer> class0 = Integer.TYPE;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();
        stdValueInstantiator0.wrapException(sQLNonTransientConnectionException0);
        assertEquals("int", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "No delegate constructor for ");
        JsonMappingException jsonMappingException1 = stdValueInstantiator0.wrapException(jsonMappingException0);
        assertSame(jsonMappingException1, jsonMappingException0);
    }

    @Test(timeout = 4000)
    public void test2427() throws Throwable {
        Class<JsonMappingException> class0 = JsonMappingException.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "No delegate constructor for ");
        JsonMappingException jsonMappingException1 = stdValueInstantiator0.wrapException(jsonMappingException0);
        assertEquals("com.fasterxml.jackson.databind.JsonMappingException", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test2528() throws Throwable {
        Class<TextNode> class0 = TextNode.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.unwrapAndWrapException((DeserializationContext) null, (Throwable) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        Class<MapLikeType> class0 = MapLikeType.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, "com.fasterxml.jackson.databind.node.ArrayNode");
        InvocationTargetException invocationTargetException0 = new InvocationTargetException(jsonMappingException0);
        stdValueInstantiator0.unwrapAndWrapException((DeserializationContext) null, invocationTargetException0);
        assertEquals("com.fasterxml.jackson.databind.type.MapLikeType", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        Class<TextNode> class0 = TextNode.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("Fe>mA,2!vuul", "Fe>mA,2!vuul");
        JsonMappingException jsonMappingException0 = stdValueInstantiator0.rewrapCtorProblem(defaultDeserializationContext_Impl0, sQLIntegrityConstraintViolationException0);
        JsonMappingException jsonMappingException1 = stdValueInstantiator0.rewrapCtorProblem(defaultDeserializationContext_Impl0, jsonMappingException0);
        assertSame(jsonMappingException1, jsonMappingException0);
    }

    @Test(timeout = 4000)
    public void test2731() throws Throwable {
        Class<TextNode> class0 = TextNode.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("Fe>mA,2!vuul", "Fe>mA,2!vuul");
        JsonMappingException jsonMappingException0 = stdValueInstantiator0.rewrapCtorProblem(defaultDeserializationContext_Impl0, sQLIntegrityConstraintViolationException0);
        JsonMappingException jsonMappingException1 = stdValueInstantiator0.rewrapCtorProblem(defaultDeserializationContext_Impl0, jsonMappingException0);
        assertEquals("com.fasterxml.jackson.databind.node.TextNode", stdValueInstantiator0.getValueTypeDesc());
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        Class<BasicBeanDescription> class0 = BasicBeanDescription.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        ExceptionInInitializerError exceptionInInitializerError0 = new ExceptionInInitializerError();
        // Undeclared exception!
        try {
            stdValueInstantiator0.rewrapCtorProblem((DeserializationContext) null, exceptionInInitializerError0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        Class<CreatorProperty> class0 = CreatorProperty.class;
        StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
        DataTruncation dataTruncation0 = new DataTruncation((-3009), false, false, (-3009), (-3009));
        InvocationTargetException invocationTargetException0 = new InvocationTargetException(dataTruncation0);
        // Undeclared exception!
        try {
            stdValueInstantiator0.rewrapCtorProblem((DeserializationContext) null, invocationTargetException0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdValueInstantiator", e);
        }
    }
}
