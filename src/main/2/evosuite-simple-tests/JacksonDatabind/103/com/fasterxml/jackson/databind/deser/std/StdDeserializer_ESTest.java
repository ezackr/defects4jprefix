/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 23:41:07 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonEncoding;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.KeyDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
import com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer;
import com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer;
import com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
import com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.node.BinaryNode;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import java.io.InputStream;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
        String string0 = numberDeserializers_LongDeserializer0._coercedTypeDesc();
        assertEquals("for type `java.lang.Long`", string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        // Undeclared exception!
        try {
            numberDeserializers_FloatDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "52=4$`%?$+g:M3Asa");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Converter<BeanDeserializer, BinaryNode> converter0 = (Converter<BeanDeserializer, BinaryNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._hasTextualNull(" rG4A^SMDV");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Converter<BuilderBasedDeserializer, Integer> converter0 = (Converter<BuilderBasedDeserializer, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<Integer>(stdDelegatingDeserializer0);
        assertEquals(AccessPattern.DYNAMIC, stdDelegatingDeserializer1.getEmptyAccessPattern());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
        double double0 = numberDeserializers_LongDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "NaN");
        assertEquals(Double.NaN, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
        JsonFactory jsonFactory0 = new JsonFactory();
        char[] charArray0 = new char[0];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (-15), (-15));
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>((Converter<?, PropertyName>) null);
        JsonFactory jsonFactory0 = new JsonFactory();
        char[] charArray0 = new char[0];
        JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._failDoubleToIntCoercion(jsonParser0, defaultDeserializationContext_Impl0, (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Converter<BuilderBasedDeserializer, Integer> converter0 = (Converter<BuilderBasedDeserializer, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
        Class<?> class0 = stdDelegatingDeserializer0.getValueClass();
        assertEquals("class java.lang.Object", class0.toString());
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        UUIDDeserializer uUIDDeserializer0 = new UUIDDeserializer();
        boolean boolean0 = uUIDDeserializer0.isDefaultKeyDeserializer((KeyDeserializer) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
        boolean boolean0 = numberDeserializers_FloatDeserializer0.isDefaultDeserializer(numberDeserializers_BooleanDeserializer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;
        ObjectReader objectReader0 = objectMapper0.readerFor(class0);
        assertNotNull(objectReader0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        AtomicBooleanDeserializer atomicBooleanDeserializer0 = new AtomicBooleanDeserializer();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        // Undeclared exception!
        try {
            atomicBooleanDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        Converter<SettableBeanProperty, BeanDeserializer> converter0 = (Converter<SettableBeanProperty, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseBytePrimitive(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        // Undeclared exception!
        try {
            numberDeserializers_FloatDeserializer0._parseIntPrimitive(defaultDeserializationContext_Impl0, "=`e/hpHy_");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>((Converter<?, PropertyName>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseIntPrimitive((DeserializationContext) null, "ddPXV#{C0@<uY6B>");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.BigDecimalDeserializer numberDeserializers_BigDecimalDeserializer0 = NumberDeserializers.BigDecimalDeserializer.instance;
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);
        // Undeclared exception!
        try {
            numberDeserializers_BigDecimalDeserializer0._parseLongPrimitive(filteringParserDelegate0, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        Short short0 = new Short((short) (-5279));
        Class<Short> class0 = Short.TYPE;
        NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);
        // Undeclared exception!
        try {
            numberDeserializers_ShortDeserializer0._parseFloatPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
        float float0 = stdDelegatingDeserializer0._parseFloatPrimitive((DeserializationContext) null, "-Infinity");
        assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        AtomicBooleanDeserializer atomicBooleanDeserializer0 = new AtomicBooleanDeserializer();
        float float0 = atomicBooleanDeserializer0._parseFloatPrimitive((DeserializationContext) null, "INF");
        assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseFloatPrimitive((DeserializationContext) null, "emg");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Converter<Double, Short> converter0 = (Converter<Double, Short>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>(converter0);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "IGNORE_UNDEFINED");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>((Converter<?, Short>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseFloatPrimitive((DeserializationContext) null, "-QbVS[R>DF");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) (-37);
        byteArray0[2] = (byte) (-89);
        JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);
        // Undeclared exception!
        try {
            numberDeserializers_FloatDeserializer0._parseDoublePrimitive(jsonParser0, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
        // Undeclared exception!
        try {
            numberDeserializers_LongDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "IfinitSyy");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
        double double0 = numberDeserializers_LongDeserializer0._parseDoublePrimitive((DeserializationContext) null, "Infinity");
        assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        // Undeclared exception!
        try {
            numberDeserializers_LongDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "N|>bSa-G%.^A@.gBF{");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
        // Undeclared exception!
        try {
            numberDeserializers_FloatDeserializer0._parseDate(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        FactoryBasedEnumDeserializer factoryBasedEnumDeserializer0 = new FactoryBasedEnumDeserializer(class0, (AnnotatedMethod) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        // Undeclared exception!
        try {
            factoryBasedEnumDeserializer0._parseDateFromArray((JsonParser) null, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>((Converter<?, InputStream>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._parseDate("anlk", defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>((Converter<Object, InputStream>) null, (JavaType) null, stringArrayDeserializer0);
        Date date0 = stdDelegatingDeserializer0._parseDate("", defaultDeserializationContext_Impl0);
        assertNull(date0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        NullifyingDeserializer nullifyingDeserializer0 = new NullifyingDeserializer();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        double double0 = nullifyingDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "2.2250738585072012e-308");
        assertEquals(2.2250738585072014E-308, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.wrapperInstance;
        // Undeclared exception!
        try {
            numberDeserializers_FloatDeserializer0._parseString(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        StdDelegatingDeserializer<BinaryNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BinaryNode>((Converter<?, BinaryNode>) null);
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, false);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._deserializeFromEmpty(filteringParserDelegate0, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>((Converter<?, PropertyName>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._deserializeFromArray((JsonParser) null, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        // Undeclared exception!
        try {
            numberDeserializers_ShortDeserializer0._deserializeWrappedValue(jsonParser0, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>((Converter<?, PropertyName>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._coerceIntegral((JsonParser) null, defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        PrimitiveArrayDeserializers.LongDeser primitiveArrayDeserializers_LongDeser0 = new PrimitiveArrayDeserializers.LongDeser();
        Object object0 = primitiveArrayDeserializers_LongDeser0._coerceNullToken((DeserializationContext) null, false);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        PrimitiveArrayDeserializers.LongDeser primitiveArrayDeserializers_LongDeser0 = new PrimitiveArrayDeserializers.LongDeser();
        // Undeclared exception!
        try {
            primitiveArrayDeserializers_LongDeser0._coerceNullToken((DeserializationContext) null, true);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Converter<InputStream, List<BeanDeserializer>> converter0 = (Converter<InputStream, List<BeanDeserializer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<List<BeanDeserializer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<List<BeanDeserializer>>(converter0);
        stdDelegatingDeserializer0._verifyNullForPrimitive(defaultDeserializationContext_Impl0);
        assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_FIELD_NAMES;
        Converter<InputStream, InputStream> converter0 = (Converter<InputStream, InputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<InputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<InputStream>(converter0);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._reportFailedNullCoerce(defaultDeserializationContext_Impl0, false, jsonGenerator_Feature0, "0In$LHVf*>kx-i;=-oh");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        Converter<Double, JavaType> converter0 = (Converter<Double, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        ObjectMapper objectMapper0 = new ObjectMapper();
        SerializationFeature serializationFeature0 = SerializationFeature.EAGER_SERIALIZER_FETCH;
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0._reportFailedNullCoerce(deserializationContext0, true, serializationFeature0, "not a valid double value (as String to convert)");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        PrimitiveArrayDeserializers.DoubleDeser primitiveArrayDeserializers_DoubleDeser0 = new PrimitiveArrayDeserializers.DoubleDeser();
        String string0 = primitiveArrayDeserializers_DoubleDeser0._coercedTypeDesc();
        assertEquals("as content of type `double[]`", string0);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        Converter<Object, JavaType> converter0 = (Converter<Object, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        Converter<Calendar, JavaType> converter0 = (Converter<Calendar, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("0");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        Converter<Date, JavaType> converter0 = (Converter<Date, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("-Infinity");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        UntypedObjectDeserializer.Vanilla untypedObjectDeserializer_Vanilla0 = UntypedObjectDeserializer.Vanilla.std;
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>((Converter<Object, JavaType>) null, (JavaType) null, untypedObjectDeserializer_Vanilla0);
        boolean boolean0 = stdDelegatingDeserializer0._isIntNumber(",8Q(y'wx-^");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        Converter<BeanDeserializer, PropertyName> converter0 = (Converter<BeanDeserializer, PropertyName>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>(converter0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
        NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0.findValueNullProvider(defaultDeserializationContext_Impl0, (SettableBeanProperty) null, propertyMetadata0);
        assertNull(nullValueProvider0);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>((Converter<?, Integer>) null);
        stdDelegatingDeserializer0.findContentNullStyle(defaultDeserializationContext_Impl0, (BeanProperty) null);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>((Converter<?, SimpleModule>) null);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Byte byte0 = new Byte((byte) (-64));
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0.handleUnknownProperty((JsonParser) null, defaultDeserializationContext_Impl0, byte0, "}dg*1TdieQvHs.o8t");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdDelegatingDeserializer<SimpleModule> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SimpleModule>((Converter<?, SimpleModule>) null);
        // Undeclared exception!
        try {
            stdDelegatingDeserializer0.handleUnknownProperty((JsonParser) null, defaultDeserializationContext_Impl0, (Object) null, "N|>bSa-G%.^A@.gBF{");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
        boolean boolean0 = StdDeserializer._neitherNull(primitiveArrayDeserializers_FloatDeser0, (Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        Converter<InputStream, List<BeanDeserializer>> converter0 = (Converter<InputStream, List<BeanDeserializer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<List<BeanDeserializer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<List<BeanDeserializer>>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-32768));
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        Converter<Date, List<BeanDeserializer>> converter0 = (Converter<Date, List<BeanDeserializer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<List<BeanDeserializer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<List<BeanDeserializer>>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(468);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        Converter<InputStream, List<BeanDeserializer>> converter0 = (Converter<InputStream, List<BeanDeserializer>>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<List<BeanDeserializer>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<List<BeanDeserializer>>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(5);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        Converter<Double, PropertyName> converter0 = (Converter<Double, PropertyName>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._shortOverflow((-2035676647));
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        Converter<BeanDeserializer, PropertyName> converter0 = (Converter<BeanDeserializer, PropertyName>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._shortOverflow(65280);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        StdDelegatingDeserializer<PropertyName> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<PropertyName>((Converter<?, PropertyName>) null);
        boolean boolean0 = stdDelegatingDeserializer0._shortOverflow(3278);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        Class<Short> class0 = Short.class;
        Short short0 = new Short((short) 1155);
        NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);
        SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
        TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);
        ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
        StdDelegatingDeserializer<LinkedList<SimpleModule>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<LinkedList<SimpleModule>>((Converter<Object, LinkedList<SimpleModule>>) null, resolvedRecursiveType0, numberDeserializers_ShortDeserializer0);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow((-9223372036854775808L));
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        Converter<SimpleModule, Integer> converter0 = (Converter<SimpleModule, Integer>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>(converter0);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow(9223372036854775807L);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5959() throws Throwable {
        StdDelegatingDeserializer<Integer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Integer>((Converter<?, Integer>) null);
        boolean boolean0 = stdDelegatingDeserializer0._intOverflow(1L);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6060() throws Throwable {
        BigInteger bigInteger0 = BigInteger.ONE;
        Converter<InputStream, JavaType> converter0 = (Converter<InputStream, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigInteger0);
        assertSame(bigInteger0, number0);
    }

    @Test(timeout = 4000)
    public void test6161() throws Throwable {
        Converter<JsonEncoding, JavaType> converter0 = (Converter<JsonEncoding, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
        assertEquals(0, number0);
    }

    @Test(timeout = 4000)
    public void test6162() throws Throwable {
        Converter<JsonEncoding, JavaType> converter0 = (Converter<JsonEncoding, JavaType>) mock(Converter.class, new ViolatedAssumptionAnswer());
        StdDelegatingDeserializer<JavaType> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<JavaType>(converter0);
        Number number0 = stdDelegatingDeserializer0._nonNullNumber((Number) null);
        assertNotNull(number0);
    }
}
