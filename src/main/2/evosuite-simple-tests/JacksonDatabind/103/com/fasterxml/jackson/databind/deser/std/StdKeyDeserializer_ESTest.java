/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 23:43:47 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.util.EnumResolver;
import java.lang.annotation.Annotation;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.net.URI;
import java.net.URL;
import java.sql.ClientInfoStatus;
import java.util.Calendar;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdKeyDeserializer_ESTest extends StdKeyDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<URI> class0 = URI.class;
        UUIDDeserializer uUIDDeserializer0 = new UUIDDeserializer();
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, uUIDDeserializer0);
        // Undeclared exception!
        try {
            stdKeyDeserializer_DelegatingKD0.deserializeKey("", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD", e);
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        Class<?> class1 = stdKeyDeserializer_DelegatingKD0.getKeyClass();
        assertEquals(17, class1.getModifiers());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("62", (DeserializationContext) null);
        assertEquals((short) 62, object0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("62", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("Unrecognized field \"%s\" (class %s), not marked as ignorable", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Class<Long> class0 = Long.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("0HJ", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Class<Float> class0 = Float.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("cA]rlnE(2", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
        assertEquals("class java.lang.Character", class1.toString());
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
        assertNotNull(class1);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer", (DeserializationContext) null);
        assertEquals("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer", object0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        EnumResolver enumResolver0 = EnumResolver.constructUnsafeUsingToString(class0, annotationIntrospector0);
        StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        // Undeclared exception!
        try {
            stdKeyDeserializer_EnumKD0.deserializeKey("overflow, value cannot be represented as 16-bit value", defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        StdKeyDeserializer.StringCtorKeyDeserializer stdKeyDeserializer_StringCtorKeyDeserializer0 = null;
        try {
            stdKeyDeserializer_StringCtorKeyDeserializer0 = new StdKeyDeserializer.StringCtorKeyDeserializer((Constructor<?>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        StdKeyDeserializer.StringFactoryKeyDeserializer stdKeyDeserializer_StringFactoryKeyDeserializer0 = null;
        try {
            stdKeyDeserializer_StringFactoryKeyDeserializer0 = new StdKeyDeserializer.StringFactoryKeyDeserializer((Method) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        Class<Object> class0 = Object.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertEquals(4, StdKeyDeserializer.TYPE_CHAR);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        Class<UUID> class0 = UUID.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        UUID uUID0 = (UUID) stdKeyDeserializer0.deserializeKey("Internal error: unknown key type ", (DeserializationContext) null);
        assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("com.fasterxml.jackson.core.format.MatchStrength", (DeserializationContext) null);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            //
            // For input string: \"com.fasterxml.jackson.core.format.MatchStrength\"
            //
            verifyException("java.lang.NumberFormatException", e);
        }
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        Class<Date> class0 = Date.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("4 ApCG!ml\"Kv", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNotNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("false", (DeserializationContext) null);
        assertEquals(false, object0);
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("false", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNotNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("62", (DeserializationContext) null);
        assertEquals((byte) 62, object0);
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("62", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("7", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("7", (DeserializationContext) null);
        assertEquals('7', object0);
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("|laH", (DeserializationContext) null);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2027() throws Throwable {
        Class<URI> class0 = URI.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        Class<URL> class0 = URL.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("wz;yp=Y", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        Class<Locale> class0 = Locale.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Locale locale0 = (Locale) stdKeyDeserializer0.deserializeKey("wzh;yp=", (DeserializationContext) null);
        assertEquals("", locale0.getVariant());
    }

    @Test(timeout = 4000)
    public void test2330() throws Throwable {
        Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test2431() throws Throwable {
        Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
        FromStringDeserializer<Calendar> fromStringDeserializer0 = (FromStringDeserializer<Calendar>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(16, class0, fromStringDeserializer0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey(":sfm'>UtLn0q%dAa", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        Class<Integer> class0 = Integer.TYPE;
        FromStringDeserializer<Annotation> fromStringDeserializer0 = (FromStringDeserializer<Annotation>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(16, class0, fromStringDeserializer0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("@R*.Q!1)Y7~;", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        Class<URI> class0 = URI.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        URI uRI0 = (URI) stdKeyDeserializer0.deserializeKey("", (DeserializationContext) null);
        assertNull(uRI0.getHost());
    }

    @Test(timeout = 4000)
    public void test2734() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("u3aBjmA\"juX!", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2835() throws Throwable {
        Class<Float> class0 = Float.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(17, class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("0HJ", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2936() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = (StdKeyDeserializer.StringKD) StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer_StringKD0._parse("false", (DeserializationContext) null);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Internal error: unknown key type class java.lang.String
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Object object0 = stdKeyDeserializer0.deserializeKey("true", defaultDeserializationContext_Impl0);
        assertEquals(true, object0);
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("xO", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3239() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("2143", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3340() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("' from Class '", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3441() throws Throwable {
        Class<URI> class0 = URI.class;
        UUIDDeserializer uUIDDeserializer0 = new UUIDDeserializer();
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, uUIDDeserializer0);
        Object object0 = stdKeyDeserializer_DelegatingKD0.deserializeKey((String) null, (DeserializationContext) null);
        assertNull(object0);
    }
}
