/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 23:35:40 GMT 2024
 */
package com.fasterxml.jackson.databind.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.KeyDeserializer;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.deser.SettableAnyProperty;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers;
import com.fasterxml.jackson.databind.ext.CoreXMLDeserializers;
import com.fasterxml.jackson.databind.introspect.AnnotatedField;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
import com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember;
import com.fasterxml.jackson.databind.jsontype.NamedType;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver;
import com.fasterxml.jackson.databind.type.PlaceholderForType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.IOException;
import java.lang.reflect.Field;
import java.sql.ClientInfoStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SettableAnyProperty_ESTest extends SettableAnyProperty_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        SettableAnyProperty settableAnyProperty1 = settableAnyProperty0.withValueDeserializer((JsonDeserializer<Object>) null);
        assertFalse(settableAnyProperty1.equals((Object) settableAnyProperty0));
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.fixAccess((DeserializationConfig) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        JavaType[] javaTypeArray0 = new JavaType[0];
        TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, javaTypeArray0);
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, "6|", placeholderForType0);
        PropertyMetadata.MergeInfo propertyMetadata_MergeInfo0 = PropertyMetadata.MergeInfo.createForPropertyOverride(virtualAnnotatedMember0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(placeholderForType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, "6|", true, placeholderForType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, propertyMetadata_MergeInfo0.getter, placeholderForType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        JavaType javaType0 = settableAnyProperty0.getType();
        assertFalse(javaType0.isPrimitive());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        JavaType[] javaTypeArray0 = new JavaType[0];
        TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, javaTypeArray0);
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType((-1));
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, "6|", placeholderForType0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(placeholderForType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, "6|", false, placeholderForType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, placeholderForType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        BeanProperty beanProperty0 = settableAnyProperty0.getProperty();
        assertFalse(beanProperty0.isVirtual());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.readResolve();
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Missing method (broken JDK (de)serialization?)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        Class<IllegalArgumentException> class0 = IllegalArgumentException.class;
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember((TypeResolutionContext) null, class0, "ow%djW#GRa8xGo-L-L=", (JavaType) null);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.readResolve();
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Missing method (broken JDK (de)serialization?)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(3);
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, "6|", placeholderForType0);
        JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, "6|", true, javaType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, javaType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        boolean boolean0 = settableAnyProperty0.hasValueDeserializer();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        Class<ClientInfoStatus> class1 = ClientInfoStatus.class;
        Class<NamedType> class2 = NamedType.class;
        CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class2, 1080);
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class1, "d}d", (JavaType) null);
        JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer((JavaType) null, classNameIdResolver0, (String) null, true, javaType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, (JavaType) null, coreXMLDeserializers_Std0, asExternalTypeDeserializer0);
        boolean boolean0 = settableAnyProperty0.hasValueDeserializer();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        PlaceholderForType placeholderForType0 = new PlaceholderForType(22);
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        Class<TypeNameIdResolver> class0 = TypeNameIdResolver.class;
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, (String) null, placeholderForType0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(placeholderForType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, (String) null, false, placeholderForType0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser((char[]) null, 22, 22);
        StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
        SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
        RootNameLookup rootNameLookup0 = new RootNameLookup();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0, (ConfigOverrides) null);
        KeyDeserializer keyDeserializer0 = StdKeyDeserializers.constructDelegatingKeyDeserializer(deserializationConfig0, placeholderForType0, (JsonDeserializer<?>) null);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, placeholderForType0, keyDeserializer0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        // Undeclared exception!
        try {
            settableAnyProperty0.deserializeAndSet(jsonParser0, (DeserializationContext) null, (Object) null, "JSON");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD", e);
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.deserializeAndSet((JsonParser) null, (DeserializationContext) null, (Object) null, "EEE, dd MMM yyyy HH:mm:ss zzz");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        // Undeclared exception!
        try {
            settableAnyProperty0.deserialize(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer((JavaType) null, classNameIdResolver0, "j@|7B}M", false, (JavaType) null);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("j@|7B}M");
        // Undeclared exception!
        try {
            settableAnyProperty0.deserialize(jsonParser0, (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.set((Object) null, beanProperty_Bogus0, (Object) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        Class<JsonDeserializer> class0 = JsonDeserializer.class;
        AnnotationMap annotationMap0 = new AnnotationMap();
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember((TypeResolutionContext) null, class0, (String) null, (JavaType) null);
        AnnotatedField annotatedField0 = new AnnotatedField((TypeResolutionContext) null, (Field) null, annotationMap0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, annotatedField0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
        // Undeclared exception!
        try {
            settableAnyProperty0.set((Object) null, virtualAnnotatedMember0, beanProperty_Bogus0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.introspect.AnnotatedField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(3);
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, "6|", placeholderForType0);
        JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, "6|", true, javaType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, javaType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException("6|");
        try {
            settableAnyProperty0._throwAsIOE(mockIllegalArgumentException0, mockIllegalArgumentException0, class0);
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Problem deserializing \"any\" property 'org.evosuite.runtime.mock.java.lang.MockThrowable: 6|' of class com.fasterxml.jackson.annotation.SimpleObjectIdResolver (expected type: [simple type, class com.fasterxml.jackson.annotation.SimpleObjectIdResolver]; actual type: `java.lang.Class`), problem: 6|
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;
        TypeBindings typeBindings0 = TypeBindings.emptyBindings();
        TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
        PlaceholderForType placeholderForType0 = new PlaceholderForType(3);
        VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, "6|", placeholderForType0);
        JavaType javaType0 = typeResolutionContext_Basic0.resolveType(class0);
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(placeholderForType0, classNameIdResolver0, "6|", true, javaType0);
        SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty(beanProperty_Bogus0, virtualAnnotatedMember0, javaType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0);
        MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException();
        try {
            settableAnyProperty0._throwAsIOE(mockIllegalArgumentException0, mockIllegalArgumentException0, class0);
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Problem deserializing \"any\" property 'org.evosuite.runtime.mock.java.lang.MockThrowable' of class com.fasterxml.jackson.annotation.SimpleObjectIdResolver (expected type: [simple type, class com.fasterxml.jackson.annotation.SimpleObjectIdResolver]; actual type: `java.lang.Class`) (no error message provided)
            //
            verifyException("com.fasterxml.jackson.databind.deser.SettableAnyProperty", e);
        }
    }
}
