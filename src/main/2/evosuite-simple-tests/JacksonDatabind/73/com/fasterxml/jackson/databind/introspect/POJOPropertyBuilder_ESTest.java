/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:53:42 GMT 2024
 */
package com.fasterxml.jackson.databind.introspect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder;
import com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class POJOPropertyBuilder_ESTest extends POJOPropertyBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        POJOPropertyBuilder pOJOPropertyBuilder0 = null;
        try {
            pOJOPropertyBuilder0 = new POJOPropertyBuilder((POJOPropertyBuilder) null, (PropertyName) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
        assertFalse(pOJOPropertyBuilder_Linked0.isVisible);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
        assertFalse(pOJOPropertyBuilder_Linked0.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test014() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
        assertFalse(pOJOPropertyBuilder_Linked0.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>((POJOPropertyBuilder.Linked<AnnotatedParameter>) null);
        // Undeclared exception!
        try {
            pOJOPropertyBuilder_MemberIterator0.remove();
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator", e);
        }
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        POJOPropertyBuilder.MemberIterator<VirtualAnnotatedMember> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<VirtualAnnotatedMember>((POJOPropertyBuilder.Linked<VirtualAnnotatedMember>) null);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        PropertyName propertyName0 = new PropertyName(")$c&)B", ")$c&)B");
        POJOPropertyBuilder.Linked<AnnotatedParameter> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedParameter>((AnnotatedParameter) null, (POJOPropertyBuilder.Linked<AnnotatedParameter>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_MemberIterator0.next();
        assertFalse(pOJOPropertyBuilder_MemberIterator0.hasNext());
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        assertFalse(pOJOPropertyBuilder_Linked0.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test0510() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertFalse(pOJOPropertyBuilder_Linked0.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test0511() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertNotSame(pOJOPropertyBuilder_Linked1, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test0612() throws Throwable {
        PropertyName propertyName0 = new PropertyName("");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertNotSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test0613() throws Throwable {
        PropertyName propertyName0 = new PropertyName("");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertFalse(pOJOPropertyBuilder_Linked0.isVisible);
    }

    @Test(timeout = 4000)
    public void test0614() throws Throwable {
        PropertyName propertyName0 = new PropertyName("");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertFalse(pOJOPropertyBuilder_Linked0.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test0615() throws Throwable {
        PropertyName propertyName0 = new PropertyName("");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertNotSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test0716() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = null;
        try {
            pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, true, true, true);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Can not pass true for 'explName' if name is null/empty
            //
            verifyException("com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked", e);
        }
    }

    @Test(timeout = 4000)
    public void test0817() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertNull(pOJOPropertyBuilder_Linked2);
    }

    @Test(timeout = 4000)
    public void test0818() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertFalse(pOJOPropertyBuilder_Linked1.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test0819() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertTrue(pOJOPropertyBuilder_Linked1.isVisible);
    }

    @Test(timeout = 4000)
    public void test0920() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/?>1Rn9LN=aEc", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNext();
        assertFalse(pOJOPropertyBuilder_Linked2.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test0921() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/?>1Rn9LN=aEc", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNext();
        assertNotSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test0922() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/?>1Rn9LN=aEc", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNext();
        assertFalse(pOJOPropertyBuilder_Linked2.isVisible);
    }

    @Test(timeout = 4000)
    public void test1023() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
        assertTrue(pOJOPropertyBuilder_Linked1.isVisible);
    }

    @Test(timeout = 4000)
    public void test1024() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
        assertSame(pOJOPropertyBuilder_Linked1, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test1025() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
        assertFalse(pOJOPropertyBuilder_Linked1.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test1026() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
        assertTrue(pOJOPropertyBuilder_Linked1.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1127() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        JsonProperty.Access jsonProperty_Access1 = JsonProperty.Access.READ_ONLY;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access1);
        assertNotSame(pOJOPropertyBuilder_Linked1, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test1128() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        JsonProperty.Access jsonProperty_Access1 = JsonProperty.Access.READ_ONLY;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access1);
        assertFalse(pOJOPropertyBuilder_Linked0.isVisible);
    }

    @Test(timeout = 4000)
    public void test1129() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        JsonProperty.Access jsonProperty_Access1 = JsonProperty.Access.READ_ONLY;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access1);
        assertFalse(pOJOPropertyBuilder_Linked0.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1230() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access0);
        assertFalse(pOJOPropertyBuilder_Linked1.isVisible);
    }

    @Test(timeout = 4000)
    public void test1231() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access0);
        assertSame(pOJOPropertyBuilder_Linked1, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test1232() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(jsonProperty_Access0);
        assertFalse(pOJOPropertyBuilder_Linked1.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1333() throws Throwable {
        PropertyName propertyName0 = new PropertyName("Can not figure out type for EnumMap (odd JDK platform?)");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("Can not figure out type for EnumMap (odd JDK platform?)", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("Can not figure out type for EnumMap (odd JDK platform?)", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertFalse(pOJOPropertyBuilder_Linked2.isVisible);
    }

    @Test(timeout = 4000)
    public void test1334() throws Throwable {
        PropertyName propertyName0 = new PropertyName("Can not figure out type for EnumMap (odd JDK platform?)");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("Can not figure out type for EnumMap (odd JDK platform?)", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("Can not figure out type for EnumMap (odd JDK platform?)", pOJOPropertyBuilder_Linked0, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
        assertNotNull(pOJOPropertyBuilder_Linked2);
    }

    @Test(timeout = 4000)
    public void test1435() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNonVisible();
        assertTrue(pOJOPropertyBuilder_Linked2.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1436() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNonVisible();
        assertSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test1437() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNonVisible();
        assertNotNull(pOJOPropertyBuilder_Linked2);
    }

    @Test(timeout = 4000)
    public void test1438() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutNonVisible();
        assertFalse(pOJOPropertyBuilder_Linked2.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test1539() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNonVisible();
        assertFalse(pOJOPropertyBuilder_Linked0.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1540() throws Throwable {
        JsonProperty.Access jsonProperty_Access0 = JsonProperty.Access.READ_WRITE;
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<JsonProperty.Access>(jsonProperty_Access0, (POJOPropertyBuilder.Linked<JsonProperty.Access>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<JsonProperty.Access> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNonVisible();
        assertNull(pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test1641() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.append(pOJOPropertyBuilder_Linked1);
        assertNotSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test1642() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.append(pOJOPropertyBuilder_Linked1);
        assertFalse(pOJOPropertyBuilder_Linked2.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1643() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.append(pOJOPropertyBuilder_Linked1);
        assertFalse(pOJOPropertyBuilder_Linked2.isVisible);
    }

    @Test(timeout = 4000)
    public void test1744() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertTrue(pOJOPropertyBuilder_Linked2.isVisible);
    }

    @Test(timeout = 4000)
    public void test1745() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertFalse(pOJOPropertyBuilder_Linked2.isNameExplicit);
    }

    @Test(timeout = 4000)
    public void test1746() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertTrue(pOJOPropertyBuilder_Linked2.isMarkedIgnored);
    }

    @Test(timeout = 4000)
    public void test1747() throws Throwable {
        PropertyName propertyName0 = new PropertyName("", "");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = new POJOPropertyBuilder.Linked<String>("", pOJOPropertyBuilder_Linked0, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
        assertSame(pOJOPropertyBuilder_Linked2, pOJOPropertyBuilder_Linked1);
    }

    @Test(timeout = 4000)
    public void test1848() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_Linked1.toString();
        assertNotSame(pOJOPropertyBuilder_Linked1, pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test1849() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_Linked1.toString();
        assertFalse(pOJOPropertyBuilder_Linked0.isVisible);
    }

    @Test(timeout = 4000)
    public void test1850() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_Linked1.toString();
        assertFalse(pOJOPropertyBuilder_Linked0.isMarkedIgnored);
    }
}
