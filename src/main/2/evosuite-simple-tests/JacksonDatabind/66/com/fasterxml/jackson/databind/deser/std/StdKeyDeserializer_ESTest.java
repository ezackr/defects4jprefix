/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:32:06 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.util.EnumResolver;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.net.URI;
import java.net.URL;
import java.util.Calendar;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdKeyDeserializer_ESTest extends StdKeyDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<Byte> class0 = Byte.class;
        JsonDeserializer<Currency> jsonDeserializer0 = (JsonDeserializer<Currency>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        Class<?> class1 = stdKeyDeserializer_DelegatingKD0.getKeyClass();
        assertEquals(17, class1.getModifiers());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Class<URL> class0 = URL.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("-614820", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Class<Long> class0 = Long.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey(" cr1k0Z<vs%F?", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("e=;p2O/h<dpF", (DeserializationContext) null);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        FromStringDeserializer<Double> fromStringDeserializer0 = (FromStringDeserializer<Double>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-2332), class0, fromStringDeserializer0);
        Class<?> class1 = stdKeyDeserializer0.getKeyClass();
        assertFalse(class1.isEnum());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey(" cr1k0Z<vs%F?", (DeserializationContext) null);
        assertEquals(" cr1k0Z<vs%F?", object0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Class<Locale.Category> class0 = Locale.Category.class;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        EnumResolver enumResolver0 = EnumResolver.constructUnsafe(class0, annotationIntrospector0);
        StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        // Undeclared exception!
        try {
            stdKeyDeserializer_EnumKD0.deserializeKey("59^'U5]MG", defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        StdKeyDeserializer.StringCtorKeyDeserializer stdKeyDeserializer_StringCtorKeyDeserializer0 = null;
        try {
            stdKeyDeserializer_StringCtorKeyDeserializer0 = new StdKeyDeserializer.StringCtorKeyDeserializer((Constructor<?>) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        StdKeyDeserializer.StringFactoryKeyDeserializer stdKeyDeserializer_StringFactoryKeyDeserializer0 = null;
        try {
            stdKeyDeserializer_StringFactoryKeyDeserializer0 = new StdKeyDeserializer.StringFactoryKeyDeserializer((Method) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Class<Object> class0 = Object.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertEquals(1, StdKeyDeserializer.TYPE_BOOLEAN);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Class<UUID> class0 = UUID.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Class<Date> class0 = Date.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey(" cr1k0Z<vs%F?", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("Lu^;<1I)Tk&,A(:g?5{", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNotNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("true", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("true", (DeserializationContext) null);
        assertEquals(true, object0);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNotNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
        assertEquals((byte) 0, object0);
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNotNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
        assertEquals('0', object0);
    }

    @Test(timeout = 4000)
    public void test1723() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        Class<Float> class0 = Float.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("5'rq", (DeserializationContext) null);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        Class<URI> class0 = URI.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("[03jHqZ9[_y{$r+CQ", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        Class<Locale.Category> class0 = Locale.Category.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertNull(stdKeyDeserializer0);
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        Class<Locale> class0 = Locale.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertEquals(16, StdKeyDeserializer.TYPE_CURRENCY);
    }

    @Test(timeout = 4000)
    public void test2228() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        assertEquals(13, StdKeyDeserializer.TYPE_URI);
    }

    @Test(timeout = 4000)
    public void test2329() throws Throwable {
        Class<Locale.Category> class0 = Locale.Category.class;
        FromStringDeserializer<Locale> fromStringDeserializer0 = (FromStringDeserializer<Locale>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(16, class0, fromStringDeserializer0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("ZKqU ", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2430() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
        assertEquals((short) 0, object0);
    }

    @Test(timeout = 4000)
    public void test2531() throws Throwable {
        Class<Short> class0 = Short.class;
        FromStringDeserializer<Byte> fromStringDeserializer0 = (FromStringDeserializer<Byte>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(9, class0, fromStringDeserializer0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("QlF[`JW", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2632() throws Throwable {
        Class<UUID> class0 = UUID.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("com.fastrxml.jackson.databind.node.FloatNode", (DeserializationContext) null);
        assertEquals("00000000-0100-4000-8200-000003000000", object0.toString());
    }

    @Test(timeout = 4000)
    public void test2733() throws Throwable {
        Class<Short> class0 = Short.TYPE;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("unable to parse key as Class", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2834() throws Throwable {
        Class<MockCalendar> class0 = MockCalendar.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        try {
            stdKeyDeserializer_StringKD0._parse(" n~o{<", (DeserializationContext) null);
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Internal error: unknown key type class org.evosuite.runtime.mock.java.util.MockCalendar
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test2935() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0._parse("false", (DeserializationContext) null);
        assertEquals(false, object0);
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        try {
            stdKeyDeserializer0._parse("can only convert 1-character Strings", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3137() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("-14820", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3238() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("3412", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3339() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey("148020", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3440() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        // Undeclared exception!
        try {
            stdKeyDeserializer0.deserializeKey(" cr1k0Z<vs%F?", (DeserializationContext) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer", e);
        }
    }

    @Test(timeout = 4000)
    public void test3541() throws Throwable {
        Class<Byte> class0 = Byte.TYPE;
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Locale locale0 = Locale.ENGLISH;
        JsonDeserializer<Locale> jsonDeserializer0 = (JsonDeserializer<Locale>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(locale0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        Object object0 = stdKeyDeserializer_DelegatingKD0.deserializeKey(")2", defaultDeserializationContext_Impl0);
        assertEquals("en", object0.toString());
    }

    @Test(timeout = 4000)
    public void test3642() throws Throwable {
        Class<Object> class0 = Object.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Object object0 = stdKeyDeserializer_DelegatingKD0.deserializeKey((String) null, defaultDeserializationContext_Impl0);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test3743() throws Throwable {
        Class<Byte> class0 = Byte.class;
        JsonDeserializer<Currency> jsonDeserializer0 = (JsonDeserializer<Currency>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        // Undeclared exception!
        try {
            stdKeyDeserializer_DelegatingKD0.deserializeKey("(H'?b*>TjID%", defaultDeserializationContext_Impl0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
        }
    }
}
