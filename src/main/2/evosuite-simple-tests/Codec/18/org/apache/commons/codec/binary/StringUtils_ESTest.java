/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:23:38 GMT 2024
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Be((String) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf8("L");
        // Undeclared exception!
        try {
            StringUtils.newString(byteArray0, "");
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // : java.io.UnsupportedEncodingException:
            //
            verifyException("org.apache.commons.codec.binary.StringUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        String string0 = StringUtils.newStringIso8859_1((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii("");
        assertArrayEquals(new byte[] {}, byteArray0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        String string0 = StringUtils.newStringUtf16Le((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        String string0 = StringUtils.newStringUtf16Be((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Le((String) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        String string0 = StringUtils.newStringUtf16((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        StringUtils stringUtils0 = new StringUtils();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesIso8859_1((String) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        ByteBuffer byteBuffer0 = StringUtils.getByteBufferUtf8((String) null);
        assertNull(byteBuffer0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16("\u0097\u0000\u0000\u0000\u0000");
        assertEquals(12, byteArray0.length);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        String string0 = StringUtils.newStringUtf8((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        boolean boolean0 = StringUtils.equals((CharSequence) null, (CharSequence) "[2zrBD30?(UTanpl$G");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        boolean boolean0 = StringUtils.equals((CharSequence) null, (CharSequence) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        boolean boolean0 = StringUtils.equals((CharSequence) "\u9700\u0000\uFFFD", (CharSequence) "\u0000\u0097\u0000\u0000\u00FD\u00FF");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        boolean boolean0 = StringUtils.equals((CharSequence) "UTF-8", (CharSequence) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        CharBuffer charBuffer0 = CharBuffer.allocate((byte) 0);
        // Undeclared exception!
        try {
            StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "\u0000{\u00FF\u0000\u0000[\u0000");
            fail("Expecting exception: IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.nio.Buffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\u3F00\uC101", 0, 0);
        // Undeclared exception!
        try {
            StringUtils.equals((CharSequence) "\u3F00\uC101", (CharSequence) charBuffer0);
            fail("Expecting exception: IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.nio.Buffer", e);
        }
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        ByteBuffer byteBuffer0 = StringUtils.getByteBufferUtf8("\u0000\u0097\u0000\u0000\u00FD\u00FF");
        assertFalse(byteBuffer0.isDirect());
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        // Undeclared exception!
        try {
            StringUtils.getBytesUnchecked("", "");
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // : java.io.UnsupportedEncodingException:
            //
            verifyException("org.apache.commons.codec.binary.StringUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUnchecked((String) null, "2b|W");
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesIso8859_1("[2zrBD30?(UTanpl$G");
        String string0 = StringUtils.newStringUsAscii(byteArray0);
        assertEquals("[2zrBD30?(UTanpl$G", string0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        String string0 = StringUtils.newString((byte[]) null, (String) null);
        assertNull(string0);
    }
}
