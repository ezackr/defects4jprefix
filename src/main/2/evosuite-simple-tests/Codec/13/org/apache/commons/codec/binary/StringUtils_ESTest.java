/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:15:00 GMT 2024
 */
package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Be("@ryywr@");
        assertEquals(14, byteArray0.length);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        // Undeclared exception!
        try {
            StringUtils.getBytesUnchecked("\u3966\u2336\u5B23\uFFFD", "'<@]7\"SL)");
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // '<@]7\"SL): java.io.UnsupportedEncodingException: '<@]7\"SL)
            //
            verifyException("org.apache.commons.codec.binary.StringUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        // Undeclared exception!
        try {
            StringUtils.newStringUsAscii((byte[]) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUnchecked("ISO-8859-1", "ISO-8859-1");
        String string0 = StringUtils.newStringIso8859_1(byteArray0);
        assertEquals("ISO-8859-1", string0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii("");
        String string0 = StringUtils.newStringUtf16Le(byteArray0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        // Undeclared exception!
        try {
            StringUtils.newStringUtf16Be((byte[]) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16Le("->lf?z1% ");
        assertEquals(18, byteArray0.length);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii("");
        String string0 = StringUtils.newStringUtf16(byteArray0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        StringUtils stringUtils0 = new StringUtils();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesIso8859_1(": ");
        assertEquals(2, byteArray0.length);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf8("f96##[U");
        assertArrayEquals(new byte[] { (byte) 102, (byte) 57, (byte) 54, (byte) 35, (byte) 35, (byte) 91, (byte) 85 }, byteArray0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUtf16("XoV'?g0:i)V)*E>");
        assertEquals(32, byteArray0.length);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii("");
        String string0 = StringUtils.newStringUtf8(byteArray0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUsAscii((String) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUnchecked((String) null, (String) null);
        assertNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        String string0 = StringUtils.newStringUtf8((byte[]) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        byte[] byteArray0 = StringUtils.getBytesUnchecked("ISO-8859-1", "ISO-8859-1");
        String string0 = StringUtils.newString(byteArray0, "ISO-8859-1");
        assertEquals("ISO-8859-1", string0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        String string0 = StringUtils.newString((byte[]) null, "");
        assertNull(string0);
    }
}
