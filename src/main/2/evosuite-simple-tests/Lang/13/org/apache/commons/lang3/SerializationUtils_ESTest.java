/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 12:14:16 GMT 2024
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.Serializable;
import org.apache.commons.lang3.SerializationUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class SerializationUtils_ESTest extends SerializationUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        SerializationUtils serializationUtils0 = new SerializationUtils();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = SerializationUtils.clone(integer0);
        assertEquals(0, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        String string0 = SerializationUtils.clone((String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        // Undeclared exception!
        try {
            SerializationUtils.serialize((Serializable) "IOException while reading cloned object data", (OutputStream) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The OutputStream must not be null
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
        DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
        // Undeclared exception!
        try {
            SerializationUtils.serialize((Serializable) "UwQ{Lt4?", (OutputStream) dataOutputStream0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // java.io.IOException: Pipe not connected
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        MockFile mockFile0 = new MockFile("s'z?-y.]1", "s'z?-y.]1");
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
        // Undeclared exception!
        try {
            SerializationUtils.serialize((Serializable) mockFile0, (OutputStream) mockFileOutputStream0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // org.evosuite.runtime.mock.java.lang.MockThrowable: Error in writing to file
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        byte[] byteArray0 = SerializationUtils.serialize((Serializable) null);
        Object object0 = SerializationUtils.deserialize(byteArray0);
        assertNull(object0);
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        // Undeclared exception!
        try {
            SerializationUtils.deserialize((InputStream) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The InputStream must not be null
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test88() throws Throwable {
        byte[] byteArray0 = new byte[1];
        // Undeclared exception!
        try {
            SerializationUtils.deserialize(byteArray0);
            fail("Expecting exception: RuntimeException");
        } catch (RuntimeException e) {
            //
            // java.io.EOFException
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test99() throws Throwable {
        // Undeclared exception!
        try {
            SerializationUtils.deserialize((byte[]) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The byte[] must not be null
            //
            verifyException("org.apache.commons.lang3.SerializationUtils", e);
        }
    }
}
