/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 15:09:14 GMT 2024
 */
package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.BooleanUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BooleanUtils_ESTest extends BooleanUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        String string0 = BooleanUtils.toStringYesNo(false);
        assertEquals("no", string0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        BooleanUtils booleanUtils0 = new BooleanUtils();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        String string0 = BooleanUtils.toStringTrueFalse(true);
        assertEquals("true", string0);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(true);
        String string0 = BooleanUtils.toStringTrueFalse(boolean0);
        assertEquals("true", string0);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(true);
        String string0 = BooleanUtils.toStringTrueFalse(boolean0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        String string0 = BooleanUtils.toStringOnOff(false);
        assertEquals("off", string0);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((-1014));
        String string0 = BooleanUtils.toStringOnOff(boolean0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((-1014));
        String string0 = BooleanUtils.toStringOnOff(boolean0);
        assertEquals("on", string0);
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(false);
        Boolean boolean1 = BooleanUtils.negate(boolean0);
        assertNotNull(boolean1);
    }

    @Test(timeout = 4000)
    public void test0069() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(false);
        Boolean boolean1 = BooleanUtils.negate(boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test00710() throws Throwable {
        Boolean boolean0 = BooleanUtils.negate((Boolean) null);
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test00811() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        Boolean boolean1 = BooleanUtils.negate(boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test00912() throws Throwable {
        Boolean boolean0 = Boolean.FALSE;
        boolean boolean1 = BooleanUtils.isNotTrue(boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        boolean boolean0 = BooleanUtils.isTrue((Boolean) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        boolean boolean1 = BooleanUtils.isNotTrue(boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        Integer integer0 = BooleanUtils.toIntegerObject(false);
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
        boolean boolean1 = BooleanUtils.isNotFalse(boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        boolean boolean0 = BooleanUtils.isNotFalse((Boolean) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((-1014));
        boolean boolean1 = BooleanUtils.isNotFalse(boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(false);
        String string0 = BooleanUtils.toStringYesNo(boolean0);
        assertEquals("no", string0);
    }

    @Test(timeout = 4000)
    public void test01519() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(false);
        String string0 = BooleanUtils.toStringYesNo(boolean0);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test01620() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        boolean boolean1 = BooleanUtils.toBoolean(boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test01721() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean((Boolean) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01822() throws Throwable {
        Boolean boolean0 = Boolean.FALSE;
        boolean boolean1 = BooleanUtils.toBoolean(boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test01923() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        boolean boolean1 = BooleanUtils.toBooleanDefaultIfNull(boolean0, false);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test02024() throws Throwable {
        boolean boolean0 = BooleanUtils.toBooleanDefaultIfNull((Boolean) null, false);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02125() throws Throwable {
        Boolean boolean0 = Boolean.FALSE;
        boolean boolean1 = BooleanUtils.toBooleanDefaultIfNull(boolean0, true);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test02226() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean(42);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02327() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean(0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02428() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test02529() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null);
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test02630() throws Throwable {
        Integer integer0 = new Integer((-2532));
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
        Integer integer1 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer0);
        assertEquals((-2532), (int) integer1);
    }

    @Test(timeout = 4000)
    public void test02731() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBoolean((-443), (-3397), (-3397));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match either specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test02832() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean((-3397), (-3397), (-3397));
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02933() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean(100, (-2522), 100);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03034() throws Throwable {
        Integer integer0 = new Integer((-443));
        boolean boolean0 = BooleanUtils.toBoolean(integer0, (Integer) null, integer0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03135() throws Throwable {
        Integer integer0 = Integer.getInteger("false");
        boolean boolean0 = BooleanUtils.toBoolean((Integer) null, integer0, (Integer) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03236() throws Throwable {
        Integer integer0 = new Integer((-3397));
        boolean boolean0 = BooleanUtils.toBoolean((Integer) null, integer0, (Integer) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03337() throws Throwable {
        Integer integer0 = new Integer((-357));
        // Undeclared exception!
        try {
            BooleanUtils.toBoolean((Integer) null, integer0, integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match either specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test03438() throws Throwable {
        Integer integer0 = BooleanUtils.toIntegerObject(false);
        assertEquals(0, (int) integer0);
    }

    @Test(timeout = 4000)
    public void test03439() throws Throwable {
        Integer integer0 = BooleanUtils.toIntegerObject(false);
        boolean boolean0 = BooleanUtils.toBoolean(integer0, integer0, integer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03540() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(68);
        Integer integer0 = new Integer(68);
        Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
        // Undeclared exception!
        try {
            BooleanUtils.toBoolean(integer0, integer1, integer1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match either specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test03641() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBooleanObject((-1624), (-3491), 2032, 2215);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match any specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test03742() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(83, 83, 83, 83);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03843() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(2127, 61, 2127, 61);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test03944() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((-288), 1, 1, (-288));
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test04045() throws Throwable {
        Integer integer0 = new Integer(0);
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer0, integer0, integer0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04146() throws Throwable {
        Integer integer0 = new Integer(2123);
        Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, integer0, integer0, (Integer) null);
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test04247() throws Throwable {
        Integer integer0 = new Integer(69);
        Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, integer0, (Integer) null, integer0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test04348() throws Throwable {
        Integer integer0 = new Integer(0);
        // Undeclared exception!
        try {
            BooleanUtils.toBooleanObject((Integer) null, integer0, integer0, integer0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match any specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test04449() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = new Integer((-1125659271));
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer1, integer1, integer0);
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test04550() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = new Integer((-1125659271));
        Integer integer2 = new Integer(0);
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer1, integer2, integer0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test04551() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = new Integer((-1125659271));
        Integer integer2 = new Integer(0);
        Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer1, integer2, integer0);
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test04652() throws Throwable {
        Integer integer0 = new Integer((-2316));
        Integer integer1 = new Integer((-222));
        // Undeclared exception!
        try {
            BooleanUtils.toBooleanObject(integer0, integer1, integer1, integer1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Integer did not match any specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test04753() throws Throwable {
        int int0 = BooleanUtils.toInteger(false);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test04854() throws Throwable {
        int int0 = BooleanUtils.toInteger(true);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test04955() throws Throwable {
        Integer integer0 = BooleanUtils.toIntegerObject(true);
        assertEquals(1, (int) integer0);
    }

    @Test(timeout = 4000)
    public void test05056() throws Throwable {
        Integer integer0 = BooleanUtils.toIntegerObject((Boolean) null);
        assertNull(integer0);
    }

    @Test(timeout = 4000)
    public void test05157() throws Throwable {
        Boolean boolean0 = Boolean.FALSE;
        Integer integer0 = BooleanUtils.toIntegerObject(boolean0);
        assertEquals(0, (int) integer0);
    }

    @Test(timeout = 4000)
    public void test05258() throws Throwable {
        int int0 = BooleanUtils.toInteger(false, 79, 79);
        assertEquals(79, int0);
    }

    @Test(timeout = 4000)
    public void test05359() throws Throwable {
        int int0 = BooleanUtils.toInteger(true, 79, 79);
        assertEquals(79, int0);
    }

    @Test(timeout = 4000)
    public void test05460() throws Throwable {
        Boolean boolean0 = new Boolean("");
        int int0 = BooleanUtils.toInteger(boolean0, (-2532), (-2532), (-2532));
        assertEquals((-2532), int0);
    }

    @Test(timeout = 4000)
    public void test05561() throws Throwable {
        int int0 = BooleanUtils.toInteger((Boolean) null, (-2532), (-2532), (-489));
        assertEquals((-489), int0);
    }

    @Test(timeout = 4000)
    public void test05662() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("", "", "", "");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("", "", "", "");
        int int0 = BooleanUtils.toInteger(boolean0, (-2532), (-2532), (-2532));
        assertEquals((-2532), int0);
    }

    @Test(timeout = 4000)
    public void test05764() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = BooleanUtils.toIntegerObject(false, integer0, integer0);
        assertEquals(0, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test05865() throws Throwable {
        Integer integer0 = new Integer(0);
        Integer integer1 = BooleanUtils.toIntegerObject(true, integer0, integer0);
        assertEquals(0, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test05966() throws Throwable {
        Integer integer0 = Integer.getInteger("\fx", 1445);
        Integer integer1 = BooleanUtils.toIntegerObject((Boolean) null, integer0, integer0, integer0);
        assertEquals(1445, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test06067() throws Throwable {
        Integer integer0 = new Integer((-2532));
        Boolean boolean0 = new Boolean("");
        Integer integer1 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer0);
        assertEquals((-2532), (int) integer1);
    }

    @Test(timeout = 4000)
    public void test06168() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("\fx");
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06269() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("true");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test06370() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("false");
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06371() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("false");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test06472() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("on");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test06473() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("on");
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06574() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("off");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test06575() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("off");
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06676() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("yes");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test06677() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("yes");
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06778() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("no");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test06779() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("no");
        assertNotNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06880() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, "\fx", "<T7bub'jAs", (String) null);
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test06981() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, (String) null, (String) null, (String) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test07082() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, "pA", (String) null, "pA");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07183() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBooleanObject((String) null, "-:uq:djh==eh/!7vy", "-:uq:djh==eh/!7vy", "-:uq:djh==eh/!7vy");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The String did not match any specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test07284() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("sxc PAItT^<p++", "Jb", "\fx", "sxc PAItT^<p++");
        assertNull(boolean0);
    }

    @Test(timeout = 4000)
    public void test07385() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject("ND", "kl?UcsE4Q]\"Q", "ND", "kl?UcsE4Q]\"Q");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07486() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBooleanObject("z`-//.\u0001t}k%@", "4iG66}%5!O?u", "", "Sk,fYaUWEQL");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The String did not match any specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test07587() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("IGO[yknm!.cPa%nm");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07688() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("true");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test07789() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean((String) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07890() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("\fx");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07991() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("oN");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08092() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("Os");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test08193() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("on");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08294() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("yeS");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08395() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("y_r");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test08496() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("yER");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test08597() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("yes");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08698() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("YES");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08799() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("Ye9");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test088100() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("Y>D");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test089101() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("YEs");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test090102() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("t[|");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test091103() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("tR^");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test092104() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("trUe");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test093105() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("trUE");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test094106() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("trUu");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test095107() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("TRp+");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test096108() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("Tn-");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test097109() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("Tru`");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test098110() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("TrUE");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099111() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("TrUe");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test100112() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("false", "false", "false");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test101113() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean((String) null, "Yd:", (String) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test102114() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean((String) null, (String) null, (String) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test103115() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBoolean((String) null, "TrtK", "TrtK");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The String did not match either specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test104116() throws Throwable {
        boolean boolean0 = BooleanUtils.toBoolean("yDS", "\fx>4Z1~tVJ}Xi%", "yDS");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test105117() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.toBoolean("orgwapache.commons.lang.BooleanHtils", "TX|", "TX|");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The String did not match either specified value
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test106118() throws Throwable {
        String string0 = BooleanUtils.toString((Boolean) null, (String) null, (String) null, (String) null);
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test107119() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[1];
        Integer integer0 = new Integer((-439));
        Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, (Integer) null, (Integer) null, integer0);
        booleanArray0[0] = boolean0;
        Boolean boolean1 = BooleanUtils.xor(booleanArray0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test108120() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.xor((boolean[]) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Array must not be null
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test109121() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        // Undeclared exception!
        try {
            BooleanUtils.xor(booleanArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Array is empty
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test110122() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean boolean0 = BooleanUtils.xor(booleanArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test111123() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(68);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test111124() throws Throwable {
        Boolean boolean0 = BooleanUtils.toBooleanObject(68);
        Boolean[] booleanArray0 = new Boolean[2];
        booleanArray0[0] = boolean0;
        booleanArray0[1] = boolean0;
        Boolean boolean1 = BooleanUtils.xor(booleanArray0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test112125() throws Throwable {
        // Undeclared exception!
        try {
            BooleanUtils.xor((Boolean[]) null);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // The Array must not be null
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }

    @Test(timeout = 4000)
    public void test113126() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        // Undeclared exception!
        try {
            BooleanUtils.xor(booleanArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Array is empty
            //
            verifyException("org.apache.commons.lang.BooleanUtils", e);
        }
    }
}
