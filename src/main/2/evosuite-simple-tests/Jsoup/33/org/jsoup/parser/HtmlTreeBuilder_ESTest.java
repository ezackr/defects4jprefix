/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 03:12:16 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.DescendableLinkedList;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFormElement();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.push((Element) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getActiveFormattingElement("tr");
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("VyEyE", "VyEyE");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("VE", "VE");
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test0066() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.insert(token_StartTag0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.Token$Tag", e);
        }
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("q_G{?>>O,NKA;F", (Element) null, "q_G{?>>O,NKA;F", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test01010() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isFosterInserts();
    }

    @Test(timeout = 4000)
    public void test01111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
        Element element0 = null;
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(false);
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test01414() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getStack();
    }

    @Test(timeout = 4000)
    public void test01515() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.clearStackToTableContext();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test01616() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
    }

    @Test(timeout = 4000)
    public void test01717() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.clearStackToTableBodyContext();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test01818() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
    }

    @Test(timeout = 4000)
    public void test01919() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("VE");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
    }

    @Test(timeout = 4000)
    public void test02020() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope((String[]) null);
        Element element0 = null;
    }

    @Test(timeout = 4000)
    public void test02121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test02222() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.originalState();
        String string0 = "";
        // Undeclared exception!
        try {
            htmlTreeBuilder0.getFromStack("");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.newPendingTableCharacters();
    }

    @Test(timeout = 4000)
    public void test02525() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("even");
    }

    @Test(timeout = 4000)
    public void test02626() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("DyZYVk!");
    }

    @Test(timeout = 4000)
    public void test02727() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getDocument();
    }

    @Test(timeout = 4000)
    public void test02828() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("VE");
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("VE", document0, "VE", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("yEyE", "yEyE");
        htmlTreeBuilder0.insert("yEyE");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Token.Character> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        htmlTreeBuilder0.setPendingTableCharacters(list0);
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("<html>\n <head />\n <body>\n  s\n </body>\n</html>", "<html>\n <head />\n <body>\n  s\n </body>\n</html>");
    }

    @Test(timeout = 4000)
    public void test03333() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.TreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test03434() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("qvz[PaGdca&8._lfI6");
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("VyEyE", "VyEyE");
        htmlTreeBuilder0.aboveOnStack(document0);
    }

    @Test(timeout = 4000)
    public void test03636() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("T=/e", "T=/e");
        htmlTreeBuilder0.isInActiveFormattingElements(document0);
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test03737() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("listing");
    }

    @Test(timeout = 4000)
    public void test03838() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("tbody", "tbody");
        htmlTreeBuilder0.generateImpliedEndTags("tbody");
    }

    @Test(timeout = 4000)
    public void test03939() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("{Ykr~%6a5dQ_;LV");
    }

    @Test(timeout = 4000)
    public void test04040() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("td", "td");
        Token.Doctype token_Doctype0 = new Token.Doctype();
        htmlTreeBuilder0.process(token_Doctype0);
        document0.normalise();
    }

    @Test(timeout = 4000)
    public void test04242() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.clearStackToTableRowContext();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test04343() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("VyEyE", "VyEyE");
        htmlTreeBuilder0.clearStackToTableRowContext();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test04444() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = "w|)@&j~BA";
        Document document0 = htmlTreeBuilder0.parse("w|)@&j~BA", "w|)@&j~BA");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.insertOnStackAfter(document0, document0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Must be true
            //
            verifyException("org.jsoup.helper.Validate", e);
        }
    }

    @Test(timeout = 4000)
    public void test04545() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("VE", "VE");
        htmlTreeBuilder0.inSelectScope("VE");
    }

    @Test(timeout = 4000)
    public void test04646() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.state();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "5HKPDj<7o=#<\u0006u=";
        stringArray0[1] = "N7?.RMH@^!WaY";
        stringArray0[2] = "^d32<B";
        stringArray0[3] = "{_$)7BwF@^1>Y5`ch/L";
        stringArray0[4] = "del";
        stringArray0[6] = "Fhn";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test04747() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(true);
        htmlTreeBuilder0.parse("|", "|");
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test04848() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Mu", "Mu");
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("Mu", attributes0);
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test04949() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("VyEyE", "VyEyE");
        htmlTreeBuilder0.inListItemScope("VyEyE");
    }

    @Test(timeout = 4000)
    public void test05050() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("AttributeName", "AttributeName");
        htmlTreeBuilder0.inScope("AttributeName");
    }

    @Test(timeout = 4000)
    public void test05151() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("J+", "J+");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.getActiveFormattingElement("J+");
    }

    @Test(timeout = 4000)
    public void test05252() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        htmlTreeBuilder0.getActiveFormattingElement(":5f\"i+|k},bN(k");
    }

    @Test(timeout = 4000)
    public void test05353() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("<!--", "<!--");
    }

    @Test(timeout = 4000)
    public void test05454() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("QU+/");
        htmlTreeBuilder0.isSpecial(document0);
    }

    @Test(timeout = 4000)
    public void test05555() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.pop();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test05656() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.popStackToBefore("ue");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test05757() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags((String) null);
    }

    @Test(timeout = 4000)
    public void test05858() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.framesetOk();
    }

    @Test(timeout = 4000)
    public void test05959() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        Document document0 = htmlTreeBuilder0.parse("{&l+A{xmn_v{'\"", "fieldet");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
    }

    @Test(timeout = 4000)
    public void test06060() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Feh", "Feh");
        htmlTreeBuilder0.popStackToClose("Feh");
        htmlTreeBuilder0.generateImpliedEndTags("Feh");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.pop();
            fail("Expecting exception: NoSuchElementException");
        } catch (NoSuchElementException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.LinkedList", e);
        }
    }

    @Test(timeout = 4000)
    public void test06161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.markInsertionMode();
    }

    @Test(timeout = 4000)
    public void test06262() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test06363() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ud", "ud");
        Element element0 = htmlTreeBuilder0.insert("ud");
        htmlTreeBuilder0.popStackToBefore("ud");
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test06464() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("\u0005o=]CYhBJ:/[unN6", "\u0005o=]CYhBJ:/[unN6");
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("9i", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
        htmlTreeBuilder0.maybeSetBaseUri(formElement0);
    }

    @Test(timeout = 4000)
    public void test06565() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFormElement();
        htmlTreeBuilder0.setFormElement((FormElement) null);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.maybeSetBaseUri((Element) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test06666() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("WE@", "WE@");
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("WE@", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        htmlTreeBuilder0.maybeSetBaseUri(formElement0);
    }

    @Test(timeout = 4000)
    public void test06767() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Mu", "Mu");
        Element element0 = document0.body();
        htmlTreeBuilder0.removeFromStack(element0);
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("{Yu[P", (Element) null, "{Yu[P", (ParseErrorList) null);
        htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test06969() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse(":cntains(%s", ":cntains(%s");
        Element element0 = htmlTreeBuilder0.insert("colgroup");
        htmlTreeBuilder0.insertOnStackAfter(element0, element0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test07070() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("ue", "ue");
        Element element0 = document0.createElement("ue");
        htmlTreeBuilder0.parseFragment("ue", element0, "ue", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test07171() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        DescendableLinkedList<Element> descendableLinkedList0 = new DescendableLinkedList<Element>();
        htmlTreeBuilder0.stack = descendableLinkedList0;
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        Document document0 = htmlTreeBuilder0.parse("c)2in", "c)2in", (ParseErrorList) null);
        document0.createElement("k9");
        htmlTreeBuilder0.popStackToClose((String[]) null);
    }

    @Test(timeout = 4000)
    public void test07373() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        String[] stringArray0 = new String[1];
        stringArray0[0] = "ue";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.pop();
        String string0 = "fARe@lC";
    }

    @Test(timeout = 4000)
    public void test07474() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("}='|_-|{b[_B>aXHJ", "}='|_-|{b[_B>aXHJ");
        htmlTreeBuilder0.popStackToClose("}='|_-|{b[_B>aXHJ");
        htmlTreeBuilder0.inSelectScope("thead");
    }

    @Test(timeout = 4000)
    public void test07575() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.initialiseParse("center", "center", (ParseErrorList) null);
        htmlTreeBuilder0.getActiveFormattingElement("center");
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test07676() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("select", "select");
        htmlTreeBuilder0.insert("select");
    }

    @Test(timeout = 4000)
    public void test07777() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("q_G{?>>O,NKA;F", "xmp");
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.getActiveFormattingElement("q_G{?>>O,NKA;F");
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test07878() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        Document document0 = htmlTreeBuilder0.parse("captin", "captin", (ParseErrorList) null);
        Element element0 = document0.createElement("plaintext");
        htmlTreeBuilder0.parseFragment("captin", element0, "captin", (ParseErrorList) null);
        HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
    }

    @Test(timeout = 4000)
    public void test08080() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("1Q-:KJ;cR\"\"'#");
        Element element0 = document0.head();
        htmlTreeBuilder0.parseFragment("1Q-:KJ;cR\"\"'#", element0, "1Q-:KJ;cR\"\"'#", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test08181() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        DescendableLinkedList<Element> descendableLinkedList0 = new DescendableLinkedList<Element>();
        htmlTreeBuilder0.stack = descendableLinkedList0;
        htmlTreeBuilder0.inButtonScope("AfterAttributeValue_quoted");
    }

    @Test(timeout = 4000)
    public void test08282() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("s", "s");
        document0.toString();
        Document document1 = htmlTreeBuilder0.parse("s", "s");
        document1.textNodes();
        ParseErrorList parseErrorList0 = new ParseErrorList(50, 50);
        htmlTreeBuilder0.parseFragment("<html>\n <head />\n <body>\n  s\n </body>\n</html>", document1, "s", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test08383() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("header", "header");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.parse("header", "header");
    }

    @Test(timeout = 4000)
    public void test08484() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("VyEyE", "VyEyE");
        Element element0 = htmlTreeBuilder0.insert("VyEyE");
        htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test08585() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("<b>ZzF&#v", "abs:");
        htmlTreeBuilder0.insert("Unexpected token [%s] when in state [%s]");
        htmlTreeBuilder0.pop();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test08686() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("cIJ:T?5Nnq&A", "html");
        htmlTreeBuilder0.insert("html");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test08787() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("Y");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "h?kuY\"PSR1Vh.", attributes0);
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("Y", formElement0, "Y", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test08888() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse(":cntains(%s", ":cntains(%s");
        htmlTreeBuilder0.insert("colgroup");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test08989() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        Document document0 = new Document("select");
        Element element0 = document0.createElement("select");
        htmlTreeBuilder0.parseFragment("select", element0, "select", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test09090() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("ue");
        String[] stringArray0 = new String[1];
        stringArray0[0] = "ue";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.pop();
        htmlTreeBuilder0.inSelectScope("fARe@lC");
    }

    @Test(timeout = 4000)
    public void test09191() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("ue");
        htmlTreeBuilder0.inSelectScope("ue");
    }

    @Test(timeout = 4000)
    public void test09292() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("VyEyE");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test09393() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("tr");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test09494() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("body", "body");
        htmlTreeBuilder0.generateImpliedEndTags("body");
    }

    @Test(timeout = 4000)
    public void test09595() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("ue");
        htmlTreeBuilder0.popStackToClose("ue");
        Document document0 = htmlTreeBuilder0.parse("N^aQ@Qtt", "N^aQ@Qtt");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
    }

    @Test(timeout = 4000)
    public void test09696() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(4614, 4614);
        htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("table");
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.getActiveFormattingElement("table");
        htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test09797() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("yEy");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Document document1 = htmlTreeBuilder0.parse("yEy", "yEy");
        htmlTreeBuilder0.insertInFosterParent(document1);
    }

    @Test(timeout = 4000)
    public void test09898() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("ue", "ue");
        Element element0 = document0.head();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test09999() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("VoyEE", "VoyEE");
        Element element0 = document0.body();
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        htmlTreeBuilder0.aboveOnStack(element1);
    }

    @Test(timeout = 4000)
    public void test100100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("VP5=2D0*8/?yww{l", "VP5=2D0*8/?yww{l");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test101101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("text", "text");
        htmlTreeBuilder0.getFromStack(")jqbMP<pHN~-");
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        ParseErrorList.tracking((-1795451356));
        htmlTreeBuilder0.parseFragment(")jqbMP<pHN~-", document0, "<l;^Yu\"vW)]SW{", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test102102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("c)2in");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Token.Character token_Character0 = new Token.Character("c)2in");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-2491));
        htmlTreeBuilder0.parseFragment("c)2in", document0, "c)2in", parseErrorList0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.parseFragment("c)2in", document0, "SYSTEM", parseErrorList0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.pop();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test103103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("td", "td");
        htmlTreeBuilder0.insert("td");
        htmlTreeBuilder0.resetInsertionMode();
        Token.Character token_Character0 = new Token.Character("td");
        htmlTreeBuilder0.insert(token_Character0);
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test104104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("7CyE", "caption");
        htmlTreeBuilder0.insert("caption");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test105105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("ue");
        htmlTreeBuilder0.getFromStack("ue");
    }

    @Test(timeout = 4000)
    public void test106106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("noscript");
        tag0.setSelfClosing();
        Element element0 = new Element(tag0, "(SqY7");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment(":matches", element0, "noscript", parseErrorList0);
        htmlTreeBuilder0.getFormElement();
    }

    @Test(timeout = 4000)
    public void test107107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ud", "ud");
        Element element0 = htmlTreeBuilder0.insert("script");
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        ParseErrorList parseErrorList1 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("U,~^", element0, "script", parseErrorList1);
    }

    @Test(timeout = 4000)
    public void test108108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("e8|Qpr7$", (Element) null, "e8|Qpr7$", (ParseErrorList) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        token_StartTag0.name("e8|Qpr7$");
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test109109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("table", "table");
        htmlTreeBuilder0.insert("table");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test110110() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("table", (Element) null, "table", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.insert("table");
        htmlTreeBuilder0.insertInFosterParent(element0);
    }

    @Test(timeout = 4000)
    public void test111111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("lI0L`2kf9nx:", (Element) null, "lI0L`2kf9nx:", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag("fieldset");
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
        htmlTreeBuilder0.parseFragment("lI0L`2kf9nx:", formElement0, "fieldset", parseErrorList0);
        HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
        htmlTreeBuilder1.generateImpliedEndTags("lI0L`2kf9nx:");
    }

    @Test(timeout = 4000)
    public void test112112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("yEy");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test113113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("ue", "ue");
        htmlTreeBuilder0.insert("frameset");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test114114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("table", "tbody");
        htmlTreeBuilder0.insert(document0);
        htmlTreeBuilder0.insert("tbody");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test115115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("thead", "thead");
        htmlTreeBuilder0.insert("thead");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test116116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("e8|Qpr7$", (Element) null, "e8|Qpr7$", (ParseErrorList) null);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        token_StartTag0.name("b");
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test117117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("tfoot", "tfoot");
        htmlTreeBuilder0.insert("tfoot");
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test118118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("td", "td");
        htmlTreeBuilder0.insert("td");
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test119119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("[u{\"*_rc5P. ", "[u{\"*_rc5P. ");
        Element element0 = htmlTreeBuilder0.insert("xmp");
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("td", element0, "[CDATA[", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test120120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
        htmlTreeBuilder1.parse("", "");
        Element element0 = htmlTreeBuilder1.insert("title");
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        HtmlTreeBuilder htmlTreeBuilder2 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList1 = htmlTreeBuilder2.errors;
        htmlTreeBuilder1.parseFragment("title", element0, "html", (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test121121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("r", "ud");
        DescendableLinkedList<Node> descendableLinkedList0 = new DescendableLinkedList<Node>();
        Element element0 = htmlTreeBuilder0.insert("ud");
        htmlTreeBuilder0.inButtonScope("r");
        HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
        String string0 = "select";
        Document document0 = element0.ownerDocument();
        Document document1 = (Document) document0.removeAttr("ud");
        String[] stringArray0 = new String[8];
        stringArray0[0] = "r";
        document0.getElementsByAttributeValueNot("extended", "6D'}Bb9-Vn2o]");
        stringArray0[1] = "ud";
        stringArray0[2] = "ud";
        stringArray0[3] = "ud";
        stringArray0[4] = "r";
        stringArray0[5] = "ud";
        stringArray0[6] = "ud";
        stringArray0[7] = "r";
        htmlTreeBuilder0.inScope("r", stringArray0);
        document1.text("select");
        htmlTreeBuilder0.resetInsertionMode();
        Tag.valueOf("r");
        htmlTreeBuilder1.inButtonScope("select");
        htmlTreeBuilder0.generateImpliedEndTags(string0);
    }

    @Test(timeout = 4000)
    public void test122122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("ud", "ud");
        DescendableLinkedList<Node> descendableLinkedList0 = new DescendableLinkedList<Node>();
        Document document1 = Document.createShell("ud");
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        document1.classNames((Set<String>) linkedHashSet0);
        document1.body();
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document1);
        htmlTreeBuilder0.maybeSetBaseUri(document1);
        htmlTreeBuilder0.insert((Token.Character) null);
    }

    @Test(timeout = 4000)
    public void test123123() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(4614, 4614);
        htmlTreeBuilder0.parseFragment("table", (Element) null, "table", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("table");
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.aboveOnStack(element0);
        htmlTreeBuilder0.resetInsertionMode();
        Document document0 = new Document("'AFE=$,9E)ou,^y");
        htmlTreeBuilder0.parse("'AFE=$,9E)ou,^y", "RCDATAEndTagOpen");
        htmlTreeBuilder0.getActiveFormattingElement("");
        htmlTreeBuilder0.clearStackToTableContext();
        htmlTreeBuilder0.resetInsertionMode();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
        String string0 = "(Q#W6";
        htmlTreeBuilder1.inListItemScope(string0);
        HtmlTreeBuilder htmlTreeBuilder2 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder2.currentElement();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test124124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        htmlTreeBuilder0.parseFragment("table", (Element) null, "table", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.insert("table");
        element0.remove();
        htmlTreeBuilder0.insertInFosterParent(element0);
    }
}
