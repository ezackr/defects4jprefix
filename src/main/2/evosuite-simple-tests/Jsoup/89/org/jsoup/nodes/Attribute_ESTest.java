/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 08:58:47 GMT 2024
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("&amp;", "&amp;");
        attribute0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = Attribute.createFromEncoded("*:,z:]9zmtvm", "*:,z:]9zmtvm");
        attributes0.put(attribute0);
        String string0 = attribute0.setValue("*:,z:]9zmtvm");
        assertEquals("*:,z:]9zmtvm", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Attribute attribute0 = new Attribute("data-", "data-");
        boolean boolean0 = attribute0.isDataAttribute();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Attribute attribute0 = new Attribute("T1o]", (String) null);
        Attribute attribute1 = attribute0.clone();
        boolean boolean0 = attribute0.equals(attribute1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Attribute attribute0 = new Attribute("T1o]", (String) null);
        Attribute attribute1 = attribute0.clone();
        boolean boolean0 = attribute0.equals(attribute1);
        assertEquals("", attribute1.getValue());
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Attribute attribute0 = new Attribute(" HE$`~]", " HE$`~]");
        assertEquals("HE$`~]", attribute0.getKey());
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        Attribute attribute0 = new Attribute(" HE$`~]", " HE$`~]");
        attribute0.setKey(" HE$`~]");
        assertEquals(" HE$`~]", attribute0.getValue());
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("5Fcry~p-K[s254[uD", "5Fcry~p-K[s254[uD", attributes0);
        attribute0.setKey("5Fcry~p-K[s254[uD");
        assertEquals("5Fcry~p-K[s254[uD", attribute0.getValue());
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("xL", "xL");
        attributes0.put(attribute0);
        attribute0.setKey("xL");
        assertEquals("xL", attribute0.getValue());
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("5Fcry~p-K[s254[uD", "5Fcry~p-K[s254[uD", attributes0);
        String string0 = attribute0.setValue("5Fcry~p-K[s254[uD");
        assertEquals("5Fcry~p-K[s254[uD", attribute0.getValue());
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("5Fcry~p-K[s254[uD", "5Fcry~p-K[s254[uD", attributes0);
        String string0 = attribute0.setValue("5Fcry~p-K[s254[uD");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("open", "open");
        String string0 = attribute0.html();
        assertEquals("open", string0);
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        boolean boolean0 = Attribute.isDataAttribute("d5R|eeb^5z4J`*+u");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        boolean boolean0 = Attribute.isDataAttribute("data-accA");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("strong", "strong");
        Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
        Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
        Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
        boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        Attribute attribute0 = new Attribute("center", (String) null);
        String string0 = attribute0.toString();
        assertEquals("center", string0);
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("N", "");
        String string0 = attribute0.html();
        assertEquals("N=\"\"", string0);
    }

    @Test(timeout = 4000)
    public void test1417() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("noshade", "noshade");
        boolean boolean0 = attribute0.isBooleanAttribute();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1518() throws Throwable {
        Attribute attribute0 = new Attribute("ac:cA", (String) null);
        boolean boolean0 = attribute0.isBooleanAttribute();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("data-accA", "data-accA");
        boolean boolean0 = attribute0.isBooleanAttribute();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1720() throws Throwable {
        Attribute attribute0 = new Attribute("d5R|eeb^5z4J`*+u", (String) null);
        Attribute attribute1 = new Attribute("d5R|eeb^5z4J`*+u", "d5R|eeb^5z4J`*+u");
        boolean boolean0 = attribute0.equals(attribute1);
        assertTrue(attribute1.equals((Object) attribute0));
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Attribute attribute0 = new Attribute("d5R|eeb^5z4J`*+u", (String) null);
        Attribute attribute1 = new Attribute("d5R|eeb^5z4J`*+u", "d5R|eeb^5z4J`*+u");
        boolean boolean0 = attribute0.equals(attribute1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1822() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("data-ac:cA", "data-ac:cA");
        boolean boolean0 = attribute0.equals(attribute0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1923() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("data-accA", "data-accA");
        boolean boolean0 = attribute0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2024() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("vqa!x2U+b", "vqa!x2U+b");
        boolean boolean0 = attribute0.equals("vqa!x2U+b");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2125() throws Throwable {
        Attribute attribute0 = Attribute.createFromEncoded("formnovalidate", "formnovalidate");
        Attribute attribute1 = new Attribute("rp", "rp");
        boolean boolean0 = attribute0.equals(attribute1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2226() throws Throwable {
        Attribute attribute0 = new Attribute("data-ac:cA", "data-ac:cA");
        Attribute attribute1 = attribute0.clone();
        boolean boolean0 = attribute0.equals(attribute1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2327() throws Throwable {
        Attribute attribute0 = new Attribute("center", (String) null);
        attribute0.hashCode();
        assertEquals("", attribute0.getValue());
    }

    @Test(timeout = 4000)
    public void test2428() throws Throwable {
        Attribute attribute0 = new Attribute("W(Y2PF?K,", "W(Y2PF?K,");
        attribute0.hashCode();
    }
}
