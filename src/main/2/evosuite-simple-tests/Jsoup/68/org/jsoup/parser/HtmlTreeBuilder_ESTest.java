/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:11:11 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("fieldset", (Element) null, "fieldset", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.processStartTag("fieldset");
        htmlTreeBuilder0.inSelectScope("fieldset");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.replaceOnStack(document0, document0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("th", element0, "pfw^dA=lre!d{|1<Cp", (ParseErrorList) null, parseSettings0);
        Tag tag0 = Tag.valueOf("th");
        Comment comment0 = new Comment("li", "'6");
        Attributes attributes0 = comment0.attributes();
        FormElement formElement0 = new FormElement(tag0, "th", attributes0);
        htmlTreeBuilder0.pushActiveFormattingElements(formElement0);
        htmlTreeBuilder0.processStartTag("Bek");
        htmlTreeBuilder0.resetInsertionMode();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        assertNull(element0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("isindex", (Element) null, "utHi be tse", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("isindex");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.inListItemScope("U|~");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.TreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("meta");
        htmlTreeBuilder0.parseFragment("meta", element0, "meta", (ParseErrorList) null, (ParseSettings) null);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("meta");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        assertEquals(2, parseErrorList0.size());
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        boolean boolean0 = htmlTreeBuilder0.processStartTag("T@@+8`Fck;e; wALG");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.insertMarkerToFormattingElements();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.clearStackToTableRowContext();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("fieldset", (Element) null, "fieldset", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.processStartTag("select");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.inScope((String[]) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<String> arrayList0 = new ArrayList<String>();
        htmlTreeBuilder0.setPendingTableCharacters(arrayList0);
        assertTrue(arrayList0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
        assertNull(document0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("{Q\"/e@)!vB;E28y?-");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.isInActiveFormattingElements(element0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        StringReader stringReader0 = new StringReader("caption");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "caption", (ParseErrorList) null, parseSettings0);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Must be true
            //
            verifyException("org.jsoup.helper.Validate", e);
        }
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.push((Element) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("th", element0, "th", (ParseErrorList) null, parseSettings0);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.processEndTag("th");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("U</2S~G#J6\"", (Element) null, "U</2S~G#J6\"", parseErrorList0, parseSettings0);
        assertEquals(1, list0.size());
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.clearStackToTableContext();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test2324() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("title");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("fghdnjo7Z8W", element0, "fghdnjo7Z8W", parseErrorList0, parseSettings0);
        assertEquals(1, list0.size());
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("script");
        htmlTreeBuilder0.parseFragment("script", element0, "script", parseErrorList0, parseSettings0);
        Attributes attributes0 = new Attributes();
        CharacterReader characterReader0 = htmlTreeBuilder0.reader;
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.nameAttr("script", attributes0);
        htmlTreeBuilder0.insert(token_StartTag0);
        String[] stringArray0 = new String[1];
        stringArray0[0] = "script";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        Element element0 = new Element("noscript");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parseFragment("org.jsoup.parser.CharacterReader", element0, "noscript", (ParseErrorList) null, (ParseSettings) null);
        htmlTreeBuilder0.clearStackToTableBodyContext();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("plaintext");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("plaintext", element0, "th", (ParseErrorList) null, parseSettings0);
        assertFalse(list0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf("fieldset", parseSettings0);
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "fieldset", attributes0);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("fieldset", formElement0, "fieldset", (ParseErrorList) null, parseSettings0);
        assertEquals(1, list0.size());
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("<OSwJn\"p^4P5'F1:fRj");
        htmlTreeBuilder0.parseFragment("<OSwJn\"p^4P5'F1:fRj", element0, "<OSwJn\"p^4P5'F1:fRj", parseErrorList0, parseSettings0);
        assertFalse(parseErrorList0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("<OSwJn\"p^4P5'F1:fRj");
        htmlTreeBuilder0.parseFragment("<OSwJn\"p^4P5'F1:fRj", element0, "<OSwJn\"p^4P5'F1:fRj", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        htmlTreeBuilder0.maybeSetBaseUri(formElement0);
        assertEquals("<OSwJn\"p^4P5'F1:fRj", formElement0.baseUri());
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("E/_kN<", element0, "pfw^dA=lre!d{|1<Cp", parseErrorList0, parseSettings0);
        assertEquals(1, parseErrorList0.size());
    }

    @Test(timeout = 4000)
    public void test2932() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("E/_kN<", element0, "pfw^dA=lre!d{|1<Cp", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.selfClosing = true;
        Attributes attributes0 = new Attributes();
        token_StartTag0.nameAttr(">m&H)+|uf-vDM", attributes0);
        Element element1 = htmlTreeBuilder0.insert(token_StartTag0);
        assertEquals("pfw^dA=lre!d{|1<Cp", element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test3033() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("prom^");
        htmlTreeBuilder0.parseFragment("prom^", element0, "prom^", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertStartTag("script");
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
        assertNull(token_Character0.toString());
    }

    @Test(timeout = 4000)
    public void test3134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("style");
        htmlTreeBuilder0.parseFragment("prom^", element0, "prom^", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.insertStartTag("style");
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
        assertNull(token_Character0.toString());
    }

    @Test(timeout = 4000)
    public void test3235() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("select");
        htmlTreeBuilder0.parseFragment("tble", element0, "select", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(element0);
        assertEquals(1, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test3336() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("th", element0, "th", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 748);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("&6A");
        htmlTreeBuilder0.parseFragment("&6A", element0, "&6A", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToClose("href");
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("blockquote");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("^VN", document0, "~bW5x4v", parseErrorList0, (ParseSettings) null);
        String[] stringArray0 = new String[5];
        stringArray0[2] = "Z>arpah";
        stringArray0[3] = "blockquote";
        stringArray0[4] = "~bW5x4v";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        assertEquals(5, stringArray0.length);
    }

    @Test(timeout = 4000)
    public void test3639() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("table");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.inSelectScope("table");
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Should not be reachable
            //
            verifyException("org.jsoup.helper.Validate", e);
        }
    }

    @Test(timeout = 4000)
    public void test3740() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("tHib`e tse", (Element) null, "tHib`e tse", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.processStartTag("tHib`e tse");
        htmlTreeBuilder0.popStackToBefore("tHib`e tse");
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test3841() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 748);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("&6A");
        htmlTreeBuilder0.parseFragment("&6A", element0, "&6A", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("href");
        htmlTreeBuilder0.clearStackToTableBodyContext();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test3942() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader(" C{X'^u*");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parse(stringReader0, " C{X'^u*", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.clearStackToTableBodyContext();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test4043() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("tHib`e tse", (Element) null, "tHib`e tse", parseErrorList0, parseSettings0);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.aboveOnStack((Element) null);
            fail("Expecting exception: AssertionError");
        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test4144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("<OSwJn\"p^4P5'F1:fRj");
        htmlTreeBuilder0.parseFragment("<OSwJn\"p^4P5'F1:fRj", element0, "<OSwJn\"p^4P5'F1:fRj", parseErrorList0, parseSettings0);
        assertEquals(1, parseErrorList0.size());
    }

    @Test(timeout = 4000)
    public void test4145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("<OSwJn\"p^4P5'F1:fRj");
        htmlTreeBuilder0.parseFragment("<OSwJn\"p^4P5'F1:fRj", element0, "<OSwJn\"p^4P5'F1:fRj", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Element element1 = htmlTreeBuilder0.insert(token_StartTag0);
        htmlTreeBuilder0.insert(token_StartTag0);
        Element element2 = htmlTreeBuilder0.aboveOnStack(element1);
        assertNotSame(element1, element2);
    }

    @Test(timeout = 4000)
    public void test4246() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("table", element0, "table", parseErrorList0, (ParseSettings) null);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.insertOnStackAfter(element0, element0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // Must be true
            //
            verifyException("org.jsoup.helper.Validate", e);
        }
    }

    @Test(timeout = 4000)
    public void test4347() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        Document document0 = new Document("~bW5x4v");
        htmlTreeBuilder0.parseFragment("~bW5x4v", document0, "bsble", parseErrorList0, (ParseSettings) null);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertOnStackAfter(element0, document0);
        assertFalse(document0.hasParent());
    }

    @Test(timeout = 4000)
    public void test4448() throws Throwable {
        StringReader stringReader0 = new StringReader("caption");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "caption", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test4549() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 748);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("&6A");
        htmlTreeBuilder0.parseFragment("&6A", element0, "&6A", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("href");
        htmlTreeBuilder0.resetInsertionMode();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test4650() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("th", element0, "pfw^dA=lre!d{|1<Cp", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.processStartTag("pfw^dA=lre!d{|1<Cp");
        htmlTreeBuilder0.resetInsertionMode();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test4751() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("td");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("td", element0, "td", parseErrorList0, parseSettings0);
        assertFalse(list0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4852() throws Throwable {
        Element element0 = new Element("tr");
        Element element1 = element0.append("tr");
        assertEquals("", element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test4953() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Element element0 = new Element("tbody");
        htmlTreeBuilder0.parseFragment("scdipt", element0, "tbody", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("tbody");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5054() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("thead");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.parseFragment("thead", element0, "thead", (ParseErrorList) null, (ParseSettings) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test5155() throws Throwable {
        Element element0 = new Element("tfoot");
        Element element1 = element0.append("tfoot");
        assertEquals(1, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test5256() throws Throwable {
        Element element0 = new Element("caption");
        Element element1 = element0.append("caption");
        assertEquals(0, element1.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test5357() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("colgroup");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("scrpt", element0, "colgroup", parseErrorList0, (ParseSettings) null);
        assertEquals(0, list0.size());
    }

    @Test(timeout = 4000)
    public void test5458() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("head");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Gx=$kV1o`", element0, "Gx=$kV1o`", (ParseErrorList) null, (ParseSettings) null);
        assertEquals(1, list0.size());
    }

    @Test(timeout = 4000)
    public void test5559() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("fieldset", (Element) null, "fieldset", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test5660() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("frameset");
        List<Node> list0 = htmlTreeBuilder0.parseFragment("<OSwJn\"p^4P5'F1:fRj", element0, "<OSwJn\"p^4P5'F1:fRj", parseErrorList0, parseSettings0);
        assertEquals(0, list0.size());
    }

    @Test(timeout = 4000)
    public void test5761() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("html");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(913);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("html", element0, "html", parseErrorList0, parseSettings0);
        assertEquals(2, list0.size());
    }

    @Test(timeout = 4000)
    public void test5862() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        StringReader stringReader0 = new StringReader("Ye");
        htmlTreeBuilder0.initialiseParse(stringReader0, "Ye", parseErrorList0, (ParseSettings) null);
        boolean boolean0 = htmlTreeBuilder0.inScope("Ye");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5963() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("isindex", (Element) null, "utHi be tse", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inTableScope("isindex");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6064() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("th", element0, "th", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.generateImpliedEndTags("th");
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test6165() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("meta");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        htmlTreeBuilder0.parseFragment("meta", element0, "meta", (ParseErrorList) null, parseSettings0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
        assertNull(element1);
    }

    @Test(timeout = 4000)
    public void test6266() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("G8YfU]3z_g.");
        htmlTreeBuilder0.parseFragment("G8YfU]3z_g.", document0, "G8YfU]3z_g.", (ParseErrorList) null, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        // Undeclared exception!
        try {
            htmlTreeBuilder0.reconstructFormattingElements();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test6367() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Element element0 = new Element("th");
        htmlTreeBuilder0.parseFragment("E/_kN<", element0, "pfw^dA=lre!d{|1<Cp", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        token_StartTag0.nameAttr(">m&H)+|uf-vDM", attributes0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.insert(token_StartTag0);
        htmlTreeBuilder0.pushActiveFormattingElements(element1);
        assertEquals("pfw^dA=lre!d{|1<Cp", element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test6468() throws Throwable {
        StringReader stringReader0 = new StringReader("caption");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "caption", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test6569() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 56);
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("^Rt^^'a{?OK(t;,<|8", element0, "script", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test6670() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 56);
        Element element0 = new Element("table");
        htmlTreeBuilder0.parseFragment("^Rt^^'a{?OK(t;,<|8", element0, "script", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.reconstructFormattingElements();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test6771() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        Document document0 = Document.createShell("~bW5x4v");
        htmlTreeBuilder0.parseFragment("Z>arpah", document0, "~bW5x4v", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test6872() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("", (Element) null, "", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
    }

    @Test(timeout = 4000)
    public void test6973() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("section");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "section", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test7074() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("blockquote");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "blockquote", (ParseErrorList) null, parseSettings0);
        Document document1 = new Document("blockquote");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document1);
        assertEquals("#document", document1.nodeName());
    }

    @Test(timeout = 4000)
    public void test7175() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Element element0 = new Element("Ye");
        htmlTreeBuilder0.parseFragment("Ye", element0, "Ye", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("jF'I!~i@+fwwi1K");
        assertNull(element1);
    }

    @Test(timeout = 4000)
    public void test7276() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("blockquote");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("^VN", document0, "~bW5x4v", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("Z>arpah");
        assertNull(element0);
    }

    @Test(timeout = 4000)
    public void test7377() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Element element0 = new Element("select");
        htmlTreeBuilder0.parseFragment("tble", element0, "select", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("select");
        assertFalse(element1.isBlock());
    }
}
