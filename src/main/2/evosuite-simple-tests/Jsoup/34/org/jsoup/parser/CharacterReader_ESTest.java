/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 03:12:27 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        characterReader0.rewindToMark();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("f]");
        characterReader0.mark();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        characterReader0.advance();
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("jb", string0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        characterReader0.advance();
        String string0 = characterReader0.consumeLetterSequence();
        String string1 = characterReader0.consumeDigitSequence();
        assertEquals("2", string1);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        characterReader0.unconsume();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        String string0 = characterReader0.toString();
        assertEquals("^jb2^~g<$<4v!-", string0);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        assertEquals("N", string0);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
        assertEquals("p!s$!\"0n^", string1);
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
        String string2 = characterReader0.consumeDigitSequence();
        assertEquals("", string2);
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        int int0 = characterReader0.pos();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
        boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
        boolean boolean1 = characterReader0.matchesDigit();
        assertFalse(boolean1 == boolean0);
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
        boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
        boolean boolean1 = characterReader0.matchesDigit();
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`1*vz+F`<>Ky&=m");
        char char0 = characterReader0.current();
        assertEquals('`', char0);
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        char char0 = characterReader0.consume();
        assertEquals('^', char0);
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<ps`yF#K");
        boolean boolean0 = characterReader0.matchConsume("<ps`yF#K");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<ps`yF#K");
        boolean boolean0 = characterReader0.matchConsume("<ps`yF#K");
        char char0 = characterReader0.consume();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<ps`yF#K");
        String string0 = characterReader0.consumeTo('\"');
        assertEquals("<ps`yF#K", string0);
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.containsIgnoreCase("1MT");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1520() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeTo("y9D!o$Qu3|2|hac:cA74");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        // Undeclared exception!
        try {
            characterReader0.containsIgnoreCase("4e");
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 19
            //
            verifyException("org.jsoup.parser.CharacterReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("1MT");
        boolean boolean0 = characterReader0.containsIgnoreCase("1MT");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        char[] charArray0 = new char[4];
        charArray0[3] = 's';
        String string0 = characterReader0.consumeToAny(charArray0);
        assertEquals("Np!", string0);
    }

    @Test(timeout = 4000)
    public void test1924() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        String string0 = characterReader0.consumeToAny((char[]) null);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2025() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeTo('Q');
        assertEquals("y9!o$", string0);
    }

    @Test(timeout = 4000)
    public void test2128() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeTo('Q');
        String string1 = characterReader0.consumeLetterSequence();
        assertEquals("Qu", string1);
    }

    @Test(timeout = 4000)
    public void test2229() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Etd{lj,Jp1vkX");
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("Etd", string0);
    }

    @Test(timeout = 4000)
    public void test2330() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
        boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2331() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("<pY`y#K");
        boolean boolean0 = characterReader0.matchConsume("<pY`y#K");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2432() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        assertEquals("y9", string0);
    }

    @Test(timeout = 4000)
    public void test2433() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2534() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("A|:9]e");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        assertEquals("A", string0);
    }

    @Test(timeout = 4000)
    public void test2635() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2636() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchConsume("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2737() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2838() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeAsString();
        assertEquals("y", string0);
    }

    @Test(timeout = 4000)
    public void test2839() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeHexSequence();
        assertEquals("9", string1);
    }

    @Test(timeout = 4000)
    public void test2940() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("KDf<fn1Z[L54");
        String string0 = characterReader0.consumeAsString();
        assertEquals("K", string0);
    }

    @Test(timeout = 4000)
    public void test2941() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("KDf<fn1Z[L54");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeHexSequence();
        assertEquals("Df", string1);
    }

    @Test(timeout = 4000)
    public void test3042() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test3143() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(" Z\"ihRwn4");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test3244() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        assertEquals("N", string0);
    }

    @Test(timeout = 4000)
    public void test3245() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
        assertEquals("p!s$!\"0n^", string1);
    }

    @Test(timeout = 4000)
    public void test3246() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        String string1 = characterReader0.consumeTo("Np!s$!\"0n^");
        boolean boolean0 = characterReader0.matches('V');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3347() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matches('D');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3448() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        assertEquals("y9", string0);
    }

    @Test(timeout = 4000)
    public void test3449() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9D!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matches('D');
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3550() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchConsume("org.jsoup.helper.Validate");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        boolean boolean0 = characterReader0.matchConsume("IcP~(9,g5k)");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3752() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        assertEquals("N", string0);
    }

    @Test(timeout = 4000)
    public void test3753() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("Np!s$!\"0n^");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3854() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("N");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3955() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        assertEquals("N", string0);
    }

    @Test(timeout = 4000)
    public void test3956() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("N");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4057() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        char[] charArray0 = new char[8];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4158() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[7];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4259() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeTo('h');
        assertEquals("y9!o$Qu3|2|", string0);
    }

    @Test(timeout = 4000)
    public void test4260() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        String string0 = characterReader0.consumeTo('h');
        char[] charArray0 = new char[8];
        charArray0[2] = 'h';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4361() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4462() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        assertEquals("Np", string0);
    }

    @Test(timeout = 4000)
    public void test4463() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Np!s$!\"0n^");
        String string0 = characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4564() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("A|:9]e");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4665() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("y9!o$Qu3|2|hac:cA74");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4766() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("{H&,n(sDN_EUH-X'");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4867() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("1MT");
        boolean boolean0 = characterReader0.matchesDigit();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4968() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("^jb2^~g<$<4v!-");
        boolean boolean0 = characterReader0.containsIgnoreCase("^jb2^~g<$<4v!-");
        assertTrue(boolean0);
    }
}
