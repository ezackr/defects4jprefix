/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:32:11 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        StringReader stringReader0 = new StringReader("k^`");
        CharacterReader characterReader0 = new CharacterReader(stringReader0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        StringReader stringReader0 = new StringReader("k^`");
        CharacterReader characterReader0 = new CharacterReader(stringReader0);
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Object mu+t not be nuSl");
        characterReader0.rewindToMark();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Object mu+t not be nuSl");
        characterReader0.rewindToMark();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("JoWmo E;9F@*T5KMzp");
        characterReader0.mark();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("JoWmo E;9F@*T5KMzp");
        characterReader0.mark();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8E~Z9!+3!UZ@");
        characterReader0.advance();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.toString();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.ChracterR%Ider");
        characterReader0.consume();
        characterReader0.consumeTo("org.jsoup.parser.ChracterR%Ider");
        assertEquals(31, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
        // Undeclared exception!
        try {
            characterReader0.rangeEquals(296, 296, (String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.CharacterReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0710() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("PI4]ro|u:4VT:\"c");
        int int0 = characterReader0.pos();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test0711() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("PI4]ro|u:4VT:\"c");
        int int0 = characterReader0.pos();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        StringReader stringReader0 = new StringReader("");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        assertTrue(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test0914() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0915() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1016() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Qb");
        char char0 = characterReader0.current();
        assertEquals('Q', char0);
    }

    @Test(timeout = 4000)
    public void test1017() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Qb");
        char char0 = characterReader0.current();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1118() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1119() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1220() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1221() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1322() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Object mu+t not be nuSl");
        characterReader0.consumeTo('a');
        assertEquals(23, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1423() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not contain any null objects");
        characterReader0.consumeTo('o');
        assertEquals(12, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1524() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(" x");
        boolean boolean0 = characterReader0.containsIgnoreCase(" x");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1525() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(" x");
        boolean boolean0 = characterReader0.containsIgnoreCase(" x");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1626() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not 'ontain any null objects");
        boolean boolean0 = characterReader0.containsIgnoreCase("Array|must not 'ontain any null objects");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1627() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not 'ontain any null objects");
        boolean boolean0 = characterReader0.containsIgnoreCase("Array|must not 'ontain any null objects");
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test1628() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not 'ontain any null objects");
        boolean boolean0 = characterReader0.containsIgnoreCase("Array|must not 'ontain any null objects");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1729() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterR%Ider");
        characterReader0.consumeTo("org.jsoup.parser.CharacterR%Ider");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1730() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterR%Ider");
        characterReader0.consumeTo("org.jsoup.parser.CharacterR%Ider");
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test1831() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not contain any null objects");
        char[] charArray0 = new char[2];
        charArray0[0] = 'o';
        characterReader0.consumeToAny(charArray0);
        assertEquals(12, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1932() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[0];
        characterReader0.consumeToAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2033() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        char[] charArray0 = new char[1];
        charArray0[0] = '\\';
        characterReader0.consumeToAnySorted(charArray0);
        assertEquals(7, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2134() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[0];
        characterReader0.consumeToAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2235() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeData();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2336() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("AxIPaDN8~{?\"jE&j4O5");
        characterReader0.consumeData();
        assertEquals(14, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2437() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("h<V^~Q{5`6oy");
        characterReader0.consumeData();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2538() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("String must not be empty");
        characterReader0.consumeTagName();
        assertEquals(6, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2639() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("%5|pgxMliqMG/S!ZQ^");
        characterReader0.consumeTagName();
        assertEquals(12, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2740() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("=b*8X>p:T)+");
        characterReader0.consumeTagName();
        assertEquals(5, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2841() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeTagName();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2942() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeLetterSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3043() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("lO%_`*t3");
        characterReader0.consumeLetterSequence();
        characterReader0.consumeTagName();
        assertEquals(8, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3144() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8Eg~Z9!+3!UZ@");
        characterReader0.consumeLetterSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3245() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("r");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("r");
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3246() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("r");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("r");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3347() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2u+'");
        characterReader0.consumeLetterThenDigitSequence();
        characterReader0.unconsume();
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3448() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Object must not be null");
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(6, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3549() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,*Eg~Z9!+3!UZ@");
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3650() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeHexSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3751() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2u+'");
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3852() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("! _6~{q6W<S1]Wk+V");
        characterReader0.consumeHexSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3953() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("d?6(!-fJlZhE.pE@gp[");
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4054() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array|must not 'ontain any null objects");
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4155() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test4256() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        characterReader0.consumeDigitSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4357() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("*`Ehm");
        characterReader0.consumeDigitSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4358() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("*`Ehm");
        characterReader0.consumeDigitSequence();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4459() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches('(');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4460() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches('(');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4561() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrayCmust not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matches('A');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4562() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrayCmust not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matches('A');
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4663() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("JoWmo Em;9F@*T5KMzp");
        boolean boolean0 = characterReader0.matches('(');
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4664() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("JoWmo Em;9F@*T5KMzp");
        boolean boolean0 = characterReader0.matches('(');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4665() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("JoWmo Em;9F@*T5KMzp");
        boolean boolean0 = characterReader0.matches('(');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4766() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E_oGV,S");
        boolean boolean0 = characterReader0.matchConsume("E");
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4767() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E_oGV,S");
        boolean boolean0 = characterReader0.matchConsume("E");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4868() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches("}?>iL+S0a");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4869() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches("}?>iL+S0a");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4970() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E_oGV,S");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchConsume("E");
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4971() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E_oGV,S");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchConsume("E");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5072() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("String must not be empty");
        boolean boolean0 = characterReader0.matchesIgnoreCase("f+:'Ld&`LIQS#7s1YI");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5073() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("String must not be empty");
        boolean boolean0 = characterReader0.matchesIgnoreCase("f+:'Ld&`LIQS#7s1YI");
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test5074() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("String must not be empty");
        boolean boolean0 = characterReader0.matchesIgnoreCase("f+:'Ld&`LIQS#7s1YI");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5175() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("EJoGV5S");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchesIgnoreCase("EJoGV5S");
        assertEquals(6, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5176() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("EJoGV5S");
        characterReader0.consumeLetterThenDigitSequence();
        boolean boolean0 = characterReader0.matchesIgnoreCase("EJoGV5S");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5277() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8Eg~Z9!+3!UZ@");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("e{,8Eg~Z9!+3!UZ@");
        assertEquals(16, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5278() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8Eg~Z9!+3!UZ@");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("e{,8Eg~Z9!+3!UZ@");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5379() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(")]jix~!HMCe");
        char[] charArray0 = new char[2];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5380() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(")]jix~!HMCe");
        char[] charArray0 = new char[2];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5381() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(")]jix~!HMCe");
        char[] charArray0 = new char[2];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test5482() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesAny((char[]) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5483() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesAny((char[]) null);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5584() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(")]jix~!HMCe");
        char[] charArray0 = new char[2];
        charArray0[0] = ')';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5585() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(")]jix~!HMCe");
        char[] charArray0 = new char[2];
        charArray0[0] = ')';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5686() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[0];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5687() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[0];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5788() throws Throwable {
        char[] charArray0 = new char[1];
        CharacterReader characterReader0 = new CharacterReader("Array!must not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5789() throws Throwable {
        char[] charArray0 = new char[1];
        CharacterReader characterReader0 = new CharacterReader("Array!must not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test5790() throws Throwable {
        char[] charArray0 = new char[1];
        CharacterReader characterReader0 = new CharacterReader("Array!must not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5891() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = 'A';
        CharacterReader characterReader0 = new CharacterReader("Array!must not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5892() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = 'A';
        CharacterReader characterReader0 = new CharacterReader("Array!must not 'ontain ano nul+ obje<ts");
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5993() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("{p?m'm5}q|!4YYQl%B");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5994() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("{p?m'm5}q|!4YYQl%B");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test5995() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("{p?m'm5}q|!4YYQl%B");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6096() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6097() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6198() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("3IUK=Uy;2t'LkL6gE");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6199() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("3IUK=Uy;2t'LkL6gE");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test61100() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("3IUK=Uy;2t'LkL6gE");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test62101() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Z)-f6Q:T<(A{P}Q?");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test62102() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Z)-f6Q:T<(A{P}Q?");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test63103() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8Eg~Z9!+3!9@");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test63104() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("e{,8Eg~Z9!+3!9@");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test64105() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test64106() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        boolean boolean0 = characterReader0.matchesDigit();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test65107() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("/Fv*5E+<2oOl");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test65108() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("/Fv*5E+<2oOl");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test65109() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("/Fv*5E+<2oOl");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test66110() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ZW.HQ)N^940P\"I(gR=");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test66111() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ZW.HQ)N^940P\"I(gR=");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(characterReader0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test66112() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ZW.HQ)N^940P\"I(gR=");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test67113() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        boolean boolean0 = characterReader0.containsIgnoreCase("2;V2IR'");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test67114() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2;V2IR'");
        boolean boolean0 = characterReader0.containsIgnoreCase("2;V2IR'");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test68115() throws Throwable {
        char[] charArray0 = new char[8];
        boolean boolean0 = CharacterReader.rangeEquals(charArray0, 6, 6, "k)KB|y");
        assertFalse(boolean0);
    }
}
