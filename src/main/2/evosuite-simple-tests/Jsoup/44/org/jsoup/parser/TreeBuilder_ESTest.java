/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 04:32:36 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.HtmlTreeBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TreeBuilder_ESTest extends TreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        // Undeclared exception!
        try {
            htmlTreeBuilder0.generateImpliedEndTags("");
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        TextNode textNode0 = new TextNode("@l1Z={bh_'*", "label");
        Attributes attributes0 = textNode0.attributes();
        // Undeclared exception!
        try {
            htmlTreeBuilder0.processStartTag("", attributes0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("ejLg;=`mCF'-$5", "");
        assertEquals("", document0.baseUri());
    }
}
