/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:32:24 GMT 2024
 */
package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell(":");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        TextNode textNode0 = TextNode.createFromEncoded(":");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(textNode0, (-726));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell(")");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        String string0 = w3CDom0.asString(document1);
        assertEquals("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body></body>\n</html>\n", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        DataNode dataNode0 = new DataNode("", ":eq(%d)");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(dataNode0, (-1470966214));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell(":");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        Comment comment0 = new Comment(":", ":");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(comment0, (-54819115));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
        }
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("[{");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        w3CDom_W3CBuilder0.head((Node) null, (-9));
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell(":");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        w3CDom_W3CBuilder0.tail((Node) null, (-184));
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("[{");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("org.jsoup.helper.W3CDom", parseSettings0);
        Attributes attributes0 = new Attributes();
        Attribute attribute0 = new Attribute("org.jsoup.helper.W3CDom", "[{");
        Attributes attributes1 = attributes0.put(attribute0);
        PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "[{", attributes1);
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(pseudoTextElement0, (-9));
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
        }
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("[{");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("org.jsoup.helper.W3CDom", parseSettings0);
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("[{", ";y5jFWP>Ev/.juX+IL");
        PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "[{", attributes1);
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(pseudoTextElement0, (-9));
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
        }
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell(":");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        document0.attr("xmlns", "d>Fx[!5}<`<rBD-=oJR");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(document0, (-1093016641));
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
        }
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("[{");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        Attributes attributes0 = document0.attributes();
        attributes0.put("xmlns:;y5jFWP>Ev/.juX+IL", "[{");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(document0, (-362969766));
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        W3CDom w3CDom0 = new W3CDom();
        Document document0 = Document.createShell("[a-zA-Z_:][-a-zA-Z0-9_:.]*");
        org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
        W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
        Element element0 = document0.tagName("s-P58:K,");
        // Undeclared exception!
        try {
            w3CDom_W3CBuilder0.head(element0, 178);
            fail("Expecting exception: DOMException");
        } catch (DOMException e) {
        }
    }
}
