/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 07:23:56 GMT 2024
 */
package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals((-3701));
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IndexEquals0);
        String string0 = structuralEvaluator_Not0.toString();
        assertEquals(":not:eq(-3701)", string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(28);
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IndexLessThan0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(:lt(28))", string0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastChild0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(:last-child)", string0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":prev*:first-of-type", ":prev*:first-of-type");
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_AttributeWithValueStarting0);
        String string0 = structuralEvaluator_Not0.toString();
        assertEquals(":not[:prev*:first-of-type^=:prev*:first-of-type]", string0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("FKUnvkiPhQEV", "FKUnvkiPhQEV");
        StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_AttributeWithValue0);
        String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
        assertEquals(":prev[fkunvkiphqev=fkunvkiphqev]", string0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("name", "name");
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueNot0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has([name!=name])", string0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-2037));
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IndexGreaterThan0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(:gt(-2037))", string0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
        StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsOnlyOfType0);
        String string0 = structuralEvaluator_Parent0.toString();
        assertEquals(":parent:only-of-type", string0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
        StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsEmpty0);
        String string0 = structuralEvaluator_PreviousSibling0.toString();
        assertEquals(":prev*:empty", string0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("", (Pattern) null);
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_AttributeWithValueMatching0);
        // Undeclared exception!
        try {
            structuralEvaluator_Not0.toString();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.select.Evaluator$AttributeWithValueMatching", e);
        }
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsFirstChild0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:first-child", string0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("#PY*hvc8ahN", "#PY*hvc8ahN");
        StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_AttributeWithValueEnding0);
        String string0 = structuralEvaluator_Parent0.toString();
        assertEquals(":parent[#py*hvc8ahn$=#py*hvc8ahn]", string0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsOnlyChild0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:only-child", string0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("TAS}_FW");
        String string0 = evaluator_AttributeStarting0.toString();
        assertEquals("[^tas}_fw]", string0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IsRoot0);
        String string0 = structuralEvaluator_Not0.toString();
        assertEquals(":not:root", string0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(33, 33);
        StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsNthOfType0);
        String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
        assertEquals(":prev:nth-of-type(33n+33)", string0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("'[a-zA-Z_:][-a-zA-Z0-9_:.]*", "'[a-zA-Z_:][-a-zA-Z0-9_:.]*");
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueContaining0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(['[a-za-z_:][-a-za-z0-9_:.]**='[a-za-z_:][-a-za-z0-9_:.]*])", string0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Document document0 = Document.createShell("%s");
        Elements elements0 = document0.getElementsMatchingText("%s");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Pattern pattern0 = Pattern.compile("CharacterReferenceInData");
        Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_Matches0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(:matches(CharacterReferenceInData))", string0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("");
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_ContainsText0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:contains()", string0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Document document0 = Document.createShell("{%s");
        Elements elements0 = document0.getElementsContainingText("{%s");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(110, 110);
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsNthChild0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:nth-child(110n+110)", string0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, (-2890));
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthChild0);
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("skdm");
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_ContainsData0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:containsData(skdm)", string0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("header");
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_ContainsData0);
        // Undeclared exception!
        try {
            structuralEvaluator_Not0.matches((Element) null, (Element) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.jsoup.select.Evaluator$ContainsData", e);
        }
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Document document0 = Document.createShell("'4`i,hw");
        Evaluator.Id evaluator_Id0 = new Evaluator.Id("'4`i,hw");
        boolean boolean0 = document0.is((Evaluator) evaluator_Id0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Evaluator.Id evaluator_Id0 = new Evaluator.Id("\"KFDlCQg+jWTm");
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_Id0);
        String string0 = structuralEvaluator_Not0.toString();
        assertEquals(":not#\"KFDlCQg+jWTm", string0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Evaluator.Class evaluator_Class0 = new Evaluator.Class("i\"{`fA|m.M$`\")5T");
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_Class0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(.i\"{`fA|m.M$`\")5T)", string0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.parser.Token$TokenType");
        Elements elements0 = document0.getElementsByClass("org.jsoup.parser.Token$TokenType");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, 0);
        StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsNthLastChild0);
        String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
        assertEquals(":prev:nth-last-child(0)", string0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
        Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(64, 64);
        structuralEvaluator_Has0.evaluator = (Evaluator) evaluator_IsNthLastChild0;
        Document document0 = Document.createShell(".%s");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Document document0 = new Document("attributeameCharsSorted");
        Elements elements0 = document0.getElementsMatchingOwnText("attributeameCharsSorted");
        assertEquals(0, elements0.size());
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn((Pattern) null);
        StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_MatchesOwn0);
        String string0 = structuralEvaluator_ImmediateParent0.toString();
        assertEquals(":ImmediateParent:matchesOwn(null)", string0);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
        StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsLastOfType0);
        String string0 = structuralEvaluator_Parent0.toString();
        assertEquals(":parent:last-of-type", string0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("Comment");
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
        Document document0 = Document.createShell("Comment");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("py9^OM(0");
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
        String string0 = structuralEvaluator_Has0.toString();
        assertEquals(":has(py9^OM(0)", string0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.parser.Token$TokenTyde");
        Elements elements0 = document0.getElementsByAttribute("org.jsoup.parser.Token$TokenTyde");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("9wvZ");
        StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_Attribute0);
        String string0 = structuralEvaluator_PreviousSibling0.toString();
        assertEquals(":prev*[9wvZ]", string0);
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("#root n/ckT&-xA|O?");
        Element element0 = new Element("n");
        boolean boolean0 = evaluator_ContainsOwnText0.matches(element0, element0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("PA\"XD}SN");
        StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_ContainsOwnText0);
        String string0 = structuralEvaluator_Not0.toString();
        assertEquals(":not:containsOwn(pa\"xd}sn)", string0);
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("~;L'U\"ODO)EC:>{,");
        String string0 = evaluator_Tag0.toString();
        assertEquals("~;L'U\"ODO)EC:>{,", string0);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsFirstOfType0);
        String string0 = structuralEvaluator_PreviousSibling0.toString();
        assertEquals(":prev*:first-of-type", string0);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
        String string0 = evaluator_AllElements0.toString();
        assertEquals("*", string0);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("TAS}_FW");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        Tag tag0 = Tag.valueOf("TAS}_FW", parseSettings0);
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("TAS}_FW", true);
        Element element0 = new Element(tag0, "TAS}_FW", attributes1);
        boolean boolean0 = evaluator_AttributeStarting0.matches(element0, element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("null");
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        Tag tag0 = Tag.valueOf("tbody", parseSettings0);
        Comment comment0 = new Comment("Insert position out of bounds.", "fz4");
        Attributes attributes0 = comment0.attributes();
        FormElement formElement0 = new FormElement(tag0, "!Ld0!b%$|tB%R8", attributes0);
        boolean boolean0 = evaluator_AttributeStarting0.matches(formElement0, formElement0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        Elements elements0 = document0.getElementsByAttributeValue("KFDlCQg+jWTm", "KFDlCQg+jWTm");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        Document document0 = new Document("$S<~}z.{>iCh@^#I-");
        document0.attr("$S<~}z.{>iCh@^#I-", "'j3DCQ+jW$m");
        Elements elements0 = document0.getElementsByAttributeValue("$S<~}z.{>iCh@^#I-", "'j3DCQ+jW$m");
        assertEquals(1, elements0.size());
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        Document document0 = new Document("$K<~}z.{>iCh#I-");
        document0.attr("P7FxNfYZB#-", "$K<~}z.{>iCh#I-");
        Elements elements0 = document0.getElementsByAttributeValue("P7FxNfYZB#-", "sous r3e");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        Document document0 = Document.createShell(":first-child");
        Elements elements0 = document0.getElementsByAttributeValueNot("'psn.N{f", "\r\n");
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        Document document0 = Document.createShell("attributeNameCharsSorted");
        Elements elements0 = document0.getElementsByAttributeValueNot("attributeNameCharsSorted", "attributeNameCharsSorted");
        assertEquals(4, elements0.size());
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("8C2|n/jLiw|", "8C2|n/jLiw|");
        Document document0 = new Document("8C2|n/jLiw|");
        boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":prev*:first-of-type", ":prev*:first-of-type");
        Tag tag0 = Tag.valueOf("PQ|XmO\"");
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put(":prev*:first-of-type", true);
        Element element0 = new Element(tag0, "|H>)G`oX", attributes1);
        boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(element0, element0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("\"RCDATAEndTagName", ":only-of-type");
        Document document0 = Document.createShell("\"RCDATAEndTagName");
        Tag tag0 = Tag.valueOf(":only-of-type");
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("\"RCDATAEndTagName", ":only-of-type");
        FormElement formElement0 = new FormElement(tag0, ":only-of-type", attributes1);
        boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(document0, formElement0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        Document document0 = Document.createShell("'4`i,hw");
        Elements elements0 = document0.getElementsByAttributeValueEnding("'4`i,hw", "'4`i,hw");
        assertEquals(0, elements0.size());
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        Document document0 = Document.createShell("{%s");
        document0.attr("{%s", "{%s");
        Elements elements0 = document0.getElementsByAttributeValueEnding("{%s", "{%s");
        assertEquals(1, elements0.size());
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf("KFDlCQg+jWTm", parseSettings0);
        Attributes attributes0 = new Attributes();
        Attributes attributes1 = attributes0.put("KFDlCQg+jWTm", "KFDlCQg+jWTm");
        FormElement formElement0 = new FormElement(tag0, "KFDlCQg+jWTm", attributes1);
        Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("KFDlCQg+jWTm", "\"'':first-of-type");
        boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(formElement0, formElement0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        Document document0 = Document.createShell(".%s");
        Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining(".%s", ".%s");
        boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf("KFDlCQg+jWTm", parseSettings0);
        Attributes attributes0 = new Attributes();
        attributes0.put("KFDlCQg+jWTm", "KFDlCQg+jWTm");
        FormElement formElement0 = new FormElement(tag0, "\"\"RCDATAEndTagName", attributes0);
        Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("KFDlCQg+jWTm", "\"\"RCDATAEndTagName");
        boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, formElement0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf("&Gnf[w", parseSettings0);
        Attributes attributes0 = new Attributes();
        attributes0.put("KFDlCQg+jWTm", "KFDlCQg+jWTm");
        FormElement formElement0 = new FormElement(tag0, "KFDlCQg+jWTm", attributes0);
        Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("KFDlCQg+jWTm", "KFDlCQg+jWTm");
        boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, formElement0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5959() throws Throwable {
        Document document0 = Document.createShell("{%s");
        document0.attr("{%s", "{%s");
        Pattern pattern0 = Pattern.compile("'j3dlcq+jw$m", (-140370323));
        Elements elements0 = document0.getElementsByAttributeValueMatching("{%s", pattern0);
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test6060() throws Throwable {
        Document document0 = Document.createShell("bI");
        Tag tag0 = Tag.valueOf("bI");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "bI", attributes0);
        attributes0.put("bI", "2IvoQ/vD");
        Pattern pattern0 = Pattern.compile("2IvoQ/vD");
        Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("bI", pattern0);
        boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(document0, formElement0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6161() throws Throwable {
        Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = null;
        try {
            evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("\"", "\"");
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test6262() throws Throwable {
        Document document0 = Document.createShell("ScriptDataEscapedLessthanSign");
        // Undeclared exception!
        try {
            document0.getElementsByAttributeValue("ScriptDataEscapedLessthanSign", "'");
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test6363() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.parser.Token$TokenType");
        Elements elements0 = document0.getElementsByIndexLessThan((-2383));
        assertTrue(elements0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test6464() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.parser.Token$TokenType");
        Elements elements0 = document0.getElementsByIndexLessThan(2);
        assertEquals(3, elements0.size());
    }

    @Test(timeout = 4000)
    public void test6565() throws Throwable {
        Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(901);
        Document document0 = Document.createShell("T0dEt$M");
        boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6666() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.parser.Token$TokenType");
        Elements elements0 = document0.getElementsByIndexGreaterThan((-518));
        assertEquals(4, elements0.size());
    }

    @Test(timeout = 4000)
    public void test6767() throws Throwable {
        Document document0 = Document.createShell(".%s");
        Elements elements0 = document0.getElementsByIndexEquals(1);
        assertEquals(1, elements0.size());
    }

    @Test(timeout = 4000)
    public void test6868() throws Throwable {
        Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
        Element element0 = new Element("f");
        boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6969() throws Throwable {
        Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastChild0);
        Document document0 = Document.createShell("7K\"eoQ1Jq#:^");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7070() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        boolean boolean0 = evaluator_IsFirstOfType0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7171() throws Throwable {
        Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
        Document document0 = new Document("K");
        Document document1 = document0.normalise();
        Element element0 = document1.body();
        boolean boolean0 = evaluator_IsLastOfType0.matches(element0, element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7272() throws Throwable {
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
        Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-134), 3);
        structuralEvaluator_Has0.evaluator = (Evaluator) evaluator_IsNthOfType0;
        Document document0 = Document.createShell(".%s");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7373() throws Throwable {
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
        Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(14, 1);
        structuralEvaluator_Has0.evaluator = (Evaluator) evaluator_IsNthOfType0;
        Document document0 = Document.createShell(".%s");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7474() throws Throwable {
        Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(3, 0);
        String string0 = evaluator_IsNthLastOfType0.toString();
        assertEquals(":nth-last-of-type(3n)", string0);
    }

    @Test(timeout = 4000)
    public void test7575() throws Throwable {
        Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
        Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
        structuralEvaluator_Has0.evaluator = (Evaluator) evaluator_IsLastOfType0;
        Document document0 = Document.createShell(".%s");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7676() throws Throwable {
        Document document0 = Document.createShell("x^.WrMHj|jn(LR");
        Elements elements0 = document0.select(":first-child");
        assertEquals(1, elements0.size());
    }

    @Test(timeout = 4000)
    public void test7777() throws Throwable {
        Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
        boolean boolean0 = evaluator_IsRoot0.matches((Element) null, (Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7878() throws Throwable {
        Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
        Document document0 = Document.createShell("org.jsoup.select.Evaluator$MatchesOwn");
        boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test7979() throws Throwable {
        Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
        Document document0 = Document.createShell("\"sous r3e");
        boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8080() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyChild0);
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8181() throws Throwable {
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf(":prevT0/f*", parseSettings0);
        Element element0 = new Element(tag0, ":prevT0/f*");
        Document document0 = new Document("T0/f*");
        element0.appendChild(document0);
        Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
        boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test8282() throws Throwable {
        Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
        Document document0 = Document.createShell(".%s");
        boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8383() throws Throwable {
        Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
        StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyOfType0);
        Document document0 = Document.createShell("JQ)'&tHd");
        boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test8484() throws Throwable {
        Document document0 = Document.createShell("\"RCDATAEndTagName");
        Element element0 = document0.body();
        element0.before("VD");
        Element element1 = element0.selectFirst(":only-of-type");
        assertNull(element1);
    }

    @Test(timeout = 4000)
    public void test8585() throws Throwable {
        Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
        Document document0 = new Document("&5");
        boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test8686() throws Throwable {
        Document document0 = Document.createShell("KFDlCQg+jWTm");
        Comment comment0 = new Comment((String) null);
        Element element0 = document0.prependChild(comment0);
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        Tag tag0 = Tag.valueOf("&G?nf[w", parseSettings0);
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "\"\"RCDATAEndTagName", attributes0);
        Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
        boolean boolean0 = evaluator_IsEmpty0.matches(formElement0, element0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8787() throws Throwable {
        Document document0 = Document.createShell("attributeNameCharsSorted");
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("JT.GgJeu6$J>iqM%G", false);
        document0.prependChild(xmlDeclaration0);
        Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
        boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test8888() throws Throwable {
        Document document0 = Document.createShell("attributeNameCharsSorted");
        DocumentType documentType0 = new DocumentType("{.{%m-w5", "{.{%m-w5", "{.{%m-w5", "{.{%m-w5", "{.{%m-w5");
        document0.prependChild(documentType0);
        Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
        boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
        assertFalse(boolean0);
    }
}
