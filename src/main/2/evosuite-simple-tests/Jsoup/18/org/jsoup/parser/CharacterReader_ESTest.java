/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 01:46:25 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        characterReader0.rewindToMark();
        assertEquals(";BcExK(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("?o(iQp9\"b*S");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
        assertEquals("?o(iQp9\"b*S", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("?o(iQp9\"b*S");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        characterReader0.mark();
        assertEquals("`^b/03q", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        boolean boolean0 = characterReader0.matchConsume("{E5Br9\"$&%qt}T\"EI");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        boolean boolean0 = characterReader0.matchConsume("{E5Br9\"$&%qt}T\"EI");
        assertEquals(";BcExK(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("?o(iQp9\"b*S");
        characterReader0.unconsume();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Must be false");
        String string0 = characterReader0.toString();
        assertEquals("Must be false", string0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        int int0 = characterReader0.pos();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("zlv2`P[*6");
        char[] charArray0 = new char[2];
        characterReader0.consumeToAny(charArray0);
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        char char0 = characterReader0.current();
        assertEquals(';', char0);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        // Undeclared exception!
        try {
            characterReader0.consumeTo('s');
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
        String string0 = characterReader0.consumeTo('r');
        assertEquals("o", string0);
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
        String string0 = characterReader0.consumeTo('r');
        assertEquals("rg.jsoup.parser.CharacterReader", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("H:jREtd{lj,");
        characterReader0.consumeToEnd();
        // Undeclared exception!
        try {
            characterReader0.consumeTo("H:jREtd{lj,");
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test1417() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        String string0 = characterReader0.consumeTo(";BcExK(rM$L=uZQ");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1418() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        String string0 = characterReader0.consumeTo(";BcExK(rM$L=uZQ");
        assertEquals(";BcExK(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1519() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yF'8FT#C;Sb^X");
        char[] charArray0 = new char[2];
        charArray0[0] = 'y';
        String string0 = characterReader0.consumeToAny(charArray0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        characterReader0.consumeAsString();
        characterReader0.consumeLetterSequence();
        assertEquals("(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1822() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("|+GD8|0>X(yiF]y");
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1923() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2024() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("|+GD8|0>X(yiF]y");
        characterReader0.advance();
        characterReader0.consumeHexSequence();
        assertEquals("+GD8|0>X(yiF]y", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2125() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.consumeHexSequence();
        assertEquals("{`vC", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2226() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        characterReader0.consumeAsString();
        characterReader0.consumeHexSequence();
        assertEquals("xK(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2327() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2428() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
        characterReader0.consumeLetterSequence();
        characterReader0.consumeDigitSequence();
        assertEquals(".jsoup.parser.CharacterReader", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2529() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("0^/[-'7ZJ8:PDoXQa");
        characterReader0.consumeDigitSequence();
        assertEquals("^/[-'7ZJ8:PDoXQa", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2630() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches(';');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2731() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        boolean boolean0 = characterReader0.matches('D');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2832() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        boolean boolean0 = characterReader0.matches(';');
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        char[] charArray0 = new char[3];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3034() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Q");
        char[] charArray0 = new char[2];
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3035() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Q");
        char[] charArray0 = new char[2];
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3136() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        char[] charArray0 = new char[2];
        charArray0[0] = ';';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3237() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3338() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3439() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals("{`vC", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3440() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3541() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objectsorg.jsoup.parser.CharacterReader");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3642() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yF'8FT#C;Sb^X");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3743() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        boolean boolean0 = characterReader0.matchesDigit();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3844() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Q");
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Q");
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yF'8FT#C;Sb^X");
        characterReader0.consume();
        characterReader0.consume();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("'8FT#C;Sb^X", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3947() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("yF'8FT#C;Sb^X");
        characterReader0.consume();
        characterReader0.consume();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4048() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("{`vC", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4150() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("?o(iQp9\"b*S");
        boolean boolean0 = characterReader0.matchConsume("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4151() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("?o(iQp9\"b*S");
        boolean boolean0 = characterReader0.matchConsume("");
        assertEquals("?o(iQp9\"b*S", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4252() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("2{`vC");
        assertEquals("{`vC", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4253() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2{`vC");
        characterReader0.advance();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("2{`vC");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4354() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        boolean boolean0 = characterReader0.containsIgnoreCase("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4455() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        characterReader0.consume();
        boolean boolean0 = characterReader0.containsIgnoreCase("`^b/03q");
        assertEquals("^b/03q", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4456() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("`^b/03q");
        characterReader0.consume();
        boolean boolean0 = characterReader0.containsIgnoreCase("`^b/03q");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4557() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("YHW)4");
        boolean boolean0 = characterReader0.containsIgnoreCase("YHW)4");
        assertTrue(boolean0);
    }
}
