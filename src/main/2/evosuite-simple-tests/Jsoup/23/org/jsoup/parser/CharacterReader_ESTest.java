/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 02:01:27 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.rewindToMark();
        assertEquals("'-vzzmc{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("'-vzzmc{,/A}*yW,KUm");
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("'-vzzmc{,/A}*yW,KUm");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.mark();
        assertEquals("'-vzzmc{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.advance();
        assertEquals("?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchConsume("f");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchConsume("f");
        assertEquals("'-vzzmc{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.unconsume();
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        String string0 = characterReader0.toString();
        assertEquals("'-vzzmc{,/A}*yW,KUm", string0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.consumeAsString();
        characterReader0.consume();
        characterReader0.consumeLetterSequence();
        characterReader0.consume();
        characterReader0.consumeHexSequence();
        assertEquals(",/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        String string0 = characterReader0.consumeTo('k');
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        String string0 = characterReader0.consumeTo('k');
        assertEquals("E", string0);
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        int int0 = characterReader0.pos();
        assertEquals("nQ8rkOpQq9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        int int0 = characterReader0.pos();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1015() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("E", string0);
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        char char0 = characterReader0.current();
        assertEquals('\n', char0);
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        char char0 = characterReader0.current();
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        char char0 = characterReader0.current();
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1219() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        char char0 = characterReader0.current();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1320() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        String string0 = characterReader0.consumeTo('?');
        assertEquals("?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1422() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        String string0 = characterReader0.consumeTo('?');
        assertEquals("\n", string0);
    }

    @Test(timeout = 4000)
    public void test1523() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("H:jREtd{lj,");
        characterReader0.consumeToEnd();
        String string0 = characterReader0.consumeTo("H:jREtd{lj,");
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1624() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeTo("");
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1725() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        char[] charArray0 = new char[5];
        charArray0[2] = '9';
        characterReader0.consumeToAny(charArray0);
        assertEquals("9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1826() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[2];
        String string0 = characterReader0.consumeToAny(charArray0);
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test1927() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        assertEquals("MhFw]fUdY$V{;", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test1928() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        characterReader0.consumeToEnd();
        String string0 = characterReader0.consumeLetterSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test2029() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        characterReader0.consumeLetterSequence();
        assertEquals("8rkOpQq9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("4;*g7VZ+41P/");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("4", string0);
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("4;*g7VZ+41P/");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals(";*g7VZ+41P/", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("f~=oob3,LZlB8");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("f", string0);
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("f~=oob3,LZlB8");
        String string0 = characterReader0.consumeHexSequence();
        assertEquals("~=oob3,LZlB8", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2334() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        assertEquals("E", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2335() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        characterReader0.consumeAsString();
        characterReader0.consumeDigitSequence();
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2436() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeDigitSequence();
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2537() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        characterReader0.consume();
        characterReader0.consume();
        characterReader0.consumeDigitSequence();
        assertEquals("rkOpQq9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2638() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matches(' ');
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2639() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matches(' ');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2740() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matches('4');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2741() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matches('4');
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test2842() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        boolean boolean0 = characterReader0.matches('M');
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2943() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        char[] charArray0 = new char[6];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2944() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        char[] charArray0 = new char[6];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals("nQ8rkOpQq9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3045() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        assertEquals("MhFw]fUdY$V{;", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3046() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        characterReader0.consumeToEnd();
        char[] charArray0 = new char[8];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3147() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        characterReader0.consumeAsString();
        char[] charArray0 = new char[6];
        charArray0[0] = 'Q';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals("Q8rkOpQq9Nq)C/*", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3148() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("nQ8rkOpQq9Nq)C/*");
        characterReader0.consumeAsString();
        char[] charArray0 = new char[6];
        charArray0[0] = 'Q';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3249() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3250() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals("'-vzzmc{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3351() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        assertEquals("MhFw]fUdY$V{;", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3352() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        characterReader0.consumeToEnd();
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3453() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.consumeAsString();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals("vzzmc{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3454() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.consumeAsString();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3555() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        characterReader0.consume();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals("Fw]fUdY$V{;", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3556() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MhFw]fUdY$V{;");
        characterReader0.consume();
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3657() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.consumeAsString();
        characterReader0.consume();
        characterReader0.consumeLetterSequence();
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals("{,/A}*yW,KUm", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3658() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("'-vzzmc{,/A}*yW,KUm");
        characterReader0.consumeAsString();
        characterReader0.consume();
        characterReader0.consumeLetterSequence();
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3759() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3760() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3861() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3862() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3963() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals("?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test3964() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        characterReader0.consumeAsString();
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4065() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("6[WCjY3mZ!-QI\n?");
        boolean boolean0 = characterReader0.matchesDigit();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4166() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchConsume("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4167() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchConsume("");
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4268() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("\r\n?");
        assertEquals("\n?", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4269() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("\r\n?");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("\r\n?");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4370() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        boolean boolean0 = characterReader0.containsIgnoreCase("");
        assertEquals("E", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4371() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        boolean boolean0 = characterReader0.containsIgnoreCase("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4472() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        boolean boolean0 = characterReader0.containsIgnoreCase("J_~x");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4473() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(";BcExK(rM$L=uZQ");
        boolean boolean0 = characterReader0.containsIgnoreCase("J_~x");
        assertEquals(";BcExK(rM$L=uZQ", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4574() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        boolean boolean0 = characterReader0.containsIgnoreCase("E");
        assertEquals("E", characterReader0.toString());
    }

    @Test(timeout = 4000)
    public void test4575() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("E");
        boolean boolean0 = characterReader0.containsIgnoreCase("E");
        assertTrue(boolean0);
    }
}
