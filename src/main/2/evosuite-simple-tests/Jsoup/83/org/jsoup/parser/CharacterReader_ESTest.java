/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 08:14:12 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        StringReader stringReader0 = new StringReader(" ");
        CharacterReader characterReader0 = new CharacterReader(stringReader0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
        characterReader0.mark();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader(".\"!J?h(j BWiN_;");
        characterReader0.advance();
        characterReader0.consumeTagName();
        characterReader0.consumeData();
        assertEquals(15, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
        characterReader0.unconsume();
        assertEquals((-1), characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.toString();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        characterReader0.consumeTo("Object must not be null");
        assertEquals(15, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xz'9Y~%Db~VyHh");
        boolean boolean0 = characterReader0.rangeEquals('\uFFFF', '\uFFFF', "Xz'9Y~%Db~VyHh");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Xz'9Y~%Db~VyHh");
        boolean boolean0 = characterReader0.rangeEquals('\uFFFF', '\uFFFF', "Xz'9Y~%Db~VyHh");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("T6w<Mx!2Tjcwc.");
        int int0 = characterReader0.pos();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        StringReader stringReader0 = new StringReader("");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("!DGwWf2\u0004");
        char char0 = characterReader0.current();
        assertEquals('!', char0);
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("!DGwWf2\u0004");
        char char0 = characterReader0.current();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.current();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("=~_");
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("=~_");
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("=~_");
        characterReader0.consume();
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("=~_");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1521() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char char0 = characterReader0.consume();
        assertEquals('\uFFFF', char0);
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        characterReader0.consumeTo('&');
        assertEquals(15, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
        characterReader0.consumeTo('g');
        assertEquals(2, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P{8Z+K");
        boolean boolean0 = characterReader0.containsIgnoreCase("P{8Z+K");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test1826() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P{8Z+K");
        boolean boolean0 = characterReader0.containsIgnoreCase("P{8Z+K");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1927() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
        boolean boolean0 = characterReader0.containsIgnoreCase("Array must not contain any null objects");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Must be false");
        characterReader0.consumeTo("Must be false");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2129() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,^j f");
        char[] charArray0 = new char[1];
        charArray0[0] = '\"';
        characterReader0.consumeToAny(charArray0);
        assertEquals(2, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2230() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[1];
        characterReader0.consumeToAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2331() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        char[] charArray0 = new char[2];
        charArray0[0] = 'f';
        characterReader0.consumeToAnySorted(charArray0);
        assertEquals(13, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2432() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[0];
        characterReader0.consumeToAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2533() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("MJo_KKS&p\"&5fo:B) ");
        characterReader0.consumeData();
        assertEquals(7, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2634() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("[BUEkAl <\"_\"i3");
        characterReader0.consumeData();
        assertEquals(8, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeData();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2836() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("@2V/8^eTBS 2");
        characterReader0.consumeTagName();
        boolean boolean0 = characterReader0.matchConsume("@2V/8^eTBS 2");
        assertEquals(3, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test2837() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("@2V/8^eTBS 2");
        characterReader0.consumeTagName();
        boolean boolean0 = characterReader0.matchConsume("@2V/8^eTBS 2");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2938() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Yn,h$\"x()}Jg,%xOe>");
        characterReader0.consumeTagName();
        assertEquals(17, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3039() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeTagName();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3140() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeLetterSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3241() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("zLR:TuE`=W7a");
        characterReader0.consumeLetterSequence();
        assertEquals(3, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3342() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("|VZ\"v+`ITz_57Lk");
        characterReader0.consumeLetterSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3443() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P4_YJ4");
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3544() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("t9^,q_diMl");
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(2, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3645() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeHexSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3746() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("arrayqmu?t notscontain any,Nulltobjects");
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3847() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j fS");
        characterReader0.consumeHexSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test3948() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("aD7:v");
        characterReader0.consumeHexSequence();
        assertEquals(3, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        characterReader0.consumeDigitSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4150() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("F(Z");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4151() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("F(Z");
        String string0 = characterReader0.consumeDigitSequence();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test4252() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        characterReader0.consumeDigitSequence();
        assertEquals(1, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4353() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches('m');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4354() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matches('m');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4455() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("!g");
        boolean boolean0 = characterReader0.matches('!');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4456() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("!g");
        boolean boolean0 = characterReader0.matches('!');
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4557() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Must be true");
        boolean boolean0 = characterReader0.matches('m');
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4558() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Must be true");
        boolean boolean0 = characterReader0.matches('m');
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4659() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
        boolean boolean0 = characterReader0.matchConsume("dY2K43y:u,=jJZBx%Ih");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4660() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
        boolean boolean0 = characterReader0.matchConsume("dY2K43y:u,=jJZBx%Ih");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4761() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("2$\"-\"!N_W,`j f;");
        assertEquals(15, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4762() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        boolean boolean0 = characterReader0.matchConsumeIgnoreCase("2$\"-\"!N_W,`j f;");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test4863() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!NW,^j f;");
        boolean boolean0 = characterReader0.matchesIgnoreCase(",");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test4864() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!NW,^j f;");
        boolean boolean0 = characterReader0.matchesIgnoreCase(",");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4965() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("GaI!LjHwnq*Fz");
        char[] charArray0 = new char[1];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4966() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("GaI!LjHwnq*Fz");
        char[] charArray0 = new char[1];
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5067() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesAny((char[]) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5068() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesAny((char[]) null);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5169() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("GaI!LjHwnq*Fz");
        char[] charArray0 = new char[1];
        charArray0[0] = 'G';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5170() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("GaI!LjHwnq*Fz");
        char[] charArray0 = new char[1];
        charArray0[0] = 'G';
        boolean boolean0 = characterReader0.matchesAny(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5271() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[1];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5272() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        char[] charArray0 = new char[1];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5373() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrKy must not contain any null objects");
        char[] charArray0 = new char[3];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5374() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrKy must not contain any null objects");
        char[] charArray0 = new char[3];
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5475() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrKy must not contain any null objects");
        char[] charArray0 = new char[3];
        charArray0[1] = 'A';
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5476() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("ArrKy must not contain any null objects");
        char[] charArray0 = new char[3];
        charArray0[1] = 'A';
        boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5577() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("}?UPJ");
        boolean boolean0 = characterReader0.matchesLetter();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5578() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("}?UPJ");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5679() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array must not contain any nullobjects");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5680() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array must not contain any nullobjects");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5781() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
        boolean boolean0 = characterReader0.matchesLetter();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test5782() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
        boolean boolean0 = characterReader0.matchesLetter();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5883() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P_J4");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test5884() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("P_J4");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5985() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5986() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6087() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("&ZZ$q]sNcyE_7`\"{");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6088() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("&ZZ$q]sNcyE_7`\"{");
        boolean boolean0 = characterReader0.matchesDigit();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test6189() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        boolean boolean0 = characterReader0.matchesDigit();
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6190() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,`j f;");
        boolean boolean0 = characterReader0.matchesDigit();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6291() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,^jf");
        boolean boolean0 = characterReader0.matchConsume("2$\"-\"!N_W,^jf");
        assertEquals(13, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6292() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("2$\"-\"!N_W,^jf");
        boolean boolean0 = characterReader0.matchConsume("2$\"-\"!N_W,^jf");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6393() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("@k");
        boolean boolean0 = characterReader0.containsIgnoreCase("@k");
        assertEquals(0, characterReader0.pos());
    }

    @Test(timeout = 4000)
    public void test6394() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("@k");
        boolean boolean0 = characterReader0.containsIgnoreCase("@k");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test6495() throws Throwable {
        CharacterReader characterReader0 = new CharacterReader("Array must not contain any nullobjects");
        characterReader0.consumeTagName();
        characterReader0.rewindToMark();
        characterReader0.consumeLetterThenDigitSequence();
        assertEquals(5, characterReader0.pos());
    }
}
