/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 08:50:14 GMT 2024
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Tag_ESTest extends Tag_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.isData();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.preserveWhitespace();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Tag tag0 = Tag.valueOf("script");
        boolean boolean0 = tag0.formatAsBlock();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        assertNotNull(tag0);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test038() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test039() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertFalse(tag0.canContainBlock());
    }

    @Test(timeout = 4000)
    public void test0310() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.getName();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test0411() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test0412() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test0413() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test0414() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test0415() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test0416() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.canContainBlock());
    }

    @Test(timeout = 4000)
    public void test0417() throws Throwable {
        Tag tag0 = Tag.valueOf("A!W21O");
        tag0.toString();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test0518() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.isFormListed();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0619() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test0620() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test0621() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test0622() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test0623() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test0624() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0625() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isBlock();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test0726() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0727() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test0728() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test0729() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test0730() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test0731() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test0732() throws Throwable {
        Tag tag0 = Tag.valueOf("&!#O");
        boolean boolean0 = tag0.canContainBlock();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test0833() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.isFormSubmittable();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0934() throws Throwable {
        Tag tag0 = Tag.valueOf("b ");
        assertFalse(tag0.isEmpty());
    }

    @Test(timeout = 4000)
    public void test1035() throws Throwable {
        Tag tag0 = Tag.valueOf("col");
        boolean boolean0 = tag0.isInline();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1136() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test1137() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test1138() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test1139() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test1140() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test1141() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1142() throws Throwable {
        Tag tag0 = Tag.valueOf("V^'tpoQnM6>SKe%Xd");
        boolean boolean0 = tag0.isInline();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test1243() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test1244() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test1245() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test1246() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test1247() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(tag0.isBlock());
    }

    @Test(timeout = 4000)
    public void test1248() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1249() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        boolean boolean0 = tag0.isData();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test1350() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.isSelfClosing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1451() throws Throwable {
        Tag tag0 = Tag.valueOf("header");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1552() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test1553() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test1554() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test1555() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1556() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test1557() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertTrue(tag0.isInline());
    }

    @Test(timeout = 4000)
    public void test1558() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.isSelfClosing();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test1659() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1660() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test1661() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test1662() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test1663() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test1664() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test1665() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertTrue(tag0.isInline());
    }

    @Test(timeout = 4000)
    public void test1666() throws Throwable {
        Tag tag0 = Tag.valueOf("K -QrY-rMgKCl");
        boolean boolean0 = tag0.isKnownTag();
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test1767() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        boolean boolean0 = tag0.isKnownTag();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1868() throws Throwable {
        boolean boolean0 = Tag.isKnownTag("character outside of valid range");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1969() throws Throwable {
        boolean boolean0 = Tag.isKnownTag("s");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2070() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertTrue(tag1.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test2071() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test2072() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test2073() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test2074() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2075() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.isFormListed());
    }

    @Test(timeout = 4000)
    public void test2076() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.canContainBlock());
    }

    @Test(timeout = 4000)
    public void test2077() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(tag1.isData());
    }

    @Test(timeout = 4000)
    public void test2178() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test2179() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test2180() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test2181() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test2182() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2183() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test2184() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test2185() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        boolean boolean0 = tag0.equals(tag0);
        assertTrue(tag0.isInline());
    }

    @Test(timeout = 4000)
    public void test2286() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.isFormListed());
    }

    @Test(timeout = 4000)
    public void test2287() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test2288() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test2289() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.isBlock());
    }

    @Test(timeout = 4000)
    public void test2290() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test2291() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test2292() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2293() throws Throwable {
        Tag tag0 = Tag.valueOf("qR+ekI`;2cG.K0!");
        boolean boolean0 = tag0.equals("qR+ekI`;2cG.K0!");
        assertFalse(tag0.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test2394() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.canContainBlock());
    }

    @Test(timeout = 4000)
    public void test2395() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertTrue(tag1.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test2396() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.isFormSubmittable());
    }

    @Test(timeout = 4000)
    public void test2397() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test2398() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.preserveWhitespace());
    }

    @Test(timeout = 4000)
    public void test2399() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.isData());
    }

    @Test(timeout = 4000)
    public void test23100() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(tag1.isFormListed());
    }

    @Test(timeout = 4000)
    public void test23101() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("TZp,lj 2J{2V");
        boolean boolean0 = tag1.equals(tag0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test24102() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        assertFalse(tag1.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test24103() throws Throwable {
        Tag tag0 = Tag.valueOf("!W21O");
        Tag tag1 = Tag.valueOf("!W21O");
        tag1.setSelfClosing();
        boolean boolean0 = tag0.equals(tag1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test25104() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        tag0.hashCode();
        assertFalse(tag0.isSelfClosing());
    }

    @Test(timeout = 4000)
    public void test25105() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        tag0.hashCode();
        assertTrue(tag0.formatAsBlock());
    }

    @Test(timeout = 4000)
    public void test25106() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        tag0.hashCode();
        assertFalse(tag0.isData());
    }

    @Test(timeout = 4000)
    public void test25107() throws Throwable {
        Tag tag0 = Tag.valueOf("Wab[/HN_\"`^[Qo#o");
        tag0.hashCode();
        assertTrue(tag0.isInline());
    }

    @Test(timeout = 4000)
    public void test26108() throws Throwable {
        Tag tag0 = Tag.valueOf("pre", (ParseSettings) null);
        tag0.hashCode();
    }

    @Test(timeout = 4000)
    public void test27109() throws Throwable {
        Tag tag0 = Tag.valueOf("source");
        tag0.hashCode();
    }

    @Test(timeout = 4000)
    public void test28110() throws Throwable {
        Tag tag0 = Tag.valueOf("select");
        tag0.hashCode();
    }
}
