/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 14:28:16 GMT 2024
 */
package org.apache.commons.compress.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.arj.ArjArchiveEntry;
import org.apache.commons.compress.archivers.dump.DumpArchiveEntry;
import org.apache.commons.compress.utils.ArchiveUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ArchiveUtils_ESTest extends ArchiveUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        byte[] byteArray0 = ArchiveUtils.toAsciiBytes(", firstChapter=");
        // Undeclared exception!
        try {
            ArchiveUtils.toAsciiString(byteArray0, (int) (byte) 43, (int) (byte) 43);
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        byte[] byteArray0 = ArchiveUtils.toAsciiBytes("$VALUES");
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (-3844), (-3844), byteArray0, (-3844), (-3844));
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        byte[] byteArray0 = ArchiveUtils.toAsciiBytes(", firstChapter=");
        boolean boolean0 = ArchiveUtils.matchAsciiBuffer("", byteArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        byte[] byteArray0 = new byte[2];
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        byte[] byteArray0 = new byte[2];
        boolean boolean0 = ArchiveUtils.isEqualWithNull(byteArray0, (byte) 0, (byte) 0, byteArray0, (byte) 0, (byte) 0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        byte[] byteArray0 = ArchiveUtils.toAsciiBytes("");
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, byteArray0, false);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        byte[] byteArray0 = new byte[2];
        String string0 = ArchiveUtils.toAsciiString(byteArray0);
        assertEquals("\u0000\u0000", string0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        ArjArchiveEntry arjArchiveEntry0 = new ArjArchiveEntry();
        String string0 = ArchiveUtils.toString((ArchiveEntry) arjArchiveEntry0);
        assertEquals("-       0 null", string0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        DumpArchiveEntry dumpArchiveEntry0 = new DumpArchiveEntry();
        DumpArchiveEntry.TYPE dumpArchiveEntry_TYPE0 = DumpArchiveEntry.TYPE.DIRECTORY;
        dumpArchiveEntry0.setType(dumpArchiveEntry_TYPE0);
        String string0 = ArchiveUtils.toString((ArchiveEntry) dumpArchiveEntry0);
        assertEquals("d      -1 null", string0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        byte[] byteArray0 = ArchiveUtils.toAsciiBytes(", firstChapter=");
        boolean boolean0 = ArchiveUtils.matchAsciiBuffer("%", byteArray0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        byte[] byteArray0 = new byte[26];
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte) 7, 11, byteArray0, (int) (byte) 7, (int) (byte) 7, true);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        byte[] byteArray0 = new byte[26];
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte) 7, 0, byteArray0, (int) (byte) 7, (int) (byte) 7, true);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[5] = (byte) 7;
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte) 0, (int) (byte) 7, byteArray0, (int) (byte) 7, (int) (byte) 0, true);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[0] = (byte) 7;
        boolean boolean0 = ArchiveUtils.isEqual(byteArray0, (int) (byte) 0, (int) (byte) 0, byteArray0, (int) (byte) 0, (int) (byte) 7, true);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        byte[] byteArray0 = new byte[7];
        boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, (byte) 0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        byte[] byteArray0 = new byte[7];
        byteArray0[2] = (byte) 100;
        boolean boolean0 = ArchiveUtils.isArrayZero(byteArray0, (byte) 100);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        String string0 = ArchiveUtils.sanitize("\uFFFD\u0000");
        assertEquals("??", string0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        String string0 = ArchiveUtils.sanitize("dq4#w`.9icS;X?");
        assertEquals("dq?4#w`.9icS;X?", string0);
    }
}
