/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 13:27:35 GMT 2024
 */
package org.apache.commons.compress.compressors.bzip2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BZip2CompressorInputStream_ESTest extends BZip2CompressorInputStream_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        BZip2CompressorInputStream bZip2CompressorInputStream0 = null;
        try {
            bZip2CompressorInputStream0 = new BZip2CompressorInputStream((InputStream) null);
            fail("Expecting exception: IOException");
        } catch (Throwable e) {
            //
            // No InputStream
            //
            verifyException("org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        byte[] byteArray0 = new byte[0];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        BZip2CompressorInputStream bZip2CompressorInputStream0 = null;
        try {
            bZip2CompressorInputStream0 = new BZip2CompressorInputStream(byteArrayInputStream0);
            fail("Expecting exception: IOException");
        } catch (Throwable e) {
            //
            // Stream is not in the BZip2 format
            //
            verifyException("org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 66;
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        BZip2CompressorInputStream bZip2CompressorInputStream0 = null;
        try {
            bZip2CompressorInputStream0 = new BZip2CompressorInputStream(byteArrayInputStream0);
            fail("Expecting exception: IOException");
        } catch (Throwable e) {
            //
            // Stream is not in the BZip2 format
            //
            verifyException("org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream", e);
        }
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        byte[] byteArray0 = new byte[5];
        boolean boolean0 = BZip2CompressorInputStream.matches(byteArray0, (byte) 66);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        byte[] byteArray0 = new byte[8];
        boolean boolean0 = BZip2CompressorInputStream.matches(byteArray0, (-386));
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 66;
        boolean boolean0 = BZip2CompressorInputStream.matches(byteArray0, (byte) 66);
        assertFalse(boolean0);
    }
}
