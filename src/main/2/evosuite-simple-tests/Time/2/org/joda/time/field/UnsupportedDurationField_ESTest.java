/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 03:45:15 GMT 2024
 */
package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;
import org.joda.time.field.DelegatedDurationField;
import org.joda.time.field.PreciseDurationField;
import org.joda.time.field.UnsupportedDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UnsupportedDurationField_ESTest extends UnsupportedDurationField_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        assertNotNull(unsupportedDurationField0);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.isSupported();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getMillis(1, (long) 1);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.add((-5L), (-5L));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // weekyears field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.add((-3131L), 50);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // halfdays field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getDifferenceAsLong(0L, 0L);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getValue((-8L));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.minutes();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getValueAsLong((-1L));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // minutes field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getMillis(0L, 0L);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.minutes();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-1247L));
        int int0 = unsupportedDurationField0.compareTo((DurationField) preciseDurationField0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        unsupportedDurationField0.hashCode();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.hours();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        long long0 = unsupportedDurationField0.getUnitMillis();
        assertEquals(0L, long0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getDifference((-8L), (-8L));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1213() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
        assertEquals("halfdays", delegatedDurationField0.getName());
    }

    @Test(timeout = 4000)
    public void test1314() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getValue(0L, 0L);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.isPrecise();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.millis();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getMillis(0L);
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // millis field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getMillis((-363));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // eras field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance((DurationFieldType) null);
        // Undeclared exception!
        try {
            unsupportedDurationField0.getValueAsLong((-680L), (-680L));
            fail("Expecting exception: UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            //
            // null field is unsupported
            //
            verifyException("org.joda.time.field.UnsupportedDurationField", e);
        }
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.centuries();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        String string0 = unsupportedDurationField0.toString();
        assertEquals("UnsupportedDurationField[centuries]", string0);
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField.getInstance(durationFieldType0);
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        assertTrue(unsupportedDurationField0.isPrecise());
    }

    @Test(timeout = 4000)
    public void test2021() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        DurationFieldType durationFieldType1 = DurationFieldType.halfdays();
        UnsupportedDurationField unsupportedDurationField1 = UnsupportedDurationField.getInstance(durationFieldType1);
        boolean boolean0 = unsupportedDurationField0.equals(unsupportedDurationField1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test2122() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.eras();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.equals(unsupportedDurationField0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2223() throws Throwable {
        DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
        UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
        boolean boolean0 = unsupportedDurationField0.equals(durationFieldType0);
        assertFalse(boolean0);
    }
}
