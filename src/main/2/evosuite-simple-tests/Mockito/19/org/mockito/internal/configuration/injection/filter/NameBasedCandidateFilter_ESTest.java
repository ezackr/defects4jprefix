/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 02:48:26 GMT 2024
 */
package org.mockito.internal.configuration.injection.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter;
import org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter;
import org.mockito.internal.configuration.injection.filter.OngoingInjecter;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class NameBasedCandidateFilter_ESTest extends NameBasedCandidateFilter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        FinalMockCandidateFilter finalMockCandidateFilter0 = new FinalMockCandidateFilter();
        NameBasedCandidateFilter nameBasedCandidateFilter0 = new NameBasedCandidateFilter(finalMockCandidateFilter0);
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        OngoingInjecter ongoingInjecter0 = nameBasedCandidateFilter0.filterCandidate(linkedList0, (Field) null, finalMockCandidateFilter0);
        assertNotNull(ongoingInjecter0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        FinalMockCandidateFilter finalMockCandidateFilter0 = new FinalMockCandidateFilter();
        LinkedList<Object> linkedList0 = new LinkedList<Object>();
        linkedList0.add((Object) finalMockCandidateFilter0);
        linkedList0.addLast((Object) null);
        NameBasedCandidateFilter nameBasedCandidateFilter0 = new NameBasedCandidateFilter(finalMockCandidateFilter0);
        // Undeclared exception!
        try {
            nameBasedCandidateFilter0.filterCandidate(linkedList0, (Field) null, linkedList0);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter", e);
        }
    }
}
