/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 18:42:11 GMT 2024
 */
package org.apache.commons.math3.genetics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.math3.genetics.Chromosome;
import org.apache.commons.math3.genetics.ElitisticListPopulation;
import org.apache.commons.math3.genetics.Population;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ElitisticListPopulation_ESTest extends ElitisticListPopulation_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 2816, 2816);
        assertEquals(2816.0, elitisticListPopulation0.getElitismRate(), 0.01);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(102, 102);
        Population population0 = elitisticListPopulation0.nextGeneration();
        assertEquals(102.0, elitisticListPopulation0.getElitismRate(), 0.01);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(102, 102);
        Population population0 = elitisticListPopulation0.nextGeneration();
        assertNotSame(population0, elitisticListPopulation0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(498, 124.4388);
        elitisticListPopulation0.addChromosome((Chromosome) null);
        // Undeclared exception!
        try {
            elitisticListPopulation0.nextGeneration();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(102, 102);
        // Undeclared exception!
        try {
            elitisticListPopulation0.setElitismRate((-3414.006391140871));
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // elitism rate (-3,414.006)
            //
            verifyException("org.apache.commons.math3.genetics.ElitisticListPopulation", e);
        }
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(102, 102);
        elitisticListPopulation0.setElitismRate(0.0);
        assertEquals(0.0, elitisticListPopulation0.getElitismRate(), 0.01);
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(102, 102);
        // Undeclared exception!
        try {
            elitisticListPopulation0.setElitismRate(102);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // elitism rate (102)
            //
            verifyException("org.apache.commons.math3.genetics.ElitisticListPopulation", e);
        }
    }
}
