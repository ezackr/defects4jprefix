/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 17:47:02 GMT 2024
 */
package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { Double.NaN, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { Double.NaN, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        assertEquals(0, dSCompiler0.getFreeParameters());
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        int[] intArray0 = new int[0];
        int int0 = dSCompiler0.getPartialDerivativeIndex(intArray0);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        int[] intArray0 = new int[0];
        int int0 = dSCompiler0.getPartialDerivativeIndex(intArray0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 16);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
        int int0 = dSCompiler0.getOrder();
        assertEquals(3, int0);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        // Undeclared exception!
        DSCompiler.getCompiler(1361, 1361);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        // Undeclared exception!
        DSCompiler.getCompiler(4275, 4275);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        int[] intArray0 = new int[4];
        try {
            dSCompiler0.getPartialDerivativeIndex(intArray0);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // 4 != 0
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[7];
        dSCompiler0.linearCombination(3.141592653589793, doubleArray0, 1, (-2736.5281345), doubleArray0, 1, doubleArray0, 1);
        assertEquals(7, doubleArray0.length);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[8];
        dSCompiler0.linearCombination((double) 548, doubleArray0, 0, 557.4418969, doubleArray0, 0, 3370.3712903, doubleArray0, 0, doubleArray0, 2);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.linearCombination(0.0, doubleArray0, 3, 4159.8, doubleArray0, 3, (double) 3, doubleArray0, 3, 0.0, doubleArray0, 3, doubleArray0, 3);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 2);
        assertArrayEquals(new double[] { 0.0, 0.0, Double.NaN, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 2);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        double[] doubleArray0 = new double[6];
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
        // Undeclared exception!
        try {
            dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 1, doubleArray0, 1);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 6
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[7];
        dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);
        assertArrayEquals(new double[] { 0.0, Double.NaN, Double.NaN, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1417() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        // Undeclared exception!
        try {
            dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, 374);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 374
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test1518() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.pow(doubleArray0, 1, 453, doubleArray0, 56);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        assertNotNull(dSCompiler0);
    }

    @Test(timeout = 4000)
    public void test1620() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.rootN(doubleArray0, 0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1621() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.rootN(doubleArray0, 0, 0, doubleArray0, 0);
        assertEquals(548, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test1722() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
        double[] doubleArray0 = new double[9];
        // Undeclared exception!
        try {
            dSCompiler0.rootN(doubleArray0, 3, 3, doubleArray0, 1065);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
        assertEquals(548, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test1824() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { Double.NEGATIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test1925() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 1);
        assertArrayEquals(new double[] { 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test2026() throws Throwable {
        double[] doubleArray0 = new double[2];
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 544);
        // Undeclared exception!
        try {
            dSCompiler0.log1p(doubleArray0, 0, doubleArray0, (-685));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2127() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.log10(doubleArray0, 0, doubleArray0, 334);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2228() throws Throwable {
        double[] doubleArray0 = new double[6];
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1921);
        // Undeclared exception!
        try {
            dSCompiler0.log10(doubleArray0, 1, (double[]) null, 1500);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2329() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[1];
        // Undeclared exception!
        try {
            dSCompiler0.cos(doubleArray0, 0, doubleArray0, 3);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2430() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.cos(doubleArray0, 0, doubleArray0, 676);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2531() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test2532() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test2633() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.sin(doubleArray0, 2, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test2634() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        dSCompiler0.sin(doubleArray0, 2, doubleArray0, 0);
        assertEquals(548, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test2735() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test2736() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test2837() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3);
        double[] doubleArray0 = new double[7];
        // Undeclared exception!
        try {
            dSCompiler0.tan(doubleArray0, 1, doubleArray0, 114);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test2938() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.acos(doubleArray0, 0, doubleArray0, 7);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3039() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 355);
        double[] doubleArray0 = new double[9];
        // Undeclared exception!
        dSCompiler0.acos(doubleArray0, 7, doubleArray0, 7);
    }

    @Test(timeout = 4000)
    public void test3140() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
        double[] doubleArray0 = new double[2];
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
        assertEquals(1, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test3141() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
        double[] doubleArray0 = new double[2];
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 1.5707963267948966, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test3242() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test3243() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test3344() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        dSCompiler0.asin(doubleArray0, 0, doubleArray0, 548);
    }

    @Test(timeout = 4000)
    public void test3445() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[7];
        dSCompiler0.asin(doubleArray0, 1, doubleArray0, 1);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test3546() throws Throwable {
        double[] doubleArray0 = new double[2];
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1240);
        // Undeclared exception!
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, (-608));
    }

    @Test(timeout = 4000)
    public void test3647() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
        double[] doubleArray0 = new double[8];
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 1);
        assertEquals(1, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test3648() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
        double[] doubleArray0 = new double[8];
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 1);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test3749() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        // Undeclared exception!
        try {
            dSCompiler0.cosh(doubleArray0, 0, (double[]) null, (-1138));
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test3850() throws Throwable {
        double[] doubleArray0 = new double[2];
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 544);
        // Undeclared exception!
        try {
            dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 1443);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test3951() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test3952() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test4053() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        try {
            dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 548);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test4154() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        // Undeclared exception!
        try {
            dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 44);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test4255() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        assertEquals(2, dSCompiler0.getSize());
    }

    @Test(timeout = 4000)
    public void test4256() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[2];
        dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test4357() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test4458() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test4559() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(4, 4);
        double[] doubleArray0 = new double[3];
        // Undeclared exception!
        try {
            dSCompiler0.acosh(doubleArray0, 0, (double[]) null, 3);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test4660() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test4661() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test4762() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[5];
        // Undeclared exception!
        try {
            dSCompiler0.asinh(doubleArray0, 1, doubleArray0, (-761));
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test4863() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 548);
    }

    @Test(timeout = 4000)
    public void test4964() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[4];
        dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test4965() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[4];
        dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
        assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
    }

    @Test(timeout = 4000)
    public void test5066() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 548);
        double[] doubleArray0 = new double[6];
        // Undeclared exception!
        dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 548);
    }

    @Test(timeout = 4000)
    public void test5167() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
        double[] doubleArray0 = new double[13];
        // Undeclared exception!
        try {
            dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 1326);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test5268() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[6];
        double double0 = dSCompiler0.taylor(doubleArray0, 3, doubleArray0);
        assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test5269() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[6];
        double double0 = dSCompiler0.taylor(doubleArray0, 3, doubleArray0);
        assertEquals(1, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test5370() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.checkCompatibility(dSCompiler0);
        assertEquals(0, dSCompiler0.getOrder());
    }

    @Test(timeout = 4000)
    public void test5471() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        DSCompiler dSCompiler1 = DSCompiler.getCompiler(2703, 0);
        try {
            dSCompiler0.checkCompatibility(dSCompiler1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // 0 != 2,703
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }

    @Test(timeout = 4000)
    public void test5572() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 698);
        try {
            dSCompiler0.checkCompatibility(dSCompiler1);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {
            //
            // 0 != 698
            //
            verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
        }
    }
}
