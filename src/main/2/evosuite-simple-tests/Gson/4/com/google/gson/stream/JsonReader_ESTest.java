/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 15:30:48 GMT 2024
 */
package com.google.gson.stream;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.stream.JsonReader;
import java.io.EOFException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsonReader_ESTest extends JsonReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        boolean boolean0 = jsonReader0.isLenient();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        StringReader stringReader0 = new StringReader("7.0G\f");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected an int but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        String string0 = jsonReader0.toString();
        assertEquals("JsonReader at line 1 column 1", string0);
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        String string0 = jsonReader0.toString();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        StringReader stringReader0 = new StringReader("9(GQMW*:PsQsP|6F");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.close();
        // Undeclared exception!
        try {
            jsonReader0.hasNext();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // JsonReader is closed
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        JsonReader jsonReader0 = null;
        try {
            jsonReader0 = new JsonReader((Reader) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // in == null
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        StringReader stringReader0 = new StringReader("{^eu\"_yDoh;&uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peek();
        // Undeclared exception!
        try {
            jsonReader0.beginArray();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected BEGIN_ARRAY but was BEGIN_OBJECT at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        StringReader stringReader0 = new StringReader("[F");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.beginArray();
        String string0 = jsonReader0.getPath();
        assertEquals("$[0]", string0);
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        StringReader stringReader0 = new StringReader("{^eu\"_yDoh;&uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peek();
        // Undeclared exception!
        try {
            jsonReader0.endArray();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected END_ARRAY but was BEGIN_OBJECT at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.beginArray();
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        jsonReader0.endArray();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        StringReader stringReader0 = new StringReader("{^eu\"_yDoh;&uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.hasNext();
        jsonReader0.beginObject();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test01011() throws Throwable {
        StringReader stringReader0 = new StringReader("{^=eu_ ~&o-uTU");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.beginObject();
        String string0 = jsonReader0.getPath();
        assertEquals("$.", string0);
    }

    @Test(timeout = 4000)
    public void test01112() throws Throwable {
        StringReader stringReader0 = new StringReader("[{B");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        // Undeclared exception!
        try {
            jsonReader0.beginObject();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected BEGIN_OBJECT but was BEGIN_ARRAY at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        StringReader stringReader0 = new StringReader("");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.endObject();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 1 column 1
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        StringReader stringReader0 = new StringReader("([t");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 2;
        // Undeclared exception!
        try {
            jsonReader0.endObject();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // -1
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01415() throws Throwable {
        StringReader stringReader0 = new StringReader("NULL");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 2;
        boolean boolean0 = jsonReader0.hasNext();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test01416() throws Throwable {
        StringReader stringReader0 = new StringReader("NULL");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 2;
        boolean boolean0 = jsonReader0.hasNext();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01517() throws Throwable {
        StringReader stringReader0 = new StringReader("\"f}fL[R#D7(a");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 4;
        boolean boolean0 = jsonReader0.hasNext();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        StringReader stringReader0 = new StringReader("\"f}fL[R#D7(a");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 4;
        boolean boolean0 = jsonReader0.hasNext();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        StringReader stringReader0 = new StringReader(";x vsvVfu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 2;
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was END_OBJECT at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01720() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}04b_h #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 4;
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a double but was END_ARRAY at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01821() throws Throwable {
        StringReader stringReader0 = new StringReader("TRUE");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a double but was BOOLEAN at line 1 column 5 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test01922() throws Throwable {
        StringReader stringReader0 = new StringReader("/2eu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 6;
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was BOOLEAN at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02023() throws Throwable {
        StringReader stringReader0 = new StringReader("null");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextBoolean();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a boolean but was NULL at line 1 column 5 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02124() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}04b_h #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 8;
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02225() throws Throwable {
        StringReader stringReader0 = new StringReader("\"di#;uN_]bi7");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.endArray();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected END_ARRAY but was STRING at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02326() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}04b_h #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 11;
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02427() throws Throwable {
        StringReader stringReader0 = new StringReader("/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 12;
        // Undeclared exception!
        try {
            jsonReader0.nextLong();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a long but was NAME at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02528() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 13;
        // Undeclared exception!
        try {
            jsonReader0.endObject();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected END_OBJECT but was NAME at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02629() throws Throwable {
        StringReader stringReader0 = new StringReader("{^eu\"_yD*oh;&uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.beginObject();
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected an int but was NAME at line 1 column 2 path $.
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02730() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was NUMBER at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02831() throws Throwable {
        StringReader stringReader0 = new StringReader("=H{}N$");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was NUMBER at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test02932() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 53;
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: AssertionError");
        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test03033() throws Throwable {
        StringReader stringReader0 = new StringReader("[v>8u,[nj)JHf&[idj");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated array at line 1 column 16 path $[0][0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03134() throws Throwable {
        StringReader stringReader0 = new StringReader("[ V2;l%z=Ta*<b");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated array at line 1 column 10 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03235() throws Throwable {
        StringReader stringReader0 = new StringReader("H=7;+{n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.peeked = 1;
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected ':' at line 1 column 7 path $.
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03336() throws Throwable {
        StringReader stringReader0 = new StringReader("`H=?+,P");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.peeked = 1;
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 1 column 8
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03437() throws Throwable {
        StringReader stringReader0 = new StringReader("`H=?}+,P");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.peeked = 1;
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test03538() throws Throwable {
        StringReader stringReader0 = new StringReader("{^=eu\"__)loh-uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 1 column 17
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03639() throws Throwable {
        StringReader stringReader0 = new StringReader("{\"Tu\"o=)lo4TgTd ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected ':' at line 1 column 7 path $.
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03740() throws Throwable {
        StringReader stringReader0 = new StringReader("{'I/TZ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $.
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test03841() throws Throwable {
        StringReader stringReader0 = new StringReader("Z=?H{}7");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        char[] charArray0 = new char[4];
        stringReader0.read(charArray0);
        jsonReader0.skipValue();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test03942() throws Throwable {
        StringReader stringReader0 = new StringReader("[{,");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected name at line 1 column 3 path $[0].
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04043() throws Throwable {
        StringReader stringReader0 = new StringReader("{G$a:}2_6+YL-");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected value at line 1 column 6 path $.
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04144() throws Throwable {
        StringReader stringReader0 = new StringReader("{L=");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.doPeek();
        stringReader0.reset();
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 1 column 7
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04245() throws Throwable {
        StringReader stringReader0 = new StringReader("Expected null but was ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.nextString();
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test04346() throws Throwable {
        StringReader stringReader0 = new StringReader("[,&%$BDp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04447() throws Throwable {
        StringReader stringReader0 = new StringReader(";}r,Cug0cO/E}f]g~");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unexpected value at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04548() throws Throwable {
        StringReader stringReader0 = new StringReader("]mb<");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.endArray();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unexpected value at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04649() throws Throwable {
        StringReader stringReader0 = new StringReader("[\"{");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 4 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04750() throws Throwable {
        StringReader stringReader0 = new StringReader("[t");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04851() throws Throwable {
        StringReader stringReader0 = new StringReader("[fh");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test04952() throws Throwable {
        StringReader stringReader0 = new StringReader("[F");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05053() throws Throwable {
        StringReader stringReader0 = new StringReader("NULLL");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextLong();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a long but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05154() throws Throwable {
        StringReader stringReader0 = new StringReader("9e+JEZ:)kFf");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a name but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05255() throws Throwable {
        StringReader stringReader0 = new StringReader("-]AY3',g<&");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test05356() throws Throwable {
        StringReader stringReader0 = new StringReader("9e-P");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected an int but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05457() throws Throwable {
        StringReader stringReader0 = new StringReader("5-,_!");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test05558() throws Throwable {
        StringReader stringReader0 = new StringReader("+$DjRJ<ie-?n}t3oZ#");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.endArray();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected END_ARRAY but was STRING at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05659() throws Throwable {
        StringReader stringReader0 = new StringReader("[03sD$Ep:n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05760() throws Throwable {
        StringReader stringReader0 = new StringReader("[23sD$Ec8:n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test05861() throws Throwable {
        StringReader stringReader0 = new StringReader("5e7m) 7-3O:WWEb");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test05962() throws Throwable {
        StringReader stringReader0 = new StringReader("-6#os`~");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test06063() throws Throwable {
        StringReader stringReader0 = new StringReader("[:F");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected value at line 1 column 2 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06164() throws Throwable {
        StringReader stringReader0 = new StringReader("=vX");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected value at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06265() throws Throwable {
        StringReader stringReader0 = new StringReader("4[J xHFkQxz:O-.d");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test06366() throws Throwable {
        StringReader stringReader0 = new StringReader("[2{");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated array at line 1 column 4 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06467() throws Throwable {
        StringReader stringReader0 = new StringReader(";x sDO<V!fu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 14;
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06568() throws Throwable {
        StringReader stringReader0 = new StringReader("3@F,*M@T");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 12;
        try {
            jsonReader0.nextName();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 9 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06669() throws Throwable {
        StringReader stringReader0 = new StringReader("Unterminated\"str@ng");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 13;
        String string0 = jsonReader0.nextName();
        assertEquals("Unterminated", string0);
    }

    @Test(timeout = 4000)
    public void test06770() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}|04b_h ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        String string0 = jsonReader0.nextString();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test06771() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}|04b_h ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        String string0 = jsonReader0.nextString();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test06872() throws Throwable {
        StringReader stringReader0 = new StringReader("';X)Np~x$SpM9");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextString();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 14 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test06973() throws Throwable {
        StringReader stringReader0 = new StringReader("\"di0#;uN_]bi7");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextString();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 14 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test07074() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}04b_h #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 11;
        String string0 = jsonReader0.nextString();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test07075() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}04b_h #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 11;
        String string0 = jsonReader0.nextString();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test07176() throws Throwable {
        StringReader stringReader0 = new StringReader("4,A/g<x60F");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals("4", string0);
    }

    @Test(timeout = 4000)
    public void test07277() throws Throwable {
        StringReader stringReader0 = new StringReader("[SqftB:p/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.hasNext();
        // Undeclared exception!
        try {
            jsonReader0.nextBoolean();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a boolean but was BEGIN_ARRAY at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test07378() throws Throwable {
        StringReader stringReader0 = new StringReader("TRUE");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        boolean boolean0 = jsonReader0.nextBoolean();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test07479() throws Throwable {
        StringReader stringReader0 = new StringReader("FALSE");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        boolean boolean0 = jsonReader0.nextBoolean();
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test07580() throws Throwable {
        StringReader stringReader0 = new StringReader("[C&qtBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.hasNext();
        // Undeclared exception!
        try {
            jsonReader0.nextNull();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected null but was BEGIN_ARRAY at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test07681() throws Throwable {
        StringReader stringReader0 = new StringReader("NULL");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.nextNull();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test07782() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        double double0 = jsonReader0.nextDouble();
        assertEquals(9.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test07883() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}|04b_h ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test07984() throws Throwable {
        StringReader stringReader0 = new StringReader("'eEf");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 5 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test08085() throws Throwable {
        StringReader stringReader0 = new StringReader("\"Q!(nHiG)\u0007]b");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 14 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test08186() throws Throwable {
        StringReader stringReader0 = new StringReader("T_yPNWVGi'G");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 11;
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test08287() throws Throwable {
        StringReader stringReader0 = new StringReader("3.");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        double double0 = jsonReader0.nextDouble();
        assertEquals(3.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test08388() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEf");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test08389() throws Throwable {
        StringReader stringReader0 = new StringReader("9/2eEf");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        long long0 = jsonReader0.nextLong();
        assertEquals(9L, long0);
    }

    @Test(timeout = 4000)
    public void test08490() throws Throwable {
        StringReader stringReader0 = new StringReader("");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        // Undeclared exception!
        try {
            jsonReader0.nextLong();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test08591() throws Throwable {
        String string0 = "'\\u";
        StringReader stringReader0 = new StringReader(string0);
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextLong();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated escape sequence at line 1 column 4 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test08692() throws Throwable {
        StringReader stringReader0 = new StringReader("\"Q(^d)ad^");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextLong();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 11 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test08793() throws Throwable {
        StringReader stringReader0 = new StringReader("WrK'p):OF?VJ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals("WrK'p)", string0);
    }

    @Test(timeout = 4000)
    public void test08894() throws Throwable {
        StringReader stringReader0 = new StringReader("$L=uZQx$Ym<>zOO'.");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals("$L", string0);
    }

    @Test(timeout = 4000)
    public void test08995() throws Throwable {
        StringReader stringReader0 = new StringReader("N[L[7[v^?M ihh 2M@");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals("N", string0);
    }

    @Test(timeout = 4000)
    public void test09096() throws Throwable {
        StringReader stringReader0 = new StringReader(".M{f$[)/'(");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals(".M", string0);
    }

    @Test(timeout = 4000)
    public void test09197() throws Throwable {
        StringReader stringReader0 = new StringReader("M],|%uCJe");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        // Undeclared exception!
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test09298() throws Throwable {
        StringReader stringReader0 = new StringReader("()n}X04b_ #");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        String string0 = jsonReader0.nextString();
        assertEquals("()n", string0);
    }

    @Test(timeout = 4000)
    public void test09399() throws Throwable {
        StringReader stringReader0 = new StringReader("\"\btk1");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 6 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test094100() throws Throwable {
        StringReader stringReader0 = new StringReader(")]}'\n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        char[] charArray0 = new char[3];
        stringReader0.read(charArray0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 2 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test095101() throws Throwable {
        StringReader stringReader0 = new StringReader(" nterminated\"str@ng");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 12;
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 20 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test096102() throws Throwable {
        StringReader stringReader0 = new StringReader("H.#2eNXrCP");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test097103() throws Throwable {
        StringReader stringReader0 = new StringReader("[C&qtBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated array at line 1 column 10 path $[0]
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test098104() throws Throwable {
        StringReader stringReader0 = new StringReader("Z=?H{}7");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 10;
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test099105() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.hasNext();
        // Undeclared exception!
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected an int but was BEGIN_ARRAY at line 1 column 2 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test100106() throws Throwable {
        StringReader stringReader0 = new StringReader("0;R+");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        int int0 = jsonReader0.nextInt();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test101107() throws Throwable {
        StringReader stringReader0 = new StringReader(";x vsDO<V!fu");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        // Undeclared exception!
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
        }
    }

    @Test(timeout = 4000)
    public void test102108() throws Throwable {
        String string0 = "'\\u";
        StringReader stringReader0 = new StringReader(string0);
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated escape sequence at line 1 column 4 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test103109() throws Throwable {
        StringReader stringReader0 = new StringReader("\"%2'>Ui5\r'b");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextInt();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated string at line 1 column 12 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test104110() throws Throwable {
        StringReader stringReader0 = new StringReader("[&q]tBmp/");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test105111() throws Throwable {
        StringReader stringReader0 = new StringReader("Ntt");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.peeked = 16;
        jsonReader0.skipValue();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test106112() throws Throwable {
        StringReader stringReader0 = new StringReader(")]}'\n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        stringReader0.read();
        char[] charArray0 = new char[3];
        stringReader0.read(charArray0);
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 2 column 1
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test107113() throws Throwable {
        StringReader stringReader0 = new StringReader("Ex//cted null but was ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.nextString();
        jsonReader0.skipValue();
        assertTrue(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test108114() throws Throwable {
        StringReader stringReader0 = new StringReader("/*%)");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextDouble();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Unterminated comment at line 1 column 4 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test109115() throws Throwable {
        StringReader stringReader0 = new StringReader("/2eEf");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.hasNext();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected value at line 1 column 1 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test110116() throws Throwable {
        StringReader stringReader0 = new StringReader("&.l#EH\"4'D*0yOmBh");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        jsonReader0.nextString();
        stringReader0.reset();
        // Undeclared exception!
        try {
            jsonReader0.nextString();
            fail("Expecting exception: IllegalStateException");
        } catch (IllegalStateException e) {
            //
            // Expected a string but was END_DOCUMENT at line 1 column 35 path $
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test111117() throws Throwable {
        StringReader stringReader0 = new StringReader("7+uD^C+ar+SQ<");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.close();
        String string0 = jsonReader0.getPath();
        assertFalse(jsonReader0.isLenient());
    }

    @Test(timeout = 4000)
    public void test111118() throws Throwable {
        StringReader stringReader0 = new StringReader("7+uD^C+ar+SQ<");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.close();
        String string0 = jsonReader0.getPath();
        assertEquals("$", string0);
    }

    @Test(timeout = 4000)
    public void test112119() throws Throwable {
        StringReader stringReader0 = new StringReader("{^eu\"_yD*oh;&uT ");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.beginObject();
        jsonReader0.setLenient(true);
        jsonReader0.skipValue();
        try {
            jsonReader0.skipValue();
            fail("Expecting exception: IOException");
        } catch (IOException e) {
            //
            // Expected ':' at line 1 column 13 path $.null
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }

    @Test(timeout = 4000)
    public void test113120() throws Throwable {
        StringReader stringReader0 = new StringReader(")]}'\n");
        JsonReader jsonReader0 = new JsonReader(stringReader0);
        jsonReader0.setLenient(true);
        try {
            jsonReader0.nextName();
            fail("Expecting exception: EOFException");
        } catch (EOFException e) {
            //
            // End of input at line 1 column 6
            //
            verifyException("com.google.gson.stream.JsonReader", e);
        }
    }
}
