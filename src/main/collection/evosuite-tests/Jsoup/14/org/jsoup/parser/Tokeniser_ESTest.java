/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 20:43:41 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.TokeniserState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Tokeniser_ESTest extends Tokeniser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = new Character('W');
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertNull(character1);
      assertEquals("#", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.emit(";");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      Token.Doctype token_Doctype0 = new Token.Doctype();
      tokeniser0.doctypePending = token_Doctype0;
      tokeniser0.emitDoctypePending();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?O+3%");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createCommentPending();
      tokeniser0.emitCommentPending();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      boolean boolean0 = tokeniser0.isTrackErrors();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.EndTag token_EndTag0 = new Token.EndTag("gamma");
      tokeniser0.tagPending = (Token.Tag) token_EndTag0;
      Token.StartTag token_StartTag0 = new Token.StartTag();
      tokeniser0.emit(token_StartTag0);
      boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.ScriptDataEndTagName;
      tokeniser0.transition(tokeniserState0);
      // Undeclared exception!
      tokeniser0.read();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&Dg;V@q.");
      characterReader0.unconsume();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.read();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mRb9w(\"4xGtwS ");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.DoctypeSystemIdentifier_doubleQuoted;
      tokeniser0.advanceTransition(tokeniserState0);
      // Undeclared exception!
      try { 
        tokeniser0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokeniserState$63", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5[H0K");
      characterReader0.unconsume();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.AfterDoctypeSystemIdentifier;
      // Undeclared exception!
      try { 
        tokeniser0.error(tokeniserState0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      TokeniserState tokeniserState0 = TokeniserState.RawtextEndTagOpen;
      // Undeclared exception!
      try { 
        tokeniser0.error(tokeniserState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      TokeniserState tokeniserState0 = TokeniserState.RawtextEndTagOpen;
      // Undeclared exception!
      try { 
        tokeniser0.eofError(tokeniserState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("m>g");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createTagPending(false);
      tokeniser0.emitTagPending();
      // Undeclared exception!
      try { 
        tokeniser0.emitTagPending();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is an unread token pending!
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.EndTag token_EndTag0 = new Token.EndTag();
      tokeniser0.emit(token_EndTag0);
      // Undeclared exception!
      try { 
        tokeniser0.emitDoctypePending();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is an unread token pending!
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("cM(Y");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.EndTag token_EndTag0 = new Token.EndTag();
      tokeniser0.emit(token_EndTag0);
      // Undeclared exception!
      try { 
        tokeniser0.emitCommentPending();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is an unread token pending!
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8jfmDD");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.emit((Token) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("]");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.EndTag;
      token_Comment0.type = token_TokenType0;
      // Undeclared exception!
      try { 
        tokeniser0.emit(token_Comment0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unconsume();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = new Character('N');
      // Undeclared exception!
      try { 
        tokeniser0.consumeCharacterReference(character0, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      Character character0 = Character.valueOf('J');
      // Undeclared exception!
      try { 
        tokeniser0.consumeCharacterReference(character0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null);
      TokeniserState tokeniserState0 = TokeniserState.CharacterReferenceInData;
      // Undeclared exception!
      try { 
        tokeniser0.advanceTransition(tokeniserState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.EndTag token_EndTag0 = new Token.EndTag("");
      tokeniser0.setTrackErrors(false);
      token_EndTag0.appendAttributeName(">On[.OET");
      token_EndTag0.finaliseTag();
      tokeniser0.emit(token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.Tokeniser");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      tokeniser0.consumeCharacterReference((Character) null, false);
      assertEquals("g.jsoup.parser.Tokeniser", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.Doctype;
      tokeniser0.eofError(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.Doctype;
      tokeniser0.error(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.AttributeValue_singleQuoted;
      tokeniser0.setTrackErrors(false);
      tokeniser0.error(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
      tokeniser0.emit(token_Tag0);
      // Undeclared exception!
      try { 
        tokeniser0.emit(token_Tag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // There is an unread token pending!
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("kcedil");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = new Character('O');
      tokeniser0.consumeCharacterReference(character0, true);
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.Tokeniser");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = Character.valueOf('V');
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertNull(character1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^Xc");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = tokeniser0.consumeCharacterReference((Character) null, true);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^Xc");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = Character.valueOf('^');
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertNull(character1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Character character0 = new Character('@');
      CharacterReader characterReader0 = new CharacterReader("sup1");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertNull(character1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Character character0 = new Character('{');
      Character character1 = tokeniser0.consumeCharacterReference(character0, true);
      assertNull(character1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&Dg;V@q.");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token token0 = tokeniser0.read();
      assertEquals("&Dg;V@q.", token0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.EndTag token_EndTag0 = new Token.EndTag("");
      token_EndTag0.appendAttributeName(">On[.OET");
      token_EndTag0.finaliseTag();
      tokeniser0.emit(token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("uArr");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createTagPending(true);
      tokeniser0.emitTagPending();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      Token.StartTag token_StartTag0 = new Token.StartTag("#");
      token_StartTag0.selfClosing = true;
      tokeniser0.emit(token_StartTag0);
      Token token0 = tokeniser0.read();
      assertSame(token0, token_StartTag0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.getState();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("J{ bu^-SqP Wom:Z*E;");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createDoctypePending();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.setTrackErrors(false);
      TokeniserState tokeniserState0 = TokeniserState.Comment;
      tokeniser0.eofError(tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("cM(Y");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.emitCommentPending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.emit('\'');
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      boolean boolean0 = tokeniser0.isTrackErrors();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("m>g");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.emitTagPending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&Dg;V@q.");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      TokeniserState tokeniserState0 = TokeniserState.CharacterReferenceInData;
      tokeniser0.transition(tokeniserState0);
      tokeniser0.read();
      assertEquals("", characterReader0.toString());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.isAppropriateEndTagToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.acknowledgeSelfClosingFlag();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      // Undeclared exception!
      try { 
        tokeniser0.emitDoctypePending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tokeniser", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2$\"4\"!NJW,?j f;");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0);
      tokeniser0.createTempBuffer();
  }
}
